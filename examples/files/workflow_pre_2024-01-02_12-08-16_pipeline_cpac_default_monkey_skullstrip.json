{
	"version": {
		"workflow": 1,
		"nipype": "1.8.6"
	},
	"meta": {
		"pipeline_name": "pipeline_cpac_default_monkey_skullstrip",
		"stage": "pre",
		"time": "2024-01-02T12:08:16.993057-05:00"
	},
	"workflow": {
		"name": "cpac_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
		"type": "workflow",
		"inputs": {
			"func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1": "{'inputnode': {'creds_path': None, 'dl_dir': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working/pipeline_cpac_default_monkey_skullstrip', 'scan': '[Undefined]', 'subject': 'sub-NDARINV2VY7YYNW'}, 'check_func_scan': {'func_scan_dct': {'rest_run-01': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-01_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-02': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-02_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-03': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-03_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-04': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-04_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}}, 'function_str': 'CPAC.utils.datasource.check_func_scan'}, 'selectrest': {'function_str': 'CPAC.utils.datasource.get_rest', 'resource': 'scan', 'rest_dict': {'rest_run-01': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-01_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-02': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-02_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-03': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-03_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-04': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-04_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}}}, 'check_for_s3': {'function_str': 'CPAC.utils.datasource.check_for_s3', 'img_type': 'func'}, 'outputspec': {'magnitude': '[Undefined]', 'phase_diff': '[Undefined]'}, 'select_scan_params': {'function_str': 'CPAC.utils.datasource.get_rest', 'resource': 'scan_parameters', 'rest_dict': {'rest_run-01': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-01_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-02': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-02_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-03': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-03_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-04': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-04_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}}}, 's3_scan_params': {'function_str': 'CPAC.utils.datasource.check_for_s3', 'img_type': '[Undefined]'}}",
			"bold_scan_params_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1": "{'function_str': 'def get_scan_params(subject_id, scan, pipeconfig_start_indx,\\n                    pipeconfig_stop_indx, data_config_scan_params=None):\\n    \"\"\"\\n    Method to extract slice timing correction parameters\\n    and scan parameters.\\n\\n    Parameters\\n    ----------\\n    subject_id : str\\n        subject id\\n    scan : str\\n        scan id\\n    pipeconfig_start_indx : int\\n        starting volume index as provided in the pipeline config yaml file\\n    pipeconfig_stop_indx : int\\n        ending volume index as provided in the pipeline config yaml file\\n    data_config_scan_params : str\\n        file path to scan parameter JSON file listed in data config yaml file\\n\\n    Returns\\n    -------\\n    TR : a string\\n        TR value\\n    pattern : a string\\n        slice aquisition pattern string or file path\\n    ref_slice : an integer\\n        reference slice which is used to allign all other slices\\n    first_tr : an integer\\n        starting TR or starting volume index\\n    last_tr : an integer\\n        ending TR or ending volume index\\n    pe_direction : str\\n    effective_echo_spacing : float\\n    \"\"\"\\n\\n    import os\\n    import json\\n    import warnings\\n\\n    check2 = lambda val: val if val == None or val == \\'\\' or \\\\\\n                                isinstance(val, str) else int(val)\\n\\n    # initialize vars to empty\\n    TR = \\'\\'\\n    TE = None\\n    pattern = \\'\\'\\n    ref_slice = \\'\\'\\n    first_tr = \\'\\'\\n    last_tr = \\'\\'\\n    unit = \\'s\\'\\n    pe_direction = \\'\\'\\n    effective_echo_spacing = None\\n    template = None\\n\\n    if isinstance(pipeconfig_stop_indx, str):\\n        if \"End\" in pipeconfig_stop_indx or \"end\" in pipeconfig_stop_indx:\\n            pipeconfig_stop_indx = None\\n    if data_config_scan_params:\\n        if \".json\" in data_config_scan_params:\\n            if not os.path.exists(data_config_scan_params):\\n                err = \"\\\\n[!] WARNING: Scan parameters JSON file listed in \" \\\\\\n                      \"your data configuration file does not exist:\\\\n{0}\" \\\\\\n                      \"\\\\n\\\\n\".format(data_config_scan_params)\\n                raise Exception(err)\\n\\n            with open(data_config_scan_params, \"r\") as f:\\n                params_dct = json.load(f)\\n\\n            # get details from the configuration\\n            # if this is a JSON file, the key values are the BIDS format\\n            # standard\\n            # TODO: better handling of errant key values!!!\\n            if \"RepetitionTime\" in params_dct.keys():\\n                TR = float(check(params_dct, subject_id, scan,\\n                                 \"RepetitionTime\", False))\\n            if \"SliceTiming\" in params_dct.keys():\\n                pattern = str(check(params_dct, subject_id, scan,\\n                                    \"SliceTiming\", False))\\n            elif \"SliceAcquisitionOrder\" in params_dct.keys():\\n                pattern = str(check(params_dct, subject_id, scan,\\n                                    \"SliceAcquisitionOrder\", False))\\n            if \"PhaseEncodingDirection\" in params_dct.keys():\\n                pe_direction = str(check(params_dct, subject_id, scan,\\n                                         \"PhaseEncodingDirection\", False))\\n            try:\\n                \"EffectiveEchoSpacing\" in params_dct.keys()\\n                effective_echo_spacing = float(\\n                        check(params_dct, subject_id, scan,\\n                            \"EffectiveEchoSpacing\", False))\\n            except TypeError:\\n                pass\\n\\n        elif len(data_config_scan_params) > 0 and \\\\\\n                isinstance(data_config_scan_params, dict):\\n\\n            params_dct = data_config_scan_params\\n\\n            # TODO: better handling of errant key values!!!\\n            # TODO: use schema validator to deal with it\\n            # get details from the configuration\\n            try: \\n                TR = float(\\n                    try_fetch_parameter(\\n                        params_dct,\\n                        subject_id,\\n                        scan,\\n                        [\\'TR\\', \\'RepetitionTime\\']\\n                    )\\n                )\\n            except TypeError:\\n                TR = None\\n\\n            try: \\n                template = str(\\n                    try_fetch_parameter(\\n                        params_dct,\\n                        subject_id,\\n                        scan,\\n                        [\\'Template\\', \\'template\\']\\n                    )\\n                )\\n            except TypeError:\\n                template = None\\n\\n            pattern = str(\\n                try_fetch_parameter(\\n                    params_dct,\\n                    subject_id,\\n                    scan,\\n                    [\\'acquisition\\', \\'SliceTiming\\', \\'SliceAcquisitionOrder\\']\\n                )\\n            )\\n\\n            ref_slice = check(params_dct, subject_id, scan, \\'reference\\',\\n                              False)\\n            if ref_slice:\\n                ref_slice = int(ref_slice)\\n\\n            first_tr = check(params_dct, subject_id, scan, \\'first_TR\\', False)\\n            if first_tr:\\n                first_tr = check2(first_tr)\\n\\n            last_tr = check(params_dct, subject_id, scan, \\'last_TR\\', False)\\n            if last_tr:\\n                last_tr = check2(last_tr)\\n\\n            pe_direction = check(params_dct, subject_id, scan,\\n                                 \\'PhaseEncodingDirection\\', False)\\n            try:\\n                effective_echo_spacing = float(\\n                try_fetch_parameter(params_dct, subject_id, scan,\\n                                    [\"EffectiveEchoSpacing\"]))\\n            except TypeError:\\n                pass\\n\\n        else:\\n            err = \"\\\\n\\\\n[!] Could not read the format of the scan parameters \" \\\\\\n                  \"information included in the data configuration file for \" \\\\\\n                  f\"the participant {subject_id}.\\\\n\\\\n\"\\n            raise Exception(err)\\n    if first_tr == \\'\\' or first_tr is None:\\n        first_tr = pipeconfig_start_indx\\n\\n    if last_tr == \\'\\' or last_tr is None:\\n        last_tr = pipeconfig_stop_indx\\n\\n    unit = \\'s\\'\\n\\n    if \\'None\\' in pattern or \\'none\\' in pattern:\\n        pattern = None\\n\\n    \\'\\'\\'\\n    if not pattern:\\n        if pipeconfig_tpattern:\\n            if \"Use NIFTI Header\" in pipeconfig_tpattern:\\n                pattern = \\'\\'\\n            else:\\n                pattern = pipeconfig_tpattern\\n    \\'\\'\\'\\n\\n    # pattern can be one of a few keywords, a filename, or blank which\\n    # indicates that the images header information should be used\\n    tpattern_file = None\\n\\n    valid_patterns = [\\'alt+z\\', \\'altplus\\', \\'alt+z2\\', \\'alt-z\\', \\'altminus\\',\\n                      \\'alt-z2\\', \\'seq+z\\', \\'seqplus\\', \\'seq-z\\', \\'seqminus\\']\\n    if pattern and pattern != \\'\\' and pattern not in valid_patterns:\\n\\n        if isinstance(pattern, list) or \\\\\\n                (\"[\" in pattern and \"]\" in pattern and \",\" in pattern):\\n            # if we got the slice timing as a list, from a BIDS-format scan\\n            # parameters JSON file\\n\\n            if not isinstance(pattern, list):\\n                pattern = pattern.replace(\"[\", \"\").replace(\"]\", \"\").split(\",\")\\n\\n            slice_timings = [float(x) for x in pattern]\\n\\n            # write out a tpattern file for AFNI 3dTShift\\n            tpattern_file = os.path.join(os.getcwd(), \"tpattern.txt\")\\n            try:\\n                with open(tpattern_file, \"wt\") as f:\\n                    for time in slice_timings:\\n                        f.write(\"{0}\\\\n\".format(time).replace(\" \", \"\"))\\n            except:\\n                err = \"\\\\n[!] Could not write the slice timing file meant as \" \\\\\\n                      \"an input for AFNI 3dTshift (slice timing correction):\" \\\\\\n                      \"\\\\n{0}\\\\n\\\\n\".format(tpattern_file)\\n                raise Exception(err)\\n\\n        elif \".txt\" in pattern and not os.path.exists(pattern):\\n            # if the user provided an acquisition pattern text file for\\n            # 3dTshift\\n            raise Exception(\"Invalid Pattern file path {0}, Please provide \"\\n                            \"the correct path\".format(pattern))\\n        elif \".txt\" in pattern:\\n            with open(pattern, \"r\") as f:\\n                lines = f.readlines()\\n            if len(lines) < 2:\\n                raise Exception(\\'Invalid slice timing file format. The file \\'\\n                                \\'should contain only one value per row. Use \\'\\n                                \\'new line char as delimiter\\')\\n            tpattern_file = pattern\\n            slice_timings = [float(l.rstrip(\\'\\\\r\\\\n\\')) for l in lines]\\n        else:\\n            # this only happens if there is a non-path string set in the data\\n            # config dictionary for acquisition pattern (like \"alt+z\"), except\\n            # the pattern is not listed in that list\\n            err = \"\\\\n[!] The slice timing acquisition pattern provided is \" \\\\\\n                  \"not supported by AFNI 3dTshift:\\\\n\" \\\\\\n                  \"{0}\\\\n\".format(str(pattern))\\n            raise Exception(err)\\n\\n        pattern = tpattern_file\\n\\n        slice_timings.sort()\\n        max_slice_offset = slice_timings[-1]\\n\\n        # checking if the unit of TR and slice timing match or not\\n        # if slice timing in ms convert TR to ms as well\\n        if TR and max_slice_offset > TR:\\n            warnings.warn(\"TR is in seconds and slice timings are in \"\\n                          \"milliseconds. Converting TR into milliseconds\")\\n            TR = TR * 1000\\n            print(\"New TR value {0} ms\".format(TR))\\n            unit = \\'ms\\'\\n\\n    else:\\n        # check to see, if TR is in milliseconds, convert it into seconds\\n        if TR and TR > 10:\\n            warnings.warn(\\'TR is in milliseconds, Converting it into seconds\\')\\n            TR = TR / 1000.0\\n            print(\"New TR value {0} s\".format(TR))\\n            unit = \\'s\\'\\n\\n    # swap back in\\n    if TR:\\n        tr = \"{0}{1}\".format(str(TR), unit)\\n    else:\\n        tr = \"\"\\n\\n    tpattern = pattern\\n    start_indx = first_tr\\n    stop_indx = last_tr\\n\\n    return (tr if tr else None,\\n            tpattern if tpattern else None,\\n            template if template else None,\\n            ref_slice,\\n            start_indx,\\n            stop_indx,\\n            pe_direction,\\n            effective_echo_spacing)\\n', 'pipeconfig_start_indx': 0, 'pipeconfig_stop_indx': None, 'pipeconfig_tpattern': '[Undefined]', 'pipeconfig_tr': '[Undefined]', 'subject_id': 'sub-NDARINV2VY7YYNW'}",
			"anat_T1w_gather_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1": "{'inputnode': {'anat': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/anat/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_run-01_T1w.nii', 'creds_path': None, 'dl_dir': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working/pipeline_cpac_default_monkey_skullstrip', 'img_type': 'anat', 'subject': 'sub-NDARINV2VY7YYNW'}, 'check_for_s3': {'function_str': 'CPAC.utils.datasource.check_for_s3'}, 'outputspec': {}}",
			"anat_deoblique_0": "{'args': '[Undefined]', 'atrcopy': '[Undefined]', 'atrfloat': '[Undefined]', 'atrint': '[Undefined]', 'atrstring': '[Undefined]', 'deoblique': True, 'duporigin_file': '[Undefined]', 'environ': {}, 'nosaveatr': '[Undefined]', 'saveatr': '[Undefined]', 'space': '[Undefined]', 'xdel': '[Undefined]', 'xorigin': '[Undefined]', 'xyzscale': '[Undefined]', 'ydel': '[Undefined]', 'yorigin': '[Undefined]', 'zdel': '[Undefined]', 'zorigin': '[Undefined]'}",
			"anat_reorient_0": "{'args': '[Undefined]', 'environ': {}, 'master': '[Undefined]', 'num_threads': 1, 'orientation': 'RPI', 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'resample_mode': '[Undefined]', 'voxel_size': '[Undefined]'}",
			"acpc_align_50": "{'inputspec': {'anat_brain': '[Undefined]', 'anat_leaf': '[Undefined]', 'brain_mask': '[Undefined]', 'template_brain_for_acpc': '[Undefined]', 'template_brain_only_for_anat': '[Undefined]', 'template_head_for_acpc': '[Undefined]'}, 'anat_acpc_1_fov': {'angle_rep': '[Undefined]', 'apply_isoxfm': '[Undefined]', 'apply_xfm': '[Undefined]', 'args': '-applyxfm', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': '[Undefined]', 'coarse_search': '[Undefined]', 'cost': '[Undefined]', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'dof': '[Undefined]', 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_matrix_file': '[Undefined]', 'in_weight': '[Undefined]', 'interp': '[Undefined]', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': '[Undefined]', 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'schedule': '[Undefined]', 'searchr_x': '[Undefined]', 'searchr_y': '[Undefined]', 'searchr_z': '[Undefined]', 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}, 'anat_acpc_2_fov_convertxfm': {'args': '[Undefined]', 'concat_xfm': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fix_scale_skew': '[Undefined]', 'in_file2': '[Undefined]', 'invert_xfm': True, 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ'}, 'anat_acpc_3_flirt': {'angle_rep': '[Undefined]', 'apply_isoxfm': '[Undefined]', 'apply_xfm': '[Undefined]', 'args': '[Undefined]', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': '[Undefined]', 'coarse_search': '[Undefined]', 'cost': '[Undefined]', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'dof': '[Undefined]', 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_matrix_file': '[Undefined]', 'in_weight': '[Undefined]', 'interp': 'spline', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': '[Undefined]', 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'schedule': '[Undefined]', 'searchr_x': [30, 30], 'searchr_y': [30, 30], 'searchr_z': [30, 30], 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}, 'anat_acpc_4_concatxfm': {'args': '[Undefined]', 'concat_xfm': True, 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fix_scale_skew': '[Undefined]', 'invert_xfm': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ'}, 'anat_acpc_5_aff2rigid': {'function_str': 'def fsl_aff_to_rigid(in_xfm, out_name):\\n\\n    out_mat = os.path.join(os.getcwd(), out_name)\\n\\n    #   Script for getting a 6 DOF approx to a 12 DOF standard transformation\\n    #\\n    #   Mark Jenkinson\\n    #   FMRIB Image Analysis Group\\n    #\\n    #   Copyright (C) 2012 University of Oxford\\n    #\\n    #   Part of FSL - FMRIB\\'s Software Library\\n    #   http://www.fmrib.ox.ac.uk/fsl\\n    #   fsl@fmrib.ox.ac.uk\\n    #\\n    #   Developed at FMRIB (Oxford Centre for Functional Magnetic Resonance\\n    #   Imaging of the Brain), Department of Clinical Neurology, Oxford\\n    #   University, Oxford, UK\\n    #\\n    #\\n    #   LICENCE\\n    #\\n    #   FMRIB Software Library, Release 5.0 (c) 2012, The University of\\n    #   Oxford (the \"Software\")\\n    #\\n    #   The Software remains the property of the University of Oxford (\"the\\n    #   University\").\\n    #\\n    #   The Software is distributed \"AS IS\" under this Licence solely for\\n    #   non-commercial use in the hope that it will be useful, but in order\\n    #   that the University as a charitable foundation protects its assets for\\n    #   the benefit of its educational and research purposes, the University\\n    #   makes clear that no condition is made or to be implied, nor is any\\n    #   warranty given or to be implied, as to the accuracy of the Software,\\n    #   or that it will be suitable for any particular purpose or for use\\n    #   under any specific conditions. Furthermore, the University disclaims\\n    #   all responsibility for the use which is made of the Software. It\\n    #   further disclaims any liability for the outcomes arising from using\\n    #   the Software.\\n    #\\n    #   The Licensee agrees to indemnify the University and hold the\\n    #   University harmless from and against any and all claims, damages and\\n    #   liabilities asserted by third parties (including claims for\\n    #   negligence) which arise directly or indirectly from the use of the\\n    #   Software or the sale of any products based on the Software.\\n    #\\n    #   No part of the Software may be reproduced, modified, transmitted or\\n    #   transferred in any form or by any means, electronic or mechanical,\\n    #   without the express permission of the University. The permission of\\n    #   the University is not required if the said reproduction, modification,\\n    #   transmission or transference is done without financial return, the\\n    #   conditions of this Licence are imposed upon the receiver of the\\n    #   product, and all original and amended source code is included in any\\n    #   transmitted product. You may be held legally responsible for any\\n    #   copyright infringement that is caused or encouraged by your failure to\\n    #   abide by these terms and conditions.\\n    #\\n    #   You are not permitted under this Licence to use this Software\\n    #   commercially. Use for which any financial return is received shall be\\n    #   defined as commercial use, and includes (1) integration of all or part\\n    #   of the source code or the Software into a product for sale or license\\n    #   by or on behalf of Licensee to third parties or (2) use of the\\n    #   Software or any derivative of it for research with the final aim of\\n    #   developing software products for sale or license to a third party or\\n    #   (3) use of the Software or any derivative of it for research with the\\n    #   final aim of developing non-software products for sale or license to a\\n    #   third party, or (4) use of the Software to provide any service to an\\n    #   external organisation for which payment is received. If you are\\n    #   interested in using the Software commercially, please contact Isis\\n    #   Innovation Limited (\"Isis\"), the technology transfer company of the\\n    #   University, to negotiate a licence. Contact details are:\\n    #   innovation@isis.ox.ac.uk quoting reference DE/9564.\\n\\n    # Load in the necessary info\\n    a = loadtxt(in_xfm)\\n    # set specific AC and PC coordinates in FLIRT convention (x1=AC, x2=PC, x3=point above x1 in the mid-sag plane)\\n    x1 = matrix([[91], [129], [67], [1]])\\n    x2 = matrix([[91], [100], [70], [1]])\\n    x3 = matrix([[91], [129], [117], [1]])\\n\\n    ainv = linalg.inv(a)\\n\\n    # vectors v are in MNI space, vectors w are in native space\\n    v21 = (x2 - x1)\\n    v31 = (x3 - x1)\\n    # normalise and force orthogonality\\n    v21 = v21 / linalg.norm(v21)\\n    v31 = v31 - multiply(v31.T * v21, v21)\\n    v31 = v31 / linalg.norm(v31)\\n    tmp = cross(v21[0:3, 0].T, v31[0:3, 0].T).T\\n    v41 = mat(zeros((4, 1)))\\n    v41[0:3, 0] = tmp\\n    # Map vectors to native space\\n    w21 = ainv * (v21)\\n    w31 = ainv * (v31)\\n    # normalise and force orthogonality\\n    w21 = w21 / linalg.norm(w21)\\n    w31 = w31 - multiply(w31.T * w21, w21)\\n    w31 = w31 / linalg.norm(w31)\\n    tmp = cross(w21[0:3, 0].T, w31[0:3, 0].T).T\\n    w41 = mat(zeros((4, 1)))\\n    w41[0:3, 0] = tmp\\n\\n    # setup matrix: native to MNI space\\n    r1 = matrix(eye(4))\\n    r1[0:4, 0] = w21\\n    r1[0:4, 1] = w31\\n    r1[0:4, 2] = w41\\n    r2 = matrix(eye(4))\\n    r2[0, 0:4] = v21.T\\n    r2[1, 0:4] = v31.T\\n    r2[2, 0:4] = v41.T\\n    r = r2.T * r1.T\\n\\n    # Fix the translation (keep AC=x1 in the same place)\\n    ACmni = x1\\n    ACnat = ainv * x1\\n    trans = ACmni - r * ACnat\\n    r[0:3, 3] = trans[0:3]\\n\\n    # Save out the result\\n    savetxt(out_mat, r, fmt=\\'%14.10f\\')\\n\\n    return out_mat\\n', 'out_name': 'acpc.mat'}, 'outputspec': {'acpc_aligned_brain': '[Undefined]', 'acpc_brain_mask': '[Undefined]'}, 'anat_acpc_6_applywarp': {'abswarp': '[Undefined]', 'args': '[Undefined]', 'datatype': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'field_file': '[Undefined]', 'interp': 'spline', 'mask_file': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'relwarp': True, 'superlevel': '[Undefined]', 'supersample': '[Undefined]'}}",
			"gather_T1w-ACPC-template": "{'inputnode': {'creds_path': None, 'data': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz', 'dl_dir': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working/pipeline_cpac_default_monkey_skullstrip', 'scan': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}, 'check_for_s3': {'function_str': 'CPAC.utils.datasource.check_for_s3', 'img_type': 'other'}, 'outputspec': {}}",
			"anat_denoise_54": "{'args': '[Undefined]', 'dimension': '[Undefined]', 'environ': {'NSLOTS': '1'}, 'noise_image': '[Undefined]', 'noise_model': 'Gaussian', 'num_threads': 1, 'output_image': '[Undefined]', 'save_noise': False, 'shrink_factor': 1, 'verbose': '[Undefined]'}",
			"anat_n4_56": "{'args': '[Undefined]', 'bias_image': '[Undefined]', 'bspline_fitting_distance': '[Undefined]', 'bspline_order': '[Undefined]', 'convergence_threshold': '[Undefined]', 'copy_header': True, 'dimension': 3, 'environ': {'NSLOTS': '1'}, 'histogram_sharpening': '[Undefined]', 'mask_image': '[Undefined]', 'n_iterations': '[Undefined]', 'num_threads': 1, 'output_image': '[Undefined]', 'rescale_intensities': False, 'save_bias': False, 'shrink_factor': 2, 'weight_image': '[Undefined]'}",
			"gather_unet-model": "{'inputnode': {'creds_path': None, 'data': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model', 'dl_dir': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working/pipeline_cpac_default_monkey_skullstrip', 'scan': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}, 'check_for_s3': {'function_str': 'CPAC.utils.datasource.check_for_s3', 'img_type': 'other'}, 'outputspec': {}}",
			"unet_mask_59": "{'function_str': 'def predict_volumes(model_path, rimg_in=None, cimg_in=None, bmsk_in=None, suffix=\"unet_pre_mask\", \\n        ed_iter=0, save_dice=False, save_nii=True, nii_outdir=None, verbose=False, \\n        rescale_dim=256, num_slice=3):\\n\\n    import torch\\n    import torch.nn as nn\\n    import numpy as np\\n    from torch.autograd import Variable\\n    from CPAC.unet.function import extract_large_comp, estimate_dice, write_nifti, fill_holes, erosion_dilation\\n    from CPAC.unet.model import UNet2d\\n    from CPAC.unet.dataset import VolumeDataset, BlockDataset\\n    from torch.utils.data import DataLoader\\n    import os, sys\\n    import nibabel as nib\\n    import pickle\\n\\n    train_model = UNet2d(dim_in=3, num_conv_block=5, kernel_root=16)\\n    checkpoint = torch.load(model_path, map_location={\\'cuda:0\\':\\'cpu\\'})\\n    train_model.load_state_dict(checkpoint[\\'state_dict\\'])\\n    model = nn.Sequential(train_model, nn.Softmax2d())\\n\\n    use_gpu=torch.cuda.is_available()\\n    model_on_gpu=next(model.parameters()).is_cuda\\n    use_bn=True\\n    if use_gpu:\\n        if not model_on_gpu:\\n            model.cuda()\\n    else:\\n        if model_on_gpu:\\n            model.cpu()\\n\\n    NoneType=type(None)\\n    if isinstance(rimg_in, NoneType) and isinstance(cimg_in, NoneType):\\n        print(\"Input rimg_in or cimg_in\")\\n        sys.exit(1)\\n\\n    if save_dice:\\n        dice_dict=dict()\\n\\n    volume_dataset=VolumeDataset(rimg_in=rimg_in, cimg_in=cimg_in, bmsk_in=bmsk_in)\\n    volume_loader=DataLoader(dataset=volume_dataset, batch_size=1)\\n\\n    for idx, vol in enumerate(volume_loader):\\n        if len(vol)==1: # just img\\n            ptype=1 # Predict\\n            cimg=vol\\n            bmsk=None\\n            block_dataset=BlockDataset(rimg=cimg, bfld=None, bmsk=None, num_slice=num_slice, rescale_dim=rescale_dim)\\n        elif len(vol)==2: # img & msk\\n            ptype=2 # image test\\n            cimg=vol[0]\\n            bmsk=vol[1]\\n            block_dataset=BlockDataset(rimg=cimg, bfld=None, bmsk=bmsk, num_slice=num_slice, rescale_dim=rescale_dim)\\n        elif len(vol==3): # img bias_field & msk\\n            ptype=3 # image bias correction test\\n            cimg=vol[0]\\n            bfld=vol[1]\\n            bmsk=vol[2]\\n            block_dataset=BlockDataset(rimg=cimg, bfld=bfld, bmsk=bmsk, num_slice=num_slice, rescale_dim=rescale_dim)\\n        else:\\n            print(\"Invalid Volume Dataset!\")\\n            sys.exit(2)\\n\\n        rescale_shape=block_dataset.get_rescale_shape()\\n        raw_shape=block_dataset.get_raw_shape()\\n\\n        for od in range(3):\\n            backard_ind=np.arange(3)\\n            backard_ind=np.insert(np.delete(backard_ind, 0), od, 0)\\n\\n            block_data, slice_list, slice_weight=block_dataset.get_one_directory(axis=od)\\n            pr_bmsk=torch.zeros([len(slice_weight), rescale_dim, rescale_dim])\\n            if use_gpu:\\n                pr_bmsk=pr_bmsk.cuda()\\n            for (i, ind) in enumerate(slice_list):\\n                if ptype==1:\\n                    rimg_blk=block_data[i]\\n                    if use_gpu:\\n                        rimg_blk=rimg_blk.cuda()\\n                elif ptype==2:\\n                    rimg_blk, bmsk_blk=block_data[i]\\n                    if use_gpu:\\n                        rimg_blk=rimg_blk.cuda()\\n                        bmsk_blk=bmsk_blk.cuda()\\n                else:\\n                    rimg_blk, bfld_blk, bmsk_blk=block_data[i]\\n                    if use_gpu:\\n                        rimg_blk=rimg_blk.cuda()\\n                        bfld_blk=bfld_blk.cuda()\\n                        bmsk_blk=bmsk_blk.cuda()\\n                pr_bmsk_blk=model(torch.unsqueeze(Variable(rimg_blk), 0))\\n                pr_bmsk[ind[1], :, :]=pr_bmsk_blk.data[0][1, :, :]\\n\\n            if use_gpu:\\n                pr_bmsk=pr_bmsk.cpu()\\n\\n            pr_bmsk=pr_bmsk.permute(backard_ind[0], backard_ind[1], backard_ind[2])\\n            pr_bmsk=pr_bmsk[:rescale_shape[0], :rescale_shape[1], :rescale_shape[2]]\\n            uns_pr_bmsk=torch.unsqueeze(pr_bmsk, 0)\\n            uns_pr_bmsk=torch.unsqueeze(uns_pr_bmsk, 0)\\n            uns_pr_bmsk=nn.functional.interpolate(uns_pr_bmsk, size=raw_shape, mode=\"trilinear\", align_corners=False)\\n            pr_bmsk=torch.squeeze(uns_pr_bmsk)\\n\\n            if od==0:\\n                pr_3_bmsk=torch.unsqueeze(pr_bmsk, 3)\\n            else:\\n                pr_3_bmsk=torch.cat((pr_3_bmsk, torch.unsqueeze(pr_bmsk, 3)), dim=3)\\n\\n        pr_bmsk=pr_3_bmsk.mean(dim=3)\\n\\n        pr_bmsk=pr_bmsk.numpy()\\n        pr_bmsk_final=extract_large_comp(pr_bmsk>0.5)\\n        pr_bmsk_final=fill_holes(pr_bmsk_final)\\n        if ed_iter>0:\\n            pr_bmsk_final=erosion_dilation(pr_bmsk_final, iterations=ed_iter)\\n\\n        if isinstance(bmsk, torch.Tensor):\\n            bmsk=bmsk.data[0].numpy()\\n            dice=estimate_dice(bmsk, pr_bmsk_final)\\n            if verbose:\\n                print(dice)\\n\\n        t1w_nii=volume_dataset.getCurCimgNii()\\n        t1w_path=t1w_nii.get_filename()\\n        t1w_dir, t1w_file=os.path.split(t1w_path)\\n        t1w_name=os.path.splitext(t1w_file)[0]\\n        t1w_name=os.path.splitext(t1w_name)[0]\\n\\n        if save_nii:\\n            t1w_aff=t1w_nii.affine\\n            t1w_shape=t1w_nii.shape\\n\\n            if isinstance(nii_outdir, NoneType):\\n                nii_outdir = os.getcwd()\\n\\n            out_path=os.path.join(nii_outdir, t1w_name+\"_\"+suffix+\".nii.gz\")\\n            write_nifti(np.array(pr_bmsk_final, dtype=np.float32), t1w_aff, t1w_shape, out_path)\\n\\n        if save_dice:\\n            dice_dict[t1w_name]=dice\\n\\n    if save_dice:\\n        return dice_dict\\n\\n    # return output mask\\n    return out_path\\n'}",
			"unet_masked_brain_59": "{'args': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'internal_datatype': '[Undefined]', 'nan2zeros': '[Undefined]', 'op_string': '-mul %s', 'out_file': '[Undefined]', 'output_datatype': '[Undefined]', 'output_type': 'NIFTI_GZ'}",
			"native_brain_to_template_brain_59": "{'angle_rep': '[Undefined]', 'apply_isoxfm': '[Undefined]', 'apply_xfm': '[Undefined]', 'args': '[Undefined]', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': '[Undefined]', 'coarse_search': '[Undefined]', 'cost': '[Undefined]', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'dof': 6, 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_matrix_file': '[Undefined]', 'in_weight': '[Undefined]', 'interp': 'sinc', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': '[Undefined]', 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'schedule': '[Undefined]', 'searchr_x': '[Undefined]', 'searchr_y': '[Undefined]', 'searchr_z': '[Undefined]', 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}",
			"resampled_T1w-brain-template": "{'function_str': 'CPAC.utils.datasource.resolve_resolution', 'resolution': '2mm', 'tag': 'resolution_for_anat', 'template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'template_name': 'T1w-brain-template'}",
			"native_head_to_template_head_59": "{'angle_rep': '[Undefined]', 'apply_isoxfm': '[Undefined]', 'apply_xfm': True, 'args': '[Undefined]', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': '[Undefined]', 'coarse_search': '[Undefined]', 'cost': '[Undefined]', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'dof': '[Undefined]', 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_weight': '[Undefined]', 'interp': '[Undefined]', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': '[Undefined]', 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'schedule': '[Undefined]', 'searchr_x': '[Undefined]', 'searchr_y': '[Undefined]', 'searchr_z': '[Undefined]', 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}",
			"resampled_T1w-template": "{'function_str': 'CPAC.utils.datasource.resolve_resolution', 'resolution': '2mm', 'tag': 'resolution_for_anat', 'template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'template_name': 'T1w-template'}",
			"template_brain_mask_59": "{'args': '-bin', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'internal_datatype': '[Undefined]', 'nan2zeros': '[Undefined]', 'out_file': '[Undefined]', 'output_datatype': '[Undefined]', 'output_type': 'NIFTI_GZ'}",
			"template_head_to_template_59": "{'args': '[Undefined]', 'collapse_output_transforms': True, 'convergence_threshold': [1e-08], 'convergence_window_size': [10], 'dimension': 3, 'environ': {'NSLOTS': '1'}, 'fixed_image_mask': '[Undefined]', 'fixed_image_masks': '[Undefined]', 'float': '[Undefined]', 'initial_moving_transform': '[Undefined]', 'initial_moving_transform_com': '[Undefined]', 'initialize_transforms_per_stage': False, 'interpolation': 'NearestNeighbor', 'interpolation_parameters': '[Undefined]', 'invert_initial_moving_transform': '[Undefined]', 'metric': ['CC'], 'metric_item_trait': '[Undefined]', 'metric_stage_trait': '[Undefined]', 'metric_weight': [1.0, 5.0], 'metric_weight_item_trait': 1.0, 'metric_weight_stage_trait': '[Undefined]', 'moving_image_mask': '[Undefined]', 'moving_image_masks': '[Undefined]', 'num_threads': 1, 'number_of_iterations': [[60, 50, 20]], 'output_inverse_warped_image': '[Undefined]', 'output_transform_prefix': 'transform', 'output_warped_image': '[Undefined]', 'radius_bins_item_trait': 5, 'radius_bins_stage_trait': '[Undefined]', 'radius_or_number_of_bins': [5], 'random_seed': '[Undefined]', 'restore_state': '[Undefined]', 'restrict_deformation': '[Undefined]', 'sampling_percentage': '[Undefined]', 'sampling_percentage_item_trait': '[Undefined]', 'sampling_percentage_stage_trait': '[Undefined]', 'sampling_strategy': '[Undefined]', 'sampling_strategy_item_trait': '[Undefined]', 'sampling_strategy_stage_trait': '[Undefined]', 'save_state': '[Undefined]', 'shrink_factors': [[4, 2, 1]], 'sigma_units': '[Undefined]', 'smoothing_sigmas': [[0.6, 0.2, 0.0]], 'transform_parameters': [<generator object _serialize_inout.<locals>.<genexpr> at 0x15249a159230>], 'transforms': ['SyN'], 'use_estimate_learning_rate_once': '[Undefined]', 'use_histogram_matching': True, 'verbose': False, 'winsorize_lower_quantile': 0.0, 'winsorize_upper_quantile': 1.0, 'write_composite_transform': False}",
			"template_head_transform_to_template_59": "{'args': '[Undefined]', 'default_value': 0.0, 'dimension': 3, 'environ': {'NSLOTS': '1'}, 'float': False, 'input_image_type': '[Undefined]', 'interpolation': 'Linear', 'interpolation_parameters': '[Undefined]', 'invert_transform_flags': '[Undefined]', 'num_threads': 1, 'out_postfix': '_trans', 'output_image': '[Undefined]', 'print_out_composite_warp_file': '[Undefined]'}",
			"convert_xfm": "{'args': '[Undefined]', 'concat_xfm': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fix_scale_skew': '[Undefined]', 'in_file2': '[Undefined]', 'invert_xfm': True, 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ'}",
			"template_brain_to_native_brain_59": "{'angle_rep': '[Undefined]', 'apply_isoxfm': '[Undefined]', 'apply_xfm': True, 'args': '[Undefined]', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': '[Undefined]', 'coarse_search': '[Undefined]', 'cost': '[Undefined]', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'dof': '[Undefined]', 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_weight': '[Undefined]', 'interp': '[Undefined]', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': '[Undefined]', 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'schedule': '[Undefined]', 'searchr_x': '[Undefined]', 'searchr_y': '[Undefined]', 'searchr_z': '[Undefined]', 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}",
			"refined_mask_59": "{'args': '-bin', 'direction': 'below', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'internal_datatype': '[Undefined]', 'nan2zeros': '[Undefined]', 'out_file': '[Undefined]', 'output_datatype': '[Undefined]', 'output_type': 'NIFTI_GZ', 'thresh': 0.5, 'use_nonzero_voxels': '[Undefined]', 'use_robust_range': '[Undefined]'}",
			"brain_extraction_64": "{'args': '[Undefined]', 'environ': {}, 'expr': 'a*step(b)', 'in_file_c': '[Undefined]', 'num_threads': 1, 'other': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'overwrite': '[Undefined]', 'single_idx': '[Undefined]', 'start_idx': '[Undefined]', 'stop_idx': '[Undefined]'}",
			"ANTS_T1_to_template_70": "{'inputspec': {'input_brain': '[Undefined]', 'input_head': '[Undefined]', 'input_mask': '[Undefined]', 'interpolation': 'LanczosWindowedSinc', 'reference_brain': '[Undefined]', 'reference_head': '[Undefined]', 'reference_mask': '[Undefined]', 'transform': '[Undefined]'}, 'anat_mni_ants_register': {'inputspec': {'ants_para': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'fixed_image_mask': None, 'interp': '[Undefined]', 'moving_brain': '[Undefined]', 'moving_mask': '[Undefined]', 'moving_skull': '[Undefined]', 'reference_brain': '[Undefined]', 'reference_mask': '[Undefined]', 'reference_skull': '[Undefined]'}, 'calc_ants_warp': {'function_str': 'def hardcoded_reg(moving_brain, reference_brain, moving_skull,\\n                  reference_skull, ants_para, moving_mask=None,\\n                  reference_mask=None, fixed_image_mask=None, interp=None,\\n                  reg_with_skull=0):\\n    # TODO: expand transforms to cover all in ANTs para\\n\\n    regcmd = [\"antsRegistration\"]\\n    for para_index in range(len(ants_para)):\\n        for para_type in ants_para[para_index]:\\n            if para_type == \\'dimensionality\\':\\n                if ants_para[para_index][para_type] not in [2, 3, 4]:\\n                    err_msg = \\'Dimensionality specified in ANTs parameters: %d, is not supported. \\' \\\\\\n                              \\'Change to 2, 3, or 4 and try again\\' % \\\\\\n                              ants_para[para_index][para_type]\\n                    raise Exception(err_msg)\\n                else:\\n                    regcmd.append(\"--dimensionality\")\\n                    regcmd.append(str(ants_para[para_index][para_type]))\\n\\n            elif para_type == \\'verbose\\':\\n                if ants_para[para_index][para_type] not in [0, 1]:\\n                    err_msg = \\'Verbose output option in ANTs parameters: %d, is not supported. \\' \\\\\\n                              \\'Change to 0 or 1 and try again\\' % \\\\\\n                              ants_para[para_index][para_type]\\n                    raise Exception(err_msg)\\n                else:\\n                    regcmd.append(\"--verbose\")\\n                    regcmd.append(str(ants_para[para_index][para_type]))\\n\\n            elif para_type == \\'float\\':\\n                if ants_para[para_index][para_type] not in [0, 1]:\\n                    err_msg = \\'Float option in ANTs parameters: %d, is not supported. \\' \\\\\\n                              \\'Change to 0 or 1 and try again\\' % \\\\\\n                              ants_para[para_index][para_type]\\n                    raise Exception(err_msg)\\n                else:\\n                    regcmd.append(\"--float\")\\n                    regcmd.append(str(ants_para[para_index][para_type]))\\n\\n            elif para_type == \\'collapse-output-transforms\\':\\n                if ants_para[para_index][para_type] not in [0, 1]:\\n                    err_msg = \\'collapse-output-transforms specified in ANTs parameters: %d, is not supported. \\' \\\\\\n                              \\'Change to 0 or 1 and try again\\' % \\\\\\n                              ants_para[para_index][para_type]\\n                    raise Exception(err_msg)\\n                else:\\n                    regcmd.append(\"--collapse-output-transforms\")\\n                    regcmd.append(str(ants_para[para_index][para_type]))\\n\\n            elif para_type == \\'winsorize-image-intensities\\':\\n                if ants_para[para_index][para_type][\\'lowerQuantile\\'] is None or ants_para[para_index][para_type][\\'upperQuantile\\'] is None:\\n                    err_msg = \\'Please specifiy lowerQuantile and upperQuantile of ANTs parameters --winsorize-image-intensities in pipeline config. \\'\\n                    raise Exception(err_msg)\\n                else:\\n                    regcmd.append(\"--winsorize-image-intensities\")\\n                    regcmd.append(\"[{0},{1}]\".format(ants_para[para_index][para_type][\\'lowerQuantile\\'],\\n                        ants_para[para_index][para_type][\\'upperQuantile\\']))\\n\\n            elif para_type == \\'initial-moving-transform\\':\\n                if ants_para[para_index][para_type][\\n                    \\'initializationFeature\\'] is None:\\n                    err_msg = \\'Please specifiy initializationFeature of ANTs parameters in pipeline config. \\'\\n                    raise Exception(err_msg)\\n                else:\\n                    regcmd.append(\"--initial-moving-transform\")\\n                    if reg_with_skull == 1:\\n                        regcmd.append(\"[{0},{1},{2}]\".format(\\n                            reference_skull, moving_skull,\\n                            ants_para[para_index][para_type][\\n                                \\'initializationFeature\\']))\\n                    else:\\n                        regcmd.append(\"[{0},{1},{2}]\".format(\\n                            reference_brain, moving_brain,\\n                            ants_para[para_index][para_type][\\n                                \\'initializationFeature\\']))\\n\\n            elif para_type == \\'transforms\\':\\n                for trans_index in range(\\n                        len(ants_para[para_index][para_type])):\\n                    for trans_type in ants_para[para_index][para_type][\\n                        trans_index]:\\n                        regcmd.append(\"--transform\")\\n                        if trans_type == \\'Rigid\\' or trans_type == \\'Affine\\':\\n                            if ants_para[para_index][para_type][trans_index][\\n                                trans_type][\\'gradientStep\\'] is None:\\n                                err_msg = \\'Please specifiy % s Gradient Step of ANTs parameters in pipeline config. \\' % trans_type\\n                                raise Exception(err_msg)\\n                            else:\\n                                regcmd.append(\"{0}[{1}]\".format(\\n                                    trans_type,\\n                                    ants_para[para_index][para_type][\\n                                        trans_index][trans_type][\\n                                        \\'gradientStep\\']))\\n\\n                        if trans_type == \\'SyN\\':\\n                            if ants_para[para_index][para_type][trans_index][\\n                                trans_type][\\'gradientStep\\'] is None:\\n                                err_msg = \\'Please specifiy % s Gradient Step of ANTs parameters in pipeline config. \\' % trans_type\\n                                raise Exception(err_msg)\\n                            else:\\n                                SyN_para = []\\n                                SyN_para.append(\"{0}\".format(\\n                                    ants_para[para_index][para_type][\\n                                        trans_index][trans_type][\\n                                        \\'gradientStep\\']))\\n                                if ants_para[para_index][para_type][\\n                                    trans_index][trans_type][\\n                                    \\'updateFieldVarianceInVoxelSpace\\'] is not None:\\n                                    SyN_para.append(\"{0}\".format(\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'updateFieldVarianceInVoxelSpace\\']))\\n                                if ants_para[para_index][para_type][\\n                                    trans_index][trans_type][\\n                                    \\'totalFieldVarianceInVoxelSpace\\'] is not None:\\n                                    SyN_para.append(\"{0}\".format(\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'totalFieldVarianceInVoxelSpace\\']))\\n                                SyN_para = \\',\\'.join([str(elem)\\n                                                     for elem in SyN_para])\\n                                regcmd.append(\"{0}[{1}]\".format(\\n                                    trans_type, SyN_para))\\n\\n                        if ants_para[para_index][para_type][trans_index][\\n                            trans_type][\\'metric\\'][\\'type\\'] == \\'MI\\':\\n                            if ants_para[para_index][para_type][trans_index][\\n                                trans_type][\\'metric\\'][\\n                                \\'metricWeight\\'] is None or \\\\\\n                                            ants_para[para_index][para_type][\\n                                                trans_index][trans_type][\\n                                                \\'metric\\'][\\n                                                \\'numberOfBins\\'] is None:\\n                                err_msg = \\'Please specifiy metricWeight and numberOfBins for metric MI of ANTs parameters in pipeline config.\\'\\n                                raise Exception(err_msg)\\n                            else:\\n                                MI_para = []\\n                                MI_para.append(\"{0},{1}\".format(\\n                                    ants_para[para_index][para_type][\\n                                        trans_index][trans_type][\\'metric\\']\\n                                    [\\'metricWeight\\'],\\n                                    ants_para[para_index][para_type][\\n                                        trans_index][trans_type][\\'metric\\'][\\n                                        \\'numberOfBins\\']))\\n                                if \\'samplingStrategy\\' in \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'metric\\'] and \\\\\\n                                                ants_para[para_index][\\n                                                    para_type][trans_index][\\n                                                    trans_type][\\'metric\\'][\\n                                                    \\'samplingStrategy\\'] in [\\n                                            \\'None\\', \\'Regular\\', \\'Random\\']:\\n                                    MI_para.append(\"{0}\".format(\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'metric\\'][\\'samplingStrategy\\']))\\n                                if \\'samplingPercentage\\' in \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'metric\\'] and \\\\\\n                                                ants_para[para_index][\\n                                                    para_type][trans_index][\\n                                                    trans_type][\\'metric\\'][\\n                                                    \\'samplingPercentage\\'] is not None:\\n                                    MI_para.append(\"{0}\".format(\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'metric\\'][\\'samplingPercentage\\']))\\n                                MI_para = \\',\\'.join(\\n                                    [str(elem) for elem in MI_para])\\n                                regcmd.append(\"--metric\")\\n                                if reg_with_skull == 1:\\n                                    regcmd.append(\"MI[{0},{1},{2}]\".format(\\n                                        reference_skull, moving_skull, MI_para))\\n                                else:\\n                                    regcmd.append(\"MI[{0},{1},{2}]\".format(\\n                                        reference_brain, moving_brain, MI_para))\\n\\n                        if ants_para[para_index][para_type][trans_index][\\n                            trans_type][\\'metric\\'][\\'type\\'] == \\'CC\\':\\n                            if ants_para[para_index][para_type][trans_index][\\n                                trans_type][\\'metric\\'][\\n                                \\'metricWeight\\'] is None or \\\\\\n                                            ants_para[para_index][para_type][\\n                                                trans_index][trans_type][\\n                                                \\'metric\\'][\\'radius\\'] is None:\\n                                err_msg = \\'Please specifiy metricWeight and radius for metric CC of ANTs parameters in pipeline config.\\'\\n                                raise Exception(err_msg)\\n                            else:\\n                                CC_para = []\\n                                CC_para.append(\"{0},{1}\".format(\\n                                    ants_para[para_index][para_type][\\n                                        trans_index][trans_type][\\'metric\\']\\n                                    [\\'metricWeight\\'],\\n                                    ants_para[para_index][para_type][\\n                                        trans_index][trans_type][\\'metric\\'][\\n                                        \\'radius\\']))\\n                                if \\'samplingStrategy\\' in \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'metric\\'] and \\\\\\n                                                ants_para[para_index][\\n                                                    para_type][trans_index][\\n                                                    trans_type][\\'metric\\'][\\n                                                    \\'samplingStrategy\\'] in [\\n                                            \\'None\\', \\'Regular\\', \\'Random\\']:\\n                                    CC_para.append(\"{0}\".format(\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'metric\\'][\\'samplingStrategy\\']))\\n                                if \\'samplingPercentage\\' in \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'metric\\'] and \\\\\\n                                                ants_para[para_index][\\n                                                    para_type][trans_index][\\n                                                    trans_type][\\'metric\\'][\\n                                                    \\'samplingPercentage\\'] is not None:\\n                                    CC_para.append(\"{0}\".format(\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'metric\\'][\\'samplingPercentage\\']))\\n                                CC_para = \\',\\'.join(\\n                                    [str(elem) for elem in CC_para])\\n                                regcmd.append(\"--metric\")\\n                                regcmd.append(\"CC[{0},{1},{2}]\".format(\\n                                    reference_skull, moving_skull, CC_para))\\n\\n                        if \\'convergence\\' in \\\\\\n                                ants_para[para_index][para_type][trans_index][\\n                                    trans_type]:\\n                            convergence_para = []\\n                            if ants_para[para_index][para_type][trans_index][\\n                                trans_type][\\'convergence\\'][\\n                                \\'iteration\\'] is None:\\n                                err_msg = \\'Please specifiy convergence iteration of ANTs parameters in pipeline config.\\'\\n                                raise Exception(err_msg)\\n                            else:\\n                                convergence_para.append(\"{0}\".format(\\n                                    ants_para[para_index][para_type][\\n                                        trans_index][trans_type][\\n                                        \\'convergence\\'][\\'iteration\\']))\\n                                if \\'convergenceThreshold\\' in \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'convergence\\'] and \\\\\\n                                                ants_para[para_index][\\n                                                    para_type][trans_index][\\n                                                    trans_type][\\n                                                    \\'convergence\\'][\\n                                                    \\'convergenceThreshold\\'] is not None:\\n                                    convergence_para.append(\"{0}\".format(\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'convergence\\'][\\n                                            \\'convergenceThreshold\\']))\\n                                if \\'convergenceWindowSize\\' in \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'convergence\\'] and \\\\\\n                                                ants_para[para_index][\\n                                                    para_type][trans_index][\\n                                                    trans_type][\\n                                                    \\'convergence\\'][\\n                                                    \\'convergenceWindowSize\\'] is not None:\\n                                    convergence_para.append(\"{0}\".format(\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'convergence\\'][\\n                                            \\'convergenceWindowSize\\']))\\n                                convergence_para = \\',\\'.join(\\n                                    [str(elem) for elem in convergence_para])\\n                                regcmd.append(\"--convergence\")\\n                                regcmd.append(\\n                                    \"[{0}]\".format(convergence_para))\\n\\n                        if \\'smoothing-sigmas\\' in \\\\\\n                                ants_para[para_index][para_type][trans_index][\\n                                    trans_type] and \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'smoothing-sigmas\\'] is not None:\\n                            regcmd.append(\"--smoothing-sigmas\")\\n                            regcmd.append(\"{0}\".format(\\n                                ants_para[para_index][para_type][trans_index][\\n                                    trans_type][\\'smoothing-sigmas\\']))\\n\\n                        if \\'shrink-factors\\' in \\\\\\n                                ants_para[para_index][para_type][trans_index][\\n                                    trans_type] and \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'shrink-factors\\'] is not None:\\n                            regcmd.append(\"--shrink-factors\")\\n                            regcmd.append(\"{0}\".format(\\n                                ants_para[para_index][para_type][trans_index][\\n                                    trans_type][\\'shrink-factors\\']))\\n\\n                        if \\'use-histogram-matching\\' in \\\\\\n                                ants_para[para_index][para_type][trans_index][\\n                                    trans_type]:\\n                            if ants_para[para_index][para_type][trans_index][\\n                                trans_type][\\'use-histogram-matching\\']:\\n                                regcmd.append(\"--use-histogram-matching\")\\n                                regcmd.append(\"1\")\\n\\n                        if \\'winsorize-image-intensities\\' in \\\\\\n                                ants_para[para_index][para_type][trans_index][\\n                                    trans_type] and \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'winsorize-image-intensities\\'][\\n                                            \\'lowerQuantile\\'] is not None and \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'winsorize-image-intensities\\'][\\n                                            \\'upperQuantile\\'] is not None:\\n                            regcmd.append(\"--winsorize-image-intensities\")\\n                            regcmd.append(\"[{0},{1}]\".format(\\n                                ants_para[para_index][para_type][trans_index][\\n                                    trans_type][\\'winsorize-image-intensities\\']\\n                                [\\'lowerQuantile\\'],\\n                                ants_para[para_index][para_type][trans_index][\\n                                    trans_type][\\n                                    \\'winsorize-image-intensities\\'][\\n                                    \\'upperQuantile\\']))\\n\\n                        if \\'masks\\' in ants_para[para_index][para_type][trans_index][\\n                            trans_type] and ants_para[para_index][para_type][\\n                                trans_index][trans_type][\\'masks\\'] is not None:\\n                            if ants_para[para_index][para_type][trans_index][trans_type][\\'masks\\']:\\n                                regcmd.append(\"--masks\")\\n                                regcmd.append(\"[{0},{1}]\".format(reference_mask, moving_mask))\\n                            else:\\n                                regcmd.append(\"--masks\")\\n                                regcmd.append(\"[NULL,NULL]\")\\n\\n            elif para_type == \\'masks\\':\\n                # lesion preproc has\\n                if fixed_image_mask is not None:\\n                    regcmd.append(\"--masks\")\\n                    regcmd.append(str(fixed_image_mask))\\n                else:\\n                    if ants_para[para_index][para_type][\\n                        \\'fixed_image_mask\\'] == False and \\\\\\n                                    ants_para[para_index][para_type][\\n                                        \\'moving_image_mask\\'] == True:\\n                        err_msg = \\'Masks option in ANTs parameters: %d is not supported. \\' \\\\\\n                                  \\'Please set `fixed_image_mask` as True. \\' \\\\\\n                                  \\'Or set both `fixed_image_mask` and `moving_image_mask` as False\\' % \\\\\\n                                  ants_para[para_index][para_type]\\n                        raise Exception(err_msg)\\n                    elif ants_para[para_index][para_type][\\n                        \\'fixed_image_mask\\'] == True and \\\\\\n                                    ants_para[para_index][para_type][\\n                                        \\'moving_image_mask\\'] == True:\\n                        regcmd.append(\"--masks\")\\n                        regcmd.append(\\'[\\' + str(reference_mask) + \\',\\' + str(\\n                            moving_mask) + \\']\\')\\n                    elif ants_para[para_index][para_type][\\n                        \\'fixed_image_mask\\'] == True and \\\\\\n                                    ants_para[para_index][para_type][\\n                                        \\'moving_image_mask\\'] == False:\\n                        regcmd.append(\"--masks\")\\n                        regcmd.append(\\'[\\' + str(reference_mask) + \\']\\')\\n                    else:\\n                        continue\\n\\n    if interp is not None:\\n        regcmd.append(\"--interpolation\")\\n        regcmd.append(\"{0}\".format(interp))\\n\\n    regcmd.append(\"--output\")\\n    regcmd.append(\"[transform,transform_Warped.nii.gz]\")\\n\\n    # write out the actual command-line entry for testing/validation later\\n    command_file = os.path.join(os.getcwd(), \\'command.txt\\')\\n    with open(command_file, \\'wt\\') as f:\\n        f.write(\\' \\'.join(regcmd))\\n\\n    try:\\n        retcode = subprocess.check_output(regcmd)\\n    except Exception as e:\\n        raise Exception(\\'[!] ANTS registration did not complete successfully.\\'\\n                        \\'\\\\n\\\\nError details:\\\\n{0}\\\\n{1}\\\\n\\'.format(e, e.output))\\n\\n    warp_list = []\\n    warped_image = None\\n\\n    files = [f for f in os.listdir(\\'.\\') if os.path.isfile(f)]\\n\\n    for f in files:\\n        if (\"transform\" in f) and (\"Warped\" not in f):\\n            warp_list.append(os.getcwd() + \"/\" + f)\\n        if \"Warped\" in f:\\n            warped_image = os.getcwd() + \"/\" + f\\n\\n    if not warped_image:\\n        raise Exception(\"\\\\n\\\\n[!] No registration output file found. ANTS \"\\n                        \"registration may not have completed \"\\n                        \"successfully.\\\\n\\\\n\")\\n\\n    return warp_list, warped_image\\n', 'reg_with_skull': '[Undefined]'}, 'select_forward_initial': {'function_str': \"def seperate_warps_list(warp_list, selection):\\n    selected_warp = None\\n    for warp in warp_list:\\n        if selection == 'Warp':\\n            if '3Warp' in warp or '2Warp' in warp or '1Warp' in warp:\\n                selected_warp = warp\\n        else:\\n            if selection in warp:\\n                selected_warp = warp\\n    return selected_warp\\n\", 'selection': 'Initial'}, 'select_forward_rigid': {'function_str': \"def seperate_warps_list(warp_list, selection):\\n    selected_warp = None\\n    for warp in warp_list:\\n        if selection == 'Warp':\\n            if '3Warp' in warp or '2Warp' in warp or '1Warp' in warp:\\n                selected_warp = warp\\n        else:\\n            if selection in warp:\\n                selected_warp = warp\\n    return selected_warp\\n\", 'selection': 'Rigid'}, 'select_forward_affine': {'function_str': \"def seperate_warps_list(warp_list, selection):\\n    selected_warp = None\\n    for warp in warp_list:\\n        if selection == 'Warp':\\n            if '3Warp' in warp or '2Warp' in warp or '1Warp' in warp:\\n                selected_warp = warp\\n        else:\\n            if selection in warp:\\n                selected_warp = warp\\n    return selected_warp\\n\", 'selection': 'Affine'}, 'select_forward_warp': {'function_str': \"def seperate_warps_list(warp_list, selection):\\n    selected_warp = None\\n    for warp in warp_list:\\n        if selection == 'Warp':\\n            if '3Warp' in warp or '2Warp' in warp or '1Warp' in warp:\\n                selected_warp = warp\\n        else:\\n            if selection in warp:\\n                selected_warp = warp\\n    return selected_warp\\n\", 'selection': 'Warp'}, 'select_inverse_warp': {'function_str': \"def seperate_warps_list(warp_list, selection):\\n    selected_warp = None\\n    for warp in warp_list:\\n        if selection == 'Warp':\\n            if '3Warp' in warp or '2Warp' in warp or '1Warp' in warp:\\n                selected_warp = warp\\n        else:\\n            if selection in warp:\\n                selected_warp = warp\\n    return selected_warp\\n\", 'selection': 'Inverse'}, 'outputspec': {'composite_transform': '[Undefined]', 'wait': '[Undefined]'}}, 'write_composite_linear_xfm': {'args': '[Undefined]', 'default_value': 0.0, 'dimension': 3, 'environ': {'NSLOTS': '1'}, 'float': False, 'input_image_type': 0, 'interpolation_parameters': '[Undefined]', 'invert_transform_flags': '[Undefined]', 'num_threads': 1, 'out_postfix': '_trans', 'output_image': 'from-T1w_to-template_mode-image_desc-linear_xfm.nii.gz', 'print_out_composite_warp_file': True}, 'collect_transforms': {'axis': 'vstack', 'no_flatten': False, 'ravel_inputs': False}, 'check_transforms': {'function_str': 'def check_transforms(transform_list):\\n    transform_number = list(filter(None, transform_list))\\n    return [(transform_number[index]) for index in\\n            range(len(transform_number))], len(transform_number)\\n'}, 'write_composite_invlinear_xfm': {'args': '[Undefined]', 'default_value': 0.0, 'dimension': 3, 'environ': {'NSLOTS': '1'}, 'float': False, 'input_image_type': 0, 'interpolation_parameters': '[Undefined]', 'num_threads': 1, 'out_postfix': '_trans', 'output_image': 'from-template_to-T1w_mode-image_desc-linear_xfm.nii.gz', 'print_out_composite_warp_file': True}, 'collect_inv_transforms': {'axis': 'vstack', 'no_flatten': False, 'ravel_inputs': False}, 'check_inv_transforms': {'function_str': 'def check_transforms(transform_list):\\n    transform_number = list(filter(None, transform_list))\\n    return [(transform_number[index]) for index in\\n            range(len(transform_number))], len(transform_number)\\n'}, 'inverse_transform_flags': {'function_str': \"def generate_inverse_transform_flags(transform_list):\\n    inverse_transform_flags = []\\n    for transform in transform_list:\\n        # check `blip_warp_inverse` file name and rename it\\n        if 'WARPINV' in transform:\\n            inverse_transform_flags.append(False)\\n        if 'updated_affine' in transform:\\n            inverse_transform_flags.append(True)\\n        if 'Initial' in transform:\\n            inverse_transform_flags.append(True)\\n        if 'Rigid' in transform:\\n            inverse_transform_flags.append(True)\\n        if 'Affine' in transform:\\n            inverse_transform_flags.append(True)\\n        if 'InverseWarp' in transform:\\n            inverse_transform_flags.append(False)\\n    return inverse_transform_flags\\n\"}, 'write_composite_xfm': {'args': '[Undefined]', 'default_value': 0.0, 'dimension': 3, 'environ': {'NSLOTS': '1'}, 'float': False, 'input_image_type': 0, 'interpolation_parameters': '[Undefined]', 'invert_transform_flags': '[Undefined]', 'num_threads': 1, 'out_postfix': '_trans', 'output_image': 'from-T1w_to-template_mode-image_xfm.nii.gz', 'print_out_composite_warp_file': True}, 'collect_all_transforms': {'axis': 'vstack', 'no_flatten': False, 'ravel_inputs': False}, 'check_all_transforms': {'function_str': 'def check_transforms(transform_list):\\n    transform_number = list(filter(None, transform_list))\\n    return [(transform_number[index]) for index in\\n            range(len(transform_number))], len(transform_number)\\n'}, 'write_composite_inv_xfm': {'args': '[Undefined]', 'default_value': 0.0, 'dimension': 3, 'environ': {'NSLOTS': '1'}, 'float': False, 'input_image_type': 0, 'interpolation_parameters': '[Undefined]', 'num_threads': 1, 'out_postfix': '_trans', 'output_image': 'from-template_to-T1w_mode-image_xfm.nii.gz', 'print_out_composite_warp_file': True}, 'collect_all_inv_transforms': {'axis': 'vstack', 'no_flatten': False, 'ravel_inputs': False}, 'check_all_inv_transforms': {'function_str': 'def check_transforms(transform_list):\\n    transform_number = list(filter(None, transform_list))\\n    return [(transform_number[index]) for index in\\n            range(len(transform_number))], len(transform_number)\\n'}, 'inverse_all_transform_flags': {'function_str': \"def generate_inverse_transform_flags(transform_list):\\n    inverse_transform_flags = []\\n    for transform in transform_list:\\n        # check `blip_warp_inverse` file name and rename it\\n        if 'WARPINV' in transform:\\n            inverse_transform_flags.append(False)\\n        if 'updated_affine' in transform:\\n            inverse_transform_flags.append(True)\\n        if 'Initial' in transform:\\n            inverse_transform_flags.append(True)\\n        if 'Rigid' in transform:\\n            inverse_transform_flags.append(True)\\n        if 'Affine' in transform:\\n            inverse_transform_flags.append(True)\\n        if 'InverseWarp' in transform:\\n            inverse_transform_flags.append(False)\\n    return inverse_transform_flags\\n\"}}",
			"resampled_T1w-brain-template-mask": "{'function_str': 'CPAC.utils.datasource.resolve_resolution', 'resolution': '2mm', 'tag': 'resolution_for_anat', 'template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask.nii.gz', 'template_name': 'T1w-brain-template-mask'}",
			"warp_wholehead_T1w_to_T1template_83": "{'inputspec': {'input_image': '[Undefined]', 'interpolation': 'LanczosWindowedSinc', 'reference': '[Undefined]', 'transform': '[Undefined]'}, 'apply_warp_warp_wholehead_T1w_to_T1template_83': {'args': '[Undefined]', 'default_value': 0.0, 'dimension': 3, 'environ': {'NSLOTS': '1'}, 'float': False, 'input_image_type': '[Undefined]', 'interpolation_parameters': '[Undefined]', 'invert_transform_flags': '[Undefined]', 'num_threads': 1, 'out_postfix': '_trans', 'output_image': '[Undefined]', 'print_out_composite_warp_file': '[Undefined]'}, 'interp_string': {'function_str': \"def interpolation_string(interpolation, reg_tool):\\n    if reg_tool == 'ants':\\n        pass\\n    elif reg_tool == 'fsl':\\n        # translate to FSL\\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\\n        #          in C-PAC are now converted to .nii.gz\\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\\n    return interpolation\\n\", 'reg_tool': 'ants'}, 'single_ants_xfm_to_list': {'function_str': 'def single_ants_xfm_to_list(transform):\\n    transform_list = [transform]\\n    return transform_list\\n'}, 'outputspec': {}}",
			"write_composite_xfm": "{'args': '[Undefined]', 'default_value': 0.0, 'dimension': 3, 'environ': {'NSLOTS': '1'}, 'float': False, 'input_image': '[Undefined]', 'input_image_type': 0, 'interpolation': 'LanczosWindowedSinc', 'interpolation_parameters': '[Undefined]', 'invert_transform_flags': '[Undefined]', 'num_threads': 1, 'out_postfix': '_trans', 'output_image': 'from-bold_to-template_mode-image_xfm.nii.gz', 'print_out_composite_warp_file': True, 'reference_image': '[Undefined]', 'transforms': '[Undefined]'}",
			"warp_T1mask_to_T1template_87": "{'inputspec': {'input_image': '[Undefined]', 'interpolation': 'NearestNeighbor', 'reference': '[Undefined]', 'transform': '[Undefined]'}, 'apply_warp_warp_T1mask_to_T1template_87': {'args': '[Undefined]', 'default_value': 0.0, 'dimension': 3, 'environ': {'NSLOTS': '1'}, 'float': False, 'input_image_type': '[Undefined]', 'interpolation_parameters': '[Undefined]', 'invert_transform_flags': '[Undefined]', 'num_threads': 1, 'out_postfix': '_trans', 'output_image': '[Undefined]', 'print_out_composite_warp_file': '[Undefined]'}, 'interp_string': {'function_str': \"def interpolation_string(interpolation, reg_tool):\\n    if reg_tool == 'ants':\\n        pass\\n    elif reg_tool == 'fsl':\\n        # translate to FSL\\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\\n        #          in C-PAC are now converted to .nii.gz\\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\\n    return interpolation\\n\", 'reg_tool': 'ants'}, 'single_ants_xfm_to_list': {'function_str': 'def single_ants_xfm_to_list(transform):\\n    transform_list = [transform]\\n    return transform_list\\n'}, 'outputspec': {}}",
			"seg_preproc_ants_prior_91": "{'inputspec': {'anatomical_brain': '[Undefined]', 'anatomical_brain_mask': '[Undefined]', 'csf_label': [24], 'gm_label': [3, 42], 'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'wm_label': [2, 41]}, 'seg_preproc_ants_prior_91_antsJointLabel': {'function_str': 'def hardcoded_antsJointLabelFusion(anatomical_brain, anatomical_brain_mask,\\n                                   template_brain_list,\\n                                   template_segmentation_list):\\n    \"\"\"run antsJointLabelFusion.sh\\n\\n    Parameters\\n    ----------\\n\\n    anatomical_brain : string (nifti file)\\n        Target image to be labeled.\\n\\n    anatomical_brain_mask : string (nifti file)\\n        Target mask image\\n\\n    template_brain_list : list\\n        Atlas to be warped to target image.\\n\\n    template_segmentation_list : list\\n        Labels corresponding to atlas.\\n\\n    Returns\\n    -------\\n\\n    multiatlas_Intensity : string (nifti file)\\n\\n    multiatlas_Labels : string (nifti file)\\n    \"\"\"\\n    import os\\n    import subprocess\\n\\n    cmd = [\"${ANTSPATH}${ANTSPATH:+/}antsJointLabelFusion.sh\"]\\n    cmd.append(\\n        \" -d 3 -o ants_multiatlas_ -t {0} -x {1} -y b -c 0\".format(\\n            anatomical_brain, anatomical_brain_mask))\\n\\n    if (not len(template_brain_list) == len(template_segmentation_list)):\\n        err_msg = \\'\\\\n\\\\n[!] C-PAC says: Please check ANTs Prior-based \\' \\\\\\n                  \\'Segmentation setting. For performing ANTs Prior-based \\' \\\\\\n                  \\'segmentation method the number of specified \\' \\\\\\n                  \\'segmentations should be identical to the number of atlas \\' \\\\\\n                  \\'image sets.\\\\n\\\\n\\'\\n        raise Exception(err_msg)\\n    else:\\n        for index in range(len(template_brain_list)):\\n            cmd.append(\\n                \" -g {0} -l {1}\".format(\\n                    template_brain_list[index],\\n                    template_segmentation_list[index]))\\n\\n    # write out the actual command-line entry for testing/validation later\\n    command_file = os.path.join(os.getcwd(), \\'command.txt\\')\\n    with open(command_file, \\'wt\\') as f:\\n        f.write(\\' \\'.join(cmd))\\n\\n    str = \"\"\\n    bash_cmd = str.join(cmd)\\n\\n    try:\\n        retcode = subprocess.check_output(bash_cmd, shell=True) \\\\\\n            # noqa: F841  # pylint: disable=unused-variable\\n    except Exception as e:  # pylint: disable=broad-except,invalid-name\\n        # pylint: disable=raise-missing-from\\n        raise Exception(\\'[!] antsJointLabel segmentation method did not \\'\\n                        \\'complete successfully.\\\\n\\\\nError \\'\\n                        \\'details:\\\\n{0}\\\\n{1}\\\\n\\'.format(\\n                            e,\\n                            getattr(e, \\'output\\', \\'\\')))\\n\\n    multiatlas_Intensity = None\\n    multiatlas_Labels = None\\n\\n    files = [f for f in os.listdir(\\'.\\') if os.path.isfile(f)]\\n\\n    for f in files:\\n        if \"Intensity\" in f:\\n            multiatlas_Intensity = os.getcwd() + \"/\" + f\\n        if \"Labels\" in f:\\n            multiatlas_Labels = os.getcwd() + \"/\" + f\\n\\n    if not multiatlas_Labels:\\n        raise Exception(\"\\\\n\\\\n[!] No multiatlas labels file found. \"\\n                        \"antsJointLabelFusion may not have completed \"\\n                        \"successfully.\\\\n\\\\n\")\\n\\n    return multiatlas_Intensity, multiatlas_Labels\\n'}, 'seg_preproc_ants_prior_91_tissue_mask': {'function_str': 'def pick_tissue_from_labels_file(multiatlas_Labels, csf_label=[4,14,15,24,43],\\n                                 gm_label=[3,42], wm_label=[2,41]):\\n    \"\"\"Pick tissue mask from multiatlas labels file\\n    based off of FreeSurferColorLUT https://surfer.nmr.mgh.harvard.edu/fswiki/FsTutorial/AnatomicalROI/FreeSurferColorLUT\\n    or user provided label value\\n\\n    Parameters\\n    ----------\\n    multiatlas_Labels : string (nifti file)\\n\\n    csf_label : list\\n        a list of integer label values corresponding to CSF in multiatlas file\\n\\n    gm_label : list\\n        a list of integer label value corresponding to Gray Matter in multiatlas file\\n\\n    wm_label : list\\n        a list of integer label value corresponding to White Matter in multiatlas file\\n\\n    Returns\\n    -------\\n    csf_mask : string (nifti file)\\n\\n    gm_mask : string (nifti file)\\n\\n    wm_mask : string (nifti file)\\n    \"\"\"\\n    # pylint: disable=import-outside-toplevel,redefined-outer-name,reimported\\n    import os\\n    import nibabel as nb\\n    import numpy as np\\n\\n    img = nb.load(multiatlas_Labels)\\n    data = img.get_fdata()\\n\\n    # pick tissue mask from multiatlas labels file\\n    # based off of FreeSurferColorLUT or user provided label values\\n    # hard-coded csf/gm/wm label values are based off of FreeSurferColorLUT\\n\\n    # FreeSurfer Ventricle Labels:\\n    # Left-Lateral-Ventricle 4, 3rd-Ventricle 14, 4th-Ventricle 15, Right-Lateral-Ventricle 43\\n\\n    csf = np.zeros(np.size(data))\\n    csf[np.where(np.in1d(data, np.array(csf_label)))] = 1\\n    csf = csf.reshape(data.shape)\\n\\n    gm = np.zeros(np.size(data))\\n    gm[np.where(np.in1d(data, np.array(gm_label)))] = 1\\n    gm = gm.reshape(data.shape)\\n\\n    wm = np.zeros(np.size(data))\\n    wm[np.where(np.in1d(data, np.array(wm_label)))] = 1\\n    wm = wm.reshape(data.shape)\\n\\n    save_img_csf = nb.Nifti1Image(csf, header=img.header, affine=img.affine)\\n    save_img_gm = nb.Nifti1Image(gm, header=img.header, affine=img.affine)\\n    save_img_wm = nb.Nifti1Image(wm, header=img.header, affine=img.affine)\\n\\n    save_img_csf.to_filename(\\'csf_mask.nii.gz\\')\\n    save_img_gm.to_filename(\\'gm_mask.nii.gz\\')\\n    save_img_wm.to_filename(\\'wm_mask.nii.gz\\')\\n\\n    csf_mask = os.path.join(os.getcwd(), \\'csf_mask.nii.gz\\')\\n    gm_mask = os.path.join(os.getcwd(), \\'gm_mask.nii.gz\\')\\n    wm_mask = os.path.join(os.getcwd(), \\'wm_mask.nii.gz\\')\\n\\n    return csf_mask, gm_mask, wm_mask\\n'}, 'outputspec': {}}",
			"func_deoblique_2": "{'args': '[Undefined]', 'atrcopy': '[Undefined]', 'atrfloat': '[Undefined]', 'atrint': '[Undefined]', 'atrstring': '[Undefined]', 'deoblique': True, 'duporigin_file': '[Undefined]', 'environ': {}, 'nosaveatr': '[Undefined]', 'saveatr': '[Undefined]', 'space': '[Undefined]', 'xdel': '[Undefined]', 'xorigin': '[Undefined]', 'xyzscale': '[Undefined]', 'ydel': '[Undefined]', 'yorigin': '[Undefined]', 'zdel': '[Undefined]', 'zorigin': '[Undefined]'}",
			"func_reorient_2": "{'args': '[Undefined]', 'environ': {}, 'master': '[Undefined]', 'num_threads': 1, 'orientation': 'RPI', 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'resample_mode': '[Undefined]', 'voxel_size': '[Undefined]'}",
			"edit_func_96": "{'inputspec': {'func': '[Undefined]', 'start_idx': 0, 'stop_idx': None}, 'func_get_idx': {'function_str': 'def get_idx(in_files, stop_idx=None, start_idx=None):\\n    \"\"\"\\n    Method to get the first and the last slice for\\n    the functional run. It verifies the user specified\\n    first and last slice. If the values are not valid, it\\n    calculates and returns the very first and the last slice\\n\\n    Parameters\\n    ----------\\n    in_file : str (nifti file)\\n       Path to input functional run\\n\\n    stop_idx : int\\n        Last volume to be considered, specified by user\\n        in the configuration file\\n\\n    stop_idx : int\\n        First volume to be considered, specified by user\\n        in the configuration file\\n\\n    Returns\\n    -------\\n    stop_idx :  int\\n        Value of first slice to consider for the functional run\\n\\n    start_idx : int\\n        Value of last slice to consider for the functional run\\n\\n    \"\"\"\\n\\n    # Import packages\\n    from nibabel import load\\n\\n    # Init variables\\n    img = load(in_files)\\n    hdr = img.header\\n    shape = hdr.get_data_shape()\\n\\n    # Check to make sure the input file is 4-dimensional\\n    if len(shape) != 4:\\n        raise TypeError(\\'Input nifti file: %s is not a 4D file\\' % in_files)\\n    # Grab the number of volumes\\n    nvols = int(hdr.get_data_shape()[3])\\n\\n    if (start_idx == None) or (int(start_idx) < 0) or (\\n        int(start_idx) > (nvols - 1)):\\n        startidx = 0\\n    else:\\n        startidx = int(start_idx)\\n\\n    if (stop_idx in [None, \"End\"]) or (int(stop_idx) > (nvols - 1)):\\n        stopidx = nvols - 1\\n    else:\\n        stopidx = int(stop_idx)\\n\\n    return stopidx, startidx\\n'}, 'func_drop_trs': {'args': '[Undefined]', 'environ': {}, 'expr': 'a', 'in_file_b': '[Undefined]', 'in_file_c': '[Undefined]', 'num_threads': 1, 'other': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'overwrite': '[Undefined]', 'single_idx': '[Undefined]'}, 'outputspec': {}}",
			"func_despiked_98": "{'args': '[Undefined]', 'environ': {}, 'num_threads': 1, 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ'}",
			"func_slice_timing_correction_100": "{'inputspec': {'func_ts': '[Undefined]', 'tpattern': '[Undefined]', 'tr': '[Undefined]'}, 'slice_timing': {'args': '[Undefined]', 'environ': {}, 'ignore': '[Undefined]', 'interp': '[Undefined]', 'num_threads': 1, 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'rlt': '[Undefined]', 'rltplus': '[Undefined]', 'slice_encoding_direction': 'k', 'slice_timing': '[Undefined]', 'tslice': '[Undefined]', 'tzero': '[Undefined]'}, 'outputspec': {}}",
			"func_mean_103": "{'args': '[Undefined]', 'environ': {}, 'mask': '[Undefined]', 'num_threads': 1, 'options': '-mean', 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ'}",
			"func_get_mean_RPI_106": "{'args': '[Undefined]', 'environ': {}, 'mask': '[Undefined]', 'num_threads': 1, 'options': '-mean', 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ'}",
			"out_split_func_109": "{}",
			"func_generate_ref_109": "{'args': '-twopass -Fourier', 'basefile': '[Undefined]', 'copyorigin': '[Undefined]', 'environ': {}, 'in_weight_volume': '[Undefined]', 'interp': '[Undefined]', 'md1d_file': '[Undefined]', 'num_threads': 1, 'oned_file': '[Undefined]', 'oned_matrix_save': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'timeshift': '[Undefined]', 'verbose': '[Undefined]', 'zpad': 4}",
			"out_motion_109": "{}",
			"func_motion_correct_3dvolreg_109": "{'args': '-twopass -Fourier', 'copyorigin': '[Undefined]', 'environ': {}, 'in_weight_volume': '[Undefined]', 'interp': '[Undefined]', 'md1d_file': 'max_displacement.1D', 'num_threads': 1, 'oned_file': '[Undefined]', 'oned_matrix_save': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'timeshift': '[Undefined]', 'verbose': '[Undefined]', 'zpad': 4}",
			"out_motion_A_109": "{}",
			"out_md1d_109": "{}",
			"out_oned_109": "{}",
			"out_oned_matrix_109": "{}",
			"anat_brain_mask_bin_117": "{'args': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'in_file2': '[Undefined]', 'mask_file': '[Undefined]', 'op_string': '-bin', 'out_data_type': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'suffix': '[Undefined]'}",
			"anat_brain_mask_filled_117": "{'args': '[Undefined]', 'count': '[Undefined]', 'datum': '[Undefined]', 'dilate_inputs': '[Undefined]', 'dilate_results': '[Undefined]', 'environ': {}, 'fill_dirs': '[Undefined]', 'fill_holes': True, 'frac': '[Undefined]', 'inter': '[Undefined]', 'num_threads': 1, 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'union': '[Undefined]', 'verbose': '[Undefined]'}",
			"raw_func_deoblique_117": "{'args': '[Undefined]', 'atrcopy': '[Undefined]', 'atrfloat': '[Undefined]', 'atrint': '[Undefined]', 'atrstring': '[Undefined]', 'deoblique': True, 'duporigin_file': '[Undefined]', 'environ': {}, 'nosaveatr': '[Undefined]', 'saveatr': '[Undefined]', 'space': '[Undefined]', 'xdel': '[Undefined]', 'xorigin': '[Undefined]', 'xyzscale': '[Undefined]', 'ydel': '[Undefined]', 'yorigin': '[Undefined]', 'zdel': '[Undefined]', 'zorigin': '[Undefined]'}",
			"raw_func_reorient_117": "{'args': '[Undefined]', 'environ': {}, 'master': '[Undefined]', 'num_threads': 1, 'orientation': 'RPI', 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'resample_mode': '[Undefined]', 'voxel_size': '[Undefined]'}",
			"init_bold_mask_117": "{'inputspec': {'anat_brain': '[Undefined]', 'anatomical_brain_mask': '[Undefined]', 'func': '[Undefined]', 'init_func_brain_mask': '[Undefined]'}, 'func_single_volume': {'args': '[Undefined]', 'environ': {}, 'expr': 'a', 'in_file_b': '[Undefined]', 'in_file_c': '[Undefined]', 'num_threads': 1, 'other': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'overwrite': '[Undefined]', 'single_idx': 1, 'start_idx': '[Undefined]', 'stop_idx': '[Undefined]'}, 'func_tmp_brain': {'args': '[Undefined]', 'environ': {}, 'expr': 'a*b', 'in_file_c': '[Undefined]', 'num_threads': 1, 'other': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'overwrite': '[Undefined]', 'single_idx': '[Undefined]', 'start_idx': '[Undefined]', 'stop_idx': '[Undefined]'}, 'func_single_volume_n4_corrected': {'args': '-r True', 'bias_image': '[Undefined]', 'bspline_fitting_distance': 200.0, 'bspline_order': '[Undefined]', 'convergence_threshold': '[Undefined]', 'copy_header': True, 'dimension': 3, 'environ': {'NSLOTS': '1'}, 'histogram_sharpening': '[Undefined]', 'mask_image': '[Undefined]', 'n_iterations': '[Undefined]', 'num_threads': 1, 'output_image': '[Undefined]', 'rescale_intensities': False, 'save_bias': False, 'shrink_factor': '[Undefined]', 'weight_image': '[Undefined]'}, 'func_tmp_brain_mask_pre': {'args': '[Undefined]', 'center': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'frac': '[Undefined]', 'functional': '[Undefined]', 'mask': True, 'mesh': '[Undefined]', 'no_output': '[Undefined]', 'out_file': '[Undefined]', 'outline': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding': '[Undefined]', 'radius': '[Undefined]', 'reduce_bias': '[Undefined]', 'remove_eyes': '[Undefined]', 'robust': '[Undefined]', 'skull': '[Undefined]', 'surfaces': '[Undefined]', 't2_guided': '[Undefined]', 'threshold': '[Undefined]', 'vertical_gradient': '[Undefined]'}, 'func_tmp_brain_mask_dil': {'args': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'in_file2': '[Undefined]', 'mask_file': '[Undefined]', 'op_string': '-dilM', 'out_data_type': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'suffix': '[Undefined]'}, 'func_to_anat_linear_reg': {'angle_rep': '[Undefined]', 'apply_isoxfm': '[Undefined]', 'apply_xfm': '[Undefined]', 'args': '[Undefined]', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': '[Undefined]', 'coarse_search': '[Undefined]', 'cost': 'mutualinfo', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'dof': 6, 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_matrix_file': '[Undefined]', 'in_weight': '[Undefined]', 'interp': '[Undefined]', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': '[Undefined]', 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'schedule': '[Undefined]', 'searchr_x': '[Undefined]', 'searchr_y': '[Undefined]', 'searchr_z': '[Undefined]', 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}, 'inv_func2anat_affine': {'args': '[Undefined]', 'concat_xfm': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fix_scale_skew': '[Undefined]', 'in_file2': '[Undefined]', 'invert_xfm': True, 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ'}, 'reg_anat_mask_to_func': {'angle_rep': '[Undefined]', 'apply_isoxfm': '[Undefined]', 'apply_xfm': True, 'args': '[Undefined]', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': '[Undefined]', 'coarse_search': '[Undefined]', 'cost': 'mutualinfo', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'dof': 6, 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_weight': '[Undefined]', 'interp': 'nearestneighbour', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': '[Undefined]', 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'schedule': '[Undefined]', 'searchr_x': '[Undefined]', 'searchr_y': '[Undefined]', 'searchr_z': '[Undefined]', 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}, 'func_mask': {'args': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'internal_datatype': '[Undefined]', 'nan2zeros': '[Undefined]', 'op_string': '-mul %s', 'out_file': '[Undefined]', 'output_datatype': '[Undefined]', 'output_type': 'NIFTI_GZ'}, 'outputspec': {}}",
			"func_tmp_brain_mask_dil_117": "{'args': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'in_file2': '[Undefined]', 'mask_file': '[Undefined]', 'op_string': '-dilM', 'out_data_type': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'suffix': '[Undefined]'}",
			"refined_bold_mask_117": "{'inputspec': {'anat_brain': '[Undefined]', 'anatomical_brain_mask': '[Undefined]', 'func': '[Undefined]', 'init_func_brain_mask': '[Undefined]'}, 'func_single_volume': {'args': '[Undefined]', 'environ': {}, 'expr': 'a', 'in_file_b': '[Undefined]', 'in_file_c': '[Undefined]', 'num_threads': 1, 'other': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'overwrite': '[Undefined]', 'single_idx': 1, 'start_idx': '[Undefined]', 'stop_idx': '[Undefined]'}, 'func_tmp_brain': {'args': '[Undefined]', 'environ': {}, 'expr': 'a*b', 'in_file_c': '[Undefined]', 'num_threads': 1, 'other': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'overwrite': '[Undefined]', 'single_idx': '[Undefined]', 'start_idx': '[Undefined]', 'stop_idx': '[Undefined]'}, 'func_to_anat_linear_reg': {'angle_rep': '[Undefined]', 'apply_isoxfm': '[Undefined]', 'apply_xfm': '[Undefined]', 'args': '[Undefined]', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': '[Undefined]', 'coarse_search': '[Undefined]', 'cost': 'mutualinfo', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'dof': 6, 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_matrix_file': '[Undefined]', 'in_weight': '[Undefined]', 'interp': '[Undefined]', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': '[Undefined]', 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'schedule': '[Undefined]', 'searchr_x': '[Undefined]', 'searchr_y': '[Undefined]', 'searchr_z': '[Undefined]', 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}, 'inv_func2anat_affine': {'args': '[Undefined]', 'concat_xfm': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fix_scale_skew': '[Undefined]', 'in_file2': '[Undefined]', 'invert_xfm': True, 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ'}, 'reg_anat_mask_to_func': {'angle_rep': '[Undefined]', 'apply_isoxfm': '[Undefined]', 'apply_xfm': True, 'args': '[Undefined]', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': '[Undefined]', 'coarse_search': '[Undefined]', 'cost': 'mutualinfo', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'dof': 6, 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_weight': '[Undefined]', 'interp': 'nearestneighbour', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': '[Undefined]', 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'schedule': '[Undefined]', 'searchr_x': '[Undefined]', 'searchr_y': '[Undefined]', 'searchr_z': '[Undefined]', 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}, 'func_mask': {'args': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'internal_datatype': '[Undefined]', 'nan2zeros': '[Undefined]', 'op_string': '-mul %s', 'out_file': '[Undefined]', 'output_datatype': '[Undefined]', 'output_type': 'NIFTI_GZ'}, 'outputspec': {}}",
			"func_mask_final_117": "{'args': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'internal_datatype': '[Undefined]', 'nan2zeros': '[Undefined]', 'op_string': '-mul %s', 'out_file': '[Undefined]', 'output_datatype': '[Undefined]', 'output_type': 'NIFTI_GZ'}",
			"func_extract_brain_122": "{'args': '[Undefined]', 'environ': {}, 'expr': 'a*b', 'in_file_c': '[Undefined]', 'num_threads': 1, 'other': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'overwrite': '[Undefined]', 'single_idx': '[Undefined]', 'start_idx': '[Undefined]', 'stop_idx': '[Undefined]'}",
			"gen_motion_stats_126": "{'inputspec': {'mask': '[Undefined]', 'max_displacement': '[Undefined]', 'motion_correct': '[Undefined]', 'movement_parameters': '[Undefined]', 'rels_displacement': '[Undefined]', 'transformations': '[Undefined]'}, 'cal_DVARS': {'args': '[Undefined]', 'environ': {}, 'method': 'dvars', 'num_threads': 1, 'out_file': '[Undefined]', 'outputtype': 'AFNI'}, 'cal_DVARS_strip': {'function_str': 'CPAC.generate_motion_statistics.generate_motion_statistics.DVARS_strip_t0'}, 'outputspec': {}, 'calculate_FD': {'function_str': 'CPAC.generate_motion_statistics.generate_motion_statistics.calculate_FD_P'}, 'calculate_FDJ': {'calc_from': 'affine', 'center': '[Undefined]', 'function_str': 'CPAC.generate_motion_statistics.generate_motion_statistics.calculate_FD_J'}, 'get_all_motion_parameters': {'function_str': 'CPAC.generate_motion_statistics.generate_motion_statistics.get_allmotion'}, 'calc_motion_parameters': {'function_str': 'CPAC.generate_motion_statistics.generate_motion_statistics.gen_motion_parameters', 'motion_correct_tool': '3dvolreg'}, 'calc_power_parameters': {'function_str': 'CPAC.generate_motion_statistics.generate_motion_statistics.gen_power_parameters', 'motion_correct_tool': '3dvolreg'}}",
			"func_normalize_124": "{'args': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'in_file2': '[Undefined]', 'mask_file': '[Undefined]', 'op_string': '-ing 10000', 'out_data_type': 'float', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'suffix': '[Undefined]'}",
			"func_mean_n4_corrected_105": "{'args': '-r True', 'bias_image': '[Undefined]', 'bspline_fitting_distance': 200.0, 'bspline_order': '[Undefined]', 'convergence_threshold': '[Undefined]', 'copy_header': True, 'dimension': 3, 'environ': {'NSLOTS': '1'}, 'histogram_sharpening': '[Undefined]', 'mask_image': '[Undefined]', 'n_iterations': '[Undefined]', 'num_threads': 1, 'output_image': '[Undefined]', 'rescale_intensities': False, 'save_bias': False, 'shrink_factor': '[Undefined]', 'weight_image': '[Undefined]'}",
			"func_to_anat_FLIRT_143": "{'inputspec': {'anat': '[Undefined]', 'dof': 6, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'func': '[Undefined]', 'interp': 'spline'}, 'linear_func_to_anat': {'angle_rep': '[Undefined]', 'apply_isoxfm': '[Undefined]', 'apply_xfm': '[Undefined]', 'args': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': '[Undefined]', 'coarse_search': '[Undefined]', 'cost': 'mutualinfo', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_matrix_file': '[Undefined]', 'in_weight': '[Undefined]', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': '[Undefined]', 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'schedule': '[Undefined]', 'searchr_x': '[Undefined]', 'searchr_y': '[Undefined]', 'searchr_z': '[Undefined]', 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}, 'outputspec': {}}",
			"create_func_to_T1wtemplate_xfm_152": "{'inputspec': {'T1w-brain-template_funcreg': '[Undefined]', 'T1w_to_template_xfm': '[Undefined]', 'blip_warp': '[Undefined]', 'coreg_xfm': '[Undefined]', 'input_brain': '[Undefined]', 'mean_bold': '[Undefined]', 'template_to_T1w_xfm': '[Undefined]'}, 'fsl_reg_2_itk': {'args': '[Undefined]', 'environ': {}, 'fsl2ras': True, 'itk_transform': True}, 'change_transform_type': {'function_str': 'def change_itk_transform_type(input_affine_file):\\n    \"\"\"\\n    this function takes in the affine.txt produced by the c3d_affine_tool\\n    (which converted an FSL FLIRT affine.mat into the affine.txt)\\n\\n    it then modifies the \\'Transform Type\\' of this affine.txt so that it is\\n    compatible with the antsApplyTransforms tool and produces a new affine\\n    file titled \\'updated_affine.txt\\'\\n    \"\"\"\\n\\n    new_file_lines = []\\n\\n    with open(input_affine_file) as f:\\n        for line in f:\\n            if \\'Transform:\\' in line:\\n                if \\'MatrixOffsetTransformBase_double_3_3\\' in line:\\n                    transform_line = \\'Transform: AffineTransform_double_3_3\\\\n\\'\\n                    new_file_lines.append(transform_line)\\n            else:\\n                new_file_lines.append(line)\\n\\n    updated_affine_file = os.path.join(os.getcwd(), \\'updated_affine.txt\\')\\n\\n    with open(updated_affine_file, \\'wt\\') as f:\\n        for line in new_file_lines:\\n            f.write(line)\\n\\n    return updated_affine_file\\n'}, 'write_composite_xfm': {'args': '[Undefined]', 'default_value': 0.0, 'dimension': 3, 'environ': {'NSLOTS': '1'}, 'float': False, 'input_image_type': 0, 'interpolation': 'LanczosWindowedSinc', 'interpolation_parameters': '[Undefined]', 'invert_transform_flags': '[Undefined]', 'num_threads': 1, 'out_postfix': '_trans', 'output_image': 'from-bold_to-template_mode-image_xfm.nii.gz', 'print_out_composite_warp_file': True}, 'collect_all_transforms': {'axis': 'vstack', 'no_flatten': False, 'ravel_inputs': False}, 'write_composite_inv_xfm': {'args': '[Undefined]', 'default_value': 0.0, 'dimension': 3, 'environ': {'NSLOTS': '1'}, 'float': False, 'input_image_type': 0, 'interpolation': 'LanczosWindowedSinc', 'interpolation_parameters': '[Undefined]', 'invert_transform_flags': [True, False], 'num_threads': 1, 'out_postfix': '_trans', 'output_image': 'from-template_to-bold_mode-image_xfm.nii.gz', 'print_out_composite_warp_file': True}, 'collect_inv_transforms': {'axis': 'vstack', 'no_flatten': False, 'ravel_inputs': False}}",
			"resampled_T1w-brain-template-funcreg": "{'function_str': 'CPAC.utils.datasource.resolve_resolution', 'resolution': '2mm', 'tag': 'func_preproc_outputs', 'template': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'template_name': 'T1w-brain-template-funcreg'}",
			"write_composite_inv_xfm": "{'args': '[Undefined]', 'default_value': 0.0, 'dimension': 3, 'environ': {'NSLOTS': '1'}, 'float': False, 'input_image': '[Undefined]', 'input_image_type': 0, 'interpolation': 'LanczosWindowedSinc', 'interpolation_parameters': '[Undefined]', 'invert_transform_flags': [True, False], 'num_threads': 1, 'out_postfix': '_trans', 'output_image': 'from-template_to-bold_mode-image_xfm.nii.gz', 'print_out_composite_warp_file': True, 'reference_image': '[Undefined]', 'transforms': '[Undefined]'}",
			"nuisance_regressors_Regressor_1_160": "{'inputspec': {'anat_to_func_linear_xfm_file_path': '[Undefined]', 'anat_to_mni_linear_xfm_file_path': '[Undefined]', 'anatomical_eroded_brain_mask_file_path': '[Undefined]', 'anatomical_file_path': '[Undefined]', 'creds_path': '[Undefined]', 'csf_mask_file_path': '[Undefined]', 'dl_dir': '[Undefined]', 'dvars_file_path': '[Undefined]', 'fd_j_file_path': '[Undefined]', 'fd_p_file_path': '[Undefined]', 'func_to_anat_linear_xfm_file_path': '[Undefined]', 'functional_brain_mask_file_path': '[Undefined]', 'functional_file_path': '[Undefined]', 'gm_mask_file_path': '[Undefined]', 'lat_ventricles_mask_file_path': '[Undefined]', 'mni_to_anat_linear_xfm_file_path': '[Undefined]', 'motion_parameters_file_path': '[Undefined]', 'selector': '[Undefined]', 'tr': '[Undefined]', 'wm_mask_file_path': '[Undefined]'}, 'functional_mean': {'args': '[Undefined]', 'environ': {}, 'mask': '[Undefined]', 'num_threads': 1, 'options': '-mean', 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ'}, 'WhiteMatter_Functional_flirt': {'angle_rep': '[Undefined]', 'apply_isoxfm': '[Undefined]', 'apply_xfm': True, 'args': '[Undefined]', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': '[Undefined]', 'coarse_search': '[Undefined]', 'cost': '[Undefined]', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'dof': '[Undefined]', 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_weight': '[Undefined]', 'interp': 'nearestneighbour', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': '[Undefined]', 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'schedule': '[Undefined]', 'searchr_x': '[Undefined]', 'searchr_y': '[Undefined]', 'searchr_z': '[Undefined]', 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}, 'WhiteMatter_merge_masks': {'axis': 'vstack', 'no_flatten': False, 'ravel_inputs': False}, 'WhiteMatter_union_masks': {'args': '[Undefined]', 'count': '[Undefined]', 'datum': '[Undefined]', 'dilate_inputs': '[Undefined]', 'dilate_results': '[Undefined]', 'environ': {}, 'fill_dirs': '[Undefined]', 'fill_holes': '[Undefined]', 'frac': '[Undefined]', 'inter': '[Undefined]', 'num_threads': 1, 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'union': '[Undefined]', 'verbose': '[Undefined]'}, 'WhiteMatter_std': {'args': '-nzstdev', 'environ': {}, 'num_threads': 1, 'options': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI'}, 'WhiteMatter_standardized': {'args': '[Undefined]', 'environ': {}, 'expr': 'a/b', 'in_file_c': '[Undefined]', 'num_threads': 1, 'other': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI', 'overwrite': '[Undefined]', 'single_idx': '[Undefined]', 'start_idx': '[Undefined]', 'stop_idx': '[Undefined]'}, 'WhiteMatter_pc': {'args': '-vmean -nscale', 'environ': {}, 'num_threads': 1, 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'pcs': 5, 'pcs_file': '[Undefined]'}, 'CerebrospinalFluid_Functional_flirt': {'angle_rep': '[Undefined]', 'apply_isoxfm': '[Undefined]', 'apply_xfm': True, 'args': '[Undefined]', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': '[Undefined]', 'coarse_search': '[Undefined]', 'cost': '[Undefined]', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'dof': '[Undefined]', 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_weight': '[Undefined]', 'interp': 'nearestneighbour', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': '[Undefined]', 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'schedule': '[Undefined]', 'searchr_x': '[Undefined]', 'searchr_y': '[Undefined]', 'searchr_z': '[Undefined]', 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}, 'CerebrospinalFluid_merge_masks': {'axis': 'vstack', 'no_flatten': False, 'ravel_inputs': False}, 'CerebrospinalFluid_union_masks': {'args': '[Undefined]', 'count': '[Undefined]', 'datum': '[Undefined]', 'dilate_inputs': '[Undefined]', 'dilate_results': '[Undefined]', 'environ': {}, 'fill_dirs': '[Undefined]', 'fill_holes': '[Undefined]', 'frac': '[Undefined]', 'inter': '[Undefined]', 'num_threads': 1, 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'union': '[Undefined]', 'verbose': '[Undefined]'}, 'CerebrospinalFluid_std': {'args': '-nzstdev', 'environ': {}, 'num_threads': 1, 'options': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI'}, 'CerebrospinalFluid_standardized': {'args': '[Undefined]', 'environ': {}, 'expr': 'a/b', 'in_file_c': '[Undefined]', 'num_threads': 1, 'other': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI', 'overwrite': '[Undefined]', 'single_idx': '[Undefined]', 'start_idx': '[Undefined]', 'stop_idx': '[Undefined]'}, 'CerebrospinalFluid_pc': {'args': '-vmean -nscale', 'environ': {}, 'num_threads': 1, 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'pcs': 5, 'pcs_file': '[Undefined]'}, 'GlobalSignal_merge_masks': {'axis': 'vstack', 'no_flatten': False, 'ravel_inputs': False}, 'GlobalSignal_union_masks': {'args': '[Undefined]', 'count': '[Undefined]', 'datum': '[Undefined]', 'dilate_inputs': '[Undefined]', 'dilate_results': '[Undefined]', 'environ': {}, 'fill_dirs': '[Undefined]', 'fill_holes': '[Undefined]', 'frac': '[Undefined]', 'inter': '[Undefined]', 'num_threads': 1, 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'union': '[Undefined]', 'verbose': '[Undefined]'}, 'GlobalSignal_mean': {'args': '-1Dformat', 'debug': '[Undefined]', 'environ': {}, 'format1D': '[Undefined]', 'format1DR': '[Undefined]', 'mask': '[Undefined]', 'mask_f2short': '[Undefined]', 'nobriklab': '[Undefined]', 'nomeanout': '[Undefined]', 'num_roi': '[Undefined]', 'out_file': '[Undefined]', 'quiet': False, 'roisel': '[Undefined]', 'stat': '[Undefined]', 'zerofill': '[Undefined]'}, 'build_nuisance_regressors': {'acompcor_file_path': '[Undefined]', 'censor_file_path': '[Undefined]', 'custom_file_paths': '[Undefined]', 'function_str': 'CPAC.nuisance.nuisance.gather_nuisance', 'grey_matter_summary_file_path': '[Undefined]', 'selector': {'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}, 'extraction_resolution': 'Functional'}, 'GlobalSignal': {'summary': {'filter': 'Mean', 'method': 'Mean'}}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}, 'extraction_resolution': 'Functional'}}, 'tcompcor_file_path': '[Undefined]'}, 'outputspec': {}}",
			"anat_to_func_linear_xfm_Regressor_1_160": "{'args': '[Undefined]', 'concat_xfm': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fix_scale_skew': '[Undefined]', 'in_file2': '[Undefined]', 'invert_xfm': True, 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ'}",
			"write_composite_invlinear_xfm": "{'args': '[Undefined]', 'default_value': 0.0, 'dimension': 3, 'environ': {'NSLOTS': '1'}, 'float': False, 'input_image': '[Undefined]', 'input_image_type': 0, 'interpolation': 'Linear', 'interpolation_parameters': '[Undefined]', 'invert_transform_flags': '[Undefined]', 'num_threads': 1, 'out_postfix': '_trans', 'output_image': 'from-template_to-T1w_mode-image_desc-linear_xfm.nii.gz', 'print_out_composite_warp_file': True, 'reference_image': '[Undefined]', 'transforms': '[Undefined]'}",
			"write_composite_linear_xfm": "{'args': '[Undefined]', 'default_value': 0.0, 'dimension': 3, 'environ': {'NSLOTS': '1'}, 'float': False, 'input_image': '[Undefined]', 'input_image_type': 0, 'interpolation': 'Linear', 'interpolation_parameters': '[Undefined]', 'invert_transform_flags': '[Undefined]', 'num_threads': 1, 'out_postfix': '_trans', 'output_image': 'from-T1w_to-template_mode-image_desc-linear_xfm.nii.gz', 'print_out_composite_warp_file': True, 'reference_image': '[Undefined]', 'transforms': '[Undefined]'}",
			"nuisance_regression_space-native_reg-Regressor_1_177": "{'inputspec': {'dvars_file_path': '[Undefined]', 'fd_j_file_path': '[Undefined]', 'fd_p_file_path': '[Undefined]', 'functional_brain_mask_file_path': '[Undefined]', 'functional_file_path': '[Undefined]', 'regressor_file': '[Undefined]', 'selector': '[Undefined]'}, 'nuisance_regression': {'TR': '[Undefined]', 'args': '[Undefined]', 'automask': '[Undefined]', 'bandpass': '[Undefined]', 'blur': '[Undefined]', 'cenmode': '[Undefined]', 'censor': '[Undefined]', 'censortr': '[Undefined]', 'concat': '[Undefined]', 'dsort': '[Undefined]', 'environ': {}, 'noblock': '[Undefined]', 'norm': False, 'num_threads': 1, 'out_file': 'residuals.nii.gz', 'outputtype': 'NIFTI_GZ', 'polort': 2, 'stopband': '[Undefined]'}, 'outputspec': {}}",
			"filtering_bold_and_regressors_space-native_reg-Regressor_1_177": "{'inputspec': {'functional_brain_mask_file_path': '[Undefined]', 'functional_file_path': '[Undefined]', 'nuisance_selectors': {'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}, 'extraction_resolution': 'Functional'}, 'GlobalSignal': {'summary': {'filter': 'Mean', 'method': 'Mean'}}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}, 'extraction_resolution': 'Functional'}}, 'regressors_file_path': '[Undefined]', 'tr': '[Undefined]'}, 'frequency_filter': {'bandpass_freqs': [0.01, 0.1], 'function_str': 'CPAC.nuisance.bandpass.bandpass_voxels', 'sample_period': '[Undefined]'}, 'outputspec': {}}",
			"warp_ts_to_T1template_201": "{'inputspec': {'input_image': '[Undefined]', 'interpolation': 'LanczosWindowedSinc', 'reference': '[Undefined]', 'transform': '[Undefined]'}, 'apply_warp_warp_ts_to_T1template_201': {'args': '[Undefined]', 'default_value': 0.0, 'dimension': 3, 'environ': {'NSLOTS': '1'}, 'float': False, 'input_image_type': 3, 'interpolation_parameters': '[Undefined]', 'invert_transform_flags': '[Undefined]', 'num_threads': 1, 'out_postfix': '_trans', 'output_image': '[Undefined]', 'print_out_composite_warp_file': '[Undefined]'}, 'interp_string': {'function_str': \"def interpolation_string(interpolation, reg_tool):\\n    if reg_tool == 'ants':\\n        pass\\n    elif reg_tool == 'fsl':\\n        # translate to FSL\\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\\n        #          in C-PAC are now converted to .nii.gz\\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\\n    return interpolation\\n\", 'reg_tool': 'ants'}, 'single_ants_xfm_to_list': {'function_str': 'def single_ants_xfm_to_list(transform):\\n    transform_list = [transform]\\n    return transform_list\\n'}, 'outputspec': {}}",
			"warp_funcreg-sbref_to_T1wtemplate_205": "{'inputspec': {'input_image': '[Undefined]', 'interpolation': 'NearestNeighbor', 'reference': '[Undefined]', 'transform': '[Undefined]'}, 'apply_warp_warp_funcreg-sbref_to_T1wtemplate_205': {'args': '[Undefined]', 'default_value': 0.0, 'dimension': 3, 'environ': {'NSLOTS': '1'}, 'float': False, 'input_image_type': '[Undefined]', 'interpolation_parameters': '[Undefined]', 'invert_transform_flags': '[Undefined]', 'num_threads': 1, 'out_postfix': '_trans', 'output_image': '[Undefined]', 'print_out_composite_warp_file': '[Undefined]'}, 'interp_string': {'function_str': \"def interpolation_string(interpolation, reg_tool):\\n    if reg_tool == 'ants':\\n        pass\\n    elif reg_tool == 'fsl':\\n        # translate to FSL\\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\\n        #          in C-PAC are now converted to .nii.gz\\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\\n    return interpolation\\n\", 'reg_tool': 'ants'}, 'single_ants_xfm_to_list': {'function_str': 'def single_ants_xfm_to_list(transform):\\n    transform_list = [transform]\\n    return transform_list\\n'}, 'outputspec': {}}",
			"warp_funcreg-mask_to_T1wtemplate_209": "{'inputspec': {'input_image': '[Undefined]', 'interpolation': 'NearestNeighbor', 'reference': '[Undefined]', 'transform': '[Undefined]'}, 'apply_warp_warp_funcreg-mask_to_T1wtemplate_209': {'args': '[Undefined]', 'default_value': 0.0, 'dimension': 3, 'environ': {'NSLOTS': '1'}, 'float': False, 'input_image_type': '[Undefined]', 'interpolation_parameters': '[Undefined]', 'invert_transform_flags': '[Undefined]', 'num_threads': 1, 'out_postfix': '_trans', 'output_image': '[Undefined]', 'print_out_composite_warp_file': '[Undefined]'}, 'interp_string': {'function_str': \"def interpolation_string(interpolation, reg_tool):\\n    if reg_tool == 'ants':\\n        pass\\n    elif reg_tool == 'fsl':\\n        # translate to FSL\\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\\n        #          in C-PAC are now converted to .nii.gz\\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\\n    return interpolation\\n\", 'reg_tool': 'ants'}, 'single_ants_xfm_to_list': {'function_str': 'def single_ants_xfm_to_list(transform):\\n    transform_list = [transform]\\n    return transform_list\\n'}, 'outputspec': {}}",
			"warp_deriv-mask_to_T1wtemplate_213": "{'inputspec': {'input_image': '[Undefined]', 'interpolation': 'NearestNeighbor', 'reference': '[Undefined]', 'transform': '[Undefined]'}, 'apply_warp_warp_deriv-mask_to_T1wtemplate_213': {'args': '[Undefined]', 'default_value': 0.0, 'dimension': 3, 'environ': {'NSLOTS': '1'}, 'float': False, 'input_image_type': '[Undefined]', 'interpolation_parameters': '[Undefined]', 'invert_transform_flags': '[Undefined]', 'num_threads': 1, 'out_postfix': '_trans', 'output_image': '[Undefined]', 'print_out_composite_warp_file': '[Undefined]'}, 'interp_string': {'function_str': \"def interpolation_string(interpolation, reg_tool):\\n    if reg_tool == 'ants':\\n        pass\\n    elif reg_tool == 'fsl':\\n        # translate to FSL\\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\\n        #          in C-PAC are now converted to .nii.gz\\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\\n    return interpolation\\n\", 'reg_tool': 'ants'}, 'single_ants_xfm_to_list': {'function_str': 'def single_ants_xfm_to_list(transform):\\n    transform_list = [transform]\\n    return transform_list\\n'}, 'outputspec': {}}",
			"resampled_T1w-brain-template-deriv": "{'function_str': 'CPAC.utils.datasource.resolve_resolution', 'resolution': '2mm', 'tag': 'func_derivative_outputs', 'template': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'template_name': 'T1w-brain-template-deriv'}",
			"qc_snr_217": "{'inputspec': {'anatomical_brain': '[Undefined]', 'functional_brain_mask': '[Undefined]', 'functional_preprocessed': '[Undefined]', 'functional_to_anat_linear_xfm': '[Undefined]', 'mean_functional_in_anat': '[Undefined]'}, 'std_dev': {'args': '-stdev', 'environ': {}, 'num_threads': 1, 'options': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ'}, 'std_dev_anat': {'abswarp': '[Undefined]', 'args': '[Undefined]', 'datatype': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'field_file': '[Undefined]', 'interp': 'trilinear', 'mask_file': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'relwarp': '[Undefined]', 'superlevel': '[Undefined]', 'supersample': '[Undefined]'}, 'snr': {'args': '[Undefined]', 'environ': {}, 'expr': 'b/a', 'in_file_c': '[Undefined]', 'num_threads': 1, 'other': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'overwrite': '[Undefined]', 'single_idx': '[Undefined]', 'start_idx': '[Undefined]', 'stop_idx': '[Undefined]'}, 'snr_val': {'function_str': 'CPAC.qc.utils.cal_snr_val'}, 'hist_snr': {'function_str': 'CPAC.qc.utils.gen_histogram', 'measure': 'snr'}, 'dp_snr': {'function_str': 'CPAC.qc.utils.drop_percent', 'percent': 99}, 'montage_snr': {'inputspec': {'overlay': '[Undefined]', 'underlay': '[Undefined]'}, 'resample_u': {'function_str': 'CPAC.qc.utils.resample_1mm'}, 'outputspec': {}, 'resample_o': {'function_str': 'CPAC.qc.utils.resample_1mm'}, 'montage_a': {'cbar_name': 'red_to_blue', 'function_str': 'CPAC.qc.utils.montage_axial', 'png_name': 'snr_a.png'}, 'montage_s': {'cbar_name': 'red_to_blue', 'function_str': 'CPAC.qc.utils.montage_sagittal', 'png_name': 'snr_s.png'}}, 'outputspec': {}}",
			"anat_edge_226": "{'function_str': 'CPAC.qc.qc.afni_Edge3'}",
			"montage_anat_226": "{'inputspec': {'overlay': '[Undefined]', 'underlay': '[Undefined]'}, 'resample_u': {'function_str': 'CPAC.qc.utils.resample_1mm'}, 'outputspec': {}, 'resample_o': {'function_str': 'CPAC.qc.utils.resample_1mm'}, 'montage_a': {'cbar_name': 'red', 'function_str': 'CPAC.qc.utils.montage_axial', 'png_name': 't1_edge_on_mean_func_in_t1_a.png'}, 'montage_s': {'cbar_name': 'red', 'function_str': 'CPAC.qc.utils.montage_sagittal', 'png_name': 't1_edge_on_mean_func_in_t1_s.png'}}",
			"qc_motion_114": "{'inputspec': {'motion_parameters': '[Undefined]'}, 'motion_plot': {'function_str': 'CPAC.qc.utils.gen_motion_plt'}, 'outputspec': {}}",
			"qc_fd_135": "{'inputspec': {'excluded_volumes': '[Undefined]', 'fd': '[Undefined]'}, 'fd_plot': {'function_str': 'CPAC.qc.utils.gen_plot_png', 'measure': 'FD'}, 'outputspec': {}}",
			"qc_skullstrip_233": "{'inputspec': {'anatomical_brain': '[Undefined]', 'anatomical_reorient': '[Undefined]'}, 'skull_edge': {'function_str': 'CPAC.qc.qc.afni_Edge3'}, 'montage_skull': {'inputspec': {'overlay': '[Undefined]', 'underlay': '[Undefined]'}, 'resample_u': {'function_str': 'CPAC.qc.utils.resample_1mm'}, 'outputspec': {}, 'resample_o': {'function_str': 'CPAC.qc.utils.resample_1mm'}, 'montage_a': {'cbar_name': 'red', 'function_str': 'CPAC.qc.utils.montage_axial', 'png_name': 'skull_vis_a.png'}, 'montage_s': {'cbar_name': 'red', 'function_str': 'CPAC.qc.utils.montage_sagittal', 'png_name': 'skull_vis_s.png'}}, 'outputspec': {}}",
			"anat_mni_ants_register": "{'inputspec': {'ants_para': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'fixed_image_mask': None, 'interp': '[Undefined]', 'moving_brain': '[Undefined]', 'moving_mask': '[Undefined]', 'moving_skull': '[Undefined]', 'reference_brain': '[Undefined]', 'reference_mask': '[Undefined]', 'reference_skull': '[Undefined]'}, 'calc_ants_warp': {'function_str': 'def hardcoded_reg(moving_brain, reference_brain, moving_skull,\\n                  reference_skull, ants_para, moving_mask=None,\\n                  reference_mask=None, fixed_image_mask=None, interp=None,\\n                  reg_with_skull=0):\\n    # TODO: expand transforms to cover all in ANTs para\\n\\n    regcmd = [\"antsRegistration\"]\\n    for para_index in range(len(ants_para)):\\n        for para_type in ants_para[para_index]:\\n            if para_type == \\'dimensionality\\':\\n                if ants_para[para_index][para_type] not in [2, 3, 4]:\\n                    err_msg = \\'Dimensionality specified in ANTs parameters: %d, is not supported. \\' \\\\\\n                              \\'Change to 2, 3, or 4 and try again\\' % \\\\\\n                              ants_para[para_index][para_type]\\n                    raise Exception(err_msg)\\n                else:\\n                    regcmd.append(\"--dimensionality\")\\n                    regcmd.append(str(ants_para[para_index][para_type]))\\n\\n            elif para_type == \\'verbose\\':\\n                if ants_para[para_index][para_type] not in [0, 1]:\\n                    err_msg = \\'Verbose output option in ANTs parameters: %d, is not supported. \\' \\\\\\n                              \\'Change to 0 or 1 and try again\\' % \\\\\\n                              ants_para[para_index][para_type]\\n                    raise Exception(err_msg)\\n                else:\\n                    regcmd.append(\"--verbose\")\\n                    regcmd.append(str(ants_para[para_index][para_type]))\\n\\n            elif para_type == \\'float\\':\\n                if ants_para[para_index][para_type] not in [0, 1]:\\n                    err_msg = \\'Float option in ANTs parameters: %d, is not supported. \\' \\\\\\n                              \\'Change to 0 or 1 and try again\\' % \\\\\\n                              ants_para[para_index][para_type]\\n                    raise Exception(err_msg)\\n                else:\\n                    regcmd.append(\"--float\")\\n                    regcmd.append(str(ants_para[para_index][para_type]))\\n\\n            elif para_type == \\'collapse-output-transforms\\':\\n                if ants_para[para_index][para_type] not in [0, 1]:\\n                    err_msg = \\'collapse-output-transforms specified in ANTs parameters: %d, is not supported. \\' \\\\\\n                              \\'Change to 0 or 1 and try again\\' % \\\\\\n                              ants_para[para_index][para_type]\\n                    raise Exception(err_msg)\\n                else:\\n                    regcmd.append(\"--collapse-output-transforms\")\\n                    regcmd.append(str(ants_para[para_index][para_type]))\\n\\n            elif para_type == \\'winsorize-image-intensities\\':\\n                if ants_para[para_index][para_type][\\'lowerQuantile\\'] is None or ants_para[para_index][para_type][\\'upperQuantile\\'] is None:\\n                    err_msg = \\'Please specifiy lowerQuantile and upperQuantile of ANTs parameters --winsorize-image-intensities in pipeline config. \\'\\n                    raise Exception(err_msg)\\n                else:\\n                    regcmd.append(\"--winsorize-image-intensities\")\\n                    regcmd.append(\"[{0},{1}]\".format(ants_para[para_index][para_type][\\'lowerQuantile\\'],\\n                        ants_para[para_index][para_type][\\'upperQuantile\\']))\\n\\n            elif para_type == \\'initial-moving-transform\\':\\n                if ants_para[para_index][para_type][\\n                    \\'initializationFeature\\'] is None:\\n                    err_msg = \\'Please specifiy initializationFeature of ANTs parameters in pipeline config. \\'\\n                    raise Exception(err_msg)\\n                else:\\n                    regcmd.append(\"--initial-moving-transform\")\\n                    if reg_with_skull == 1:\\n                        regcmd.append(\"[{0},{1},{2}]\".format(\\n                            reference_skull, moving_skull,\\n                            ants_para[para_index][para_type][\\n                                \\'initializationFeature\\']))\\n                    else:\\n                        regcmd.append(\"[{0},{1},{2}]\".format(\\n                            reference_brain, moving_brain,\\n                            ants_para[para_index][para_type][\\n                                \\'initializationFeature\\']))\\n\\n            elif para_type == \\'transforms\\':\\n                for trans_index in range(\\n                        len(ants_para[para_index][para_type])):\\n                    for trans_type in ants_para[para_index][para_type][\\n                        trans_index]:\\n                        regcmd.append(\"--transform\")\\n                        if trans_type == \\'Rigid\\' or trans_type == \\'Affine\\':\\n                            if ants_para[para_index][para_type][trans_index][\\n                                trans_type][\\'gradientStep\\'] is None:\\n                                err_msg = \\'Please specifiy % s Gradient Step of ANTs parameters in pipeline config. \\' % trans_type\\n                                raise Exception(err_msg)\\n                            else:\\n                                regcmd.append(\"{0}[{1}]\".format(\\n                                    trans_type,\\n                                    ants_para[para_index][para_type][\\n                                        trans_index][trans_type][\\n                                        \\'gradientStep\\']))\\n\\n                        if trans_type == \\'SyN\\':\\n                            if ants_para[para_index][para_type][trans_index][\\n                                trans_type][\\'gradientStep\\'] is None:\\n                                err_msg = \\'Please specifiy % s Gradient Step of ANTs parameters in pipeline config. \\' % trans_type\\n                                raise Exception(err_msg)\\n                            else:\\n                                SyN_para = []\\n                                SyN_para.append(\"{0}\".format(\\n                                    ants_para[para_index][para_type][\\n                                        trans_index][trans_type][\\n                                        \\'gradientStep\\']))\\n                                if ants_para[para_index][para_type][\\n                                    trans_index][trans_type][\\n                                    \\'updateFieldVarianceInVoxelSpace\\'] is not None:\\n                                    SyN_para.append(\"{0}\".format(\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'updateFieldVarianceInVoxelSpace\\']))\\n                                if ants_para[para_index][para_type][\\n                                    trans_index][trans_type][\\n                                    \\'totalFieldVarianceInVoxelSpace\\'] is not None:\\n                                    SyN_para.append(\"{0}\".format(\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'totalFieldVarianceInVoxelSpace\\']))\\n                                SyN_para = \\',\\'.join([str(elem)\\n                                                     for elem in SyN_para])\\n                                regcmd.append(\"{0}[{1}]\".format(\\n                                    trans_type, SyN_para))\\n\\n                        if ants_para[para_index][para_type][trans_index][\\n                            trans_type][\\'metric\\'][\\'type\\'] == \\'MI\\':\\n                            if ants_para[para_index][para_type][trans_index][\\n                                trans_type][\\'metric\\'][\\n                                \\'metricWeight\\'] is None or \\\\\\n                                            ants_para[para_index][para_type][\\n                                                trans_index][trans_type][\\n                                                \\'metric\\'][\\n                                                \\'numberOfBins\\'] is None:\\n                                err_msg = \\'Please specifiy metricWeight and numberOfBins for metric MI of ANTs parameters in pipeline config.\\'\\n                                raise Exception(err_msg)\\n                            else:\\n                                MI_para = []\\n                                MI_para.append(\"{0},{1}\".format(\\n                                    ants_para[para_index][para_type][\\n                                        trans_index][trans_type][\\'metric\\']\\n                                    [\\'metricWeight\\'],\\n                                    ants_para[para_index][para_type][\\n                                        trans_index][trans_type][\\'metric\\'][\\n                                        \\'numberOfBins\\']))\\n                                if \\'samplingStrategy\\' in \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'metric\\'] and \\\\\\n                                                ants_para[para_index][\\n                                                    para_type][trans_index][\\n                                                    trans_type][\\'metric\\'][\\n                                                    \\'samplingStrategy\\'] in [\\n                                            \\'None\\', \\'Regular\\', \\'Random\\']:\\n                                    MI_para.append(\"{0}\".format(\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'metric\\'][\\'samplingStrategy\\']))\\n                                if \\'samplingPercentage\\' in \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'metric\\'] and \\\\\\n                                                ants_para[para_index][\\n                                                    para_type][trans_index][\\n                                                    trans_type][\\'metric\\'][\\n                                                    \\'samplingPercentage\\'] is not None:\\n                                    MI_para.append(\"{0}\".format(\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'metric\\'][\\'samplingPercentage\\']))\\n                                MI_para = \\',\\'.join(\\n                                    [str(elem) for elem in MI_para])\\n                                regcmd.append(\"--metric\")\\n                                if reg_with_skull == 1:\\n                                    regcmd.append(\"MI[{0},{1},{2}]\".format(\\n                                        reference_skull, moving_skull, MI_para))\\n                                else:\\n                                    regcmd.append(\"MI[{0},{1},{2}]\".format(\\n                                        reference_brain, moving_brain, MI_para))\\n\\n                        if ants_para[para_index][para_type][trans_index][\\n                            trans_type][\\'metric\\'][\\'type\\'] == \\'CC\\':\\n                            if ants_para[para_index][para_type][trans_index][\\n                                trans_type][\\'metric\\'][\\n                                \\'metricWeight\\'] is None or \\\\\\n                                            ants_para[para_index][para_type][\\n                                                trans_index][trans_type][\\n                                                \\'metric\\'][\\'radius\\'] is None:\\n                                err_msg = \\'Please specifiy metricWeight and radius for metric CC of ANTs parameters in pipeline config.\\'\\n                                raise Exception(err_msg)\\n                            else:\\n                                CC_para = []\\n                                CC_para.append(\"{0},{1}\".format(\\n                                    ants_para[para_index][para_type][\\n                                        trans_index][trans_type][\\'metric\\']\\n                                    [\\'metricWeight\\'],\\n                                    ants_para[para_index][para_type][\\n                                        trans_index][trans_type][\\'metric\\'][\\n                                        \\'radius\\']))\\n                                if \\'samplingStrategy\\' in \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'metric\\'] and \\\\\\n                                                ants_para[para_index][\\n                                                    para_type][trans_index][\\n                                                    trans_type][\\'metric\\'][\\n                                                    \\'samplingStrategy\\'] in [\\n                                            \\'None\\', \\'Regular\\', \\'Random\\']:\\n                                    CC_para.append(\"{0}\".format(\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'metric\\'][\\'samplingStrategy\\']))\\n                                if \\'samplingPercentage\\' in \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'metric\\'] and \\\\\\n                                                ants_para[para_index][\\n                                                    para_type][trans_index][\\n                                                    trans_type][\\'metric\\'][\\n                                                    \\'samplingPercentage\\'] is not None:\\n                                    CC_para.append(\"{0}\".format(\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'metric\\'][\\'samplingPercentage\\']))\\n                                CC_para = \\',\\'.join(\\n                                    [str(elem) for elem in CC_para])\\n                                regcmd.append(\"--metric\")\\n                                regcmd.append(\"CC[{0},{1},{2}]\".format(\\n                                    reference_skull, moving_skull, CC_para))\\n\\n                        if \\'convergence\\' in \\\\\\n                                ants_para[para_index][para_type][trans_index][\\n                                    trans_type]:\\n                            convergence_para = []\\n                            if ants_para[para_index][para_type][trans_index][\\n                                trans_type][\\'convergence\\'][\\n                                \\'iteration\\'] is None:\\n                                err_msg = \\'Please specifiy convergence iteration of ANTs parameters in pipeline config.\\'\\n                                raise Exception(err_msg)\\n                            else:\\n                                convergence_para.append(\"{0}\".format(\\n                                    ants_para[para_index][para_type][\\n                                        trans_index][trans_type][\\n                                        \\'convergence\\'][\\'iteration\\']))\\n                                if \\'convergenceThreshold\\' in \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'convergence\\'] and \\\\\\n                                                ants_para[para_index][\\n                                                    para_type][trans_index][\\n                                                    trans_type][\\n                                                    \\'convergence\\'][\\n                                                    \\'convergenceThreshold\\'] is not None:\\n                                    convergence_para.append(\"{0}\".format(\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'convergence\\'][\\n                                            \\'convergenceThreshold\\']))\\n                                if \\'convergenceWindowSize\\' in \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'convergence\\'] and \\\\\\n                                                ants_para[para_index][\\n                                                    para_type][trans_index][\\n                                                    trans_type][\\n                                                    \\'convergence\\'][\\n                                                    \\'convergenceWindowSize\\'] is not None:\\n                                    convergence_para.append(\"{0}\".format(\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'convergence\\'][\\n                                            \\'convergenceWindowSize\\']))\\n                                convergence_para = \\',\\'.join(\\n                                    [str(elem) for elem in convergence_para])\\n                                regcmd.append(\"--convergence\")\\n                                regcmd.append(\\n                                    \"[{0}]\".format(convergence_para))\\n\\n                        if \\'smoothing-sigmas\\' in \\\\\\n                                ants_para[para_index][para_type][trans_index][\\n                                    trans_type] and \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'smoothing-sigmas\\'] is not None:\\n                            regcmd.append(\"--smoothing-sigmas\")\\n                            regcmd.append(\"{0}\".format(\\n                                ants_para[para_index][para_type][trans_index][\\n                                    trans_type][\\'smoothing-sigmas\\']))\\n\\n                        if \\'shrink-factors\\' in \\\\\\n                                ants_para[para_index][para_type][trans_index][\\n                                    trans_type] and \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'shrink-factors\\'] is not None:\\n                            regcmd.append(\"--shrink-factors\")\\n                            regcmd.append(\"{0}\".format(\\n                                ants_para[para_index][para_type][trans_index][\\n                                    trans_type][\\'shrink-factors\\']))\\n\\n                        if \\'use-histogram-matching\\' in \\\\\\n                                ants_para[para_index][para_type][trans_index][\\n                                    trans_type]:\\n                            if ants_para[para_index][para_type][trans_index][\\n                                trans_type][\\'use-histogram-matching\\']:\\n                                regcmd.append(\"--use-histogram-matching\")\\n                                regcmd.append(\"1\")\\n\\n                        if \\'winsorize-image-intensities\\' in \\\\\\n                                ants_para[para_index][para_type][trans_index][\\n                                    trans_type] and \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'winsorize-image-intensities\\'][\\n                                            \\'lowerQuantile\\'] is not None and \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'winsorize-image-intensities\\'][\\n                                            \\'upperQuantile\\'] is not None:\\n                            regcmd.append(\"--winsorize-image-intensities\")\\n                            regcmd.append(\"[{0},{1}]\".format(\\n                                ants_para[para_index][para_type][trans_index][\\n                                    trans_type][\\'winsorize-image-intensities\\']\\n                                [\\'lowerQuantile\\'],\\n                                ants_para[para_index][para_type][trans_index][\\n                                    trans_type][\\n                                    \\'winsorize-image-intensities\\'][\\n                                    \\'upperQuantile\\']))\\n\\n                        if \\'masks\\' in ants_para[para_index][para_type][trans_index][\\n                            trans_type] and ants_para[para_index][para_type][\\n                                trans_index][trans_type][\\'masks\\'] is not None:\\n                            if ants_para[para_index][para_type][trans_index][trans_type][\\'masks\\']:\\n                                regcmd.append(\"--masks\")\\n                                regcmd.append(\"[{0},{1}]\".format(reference_mask, moving_mask))\\n                            else:\\n                                regcmd.append(\"--masks\")\\n                                regcmd.append(\"[NULL,NULL]\")\\n\\n            elif para_type == \\'masks\\':\\n                # lesion preproc has\\n                if fixed_image_mask is not None:\\n                    regcmd.append(\"--masks\")\\n                    regcmd.append(str(fixed_image_mask))\\n                else:\\n                    if ants_para[para_index][para_type][\\n                        \\'fixed_image_mask\\'] == False and \\\\\\n                                    ants_para[para_index][para_type][\\n                                        \\'moving_image_mask\\'] == True:\\n                        err_msg = \\'Masks option in ANTs parameters: %d is not supported. \\' \\\\\\n                                  \\'Please set `fixed_image_mask` as True. \\' \\\\\\n                                  \\'Or set both `fixed_image_mask` and `moving_image_mask` as False\\' % \\\\\\n                                  ants_para[para_index][para_type]\\n                        raise Exception(err_msg)\\n                    elif ants_para[para_index][para_type][\\n                        \\'fixed_image_mask\\'] == True and \\\\\\n                                    ants_para[para_index][para_type][\\n                                        \\'moving_image_mask\\'] == True:\\n                        regcmd.append(\"--masks\")\\n                        regcmd.append(\\'[\\' + str(reference_mask) + \\',\\' + str(\\n                            moving_mask) + \\']\\')\\n                    elif ants_para[para_index][para_type][\\n                        \\'fixed_image_mask\\'] == True and \\\\\\n                                    ants_para[para_index][para_type][\\n                                        \\'moving_image_mask\\'] == False:\\n                        regcmd.append(\"--masks\")\\n                        regcmd.append(\\'[\\' + str(reference_mask) + \\']\\')\\n                    else:\\n                        continue\\n\\n    if interp is not None:\\n        regcmd.append(\"--interpolation\")\\n        regcmd.append(\"{0}\".format(interp))\\n\\n    regcmd.append(\"--output\")\\n    regcmd.append(\"[transform,transform_Warped.nii.gz]\")\\n\\n    # write out the actual command-line entry for testing/validation later\\n    command_file = os.path.join(os.getcwd(), \\'command.txt\\')\\n    with open(command_file, \\'wt\\') as f:\\n        f.write(\\' \\'.join(regcmd))\\n\\n    try:\\n        retcode = subprocess.check_output(regcmd)\\n    except Exception as e:\\n        raise Exception(\\'[!] ANTS registration did not complete successfully.\\'\\n                        \\'\\\\n\\\\nError details:\\\\n{0}\\\\n{1}\\\\n\\'.format(e, e.output))\\n\\n    warp_list = []\\n    warped_image = None\\n\\n    files = [f for f in os.listdir(\\'.\\') if os.path.isfile(f)]\\n\\n    for f in files:\\n        if (\"transform\" in f) and (\"Warped\" not in f):\\n            warp_list.append(os.getcwd() + \"/\" + f)\\n        if \"Warped\" in f:\\n            warped_image = os.getcwd() + \"/\" + f\\n\\n    if not warped_image:\\n        raise Exception(\"\\\\n\\\\n[!] No registration output file found. ANTS \"\\n                        \"registration may not have completed \"\\n                        \"successfully.\\\\n\\\\n\")\\n\\n    return warp_list, warped_image\\n', 'reg_with_skull': '[Undefined]'}, 'select_forward_initial': {'function_str': \"def seperate_warps_list(warp_list, selection):\\n    selected_warp = None\\n    for warp in warp_list:\\n        if selection == 'Warp':\\n            if '3Warp' in warp or '2Warp' in warp or '1Warp' in warp:\\n                selected_warp = warp\\n        else:\\n            if selection in warp:\\n                selected_warp = warp\\n    return selected_warp\\n\", 'selection': 'Initial'}, 'select_forward_rigid': {'function_str': \"def seperate_warps_list(warp_list, selection):\\n    selected_warp = None\\n    for warp in warp_list:\\n        if selection == 'Warp':\\n            if '3Warp' in warp or '2Warp' in warp or '1Warp' in warp:\\n                selected_warp = warp\\n        else:\\n            if selection in warp:\\n                selected_warp = warp\\n    return selected_warp\\n\", 'selection': 'Rigid'}, 'select_forward_affine': {'function_str': \"def seperate_warps_list(warp_list, selection):\\n    selected_warp = None\\n    for warp in warp_list:\\n        if selection == 'Warp':\\n            if '3Warp' in warp or '2Warp' in warp or '1Warp' in warp:\\n                selected_warp = warp\\n        else:\\n            if selection in warp:\\n                selected_warp = warp\\n    return selected_warp\\n\", 'selection': 'Affine'}, 'select_forward_warp': {'function_str': \"def seperate_warps_list(warp_list, selection):\\n    selected_warp = None\\n    for warp in warp_list:\\n        if selection == 'Warp':\\n            if '3Warp' in warp or '2Warp' in warp or '1Warp' in warp:\\n                selected_warp = warp\\n        else:\\n            if selection in warp:\\n                selected_warp = warp\\n    return selected_warp\\n\", 'selection': 'Warp'}, 'select_inverse_warp': {'function_str': \"def seperate_warps_list(warp_list, selection):\\n    selected_warp = None\\n    for warp in warp_list:\\n        if selection == 'Warp':\\n            if '3Warp' in warp or '2Warp' in warp or '1Warp' in warp:\\n                selected_warp = warp\\n        else:\\n            if selection in warp:\\n                selected_warp = warp\\n    return selected_warp\\n\", 'selection': 'Inverse'}, 'outputspec': {'composite_transform': '[Undefined]', 'wait': '[Undefined]'}}",
			"montage_mni_anat_237": "{'inputspec': {'overlay': '[Undefined]', 'underlay': '[Undefined]'}, 'resample_u': {'function_str': 'CPAC.qc.utils.resample_1mm'}, 'outputspec': {}, 'resample_o': {'function_str': 'CPAC.qc.utils.resample_1mm'}, 'montage_a': {'cbar_name': 'red', 'function_str': 'CPAC.qc.utils.montage_axial', 'png_name': 'mni_anat_a.png'}, 'montage_s': {'cbar_name': 'red', 'function_str': 'CPAC.qc.utils.montage_sagittal', 'png_name': 'mni_anat_s.png'}}",
			"anat_template_edge_237": "{'function_str': 'CPAC.qc.qc.afni_Edge3'}",
			"carpet_seg_241": "{'inputspec': {'anatomical_csf_mask': '[Undefined]', 'anatomical_gm_mask': '[Undefined]', 'anatomical_wm_mask': '[Undefined]', 'functional_to_standard': '[Undefined]', 'mean_functional_to_standard': '[Undefined]'}, 'gm_resample': {'args': '[Undefined]', 'environ': {}, 'num_threads': 1, 'orientation': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI', 'resample_mode': '[Undefined]', 'voxel_size': '[Undefined]'}, 'gm_mask': {'args': '[Undefined]', 'environ': {}, 'expr': 'astep(a, 0.5)', 'in_file_b': '[Undefined]', 'in_file_c': '[Undefined]', 'num_threads': 1, 'other': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI', 'overwrite': '[Undefined]', 'single_idx': '[Undefined]', 'start_idx': '[Undefined]', 'stop_idx': '[Undefined]'}, 'wm_resample': {'args': '[Undefined]', 'environ': {}, 'num_threads': 1, 'orientation': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI', 'resample_mode': '[Undefined]', 'voxel_size': '[Undefined]'}, 'wm_mask': {'args': '[Undefined]', 'environ': {}, 'expr': 'astep(a, 0.5)', 'in_file_b': '[Undefined]', 'in_file_c': '[Undefined]', 'num_threads': 1, 'other': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI', 'overwrite': '[Undefined]', 'single_idx': '[Undefined]', 'start_idx': '[Undefined]', 'stop_idx': '[Undefined]'}, 'csf_resample': {'args': '[Undefined]', 'environ': {}, 'num_threads': 1, 'orientation': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI', 'resample_mode': '[Undefined]', 'voxel_size': '[Undefined]'}, 'csf_mask': {'args': '[Undefined]', 'environ': {}, 'expr': 'astep(a, 0.5)', 'in_file_b': '[Undefined]', 'in_file_c': '[Undefined]', 'num_threads': 1, 'other': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI', 'overwrite': '[Undefined]', 'single_idx': '[Undefined]', 'start_idx': '[Undefined]', 'stop_idx': '[Undefined]'}, 'carpet_plot': {'function_str': 'CPAC.qc.utils.gen_carpet_plt', 'output': 'carpet_seg'}, 'outputspec': {}}",
			"gather_GM-path": "{'inputnode': {'creds_path': None, 'data': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'dl_dir': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working/pipeline_cpac_default_monkey_skullstrip', 'scan': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}, 'check_for_s3': {'function_str': 'CPAC.utils.datasource.check_for_s3', 'img_type': 'other'}, 'outputspec': {}}",
			"gather_WM-path": "{'inputnode': {'creds_path': None, 'data': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'dl_dir': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working/pipeline_cpac_default_monkey_skullstrip', 'scan': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}, 'check_for_s3': {'function_str': 'CPAC.utils.datasource.check_for_s3', 'img_type': 'other'}, 'outputspec': {}}",
			"gather_CSF-path": "{'inputnode': {'creds_path': None, 'data': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz', 'dl_dir': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working/pipeline_cpac_default_monkey_skullstrip', 'scan': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}, 'check_for_s3': {'function_str': 'CPAC.utils.datasource.check_for_s3', 'img_type': 'other'}, 'outputspec': {}}",
			"montage_mfi_247": "{'inputspec': {'overlay': '[Undefined]', 'underlay': '[Undefined]'}, 'resample_u': {'function_str': 'CPAC.qc.utils.resample_1mm'}, 'outputspec': {}, 'resample_o': {'function_str': 'CPAC.qc.utils.resample_1mm'}, 'montage_a': {'cbar_name': 'red', 'function_str': 'CPAC.qc.utils.montage_axial', 'png_name': 'MNI_edge_on_mean_func_mni_a.png'}, 'montage_s': {'cbar_name': 'red', 'function_str': 'CPAC.qc.utils.montage_sagittal', 'png_name': 'MNI_edge_on_mean_func_mni_s.png'}}",
			"func_template_edge_247": "{'function_str': 'CPAC.qc.qc.afni_Edge3'}",
			"id_string_desc-preproc_T1w_67": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_default_monkey_skullstrip')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'desc-preproc_T1w', 'scan_id': '[Undefined]', 'subdir': 'anat', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
			"nii_desc-preproc_T1w_67": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
			"json_desc-preproc_T1w_67": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], 'Sources': ['desc-head_T1w', 'desc-preproc_T1w', 'space-T1w_desc-brain_mask'], 'SkullStripped': 'True', 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
			"sinker_desc-preproc_T1w_67": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': True, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
			"id_string_desc-head_T1w_69": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_default_monkey_skullstrip')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'desc-head_T1w', 'scan_id': '[Undefined]', 'subdir': 'anat', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
			"nii_desc-head_T1w_69": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
			"json_desc-head_T1w_69": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'Sources': ['desc-head_T1w', 'desc-preproc_T1w', 'space-T1w_desc-brain_mask'], 'SkullStripped': 'False', 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
			"sinker_desc-head_T1w_69": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': True, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
			"id_string_space-T1w_desc-brain_mask_63": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_default_monkey_skullstrip')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'space-T1w_desc-brain_mask', 'scan_id': '[Undefined]', 'subdir': 'anat', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
			"nii_space-T1w_desc-brain_mask_63": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
			"json_space-T1w_desc-brain_mask_63": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'Sources': ['desc-preproc_T1w', 'T1w-brain-template', 'T1w-template', 'unet-model'], 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
			"sinker_space-T1w_desc-brain_mask_63": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': True, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
			"id_string_space-template_desc-preproc_T1w_76": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_default_monkey_skullstrip')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'space-template_desc-preproc_T1w', 'scan_id': '[Undefined]', 'subdir': 'anat', 'template_desc': 'template - T1w-based whole-head template - /cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
			"nii_space-template_desc-preproc_T1w_76": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
			"json_space-template_desc-preproc_T1w_76": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'space-template_desc-preproc_T1w:register_ANTs_anat_to_template'], 'SkullStripped': 'False', 'Sources': ['desc-preproc_T1w', 'space-T1w_desc-brain_mask', 'desc-head_T1w', 'T1w-template', 'T1w-brain-template', 'T1w-brain-template-mask'], 'Description': 'The preprocessed T1w brain transformed to template space.', 'Template': 'template - T1w-based whole-head template - /cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'Resolution': '2mm', 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
			"sinker_space-template_desc-preproc_T1w_76": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': True, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
			"id_string_from-T1w_to-template_mode-image_xfm_77": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_default_monkey_skullstrip')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'from-T1w_to-template_mode-image_xfm', 'scan_id': '[Undefined]', 'subdir': 'anat', 'template_desc': 'template - T1w-based whole-head template - /cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
			"nii_from-T1w_to-template_mode-image_xfm_77": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
			"json_from-T1w_to-template_mode-image_xfm_77": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_ANTs_anat_to_template'], 'Sources': ['desc-preproc_T1w', 'space-T1w_desc-brain_mask', 'desc-head_T1w', 'T1w-template', 'T1w-brain-template', 'T1w-brain-template-mask'], 'Description': 'Composite (affine + warp field) transform from T1w native space to T1w-template space.', 'Template': 'template - T1w-based whole-head template - /cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'Resolution': '2mm', 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
			"sinker_from-T1w_to-template_mode-image_xfm_77": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': True, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
			"id_string_from-template_to-T1w_mode-image_xfm_78": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_default_monkey_skullstrip')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'from-template_to-T1w_mode-image_xfm', 'scan_id': '[Undefined]', 'subdir': 'anat', 'template_desc': 'template - T1w-based whole-head template - /cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
			"nii_from-template_to-T1w_mode-image_xfm_78": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
			"json_from-template_to-T1w_mode-image_xfm_78": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-template_to-T1w_mode-image_xfm:register_ANTs_anat_to_template'], 'Sources': ['desc-preproc_T1w', 'space-T1w_desc-brain_mask', 'desc-head_T1w', 'T1w-template', 'T1w-brain-template', 'T1w-brain-template-mask'], 'Description': 'Composite (affine + warp field) transform from T1w-template space to T1w native space.', 'Template': 'template - T1w-based whole-head template - /cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'Resolution': '2mm', 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
			"sinker_from-template_to-T1w_mode-image_xfm_78": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': True, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
			"id_string_from-T1w_to-template_mode-image_desc-linear_xfm_79": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_default_monkey_skullstrip')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'from-T1w_to-template_mode-image_desc-linear_xfm', 'scan_id': '[Undefined]', 'subdir': 'anat', 'template_desc': 'template - T1w-based whole-head template - /cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
			"nii_from-T1w_to-template_mode-image_desc-linear_xfm_79": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
			"json_from-T1w_to-template_mode-image_desc-linear_xfm_79": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-T1w_to-template_mode-image_desc-linear_xfm:register_ANTs_anat_to_template'], 'Sources': ['desc-preproc_T1w', 'space-T1w_desc-brain_mask', 'desc-head_T1w', 'T1w-template', 'T1w-brain-template', 'T1w-brain-template-mask'], 'Description': 'Linear (affine) transform from T1w native space to T1w-template space.', 'Template': 'template - T1w-based whole-head template - /cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'Resolution': '2mm', 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
			"sinker_from-T1w_to-template_mode-image_desc-linear_xfm_79": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': True, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
			"id_string_from-template_to-T1w_mode-image_desc-linear_xfm_80": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_default_monkey_skullstrip')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'from-template_to-T1w_mode-image_desc-linear_xfm', 'scan_id': '[Undefined]', 'subdir': 'anat', 'template_desc': 'template - T1w-based whole-head template - /cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
			"nii_from-template_to-T1w_mode-image_desc-linear_xfm_80": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
			"json_from-template_to-T1w_mode-image_desc-linear_xfm_80": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_ANTs_anat_to_template'], 'Sources': ['desc-preproc_T1w', 'space-T1w_desc-brain_mask', 'desc-head_T1w', 'T1w-template', 'T1w-brain-template', 'T1w-brain-template-mask'], 'Description': 'Linear (affine) transform from T1w-template space to T1w native space.', 'Template': 'template - T1w-based whole-head template - /cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'Resolution': '2mm', 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
			"sinker_from-template_to-T1w_mode-image_desc-linear_xfm_80": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': True, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
			"id_string_from-T1w_to-template_mode-image_desc-nonlinear_xfm_81": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_default_monkey_skullstrip')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'from-T1w_to-template_mode-image_desc-nonlinear_xfm', 'scan_id': '[Undefined]', 'subdir': 'anat', 'template_desc': 'template - T1w-based whole-head template - /cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
			"nii_from-T1w_to-template_mode-image_desc-nonlinear_xfm_81": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
			"json_from-T1w_to-template_mode-image_desc-nonlinear_xfm_81": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-T1w_to-template_mode-image_desc-nonlinear_xfm:register_ANTs_anat_to_template'], 'Sources': ['desc-preproc_T1w', 'space-T1w_desc-brain_mask', 'desc-head_T1w', 'T1w-template', 'T1w-brain-template', 'T1w-brain-template-mask'], 'Description': 'Nonlinear (warp field) transform from T1w native space to T1w-template space.', 'Template': 'template - T1w-based whole-head template - /cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'Resolution': '2mm', 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
			"sinker_from-T1w_to-template_mode-image_desc-nonlinear_xfm_81": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': True, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
			"id_string_from-template_to-T1w_mode-image_desc-nonlinear_xfm_82": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_default_monkey_skullstrip')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'from-template_to-T1w_mode-image_desc-nonlinear_xfm', 'scan_id': '[Undefined]', 'subdir': 'anat', 'template_desc': 'template - T1w-based whole-head template - /cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
			"nii_from-template_to-T1w_mode-image_desc-nonlinear_xfm_82": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
			"json_from-template_to-T1w_mode-image_desc-nonlinear_xfm_82": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-nonlinear_xfm:register_ANTs_anat_to_template'], 'Sources': ['desc-preproc_T1w', 'space-T1w_desc-brain_mask', 'desc-head_T1w', 'T1w-template', 'T1w-brain-template', 'T1w-brain-template-mask'], 'Description': 'Nonlinear (warp field) transform from T1w-template space to T1w native space.', 'Template': 'template - T1w-based whole-head template - /cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'Resolution': '2mm', 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
			"sinker_from-template_to-T1w_mode-image_desc-nonlinear_xfm_82": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': True, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
			"id_string_space-template_desc-head_T1w_86": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_default_monkey_skullstrip')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'space-template_desc-head_T1w', 'scan_id': '[Undefined]', 'subdir': 'anat', 'template_desc': 'template - T1w-based whole-head template - /cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
			"nii_space-template_desc-head_T1w_86": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
			"json_space-template_desc-head_T1w_86": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_ANTs_anat_to_template'], ['T1w-template:template_resample'], 'space-template_desc-head_T1w:transform_whole_head_T1w_to_T1template'], 'SkullStripped': 'False', 'Sources': ['desc-head_T1w', 'from-T1w_to-template_mode-image_xfm', 'T1w-template'], 'Template': 'template - T1w-based whole-head template - /cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'Resolution': '2mm', 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
			"sinker_space-template_desc-head_T1w_86": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': True, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
			"id_string_space-template_desc-brain_mask_90": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_default_monkey_skullstrip')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'space-template_desc-brain_mask', 'scan_id': '[Undefined]', 'subdir': 'anat', 'template_desc': 'template - T1w-based whole-head template - /cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
			"nii_space-template_desc-brain_mask_90": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
			"json_space-template_desc-brain_mask_90": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_ANTs_anat_to_template'], ['T1w-template:template_resample'], 'space-template_desc-brain_mask:transform_T1mask_to_T1template'], 'Sources': ['space-T1w_desc-brain_mask', 'from-T1w_to-template_mode-image_xfm', 'T1w-template'], 'Template': 'template - T1w-based whole-head template - /cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'Resolution': '2mm', 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
			"sinker_space-template_desc-brain_mask_90": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': True, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
			"id_string_label-CSF_mask_93": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_default_monkey_skullstrip')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'label-CSF_mask', 'scan_id': '[Undefined]', 'subdir': 'anat', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
			"nii_label-CSF_mask_93": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
			"json_label-CSF_mask_93": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-CSF_mask:tissue_seg_ants_prior'], 'Sources': ['desc-brain_T1w', 'space-T1w_desc-brain_mask'], 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
			"sinker_label-CSF_mask_93": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': True, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
			"id_string_label-GM_mask_94": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_default_monkey_skullstrip')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'label-GM_mask', 'scan_id': '[Undefined]', 'subdir': 'anat', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
			"nii_label-GM_mask_94": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
			"json_label-GM_mask_94": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-GM_mask:tissue_seg_ants_prior'], 'Sources': ['desc-brain_T1w', 'space-T1w_desc-brain_mask'], 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
			"sinker_label-GM_mask_94": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': True, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
			"id_string_label-WM_mask_95": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_default_monkey_skullstrip')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'label-WM_mask', 'scan_id': '[Undefined]', 'subdir': 'anat', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
			"nii_label-WM_mask_95": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
			"json_label-WM_mask_95": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], 'Sources': ['desc-brain_T1w', 'space-T1w_desc-brain_mask'], 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
			"sinker_label-WM_mask_95": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': True, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
			"id_string_desc-preproc_bold_200": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_default_monkey_skullstrip')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'desc-preproc_bold', 'subdir': 'func', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
			"nii_desc-preproc_bold_200": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
			"json_desc-preproc_bold_200": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [['TR:func_metadata_ingress'], [['TR:func_metadata_ingress'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-jenkinson:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-power:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'dvars:calc_motion_stats'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-CSF_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-GM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_ANTs_anat_to_template'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-T1w_to-template_mode-image_desc-linear_xfm:register_ANTs_anat_to_template'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking', 'desc-preproc_bold:func_normalize'], 'desc-confounds_timeseries:nuisance_regressors_generation_T1w_Regressor_1'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-jenkinson:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-power:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'dvars:calc_motion_stats'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking', 'desc-preproc_bold:func_normalize'], 'desc-preproc_bold:nuisance_regression_native'], [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-stc_bold:func_slice_time'], ['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], ['pe-direction:func_metadata_ingress'], 'desc-preproc_bold:apply_phasediff_to_timeseries_separately_default'], [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-stc_bold:func_slice_time'], ['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_ANTs_anat_to_template'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-template_to-T1w_mode-image_xfm:register_ANTs_anat_to_template'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], ['T1w-brain-template-funcreg:template_resample'], 'from-bold_to-template_mode-image_xfm:create_func_to_T1template_xfm'], 'desc-preproc_bold:apply_blip_to_timeseries_separately_default'], 'CpacVariant': {'bold': ['apply_phasediff_to_timeseries_separately_default', 'apply_blip_to_timeseries_separately_default']}, 'SkullStripped': True, 'Sources': ['sbref', 'desc-preproc_bold', 'desc-stc_bold', 'bold', 'from-bold_to-template_mode-image_xfm'], 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
			"sinker_desc-preproc_bold_200": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': True, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
			"id_string_desc-mean_bold_105": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_default_monkey_skullstrip')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'desc-mean_bold', 'subdir': 'func', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
			"nii_desc-mean_bold_105": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
			"json_desc-mean_bold_105": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean'], 'Sources': ['desc-preproc_bold'], 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
			"sinker_desc-mean_bold_105": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': True, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
			"id_string_desc-movementParameters_motion_114": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_default_monkey_skullstrip')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'desc-movementParameters_motion', 'subdir': 'func', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
			"nii_desc-movementParameters_motion_114": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
			"json_desc-movementParameters_motion_114": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], 'Sources': ['desc-preproc_bold', 'motion-basefile'], 'Description': \"Each line contains for one timepoint a 6-DOF rigid transform parameters in the format defined by AFNI's 3dvolreg: [roll, pitch, yaw, superior displacement, left displacement, posterior displacement]. Rotation parameters are in degrees counterclockwise, and translation parameters are in millimeters.\", 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
			"sinker_desc-movementParameters_motion_114": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': True, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
			"id_string_space-bold_desc-brain_mask_121": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_default_monkey_skullstrip')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'space-bold_desc-brain_mask', 'subdir': 'func', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
			"nii_space-bold_desc-brain_mask_121": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
			"json_space-bold_desc-brain_mask_121": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'Sources': ['bold', 'desc-preproc_bold', 'desc-brain_T1w', 'space-T1w_desc-brain_mask'], 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
			"sinker_space-bold_desc-brain_mask_121": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': True, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
			"id_string_motion_139": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_default_monkey_skullstrip')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'motion', 'subdir': 'func', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
			"nii_motion_139": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
			"json_motion_139": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'motion:calc_motion_stats'], 'Sources': ['desc-preproc_bold', 'space-bold_desc-brain_mask', 'desc-movementParameters_motion', 'max-displacement', 'filtered-coordinate-transformation', 'coordinate-transformation', 'subject', 'scan'], 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
			"sinker_motion_139": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': True, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
			"id_string_desc-summary_motion_140": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_default_monkey_skullstrip')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'desc-summary_motion', 'subdir': 'func', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
			"nii_desc-summary_motion_140": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
			"json_desc-summary_motion_140": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'desc-summary_motion:calc_motion_stats'], 'Sources': ['desc-preproc_bold', 'space-bold_desc-brain_mask', 'desc-movementParameters_motion', 'max-displacement', 'filtered-coordinate-transformation', 'coordinate-transformation', 'subject', 'scan'], 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
			"sinker_desc-summary_motion_140": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': True, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
			"id_string_sbref_142": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_default_monkey_skullstrip')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'sbref', 'subdir': 'func', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
			"nii_sbref_142": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
			"json_sbref_142": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], 'Sources': ['desc-mean_bold'], 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
			"sinker_sbref_142": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': True, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
			"id_string_space-T1w_sbref_150": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_default_monkey_skullstrip')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'space-T1w_sbref', 'subdir': 'func', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
			"nii_space-T1w_sbref_150": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
			"json_space-T1w_sbref_150": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'space-T1w_sbref:coregistration'], 'Sources': ['sbref', 'desc-motion_bold', 'pe-direction', 'desc-preproc_T1w', 'label-WM_mask', 'desc-head_T1w'], 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
			"sinker_space-T1w_sbref_150": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': True, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
			"id_string_from-bold_to-T1w_mode-image_desc-linear_xfm_151": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_default_monkey_skullstrip')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'from-bold_to-T1w_mode-image_desc-linear_xfm', 'subdir': 'func', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
			"nii_from-bold_to-T1w_mode-image_desc-linear_xfm_151": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
			"json_from-bold_to-T1w_mode-image_desc-linear_xfm_151": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], 'Sources': ['sbref', 'desc-motion_bold', 'pe-direction', 'desc-preproc_T1w', 'label-WM_mask', 'desc-head_T1w'], 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
			"sinker_from-bold_to-T1w_mode-image_desc-linear_xfm_151": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': True, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
			"id_string_from-bold_to-template_mode-image_xfm_158": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_default_monkey_skullstrip')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'from-bold_to-template_mode-image_xfm', 'subdir': 'func', 'template_desc': 'template - T1w-based skull-stripped template resampled to the desired preprocessed-functional resolution - /cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
			"nii_from-bold_to-template_mode-image_xfm_158": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
			"json_from-bold_to-template_mode-image_xfm_158": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_ANTs_anat_to_template'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-template_to-T1w_mode-image_xfm:register_ANTs_anat_to_template'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], ['T1w-brain-template-funcreg:template_resample'], 'from-bold_to-template_mode-image_xfm:create_func_to_T1template_xfm'], 'Sources': ['sbref', 'from-bold_to-T1w_mode-image_desc-linear_xfm', 'from-T1w_to-template_mode-image_xfm', 'from-template_to-T1w_mode-image_xfm', 'desc-brain_T1w', 'T1w-brain-template-funcreg'], 'Template': 'template - T1w-based skull-stripped template resampled to the desired preprocessed-functional resolution - /cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'Resolution': '2mm', 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
			"sinker_from-bold_to-template_mode-image_xfm_158": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': True, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
			"id_string_from-template_to-bold_mode-image_xfm_159": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_default_monkey_skullstrip')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'from-template_to-bold_mode-image_xfm', 'subdir': 'func', 'template_desc': 'template - T1w-based skull-stripped template resampled to the desired preprocessed-functional resolution - /cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
			"nii_from-template_to-bold_mode-image_xfm_159": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
			"json_from-template_to-bold_mode-image_xfm_159": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_ANTs_anat_to_template'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-template_to-T1w_mode-image_xfm:register_ANTs_anat_to_template'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], ['T1w-brain-template-funcreg:template_resample'], 'from-template_to-bold_mode-image_xfm:create_func_to_T1template_xfm'], 'Sources': ['sbref', 'from-bold_to-T1w_mode-image_desc-linear_xfm', 'from-T1w_to-template_mode-image_xfm', 'from-template_to-T1w_mode-image_xfm', 'desc-brain_T1w', 'T1w-brain-template-funcreg'], 'Template': 'template - T1w-based skull-stripped template resampled to the desired preprocessed-functional resolution - /cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'Resolution': '2mm', 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
			"sinker_from-template_to-bold_mode-image_xfm_159": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': True, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
			"id_string_desc-confounds_timeseries_187": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_default_monkey_skullstrip')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'desc-confounds_timeseries', 'subdir': 'func', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
			"nii_desc-confounds_timeseries_187": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
			"json_desc-confounds_timeseries_187": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [['TR:func_metadata_ingress'], [['TR:func_metadata_ingress'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-jenkinson:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-power:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'dvars:calc_motion_stats'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-CSF_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-GM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_ANTs_anat_to_template'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-T1w_to-template_mode-image_desc-linear_xfm:register_ANTs_anat_to_template'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking', 'desc-preproc_bold:func_normalize'], 'desc-confounds_timeseries:nuisance_regressors_generation_T1w_Regressor_1'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-jenkinson:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-power:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'dvars:calc_motion_stats'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking', 'desc-preproc_bold:func_normalize'], 'desc-confounds_timeseries:nuisance_regression_native'], 'Sources': ['TR', 'desc-confounds_timeseries', 'space-bold_desc-brain_mask', 'framewise-displacement-jenkinson', 'framewise-displacement-power', 'dvars'], 'Description': 'Regressors that were applied in native space', 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
			"sinker_desc-confounds_timeseries_187": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': True, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
			"id_string_space-template_desc-preproc_bold_204": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_default_monkey_skullstrip')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'space-template_desc-preproc_bold', 'subdir': 'func', 'template_desc': 'template - T1w-based skull-stripped template resampled to the desired preprocessed-functional resolution - /cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
			"nii_space-template_desc-preproc_bold_204": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
			"json_space-template_desc-preproc_bold_204": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [['TR:func_metadata_ingress'], [['TR:func_metadata_ingress'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-jenkinson:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-power:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'dvars:calc_motion_stats'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-CSF_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-GM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_ANTs_anat_to_template'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-T1w_to-template_mode-image_desc-linear_xfm:register_ANTs_anat_to_template'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking', 'desc-preproc_bold:func_normalize'], 'desc-confounds_timeseries:nuisance_regressors_generation_T1w_Regressor_1'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-jenkinson:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-power:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'dvars:calc_motion_stats'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking', 'desc-preproc_bold:func_normalize'], 'desc-preproc_bold:nuisance_regression_native'], [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-stc_bold:func_slice_time'], ['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], ['pe-direction:func_metadata_ingress'], 'desc-preproc_bold:apply_phasediff_to_timeseries_separately_default'], [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-stc_bold:func_slice_time'], ['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_ANTs_anat_to_template'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-template_to-T1w_mode-image_xfm:register_ANTs_anat_to_template'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], ['T1w-brain-template-funcreg:template_resample'], 'from-bold_to-template_mode-image_xfm:create_func_to_T1template_xfm'], 'desc-preproc_bold:apply_blip_to_timeseries_separately_default'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_ANTs_anat_to_template'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-template_to-T1w_mode-image_xfm:register_ANTs_anat_to_template'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], ['T1w-brain-template-funcreg:template_resample'], 'from-bold_to-template_mode-image_xfm:create_func_to_T1template_xfm'], ['T1w-brain-template-funcreg:template_resample'], 'space-template_desc-preproc_bold:transform_timeseries_to_T1template'], 'CpacVariant': {'bold': ['apply_phasediff_to_timeseries_separately_default', 'apply_blip_to_timeseries_separately_default'], 'space-template_bold': ['transform_timeseries_to_T1template']}, 'SkullStripped': True, 'Sources': ['desc-preproc_bold', 'from-bold_to-template_mode-image_xfm', 'T1w-brain-template-funcreg'], 'Template': 'template - T1w-based skull-stripped template resampled to the desired preprocessed-functional resolution - /cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'Resolution': '2mm', 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
			"sinker_space-template_desc-preproc_bold_204": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': True, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
			"id_string_space-template_sbref_208": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_default_monkey_skullstrip')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'space-template_sbref', 'subdir': 'func', 'template_desc': 'template - T1w-based skull-stripped template resampled to the desired preprocessed-functional resolution - /cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
			"nii_space-template_sbref_208": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
			"json_space-template_sbref_208": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_ANTs_anat_to_template'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-template_to-T1w_mode-image_xfm:register_ANTs_anat_to_template'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], ['T1w-brain-template-funcreg:template_resample'], 'from-bold_to-template_mode-image_xfm:create_func_to_T1template_xfm'], ['T1w-brain-template-funcreg:template_resample'], 'space-template_sbref:transform_sbref_to_T1template'], 'Sources': ['sbref', 'from-bold_to-template_mode-image_xfm', 'T1w-brain-template-funcreg'], 'Description': 'Single-volume sbref of the BOLD time-series transformed to template space.', 'Template': 'template - T1w-based skull-stripped template resampled to the desired preprocessed-functional resolution - /cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'Resolution': '2mm', 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
			"sinker_space-template_sbref_208": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': True, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
			"id_string_space-template_desc-bold_mask_212": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_default_monkey_skullstrip')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'space-template_desc-bold_mask', 'subdir': 'func', 'template_desc': 'template - T1w-based skull-stripped template resampled to the desired preprocessed-functional resolution - /cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
			"nii_space-template_desc-bold_mask_212": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
			"json_space-template_desc-bold_mask_212": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_ANTs_anat_to_template'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-template_to-T1w_mode-image_xfm:register_ANTs_anat_to_template'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], ['T1w-brain-template-funcreg:template_resample'], 'from-bold_to-template_mode-image_xfm:create_func_to_T1template_xfm'], ['T1w-brain-template-funcreg:template_resample'], 'space-template_desc-bold_mask:transform_bold_mask_to_T1template_default'], 'Sources': ['space-bold_desc-brain_mask', 'from-bold_to-template_mode-image_xfm', 'T1w-brain-template-funcreg'], 'Template': 'template - T1w-based skull-stripped template resampled to the desired preprocessed-functional resolution - /cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'Resolution': '2mm', 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
			"sinker_space-template_desc-bold_mask_212": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': True, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
			"id_string_space-template_res-derivative_desc-bold_mask_216": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_default_monkey_skullstrip')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'space-template_res-derivative_desc-bold_mask', 'subdir': 'func', 'template_desc': 'template - T1w-based skull-stripped template resampled to the desired functional derivative resolution - /cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
			"nii_space-template_res-derivative_desc-bold_mask_216": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
			"json_space-template_res-derivative_desc-bold_mask_216": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_ANTs_anat_to_template'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-template_to-T1w_mode-image_xfm:register_ANTs_anat_to_template'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], ['T1w-brain-template-funcreg:template_resample'], 'from-bold_to-template_mode-image_xfm:create_func_to_T1template_xfm'], ['T1w-brain-template-deriv:template_resample'], 'space-template_res-derivative_desc-bold_mask:transform_deriv_mask_to_T1template_default'], 'Sources': ['space-bold_desc-brain_mask', 'from-bold_to-template_mode-image_xfm', 'T1w-brain-template-deriv'], 'Template': 'template - T1w-based skull-stripped template resampled to the desired functional derivative resolution - /cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'Resolution': '2mm', 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
			"sinker_space-template_res-derivative_desc-bold_mask_216": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': True, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
			"id_string_desc-boldSnrAxial_quality_222": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_default_monkey_skullstrip')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'desc-boldSnrAxial_quality', 'subdir': 'func', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
			"nii_desc-boldSnrAxial_quality_222": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
			"json_desc-boldSnrAxial_quality_222": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [['TR:func_metadata_ingress'], [['TR:func_metadata_ingress'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-jenkinson:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-power:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'dvars:calc_motion_stats'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-CSF_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-GM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_ANTs_anat_to_template'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-T1w_to-template_mode-image_desc-linear_xfm:register_ANTs_anat_to_template'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking', 'desc-preproc_bold:func_normalize'], 'desc-confounds_timeseries:nuisance_regressors_generation_T1w_Regressor_1'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-jenkinson:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-power:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'dvars:calc_motion_stats'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking', 'desc-preproc_bold:func_normalize'], 'desc-preproc_bold:nuisance_regression_native'], [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-stc_bold:func_slice_time'], ['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], ['pe-direction:func_metadata_ingress'], 'desc-preproc_bold:apply_phasediff_to_timeseries_separately_default'], [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-stc_bold:func_slice_time'], ['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_ANTs_anat_to_template'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-template_to-T1w_mode-image_xfm:register_ANTs_anat_to_template'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], ['T1w-brain-template-funcreg:template_resample'], 'from-bold_to-template_mode-image_xfm:create_func_to_T1template_xfm'], 'desc-preproc_bold:apply_blip_to_timeseries_separately_default'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'space-T1w_sbref:coregistration'], 'desc-boldSnrAxial_quality:qc_snr_plot'], 'CpacVariant': {'bold': ['apply_phasediff_to_timeseries_separately_default', 'apply_blip_to_timeseries_separately_default']}, 'Sources': ['desc-preproc_bold', 'space-bold_desc-brain_mask', 'from-bold_to-T1w_mode-image_desc-linear_xfm', 'desc-preproc_T1w', 'space-T1w_sbref'], 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
			"sinker_desc-boldSnrAxial_quality_222": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': True, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
			"id_string_desc-boldSnrSagittal_quality_223": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_default_monkey_skullstrip')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'desc-boldSnrSagittal_quality', 'subdir': 'func', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
			"nii_desc-boldSnrSagittal_quality_223": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
			"json_desc-boldSnrSagittal_quality_223": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [['TR:func_metadata_ingress'], [['TR:func_metadata_ingress'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-jenkinson:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-power:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'dvars:calc_motion_stats'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-CSF_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-GM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_ANTs_anat_to_template'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-T1w_to-template_mode-image_desc-linear_xfm:register_ANTs_anat_to_template'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking', 'desc-preproc_bold:func_normalize'], 'desc-confounds_timeseries:nuisance_regressors_generation_T1w_Regressor_1'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-jenkinson:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-power:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'dvars:calc_motion_stats'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking', 'desc-preproc_bold:func_normalize'], 'desc-preproc_bold:nuisance_regression_native'], [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-stc_bold:func_slice_time'], ['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], ['pe-direction:func_metadata_ingress'], 'desc-preproc_bold:apply_phasediff_to_timeseries_separately_default'], [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-stc_bold:func_slice_time'], ['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_ANTs_anat_to_template'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-template_to-T1w_mode-image_xfm:register_ANTs_anat_to_template'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], ['T1w-brain-template-funcreg:template_resample'], 'from-bold_to-template_mode-image_xfm:create_func_to_T1template_xfm'], 'desc-preproc_bold:apply_blip_to_timeseries_separately_default'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'space-T1w_sbref:coregistration'], 'desc-boldSnrSagittal_quality:qc_snr_plot'], 'CpacVariant': {'bold': ['apply_phasediff_to_timeseries_separately_default', 'apply_blip_to_timeseries_separately_default']}, 'Sources': ['desc-preproc_bold', 'space-bold_desc-brain_mask', 'from-bold_to-T1w_mode-image_desc-linear_xfm', 'desc-preproc_T1w', 'space-T1w_sbref'], 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
			"sinker_desc-boldSnrSagittal_quality_223": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': True, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
			"id_string_desc-boldSnrHist_quality_224": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_default_monkey_skullstrip')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'desc-boldSnrHist_quality', 'subdir': 'func', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
			"nii_desc-boldSnrHist_quality_224": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
			"json_desc-boldSnrHist_quality_224": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [['TR:func_metadata_ingress'], [['TR:func_metadata_ingress'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-jenkinson:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-power:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'dvars:calc_motion_stats'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-CSF_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-GM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_ANTs_anat_to_template'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-T1w_to-template_mode-image_desc-linear_xfm:register_ANTs_anat_to_template'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking', 'desc-preproc_bold:func_normalize'], 'desc-confounds_timeseries:nuisance_regressors_generation_T1w_Regressor_1'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-jenkinson:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-power:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'dvars:calc_motion_stats'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking', 'desc-preproc_bold:func_normalize'], 'desc-preproc_bold:nuisance_regression_native'], [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-stc_bold:func_slice_time'], ['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], ['pe-direction:func_metadata_ingress'], 'desc-preproc_bold:apply_phasediff_to_timeseries_separately_default'], [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-stc_bold:func_slice_time'], ['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_ANTs_anat_to_template'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-template_to-T1w_mode-image_xfm:register_ANTs_anat_to_template'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], ['T1w-brain-template-funcreg:template_resample'], 'from-bold_to-template_mode-image_xfm:create_func_to_T1template_xfm'], 'desc-preproc_bold:apply_blip_to_timeseries_separately_default'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'space-T1w_sbref:coregistration'], 'desc-boldSnrHist_quality:qc_snr_plot'], 'CpacVariant': {'bold': ['apply_phasediff_to_timeseries_separately_default', 'apply_blip_to_timeseries_separately_default']}, 'Sources': ['desc-preproc_bold', 'space-bold_desc-brain_mask', 'from-bold_to-T1w_mode-image_desc-linear_xfm', 'desc-preproc_T1w', 'space-T1w_sbref'], 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
			"sinker_desc-boldSnrHist_quality_224": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': True, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
			"id_string_desc-boldSnr_quality_225": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_default_monkey_skullstrip')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'desc-boldSnr_quality', 'subdir': 'func', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
			"nii_desc-boldSnr_quality_225": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
			"json_desc-boldSnr_quality_225": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [['TR:func_metadata_ingress'], [['TR:func_metadata_ingress'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-jenkinson:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-power:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'dvars:calc_motion_stats'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-CSF_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-GM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_ANTs_anat_to_template'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-T1w_to-template_mode-image_desc-linear_xfm:register_ANTs_anat_to_template'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking', 'desc-preproc_bold:func_normalize'], 'desc-confounds_timeseries:nuisance_regressors_generation_T1w_Regressor_1'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-jenkinson:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-power:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'dvars:calc_motion_stats'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking', 'desc-preproc_bold:func_normalize'], 'desc-preproc_bold:nuisance_regression_native'], [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-stc_bold:func_slice_time'], ['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], ['pe-direction:func_metadata_ingress'], 'desc-preproc_bold:apply_phasediff_to_timeseries_separately_default'], [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-stc_bold:func_slice_time'], ['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_ANTs_anat_to_template'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-template_to-T1w_mode-image_xfm:register_ANTs_anat_to_template'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], ['T1w-brain-template-funcreg:template_resample'], 'from-bold_to-template_mode-image_xfm:create_func_to_T1template_xfm'], 'desc-preproc_bold:apply_blip_to_timeseries_separately_default'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'space-T1w_sbref:coregistration'], 'desc-boldSnr_quality:qc_snr_plot'], 'CpacVariant': {'bold': ['apply_phasediff_to_timeseries_separately_default', 'apply_blip_to_timeseries_separately_default']}, 'Sources': ['desc-preproc_bold', 'space-bold_desc-brain_mask', 'from-bold_to-T1w_mode-image_desc-linear_xfm', 'desc-preproc_T1w', 'space-T1w_sbref'], 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
			"sinker_desc-boldSnr_quality_225": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': True, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
			"id_string_desc-movementParametersTrans_quality_230": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_default_monkey_skullstrip')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'desc-movementParametersTrans_quality', 'subdir': 'func', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
			"nii_desc-movementParametersTrans_quality_230": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
			"json_desc-movementParametersTrans_quality_230": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg', 'desc-movementParametersTrans_quality:qc_motion_plot'], 'Sources': ['desc-movementParameters_motion'], 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
			"sinker_desc-movementParametersTrans_quality_230": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': True, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
			"id_string_desc-movementParametersRot_quality_231": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_default_monkey_skullstrip')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'desc-movementParametersRot_quality', 'subdir': 'func', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
			"nii_desc-movementParametersRot_quality_231": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
			"json_desc-movementParametersRot_quality_231": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg', 'desc-movementParametersRot_quality:qc_motion_plot'], 'Sources': ['desc-movementParameters_motion'], 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
			"sinker_desc-movementParametersRot_quality_231": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': True, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
			"id_string_desc-framewiseDisplacementJenkinsonPlot_quality_232": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_default_monkey_skullstrip')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'desc-framewiseDisplacementJenkinsonPlot_quality', 'subdir': 'func', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
			"nii_desc-framewiseDisplacementJenkinsonPlot_quality_232": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
			"json_desc-framewiseDisplacementJenkinsonPlot_quality_232": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-jenkinson:calc_motion_stats', 'desc-framewiseDisplacementJenkinsonPlot_quality:qc_fd_plot'], 'Sources': ['framewise-displacement-jenkinson'], 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
			"sinker_desc-framewiseDisplacementJenkinsonPlot_quality_232": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': True, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}"
		},
		"outputs": {
			"func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1": "{'inputnode': {'creds_path': None, 'dl_dir': None, 'scan': None, 'subject': None}, 'check_func_scan': {}, 'selectrest': {'file_path': None}, 'check_for_s3': {'local_path': None}, 'outputspec': {'magnitude': None, 'phase_diff': None, 'rest': None, 'scan': None, 'scan_params': None, 'subject': None}, 'select_scan_params': {'file_path': None}, 's3_scan_params': {'local_path': None}}",
			"bold_scan_params_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1": "{'effective_echo_spacing': None, 'pe_direction': None, 'ref_slice': None, 'start_indx': None, 'stop_indx': None, 'template': None, 'tpattern': None, 'tr': None}",
			"anat_T1w_gather_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1": "{'inputnode': {'anat': None, 'creds_path': None, 'dl_dir': None, 'img_type': None, 'subject': None}, 'check_for_s3': {'local_path': None}, 'outputspec': {'anat': None, 'subject': None}}",
			"anat_deoblique_0": "{'out_file': None}",
			"anat_reorient_0": "{'out_file': None}",
			"acpc_align_50": "{'inputspec': {'anat_brain': None, 'anat_leaf': None, 'brain_mask': None, 'template_brain_for_acpc': None, 'template_brain_only_for_anat': None, 'template_head_for_acpc': None}, 'anat_acpc_1_fov': {'out_file': None, 'out_log': None, 'out_matrix_file': None}, 'anat_acpc_2_fov_convertxfm': {'out_file': None}, 'anat_acpc_3_flirt': {'out_file': None, 'out_log': None, 'out_matrix_file': None}, 'anat_acpc_4_concatxfm': {'out_file': None}, 'anat_acpc_5_aff2rigid': {'out_mat': None}, 'outputspec': {'acpc_aligned_brain': None, 'acpc_aligned_head': None, 'acpc_brain_mask': None, 'from-T1w_to-ACPC_mode-image_desc-aff2rig_xfm': None}, 'anat_acpc_6_applywarp': {'out_file': None}}",
			"gather_T1w-ACPC-template": "{'inputnode': {'creds_path': None, 'data': None, 'dl_dir': None, 'scan': None, 'unique_id': None}, 'check_for_s3': {'local_path': None}, 'outputspec': {'data': None, 'scan': None, 'unique_id': None}}",
			"anat_denoise_54": "{'noise_image': None, 'output_image': None}",
			"anat_n4_56": "{'bias_image': None, 'output_image': None}",
			"gather_unet-model": "{'inputnode': {'creds_path': None, 'data': None, 'dl_dir': None, 'scan': None, 'unique_id': None}, 'check_for_s3': {'local_path': None}, 'outputspec': {'data': None, 'scan': None, 'unique_id': None}}",
			"unet_mask_59": "{'out_path': None}",
			"unet_masked_brain_59": "{'out_file': None}",
			"native_brain_to_template_brain_59": "{'out_file': None, 'out_log': None, 'out_matrix_file': None}",
			"resampled_T1w-brain-template": "{'resampled_template': None}",
			"native_head_to_template_head_59": "{'out_file': None, 'out_log': None, 'out_matrix_file': None}",
			"resampled_T1w-template": "{'resampled_template': None}",
			"template_brain_mask_59": "{'out_file': None}",
			"template_head_to_template_59": "{'composite_transform': None, 'elapsed_time': None, 'forward_invert_flags': None, 'forward_transforms': None, 'inverse_composite_transform': None, 'inverse_warped_image': None, 'metric_value': None, 'reverse_forward_invert_flags': None, 'reverse_forward_transforms': None, 'reverse_invert_flags': None, 'reverse_transforms': None, 'save_state': None, 'warped_image': None}",
			"template_head_transform_to_template_59": "{'output_image': None}",
			"convert_xfm": "{'out_file': None}",
			"template_brain_to_native_brain_59": "{'out_file': None, 'out_log': None, 'out_matrix_file': None}",
			"refined_mask_59": "{'out_file': None}",
			"brain_extraction_64": "{'out_file': None}",
			"ANTS_T1_to_template_70": "{'inputspec': {'input_brain': None, 'input_head': None, 'input_mask': None, 'interpolation': None, 'reference_brain': None, 'reference_head': None, 'reference_mask': None, 'transform': None}, 'anat_mni_ants_register': {'inputspec': {'ants_para': None, 'fixed_image_mask': None, 'interp': None, 'moving_brain': None, 'moving_mask': None, 'moving_skull': None, 'reference_brain': None, 'reference_mask': None, 'reference_skull': None}, 'calc_ants_warp': {'warp_list': None, 'warped_image': None}, 'select_forward_initial': {'selected_warp': None}, 'select_forward_rigid': {'selected_warp': None}, 'select_forward_affine': {'selected_warp': None}, 'select_forward_warp': {'selected_warp': None}, 'select_inverse_warp': {'selected_warp': None}, 'outputspec': {'ants_affine_xfm': None, 'ants_initial_xfm': None, 'ants_rigid_xfm': None, 'composite_transform': None, 'inverse_warp_field': None, 'normalized_output_brain': None, 'wait': None, 'warp_field': None}}, 'write_composite_linear_xfm': {'output_image': None}, 'collect_transforms': {'out': None}, 'check_transforms': {'checked_transform_list': None, 'list_length': None}, 'write_composite_invlinear_xfm': {'output_image': None}, 'collect_inv_transforms': {'out': None}, 'check_inv_transforms': {'checked_transform_list': None, 'list_length': None}, 'inverse_transform_flags': {'inverse_transform_flags': None}, 'write_composite_xfm': {'output_image': None}, 'collect_all_transforms': {'out': None}, 'check_all_transforms': {'checked_transform_list': None, 'list_length': None}, 'write_composite_inv_xfm': {'output_image': None}, 'collect_all_inv_transforms': {'out': None}, 'check_all_inv_transforms': {'checked_transform_list': None, 'list_length': None}, 'inverse_all_transform_flags': {'inverse_transform_flags': None}}",
			"resampled_T1w-brain-template-mask": "{'resampled_template': None}",
			"warp_wholehead_T1w_to_T1template_83": "{'inputspec': {'input_image': None, 'interpolation': None, 'reference': None, 'transform': None}, 'apply_warp_warp_wholehead_T1w_to_T1template_83': {'output_image': None}, 'interp_string': {'interpolation': None}, 'single_ants_xfm_to_list': {'transform_list': None}, 'outputspec': {'output_image': None}}",
			"write_composite_xfm": "{'output_image': None}",
			"warp_T1mask_to_T1template_87": "{'inputspec': {'input_image': None, 'interpolation': None, 'reference': None, 'transform': None}, 'apply_warp_warp_T1mask_to_T1template_87': {'output_image': None}, 'interp_string': {'interpolation': None}, 'single_ants_xfm_to_list': {'transform_list': None}, 'outputspec': {'output_image': None}}",
			"seg_preproc_ants_prior_91": "{'inputspec': {'anatomical_brain': None, 'anatomical_brain_mask': None, 'csf_label': None, 'gm_label': None, 'template_brain_list': None, 'template_segmentation_list': None, 'wm_label': None}, 'seg_preproc_ants_prior_91_antsJointLabel': {'multiatlas_Intensity': None, 'multiatlas_Labels': None}, 'seg_preproc_ants_prior_91_tissue_mask': {'csf_mask': None, 'gm_mask': None, 'wm_mask': None}, 'outputspec': {'csf_mask': None, 'gm_mask': None, 'wm_mask': None}}",
			"func_deoblique_2": "{'out_file': None}",
			"func_reorient_2": "{'out_file': None}",
			"edit_func_96": "{'inputspec': {'func': None, 'start_idx': None, 'stop_idx': None}, 'func_get_idx': {'startidx': None, 'stopidx': None}, 'func_drop_trs': {'out_file': None}, 'outputspec': {'edited_func': None}}",
			"func_despiked_98": "{'out_file': None}",
			"func_slice_timing_correction_100": "{'inputspec': {'func_ts': None, 'tpattern': None, 'tr': None}, 'slice_timing': {'out_file': None, 'timing_file': None}, 'outputspec': {'slice_time_corrected': None}}",
			"func_mean_103": "{'out_file': None}",
			"func_get_mean_RPI_106": "{'out_file': None}",
			"out_split_func_109": "{'out_file': None}",
			"func_generate_ref_109": "{'md1d_file': None, 'oned_file': None, 'oned_matrix_save': None, 'out_file': None}",
			"out_motion_109": "{'out_file': None}",
			"func_motion_correct_3dvolreg_109": "{'md1d_file': None, 'oned_file': None, 'oned_matrix_save': None, 'out_file': None}",
			"out_motion_A_109": "{'out_file': None}",
			"out_md1d_109": "{'out_file': None}",
			"out_oned_109": "{'out_file': None}",
			"out_oned_matrix_109": "{'out_file': None}",
			"anat_brain_mask_bin_117": "{'out_file': None}",
			"anat_brain_mask_filled_117": "{'out_file': None}",
			"raw_func_deoblique_117": "{'out_file': None}",
			"raw_func_reorient_117": "{'out_file': None}",
			"init_bold_mask_117": "{'inputspec': {'anat_brain': None, 'anatomical_brain_mask': None, 'func': None, 'init_func_brain_mask': None}, 'func_single_volume': {'out_file': None}, 'func_tmp_brain': {'out_file': None}, 'func_single_volume_n4_corrected': {'bias_image': None, 'output_image': None}, 'func_tmp_brain_mask_pre': {'inskull_mask_file': None, 'inskull_mesh_file': None, 'mask_file': None, 'meshfile': None, 'out_file': None, 'outline_file': None, 'outskin_mask_file': None, 'outskin_mesh_file': None, 'outskull_mask_file': None, 'outskull_mesh_file': None, 'skull_file': None, 'skull_mask_file': None}, 'func_tmp_brain_mask_dil': {'out_file': None}, 'func_to_anat_linear_reg': {'out_file': None, 'out_log': None, 'out_matrix_file': None}, 'inv_func2anat_affine': {'out_file': None}, 'reg_anat_mask_to_func': {'out_file': None, 'out_log': None, 'out_matrix_file': None}, 'func_mask': {'out_file': None}, 'outputspec': {'func_brain_mask': None}}",
			"func_tmp_brain_mask_dil_117": "{'out_file': None}",
			"refined_bold_mask_117": "{'inputspec': {'anat_brain': None, 'anatomical_brain_mask': None, 'func': None, 'init_func_brain_mask': None}, 'func_single_volume': {'out_file': None}, 'func_tmp_brain': {'out_file': None}, 'func_to_anat_linear_reg': {'out_file': None, 'out_log': None, 'out_matrix_file': None}, 'inv_func2anat_affine': {'out_file': None}, 'reg_anat_mask_to_func': {'out_file': None, 'out_log': None, 'out_matrix_file': None}, 'func_mask': {'out_file': None}, 'outputspec': {'func_brain_mask': None}}",
			"func_mask_final_117": "{'out_file': None}",
			"func_extract_brain_122": "{'out_file': None}",
			"gen_motion_stats_126": "{'inputspec': {'mask': None, 'max_displacement': None, 'motion_correct': None, 'movement_parameters': None, 'rels_displacement': None, 'transformations': None}, 'cal_DVARS': {'out_file': None}, 'cal_DVARS_strip': {'DVARS_val': None, 'out_file': None}, 'outputspec': {'DVARS_1D': None, 'FDJ_1D': None, 'FDP_1D': None, 'desc-summary_motion': None, 'motion': None, 'motion_params': None, 'power_params': None}, 'calculate_FD': {'fd': None, 'out_file': None}, 'calculate_FDJ': {'fd': None, 'out_file': None}, 'get_all_motion_parameters': {'all_motion_val': None, 'summary_motion_power': None}, 'calc_motion_parameters': {'info': None, 'maxdisp': None, 'out_file': None, 'relsdisp': None}, 'calc_power_parameters': {'info': None, 'out_file': None}}",
			"func_normalize_124": "{'out_file': None}",
			"func_mean_n4_corrected_105": "{'bias_image': None, 'output_image': None}",
			"func_to_anat_FLIRT_143": "{'inputspec': {'anat': None, 'dof': None, 'fieldmap': None, 'fieldmapmask': None, 'func': None, 'interp': None}, 'linear_func_to_anat': {'out_file': None, 'out_log': None, 'out_matrix_file': None}, 'outputspec': {'anat_func_nobbreg': None, 'func_to_anat_linear_xfm_nobbreg': None}}",
			"create_func_to_T1wtemplate_xfm_152": "{'inputspec': {'T1w-brain-template_funcreg': None, 'T1w_to_template_xfm': None, 'blip_warp': None, 'coreg_xfm': None, 'input_brain': None, 'mean_bold': None, 'template_to_T1w_xfm': None}, 'fsl_reg_2_itk': {'itk_transform': None}, 'change_transform_type': {'updated_affine_file': None}, 'write_composite_xfm': {'output_image': None}, 'collect_all_transforms': {'out': None}, 'write_composite_inv_xfm': {'output_image': None}, 'collect_inv_transforms': {'out': None}}",
			"resampled_T1w-brain-template-funcreg": "{'resampled_template': None}",
			"write_composite_inv_xfm": "{'output_image': None}",
			"nuisance_regressors_Regressor_1_160": "{'inputspec': {'anat_to_func_linear_xfm_file_path': None, 'anat_to_mni_linear_xfm_file_path': None, 'anatomical_eroded_brain_mask_file_path': None, 'anatomical_file_path': None, 'creds_path': None, 'csf_mask_file_path': None, 'dl_dir': None, 'dvars_file_path': None, 'fd_j_file_path': None, 'fd_p_file_path': None, 'func_to_anat_linear_xfm_file_path': None, 'functional_brain_mask_file_path': None, 'functional_file_path': None, 'gm_mask_file_path': None, 'lat_ventricles_mask_file_path': None, 'mni_to_anat_linear_xfm_file_path': None, 'motion_parameters_file_path': None, 'selector': None, 'tr': None, 'wm_mask_file_path': None}, 'functional_mean': {'out_file': None}, 'WhiteMatter_Functional_flirt': {'out_file': None, 'out_log': None, 'out_matrix_file': None}, 'WhiteMatter_merge_masks': {'out': None}, 'WhiteMatter_union_masks': {'out_file': None}, 'WhiteMatter_std': {'out_file': None}, 'WhiteMatter_standardized': {'out_file': None}, 'WhiteMatter_pc': {'out_file': None, 'pcs_file': None}, 'CerebrospinalFluid_Functional_flirt': {'out_file': None, 'out_log': None, 'out_matrix_file': None}, 'CerebrospinalFluid_merge_masks': {'out': None}, 'CerebrospinalFluid_union_masks': {'out_file': None}, 'CerebrospinalFluid_std': {'out_file': None}, 'CerebrospinalFluid_standardized': {'out_file': None}, 'CerebrospinalFluid_pc': {'out_file': None, 'pcs_file': None}, 'GlobalSignal_merge_masks': {'out': None}, 'GlobalSignal_union_masks': {'out_file': None}, 'GlobalSignal_mean': {'out_file': None}, 'build_nuisance_regressors': {'censor_indices': None, 'out_file': None}, 'outputspec': {'censor_indices': None, 'regressors_file_path': None}}",
			"anat_to_func_linear_xfm_Regressor_1_160": "{'out_file': None}",
			"write_composite_invlinear_xfm": "{'output_image': None}",
			"write_composite_linear_xfm": "{'output_image': None}",
			"nuisance_regression_space-native_reg-Regressor_1_177": "{'inputspec': {'dvars_file_path': None, 'fd_j_file_path': None, 'fd_p_file_path': None, 'functional_brain_mask_file_path': None, 'functional_file_path': None, 'regressor_file': None, 'selector': None}, 'nuisance_regression': {'out_file': None}, 'outputspec': {'residual_file_path': None}}",
			"filtering_bold_and_regressors_space-native_reg-Regressor_1_177": "{'inputspec': {'functional_brain_mask_file_path': None, 'functional_file_path': None, 'nuisance_selectors': None, 'regressors_file_path': None, 'tr': None}, 'frequency_filter': {'bandpassed_file': None, 'regressor_file': None}, 'outputspec': {'residual_file_path': None, 'residual_regressor': None}}",
			"warp_ts_to_T1template_201": "{'inputspec': {'input_image': None, 'interpolation': None, 'reference': None, 'transform': None}, 'apply_warp_warp_ts_to_T1template_201': {'output_image': None}, 'interp_string': {'interpolation': None}, 'single_ants_xfm_to_list': {'transform_list': None}, 'outputspec': {'output_image': None}}",
			"warp_funcreg-sbref_to_T1wtemplate_205": "{'inputspec': {'input_image': None, 'interpolation': None, 'reference': None, 'transform': None}, 'apply_warp_warp_funcreg-sbref_to_T1wtemplate_205': {'output_image': None}, 'interp_string': {'interpolation': None}, 'single_ants_xfm_to_list': {'transform_list': None}, 'outputspec': {'output_image': None}}",
			"warp_funcreg-mask_to_T1wtemplate_209": "{'inputspec': {'input_image': None, 'interpolation': None, 'reference': None, 'transform': None}, 'apply_warp_warp_funcreg-mask_to_T1wtemplate_209': {'output_image': None}, 'interp_string': {'interpolation': None}, 'single_ants_xfm_to_list': {'transform_list': None}, 'outputspec': {'output_image': None}}",
			"warp_deriv-mask_to_T1wtemplate_213": "{'inputspec': {'input_image': None, 'interpolation': None, 'reference': None, 'transform': None}, 'apply_warp_warp_deriv-mask_to_T1wtemplate_213': {'output_image': None}, 'interp_string': {'interpolation': None}, 'single_ants_xfm_to_list': {'transform_list': None}, 'outputspec': {'output_image': None}}",
			"resampled_T1w-brain-template-deriv": "{'resampled_template': None}",
			"qc_snr_217": "{'inputspec': {'anatomical_brain': None, 'functional_brain_mask': None, 'functional_preprocessed': None, 'functional_to_anat_linear_xfm': None, 'mean_functional_in_anat': None}, 'std_dev': {'out_file': None}, 'std_dev_anat': {'out_file': None}, 'snr': {'out_file': None}, 'snr_val': {'snr_storefl': None}, 'hist_snr': {'hist_path': None}, 'dp_snr': {'modified_measure_file': None}, 'montage_snr': {'inputspec': {'overlay': None, 'underlay': None}, 'resample_u': {'new_fname': None}, 'outputspec': {'axial_png': None, 'resampled_overlay': None, 'resampled_underlay': None, 'sagittal_png': None}, 'resample_o': {'new_fname': None}, 'montage_a': {'png_name': None}, 'montage_s': {'png_name': None}}, 'outputspec': {'snr_axial_image': None, 'snr_histogram_image': None, 'snr_mean': None, 'snr_sagittal_image': None}}",
			"anat_edge_226": "{'out_file': None}",
			"montage_anat_226": "{'inputspec': {'overlay': None, 'underlay': None}, 'resample_u': {'new_fname': None}, 'outputspec': {'axial_png': None, 'resampled_overlay': None, 'resampled_underlay': None, 'sagittal_png': None}, 'resample_o': {'new_fname': None}, 'montage_a': {'png_name': None}, 'montage_s': {'png_name': None}}",
			"qc_motion_114": "{'inputspec': {'motion_parameters': None}, 'motion_plot': {'rotation_plot': None, 'translation_plot': None}, 'outputspec': {'motion_rotation_plot': None, 'motion_translation_plot': None}}",
			"qc_fd_135": "{'inputspec': {'excluded_volumes': None, 'fd': None}, 'fd_plot': {'hist_path': None}, 'outputspec': {'fd_histogram_plot': None}}",
			"qc_skullstrip_233": "{'inputspec': {'anatomical_brain': None, 'anatomical_reorient': None}, 'skull_edge': {'out_file': None}, 'montage_skull': {'inputspec': {'overlay': None, 'underlay': None}, 'resample_u': {'new_fname': None}, 'outputspec': {'axial_png': None, 'resampled_overlay': None, 'resampled_underlay': None, 'sagittal_png': None}, 'resample_o': {'new_fname': None}, 'montage_a': {'png_name': None}, 'montage_s': {'png_name': None}}, 'outputspec': {'axial_image': None, 'sagittal_image': None}}",
			"anat_mni_ants_register": "{'inputspec': {'ants_para': None, 'fixed_image_mask': None, 'interp': None, 'moving_brain': None, 'moving_mask': None, 'moving_skull': None, 'reference_brain': None, 'reference_mask': None, 'reference_skull': None}, 'calc_ants_warp': {'warp_list': None, 'warped_image': None}, 'select_forward_initial': {'selected_warp': None}, 'select_forward_rigid': {'selected_warp': None}, 'select_forward_affine': {'selected_warp': None}, 'select_forward_warp': {'selected_warp': None}, 'select_inverse_warp': {'selected_warp': None}, 'outputspec': {'ants_affine_xfm': None, 'ants_initial_xfm': None, 'ants_rigid_xfm': None, 'composite_transform': None, 'inverse_warp_field': None, 'normalized_output_brain': None, 'wait': None, 'warp_field': None}}",
			"montage_mni_anat_237": "{'inputspec': {'overlay': None, 'underlay': None}, 'resample_u': {'new_fname': None}, 'outputspec': {'axial_png': None, 'resampled_overlay': None, 'resampled_underlay': None, 'sagittal_png': None}, 'resample_o': {'new_fname': None}, 'montage_a': {'png_name': None}, 'montage_s': {'png_name': None}}",
			"anat_template_edge_237": "{'out_file': None}",
			"carpet_seg_241": "{'inputspec': {'anatomical_csf_mask': None, 'anatomical_gm_mask': None, 'anatomical_wm_mask': None, 'functional_to_standard': None, 'mean_functional_to_standard': None}, 'gm_resample': {'out_file': None}, 'gm_mask': {'out_file': None}, 'wm_resample': {'out_file': None}, 'wm_mask': {'out_file': None}, 'csf_resample': {'out_file': None}, 'csf_mask': {'out_file': None}, 'carpet_plot': {'carpet_plot': None}, 'outputspec': {'carpet_plot': None}}",
			"gather_GM-path": "{'inputnode': {'creds_path': None, 'data': None, 'dl_dir': None, 'scan': None, 'unique_id': None}, 'check_for_s3': {'local_path': None}, 'outputspec': {'data': None, 'scan': None, 'unique_id': None}}",
			"gather_WM-path": "{'inputnode': {'creds_path': None, 'data': None, 'dl_dir': None, 'scan': None, 'unique_id': None}, 'check_for_s3': {'local_path': None}, 'outputspec': {'data': None, 'scan': None, 'unique_id': None}}",
			"gather_CSF-path": "{'inputnode': {'creds_path': None, 'data': None, 'dl_dir': None, 'scan': None, 'unique_id': None}, 'check_for_s3': {'local_path': None}, 'outputspec': {'data': None, 'scan': None, 'unique_id': None}}",
			"montage_mfi_247": "{'inputspec': {'overlay': None, 'underlay': None}, 'resample_u': {'new_fname': None}, 'outputspec': {'axial_png': None, 'resampled_overlay': None, 'resampled_underlay': None, 'sagittal_png': None}, 'resample_o': {'new_fname': None}, 'montage_a': {'png_name': None}, 'montage_s': {'png_name': None}}",
			"func_template_edge_247": "{'out_file': None}",
			"id_string_desc-preproc_T1w_67": "{'out_filename': None}",
			"nii_desc-preproc_T1w_67": "{'out_file': None}",
			"json_desc-preproc_T1w_67": "{'json_file': None}",
			"sinker_desc-preproc_T1w_67": "{'out_file': None}",
			"id_string_desc-head_T1w_69": "{'out_filename': None}",
			"nii_desc-head_T1w_69": "{'out_file': None}",
			"json_desc-head_T1w_69": "{'json_file': None}",
			"sinker_desc-head_T1w_69": "{'out_file': None}",
			"id_string_space-T1w_desc-brain_mask_63": "{'out_filename': None}",
			"nii_space-T1w_desc-brain_mask_63": "{'out_file': None}",
			"json_space-T1w_desc-brain_mask_63": "{'json_file': None}",
			"sinker_space-T1w_desc-brain_mask_63": "{'out_file': None}",
			"id_string_space-template_desc-preproc_T1w_76": "{'out_filename': None}",
			"nii_space-template_desc-preproc_T1w_76": "{'out_file': None}",
			"json_space-template_desc-preproc_T1w_76": "{'json_file': None}",
			"sinker_space-template_desc-preproc_T1w_76": "{'out_file': None}",
			"id_string_from-T1w_to-template_mode-image_xfm_77": "{'out_filename': None}",
			"nii_from-T1w_to-template_mode-image_xfm_77": "{'out_file': None}",
			"json_from-T1w_to-template_mode-image_xfm_77": "{'json_file': None}",
			"sinker_from-T1w_to-template_mode-image_xfm_77": "{'out_file': None}",
			"id_string_from-template_to-T1w_mode-image_xfm_78": "{'out_filename': None}",
			"nii_from-template_to-T1w_mode-image_xfm_78": "{'out_file': None}",
			"json_from-template_to-T1w_mode-image_xfm_78": "{'json_file': None}",
			"sinker_from-template_to-T1w_mode-image_xfm_78": "{'out_file': None}",
			"id_string_from-T1w_to-template_mode-image_desc-linear_xfm_79": "{'out_filename': None}",
			"nii_from-T1w_to-template_mode-image_desc-linear_xfm_79": "{'out_file': None}",
			"json_from-T1w_to-template_mode-image_desc-linear_xfm_79": "{'json_file': None}",
			"sinker_from-T1w_to-template_mode-image_desc-linear_xfm_79": "{'out_file': None}",
			"id_string_from-template_to-T1w_mode-image_desc-linear_xfm_80": "{'out_filename': None}",
			"nii_from-template_to-T1w_mode-image_desc-linear_xfm_80": "{'out_file': None}",
			"json_from-template_to-T1w_mode-image_desc-linear_xfm_80": "{'json_file': None}",
			"sinker_from-template_to-T1w_mode-image_desc-linear_xfm_80": "{'out_file': None}",
			"id_string_from-T1w_to-template_mode-image_desc-nonlinear_xfm_81": "{'out_filename': None}",
			"nii_from-T1w_to-template_mode-image_desc-nonlinear_xfm_81": "{'out_file': None}",
			"json_from-T1w_to-template_mode-image_desc-nonlinear_xfm_81": "{'json_file': None}",
			"sinker_from-T1w_to-template_mode-image_desc-nonlinear_xfm_81": "{'out_file': None}",
			"id_string_from-template_to-T1w_mode-image_desc-nonlinear_xfm_82": "{'out_filename': None}",
			"nii_from-template_to-T1w_mode-image_desc-nonlinear_xfm_82": "{'out_file': None}",
			"json_from-template_to-T1w_mode-image_desc-nonlinear_xfm_82": "{'json_file': None}",
			"sinker_from-template_to-T1w_mode-image_desc-nonlinear_xfm_82": "{'out_file': None}",
			"id_string_space-template_desc-head_T1w_86": "{'out_filename': None}",
			"nii_space-template_desc-head_T1w_86": "{'out_file': None}",
			"json_space-template_desc-head_T1w_86": "{'json_file': None}",
			"sinker_space-template_desc-head_T1w_86": "{'out_file': None}",
			"id_string_space-template_desc-brain_mask_90": "{'out_filename': None}",
			"nii_space-template_desc-brain_mask_90": "{'out_file': None}",
			"json_space-template_desc-brain_mask_90": "{'json_file': None}",
			"sinker_space-template_desc-brain_mask_90": "{'out_file': None}",
			"id_string_label-CSF_mask_93": "{'out_filename': None}",
			"nii_label-CSF_mask_93": "{'out_file': None}",
			"json_label-CSF_mask_93": "{'json_file': None}",
			"sinker_label-CSF_mask_93": "{'out_file': None}",
			"id_string_label-GM_mask_94": "{'out_filename': None}",
			"nii_label-GM_mask_94": "{'out_file': None}",
			"json_label-GM_mask_94": "{'json_file': None}",
			"sinker_label-GM_mask_94": "{'out_file': None}",
			"id_string_label-WM_mask_95": "{'out_filename': None}",
			"nii_label-WM_mask_95": "{'out_file': None}",
			"json_label-WM_mask_95": "{'json_file': None}",
			"sinker_label-WM_mask_95": "{'out_file': None}",
			"id_string_desc-preproc_bold_200": "{'out_filename': None}",
			"nii_desc-preproc_bold_200": "{'out_file': None}",
			"json_desc-preproc_bold_200": "{'json_file': None}",
			"sinker_desc-preproc_bold_200": "{'out_file': None}",
			"id_string_desc-mean_bold_105": "{'out_filename': None}",
			"nii_desc-mean_bold_105": "{'out_file': None}",
			"json_desc-mean_bold_105": "{'json_file': None}",
			"sinker_desc-mean_bold_105": "{'out_file': None}",
			"id_string_desc-movementParameters_motion_114": "{'out_filename': None}",
			"nii_desc-movementParameters_motion_114": "{'out_file': None}",
			"json_desc-movementParameters_motion_114": "{'json_file': None}",
			"sinker_desc-movementParameters_motion_114": "{'out_file': None}",
			"id_string_space-bold_desc-brain_mask_121": "{'out_filename': None}",
			"nii_space-bold_desc-brain_mask_121": "{'out_file': None}",
			"json_space-bold_desc-brain_mask_121": "{'json_file': None}",
			"sinker_space-bold_desc-brain_mask_121": "{'out_file': None}",
			"id_string_motion_139": "{'out_filename': None}",
			"nii_motion_139": "{'out_file': None}",
			"json_motion_139": "{'json_file': None}",
			"sinker_motion_139": "{'out_file': None}",
			"id_string_desc-summary_motion_140": "{'out_filename': None}",
			"nii_desc-summary_motion_140": "{'out_file': None}",
			"json_desc-summary_motion_140": "{'json_file': None}",
			"sinker_desc-summary_motion_140": "{'out_file': None}",
			"id_string_sbref_142": "{'out_filename': None}",
			"nii_sbref_142": "{'out_file': None}",
			"json_sbref_142": "{'json_file': None}",
			"sinker_sbref_142": "{'out_file': None}",
			"id_string_space-T1w_sbref_150": "{'out_filename': None}",
			"nii_space-T1w_sbref_150": "{'out_file': None}",
			"json_space-T1w_sbref_150": "{'json_file': None}",
			"sinker_space-T1w_sbref_150": "{'out_file': None}",
			"id_string_from-bold_to-T1w_mode-image_desc-linear_xfm_151": "{'out_filename': None}",
			"nii_from-bold_to-T1w_mode-image_desc-linear_xfm_151": "{'out_file': None}",
			"json_from-bold_to-T1w_mode-image_desc-linear_xfm_151": "{'json_file': None}",
			"sinker_from-bold_to-T1w_mode-image_desc-linear_xfm_151": "{'out_file': None}",
			"id_string_from-bold_to-template_mode-image_xfm_158": "{'out_filename': None}",
			"nii_from-bold_to-template_mode-image_xfm_158": "{'out_file': None}",
			"json_from-bold_to-template_mode-image_xfm_158": "{'json_file': None}",
			"sinker_from-bold_to-template_mode-image_xfm_158": "{'out_file': None}",
			"id_string_from-template_to-bold_mode-image_xfm_159": "{'out_filename': None}",
			"nii_from-template_to-bold_mode-image_xfm_159": "{'out_file': None}",
			"json_from-template_to-bold_mode-image_xfm_159": "{'json_file': None}",
			"sinker_from-template_to-bold_mode-image_xfm_159": "{'out_file': None}",
			"id_string_desc-confounds_timeseries_187": "{'out_filename': None}",
			"nii_desc-confounds_timeseries_187": "{'out_file': None}",
			"json_desc-confounds_timeseries_187": "{'json_file': None}",
			"sinker_desc-confounds_timeseries_187": "{'out_file': None}",
			"id_string_space-template_desc-preproc_bold_204": "{'out_filename': None}",
			"nii_space-template_desc-preproc_bold_204": "{'out_file': None}",
			"json_space-template_desc-preproc_bold_204": "{'json_file': None}",
			"sinker_space-template_desc-preproc_bold_204": "{'out_file': None}",
			"id_string_space-template_sbref_208": "{'out_filename': None}",
			"nii_space-template_sbref_208": "{'out_file': None}",
			"json_space-template_sbref_208": "{'json_file': None}",
			"sinker_space-template_sbref_208": "{'out_file': None}",
			"id_string_space-template_desc-bold_mask_212": "{'out_filename': None}",
			"nii_space-template_desc-bold_mask_212": "{'out_file': None}",
			"json_space-template_desc-bold_mask_212": "{'json_file': None}",
			"sinker_space-template_desc-bold_mask_212": "{'out_file': None}",
			"id_string_space-template_res-derivative_desc-bold_mask_216": "{'out_filename': None}",
			"nii_space-template_res-derivative_desc-bold_mask_216": "{'out_file': None}",
			"json_space-template_res-derivative_desc-bold_mask_216": "{'json_file': None}",
			"sinker_space-template_res-derivative_desc-bold_mask_216": "{'out_file': None}",
			"id_string_desc-boldSnrAxial_quality_222": "{'out_filename': None}",
			"nii_desc-boldSnrAxial_quality_222": "{'out_file': None}",
			"json_desc-boldSnrAxial_quality_222": "{'json_file': None}",
			"sinker_desc-boldSnrAxial_quality_222": "{'out_file': None}",
			"id_string_desc-boldSnrSagittal_quality_223": "{'out_filename': None}",
			"nii_desc-boldSnrSagittal_quality_223": "{'out_file': None}",
			"json_desc-boldSnrSagittal_quality_223": "{'json_file': None}",
			"sinker_desc-boldSnrSagittal_quality_223": "{'out_file': None}",
			"id_string_desc-boldSnrHist_quality_224": "{'out_filename': None}",
			"nii_desc-boldSnrHist_quality_224": "{'out_file': None}",
			"json_desc-boldSnrHist_quality_224": "{'json_file': None}",
			"sinker_desc-boldSnrHist_quality_224": "{'out_file': None}",
			"id_string_desc-boldSnr_quality_225": "{'out_filename': None}",
			"nii_desc-boldSnr_quality_225": "{'out_file': None}",
			"json_desc-boldSnr_quality_225": "{'json_file': None}",
			"sinker_desc-boldSnr_quality_225": "{'out_file': None}",
			"id_string_desc-movementParametersTrans_quality_230": "{'out_filename': None}",
			"nii_desc-movementParametersTrans_quality_230": "{'out_file': None}",
			"json_desc-movementParametersTrans_quality_230": "{'json_file': None}",
			"sinker_desc-movementParametersTrans_quality_230": "{'out_file': None}",
			"id_string_desc-movementParametersRot_quality_231": "{'out_filename': None}",
			"nii_desc-movementParametersRot_quality_231": "{'out_file': None}",
			"json_desc-movementParametersRot_quality_231": "{'json_file': None}",
			"sinker_desc-movementParametersRot_quality_231": "{'out_file': None}",
			"id_string_desc-framewiseDisplacementJenkinsonPlot_quality_232": "{'out_filename': None}",
			"nii_desc-framewiseDisplacementJenkinsonPlot_quality_232": "{'out_file': None}",
			"json_desc-framewiseDisplacementJenkinsonPlot_quality_232": "{'json_file': None}",
			"sinker_desc-framewiseDisplacementJenkinsonPlot_quality_232": "{'out_file': None}"
		},
		"result": null,
		"nodes": [
			{
				"name": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
				"type": "workflow",
				"inputs": {
					"inputnode": "{'creds_path': None, 'dl_dir': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working/pipeline_cpac_default_monkey_skullstrip', 'scan': '[Undefined]', 'subject': 'sub-NDARINV2VY7YYNW'}",
					"check_func_scan": "{'func_scan_dct': {'rest_run-01': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-01_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-02': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-02_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-03': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-03_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-04': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-04_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}}, 'function_str': 'CPAC.utils.datasource.check_func_scan'}",
					"selectrest": "{'function_str': 'CPAC.utils.datasource.get_rest', 'resource': 'scan', 'rest_dict': {'rest_run-01': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-01_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-02': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-02_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-03': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-03_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-04': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-04_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}}}",
					"check_for_s3": "{'function_str': 'CPAC.utils.datasource.check_for_s3', 'img_type': 'func'}",
					"outputspec": "{'magnitude': '[Undefined]', 'phase_diff': '[Undefined]'}",
					"select_scan_params": "{'function_str': 'CPAC.utils.datasource.get_rest', 'resource': 'scan_parameters', 'rest_dict': {'rest_run-01': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-01_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-02': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-02_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-03': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-03_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-04': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-04_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}}}",
					"s3_scan_params": "{'function_str': 'CPAC.utils.datasource.check_for_s3', 'img_type': '[Undefined]'}"
				},
				"outputs": {
					"inputnode": "{'creds_path': None, 'dl_dir': None, 'scan': None, 'subject': None}",
					"check_func_scan": "{}",
					"selectrest": "{'file_path': None}",
					"check_for_s3": "{'local_path': None}",
					"outputspec": "{'magnitude': None, 'phase_diff': None, 'rest': None, 'scan': None, 'scan_params': None, 'subject': None}",
					"select_scan_params": "{'file_path': None}",
					"s3_scan_params": "{'local_path': None}"
				},
				"result": null,
				"nodes": [
					{
						"name": "inputnode",
						"type": "node",
						"inputs": {
							"subject": "sub-NDARINV2VY7YYNW",
							"scan": "[Undefined]",
							"creds_path": "None",
							"dl_dir": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working/pipeline_cpac_default_monkey_skullstrip"
						},
						"outputs": {
							"subject": "[Undefined]",
							"scan": "[Undefined]",
							"creds_path": "[Undefined]",
							"dl_dir": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "check_func_scan",
						"type": "node",
						"inputs": {
							"function_str": "CPAC.utils.datasource.check_func_scan",
							"func_scan_dct": "{'rest_run-01': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-01_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-02': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-02_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-03': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-03_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-04': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-04_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}}",
							"scan": "[Undefined]"
						},
						"outputs": {},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "selectrest",
						"type": "node",
						"inputs": {
							"function_str": "CPAC.utils.datasource.get_rest",
							"scan": "[Undefined]",
							"rest_dict": "{'rest_run-01': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-01_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-02': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-02_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-03': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-03_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-04': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-04_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}}",
							"resource": "scan"
						},
						"outputs": {
							"file_path": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "check_for_s3",
						"type": "node",
						"inputs": {
							"function_str": "CPAC.utils.datasource.check_for_s3",
							"file_path": "[Undefined]",
							"creds_path": "[Undefined]",
							"dl_dir": "[Undefined]",
							"img_type": "func"
						},
						"outputs": {
							"local_path": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "outputspec",
						"type": "node",
						"inputs": {
							"subject": "[Undefined]",
							"rest": "[Undefined]",
							"scan": "[Undefined]",
							"scan_params": "[Undefined]",
							"phase_diff": "[Undefined]",
							"magnitude": "[Undefined]"
						},
						"outputs": {
							"subject": "[Undefined]",
							"rest": "[Undefined]",
							"scan": "[Undefined]",
							"scan_params": "[Undefined]",
							"phase_diff": "[Undefined]",
							"magnitude": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "select_scan_params",
						"type": "node",
						"inputs": {
							"function_str": "CPAC.utils.datasource.get_rest",
							"scan": "[Undefined]",
							"rest_dict": "{'rest_run-01': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-01_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-02': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-02_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-03': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-03_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-04': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-04_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}}",
							"resource": "scan_parameters"
						},
						"outputs": {
							"file_path": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "s3_scan_params",
						"type": "node",
						"inputs": {
							"function_str": "CPAC.utils.datasource.check_for_s3",
							"file_path": "[Undefined]",
							"creds_path": "[Undefined]",
							"dl_dir": "[Undefined]",
							"img_type": "[Undefined]"
						},
						"outputs": {
							"local_path": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					}
				],
				"edges": [
					{
						"origin": "inputnode",
						"target": "check_func_scan"
					},
					{
						"origin": "inputnode",
						"target": "selectrest"
					},
					{
						"origin": "inputnode",
						"target": "check_for_s3"
					},
					{
						"origin": "inputnode",
						"target": "outputspec"
					},
					{
						"origin": "inputnode",
						"target": "select_scan_params"
					},
					{
						"origin": "inputnode",
						"target": "s3_scan_params"
					},
					{
						"origin": "selectrest",
						"target": "check_for_s3"
					},
					{
						"origin": "check_for_s3",
						"target": "outputspec"
					},
					{
						"origin": "select_scan_params",
						"target": "s3_scan_params"
					},
					{
						"origin": "s3_scan_params",
						"target": "outputspec"
					}
				]
			},
			{
				"name": "bold_scan_params_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
				"type": "node",
				"inputs": {
					"function_str": "def get_scan_params(subject_id, scan, pipeconfig_start_indx,\n                    pipeconfig_stop_indx, data_config_scan_params=None):\n    \"\"\"\n    Method to extract slice timing correction parameters\n    and scan parameters.\n\n    Parameters\n    ----------\n    subject_id : str\n        subject id\n    scan : str\n        scan id\n    pipeconfig_start_indx : int\n        starting volume index as provided in the pipeline config yaml file\n    pipeconfig_stop_indx : int\n        ending volume index as provided in the pipeline config yaml file\n    data_config_scan_params : str\n        file path to scan parameter JSON file listed in data config yaml file\n\n    Returns\n    -------\n    TR : a string\n        TR value\n    pattern : a string\n        slice aquisition pattern string or file path\n    ref_slice : an integer\n        reference slice which is used to allign all other slices\n    first_tr : an integer\n        starting TR or starting volume index\n    last_tr : an integer\n        ending TR or ending volume index\n    pe_direction : str\n    effective_echo_spacing : float\n    \"\"\"\n\n    import os\n    import json\n    import warnings\n\n    check2 = lambda val: val if val == None or val == '' or \\\n                                isinstance(val, str) else int(val)\n\n    # initialize vars to empty\n    TR = ''\n    TE = None\n    pattern = ''\n    ref_slice = ''\n    first_tr = ''\n    last_tr = ''\n    unit = 's'\n    pe_direction = ''\n    effective_echo_spacing = None\n    template = None\n\n    if isinstance(pipeconfig_stop_indx, str):\n        if \"End\" in pipeconfig_stop_indx or \"end\" in pipeconfig_stop_indx:\n            pipeconfig_stop_indx = None\n    if data_config_scan_params:\n        if \".json\" in data_config_scan_params:\n            if not os.path.exists(data_config_scan_params):\n                err = \"\\n[!] WARNING: Scan parameters JSON file listed in \" \\\n                      \"your data configuration file does not exist:\\n{0}\" \\\n                      \"\\n\\n\".format(data_config_scan_params)\n                raise Exception(err)\n\n            with open(data_config_scan_params, \"r\") as f:\n                params_dct = json.load(f)\n\n            # get details from the configuration\n            # if this is a JSON file, the key values are the BIDS format\n            # standard\n            # TODO: better handling of errant key values!!!\n            if \"RepetitionTime\" in params_dct.keys():\n                TR = float(check(params_dct, subject_id, scan,\n                                 \"RepetitionTime\", False))\n            if \"SliceTiming\" in params_dct.keys():\n                pattern = str(check(params_dct, subject_id, scan,\n                                    \"SliceTiming\", False))\n            elif \"SliceAcquisitionOrder\" in params_dct.keys():\n                pattern = str(check(params_dct, subject_id, scan,\n                                    \"SliceAcquisitionOrder\", False))\n            if \"PhaseEncodingDirection\" in params_dct.keys():\n                pe_direction = str(check(params_dct, subject_id, scan,\n                                         \"PhaseEncodingDirection\", False))\n            try:\n                \"EffectiveEchoSpacing\" in params_dct.keys()\n                effective_echo_spacing = float(\n                        check(params_dct, subject_id, scan,\n                            \"EffectiveEchoSpacing\", False))\n            except TypeError:\n                pass\n\n        elif len(data_config_scan_params) > 0 and \\\n                isinstance(data_config_scan_params, dict):\n\n            params_dct = data_config_scan_params\n\n            # TODO: better handling of errant key values!!!\n            # TODO: use schema validator to deal with it\n            # get details from the configuration\n            try: \n                TR = float(\n                    try_fetch_parameter(\n                        params_dct,\n                        subject_id,\n                        scan,\n                        ['TR', 'RepetitionTime']\n                    )\n                )\n            except TypeError:\n                TR = None\n\n            try: \n                template = str(\n                    try_fetch_parameter(\n                        params_dct,\n                        subject_id,\n                        scan,\n                        ['Template', 'template']\n                    )\n                )\n            except TypeError:\n                template = None\n\n            pattern = str(\n                try_fetch_parameter(\n                    params_dct,\n                    subject_id,\n                    scan,\n                    ['acquisition', 'SliceTiming', 'SliceAcquisitionOrder']\n                )\n            )\n\n            ref_slice = check(params_dct, subject_id, scan, 'reference',\n                              False)\n            if ref_slice:\n                ref_slice = int(ref_slice)\n\n            first_tr = check(params_dct, subject_id, scan, 'first_TR', False)\n            if first_tr:\n                first_tr = check2(first_tr)\n\n            last_tr = check(params_dct, subject_id, scan, 'last_TR', False)\n            if last_tr:\n                last_tr = check2(last_tr)\n\n            pe_direction = check(params_dct, subject_id, scan,\n                                 'PhaseEncodingDirection', False)\n            try:\n                effective_echo_spacing = float(\n                try_fetch_parameter(params_dct, subject_id, scan,\n                                    [\"EffectiveEchoSpacing\"]))\n            except TypeError:\n                pass\n\n        else:\n            err = \"\\n\\n[!] Could not read the format of the scan parameters \" \\\n                  \"information included in the data configuration file for \" \\\n                  f\"the participant {subject_id}.\\n\\n\"\n            raise Exception(err)\n    if first_tr == '' or first_tr is None:\n        first_tr = pipeconfig_start_indx\n\n    if last_tr == '' or last_tr is None:\n        last_tr = pipeconfig_stop_indx\n\n    unit = 's'\n\n    if 'None' in pattern or 'none' in pattern:\n        pattern = None\n\n    '''\n    if not pattern:\n        if pipeconfig_tpattern:\n            if \"Use NIFTI Header\" in pipeconfig_tpattern:\n                pattern = ''\n            else:\n                pattern = pipeconfig_tpattern\n    '''\n\n    # pattern can be one of a few keywords, a filename, or blank which\n    # indicates that the images header information should be used\n    tpattern_file = None\n\n    valid_patterns = ['alt+z', 'altplus', 'alt+z2', 'alt-z', 'altminus',\n                      'alt-z2', 'seq+z', 'seqplus', 'seq-z', 'seqminus']\n    if pattern and pattern != '' and pattern not in valid_patterns:\n\n        if isinstance(pattern, list) or \\\n                (\"[\" in pattern and \"]\" in pattern and \",\" in pattern):\n            # if we got the slice timing as a list, from a BIDS-format scan\n            # parameters JSON file\n\n            if not isinstance(pattern, list):\n                pattern = pattern.replace(\"[\", \"\").replace(\"]\", \"\").split(\",\")\n\n            slice_timings = [float(x) for x in pattern]\n\n            # write out a tpattern file for AFNI 3dTShift\n            tpattern_file = os.path.join(os.getcwd(), \"tpattern.txt\")\n            try:\n                with open(tpattern_file, \"wt\") as f:\n                    for time in slice_timings:\n                        f.write(\"{0}\\n\".format(time).replace(\" \", \"\"))\n            except:\n                err = \"\\n[!] Could not write the slice timing file meant as \" \\\n                      \"an input for AFNI 3dTshift (slice timing correction):\" \\\n                      \"\\n{0}\\n\\n\".format(tpattern_file)\n                raise Exception(err)\n\n        elif \".txt\" in pattern and not os.path.exists(pattern):\n            # if the user provided an acquisition pattern text file for\n            # 3dTshift\n            raise Exception(\"Invalid Pattern file path {0}, Please provide \"\n                            \"the correct path\".format(pattern))\n        elif \".txt\" in pattern:\n            with open(pattern, \"r\") as f:\n                lines = f.readlines()\n            if len(lines) < 2:\n                raise Exception('Invalid slice timing file format. The file '\n                                'should contain only one value per row. Use '\n                                'new line char as delimiter')\n            tpattern_file = pattern\n            slice_timings = [float(l.rstrip('\\r\\n')) for l in lines]\n        else:\n            # this only happens if there is a non-path string set in the data\n            # config dictionary for acquisition pattern (like \"alt+z\"), except\n            # the pattern is not listed in that list\n            err = \"\\n[!] The slice timing acquisition pattern provided is \" \\\n                  \"not supported by AFNI 3dTshift:\\n\" \\\n                  \"{0}\\n\".format(str(pattern))\n            raise Exception(err)\n\n        pattern = tpattern_file\n\n        slice_timings.sort()\n        max_slice_offset = slice_timings[-1]\n\n        # checking if the unit of TR and slice timing match or not\n        # if slice timing in ms convert TR to ms as well\n        if TR and max_slice_offset > TR:\n            warnings.warn(\"TR is in seconds and slice timings are in \"\n                          \"milliseconds. Converting TR into milliseconds\")\n            TR = TR * 1000\n            print(\"New TR value {0} ms\".format(TR))\n            unit = 'ms'\n\n    else:\n        # check to see, if TR is in milliseconds, convert it into seconds\n        if TR and TR > 10:\n            warnings.warn('TR is in milliseconds, Converting it into seconds')\n            TR = TR / 1000.0\n            print(\"New TR value {0} s\".format(TR))\n            unit = 's'\n\n    # swap back in\n    if TR:\n        tr = \"{0}{1}\".format(str(TR), unit)\n    else:\n        tr = \"\"\n\n    tpattern = pattern\n    start_indx = first_tr\n    stop_indx = last_tr\n\n    return (tr if tr else None,\n            tpattern if tpattern else None,\n            template if template else None,\n            ref_slice,\n            start_indx,\n            stop_indx,\n            pe_direction,\n            effective_echo_spacing)\n",
					"data_config_scan_params": "[Undefined]",
					"subject_id": "sub-NDARINV2VY7YYNW",
					"scan": "[Undefined]",
					"pipeconfig_tr": "[Undefined]",
					"pipeconfig_tpattern": "[Undefined]",
					"pipeconfig_start_indx": "0",
					"pipeconfig_stop_indx": "None"
				},
				"outputs": {
					"tr": "[Undefined]",
					"tpattern": "[Undefined]",
					"template": "[Undefined]",
					"ref_slice": "[Undefined]",
					"start_indx": "[Undefined]",
					"stop_indx": "[Undefined]",
					"pe_direction": "[Undefined]",
					"effective_echo_spacing": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "anat_T1w_gather_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
				"type": "workflow",
				"inputs": {
					"inputnode": "{'anat': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/anat/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_run-01_T1w.nii', 'creds_path': None, 'dl_dir': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working/pipeline_cpac_default_monkey_skullstrip', 'img_type': 'anat', 'subject': 'sub-NDARINV2VY7YYNW'}",
					"check_for_s3": "{'function_str': 'CPAC.utils.datasource.check_for_s3'}",
					"outputspec": "{}"
				},
				"outputs": {
					"inputnode": "{'anat': None, 'creds_path': None, 'dl_dir': None, 'img_type': None, 'subject': None}",
					"check_for_s3": "{'local_path': None}",
					"outputspec": "{'anat': None, 'subject': None}"
				},
				"result": null,
				"nodes": [
					{
						"name": "inputnode",
						"type": "node",
						"inputs": {
							"subject": "sub-NDARINV2VY7YYNW",
							"anat": "/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/anat/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_run-01_T1w.nii",
							"creds_path": "None",
							"dl_dir": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working/pipeline_cpac_default_monkey_skullstrip",
							"img_type": "anat"
						},
						"outputs": {
							"subject": "[Undefined]",
							"anat": "[Undefined]",
							"creds_path": "[Undefined]",
							"dl_dir": "[Undefined]",
							"img_type": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "check_for_s3",
						"type": "node",
						"inputs": {
							"function_str": "CPAC.utils.datasource.check_for_s3",
							"file_path": "[Undefined]",
							"creds_path": "[Undefined]",
							"dl_dir": "[Undefined]",
							"img_type": "[Undefined]"
						},
						"outputs": {
							"local_path": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "outputspec",
						"type": "node",
						"inputs": {
							"subject": "[Undefined]",
							"anat": "[Undefined]"
						},
						"outputs": {
							"subject": "[Undefined]",
							"anat": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					}
				],
				"edges": [
					{
						"origin": "inputnode",
						"target": "check_for_s3"
					},
					{
						"origin": "inputnode",
						"target": "outputspec"
					},
					{
						"origin": "check_for_s3",
						"target": "outputspec"
					}
				]
			},
			{
				"name": "anat_deoblique_0",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"deoblique": "True",
					"xorigin": "[Undefined]",
					"yorigin": "[Undefined]",
					"zorigin": "[Undefined]",
					"duporigin_file": "[Undefined]",
					"xdel": "[Undefined]",
					"ydel": "[Undefined]",
					"zdel": "[Undefined]",
					"xyzscale": "[Undefined]",
					"space": "[Undefined]",
					"atrcopy": "[Undefined]",
					"atrstring": "[Undefined]",
					"atrfloat": "[Undefined]",
					"atrint": "[Undefined]",
					"saveatr": "[Undefined]",
					"nosaveatr": "[Undefined]",
					"args": "[Undefined]",
					"environ": "{}"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "anat_reorient_0",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"out_file": "[Undefined]",
					"orientation": "RPI",
					"resample_mode": "[Undefined]",
					"voxel_size": "[Undefined]",
					"master": "[Undefined]",
					"num_threads": "1",
					"outputtype": "NIFTI_GZ",
					"args": "[Undefined]",
					"environ": "{}"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "acpc_align_50",
				"type": "workflow",
				"inputs": {
					"inputspec": "{'anat_brain': '[Undefined]', 'anat_leaf': '[Undefined]', 'brain_mask': '[Undefined]', 'template_brain_for_acpc': '[Undefined]', 'template_brain_only_for_anat': '[Undefined]', 'template_head_for_acpc': '[Undefined]'}",
					"anat_acpc_1_fov": "{'angle_rep': '[Undefined]', 'apply_isoxfm': '[Undefined]', 'apply_xfm': '[Undefined]', 'args': '-applyxfm', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': '[Undefined]', 'coarse_search': '[Undefined]', 'cost': '[Undefined]', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'dof': '[Undefined]', 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_matrix_file': '[Undefined]', 'in_weight': '[Undefined]', 'interp': '[Undefined]', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': '[Undefined]', 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'schedule': '[Undefined]', 'searchr_x': '[Undefined]', 'searchr_y': '[Undefined]', 'searchr_z': '[Undefined]', 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}",
					"anat_acpc_2_fov_convertxfm": "{'args': '[Undefined]', 'concat_xfm': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fix_scale_skew': '[Undefined]', 'in_file2': '[Undefined]', 'invert_xfm': True, 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ'}",
					"anat_acpc_3_flirt": "{'angle_rep': '[Undefined]', 'apply_isoxfm': '[Undefined]', 'apply_xfm': '[Undefined]', 'args': '[Undefined]', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': '[Undefined]', 'coarse_search': '[Undefined]', 'cost': '[Undefined]', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'dof': '[Undefined]', 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_matrix_file': '[Undefined]', 'in_weight': '[Undefined]', 'interp': 'spline', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': '[Undefined]', 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'schedule': '[Undefined]', 'searchr_x': [30, 30], 'searchr_y': [30, 30], 'searchr_z': [30, 30], 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}",
					"anat_acpc_4_concatxfm": "{'args': '[Undefined]', 'concat_xfm': True, 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fix_scale_skew': '[Undefined]', 'invert_xfm': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ'}",
					"anat_acpc_5_aff2rigid": "{'function_str': 'def fsl_aff_to_rigid(in_xfm, out_name):\\n\\n    out_mat = os.path.join(os.getcwd(), out_name)\\n\\n    #   Script for getting a 6 DOF approx to a 12 DOF standard transformation\\n    #\\n    #   Mark Jenkinson\\n    #   FMRIB Image Analysis Group\\n    #\\n    #   Copyright (C) 2012 University of Oxford\\n    #\\n    #   Part of FSL - FMRIB\\'s Software Library\\n    #   http://www.fmrib.ox.ac.uk/fsl\\n    #   fsl@fmrib.ox.ac.uk\\n    #\\n    #   Developed at FMRIB (Oxford Centre for Functional Magnetic Resonance\\n    #   Imaging of the Brain), Department of Clinical Neurology, Oxford\\n    #   University, Oxford, UK\\n    #\\n    #\\n    #   LICENCE\\n    #\\n    #   FMRIB Software Library, Release 5.0 (c) 2012, The University of\\n    #   Oxford (the \"Software\")\\n    #\\n    #   The Software remains the property of the University of Oxford (\"the\\n    #   University\").\\n    #\\n    #   The Software is distributed \"AS IS\" under this Licence solely for\\n    #   non-commercial use in the hope that it will be useful, but in order\\n    #   that the University as a charitable foundation protects its assets for\\n    #   the benefit of its educational and research purposes, the University\\n    #   makes clear that no condition is made or to be implied, nor is any\\n    #   warranty given or to be implied, as to the accuracy of the Software,\\n    #   or that it will be suitable for any particular purpose or for use\\n    #   under any specific conditions. Furthermore, the University disclaims\\n    #   all responsibility for the use which is made of the Software. It\\n    #   further disclaims any liability for the outcomes arising from using\\n    #   the Software.\\n    #\\n    #   The Licensee agrees to indemnify the University and hold the\\n    #   University harmless from and against any and all claims, damages and\\n    #   liabilities asserted by third parties (including claims for\\n    #   negligence) which arise directly or indirectly from the use of the\\n    #   Software or the sale of any products based on the Software.\\n    #\\n    #   No part of the Software may be reproduced, modified, transmitted or\\n    #   transferred in any form or by any means, electronic or mechanical,\\n    #   without the express permission of the University. The permission of\\n    #   the University is not required if the said reproduction, modification,\\n    #   transmission or transference is done without financial return, the\\n    #   conditions of this Licence are imposed upon the receiver of the\\n    #   product, and all original and amended source code is included in any\\n    #   transmitted product. You may be held legally responsible for any\\n    #   copyright infringement that is caused or encouraged by your failure to\\n    #   abide by these terms and conditions.\\n    #\\n    #   You are not permitted under this Licence to use this Software\\n    #   commercially. Use for which any financial return is received shall be\\n    #   defined as commercial use, and includes (1) integration of all or part\\n    #   of the source code or the Software into a product for sale or license\\n    #   by or on behalf of Licensee to third parties or (2) use of the\\n    #   Software or any derivative of it for research with the final aim of\\n    #   developing software products for sale or license to a third party or\\n    #   (3) use of the Software or any derivative of it for research with the\\n    #   final aim of developing non-software products for sale or license to a\\n    #   third party, or (4) use of the Software to provide any service to an\\n    #   external organisation for which payment is received. If you are\\n    #   interested in using the Software commercially, please contact Isis\\n    #   Innovation Limited (\"Isis\"), the technology transfer company of the\\n    #   University, to negotiate a licence. Contact details are:\\n    #   innovation@isis.ox.ac.uk quoting reference DE/9564.\\n\\n    # Load in the necessary info\\n    a = loadtxt(in_xfm)\\n    # set specific AC and PC coordinates in FLIRT convention (x1=AC, x2=PC, x3=point above x1 in the mid-sag plane)\\n    x1 = matrix([[91], [129], [67], [1]])\\n    x2 = matrix([[91], [100], [70], [1]])\\n    x3 = matrix([[91], [129], [117], [1]])\\n\\n    ainv = linalg.inv(a)\\n\\n    # vectors v are in MNI space, vectors w are in native space\\n    v21 = (x2 - x1)\\n    v31 = (x3 - x1)\\n    # normalise and force orthogonality\\n    v21 = v21 / linalg.norm(v21)\\n    v31 = v31 - multiply(v31.T * v21, v21)\\n    v31 = v31 / linalg.norm(v31)\\n    tmp = cross(v21[0:3, 0].T, v31[0:3, 0].T).T\\n    v41 = mat(zeros((4, 1)))\\n    v41[0:3, 0] = tmp\\n    # Map vectors to native space\\n    w21 = ainv * (v21)\\n    w31 = ainv * (v31)\\n    # normalise and force orthogonality\\n    w21 = w21 / linalg.norm(w21)\\n    w31 = w31 - multiply(w31.T * w21, w21)\\n    w31 = w31 / linalg.norm(w31)\\n    tmp = cross(w21[0:3, 0].T, w31[0:3, 0].T).T\\n    w41 = mat(zeros((4, 1)))\\n    w41[0:3, 0] = tmp\\n\\n    # setup matrix: native to MNI space\\n    r1 = matrix(eye(4))\\n    r1[0:4, 0] = w21\\n    r1[0:4, 1] = w31\\n    r1[0:4, 2] = w41\\n    r2 = matrix(eye(4))\\n    r2[0, 0:4] = v21.T\\n    r2[1, 0:4] = v31.T\\n    r2[2, 0:4] = v41.T\\n    r = r2.T * r1.T\\n\\n    # Fix the translation (keep AC=x1 in the same place)\\n    ACmni = x1\\n    ACnat = ainv * x1\\n    trans = ACmni - r * ACnat\\n    r[0:3, 3] = trans[0:3]\\n\\n    # Save out the result\\n    savetxt(out_mat, r, fmt=\\'%14.10f\\')\\n\\n    return out_mat\\n', 'out_name': 'acpc.mat'}",
					"outputspec": "{'acpc_aligned_brain': '[Undefined]', 'acpc_brain_mask': '[Undefined]'}",
					"anat_acpc_6_applywarp": "{'abswarp': '[Undefined]', 'args': '[Undefined]', 'datatype': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'field_file': '[Undefined]', 'interp': 'spline', 'mask_file': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'relwarp': True, 'superlevel': '[Undefined]', 'supersample': '[Undefined]'}"
				},
				"outputs": {
					"inputspec": "{'anat_brain': None, 'anat_leaf': None, 'brain_mask': None, 'template_brain_for_acpc': None, 'template_brain_only_for_anat': None, 'template_head_for_acpc': None}",
					"anat_acpc_1_fov": "{'out_file': None, 'out_log': None, 'out_matrix_file': None}",
					"anat_acpc_2_fov_convertxfm": "{'out_file': None}",
					"anat_acpc_3_flirt": "{'out_file': None, 'out_log': None, 'out_matrix_file': None}",
					"anat_acpc_4_concatxfm": "{'out_file': None}",
					"anat_acpc_5_aff2rigid": "{'out_mat': None}",
					"outputspec": "{'acpc_aligned_brain': None, 'acpc_aligned_head': None, 'acpc_brain_mask': None, 'from-T1w_to-ACPC_mode-image_desc-aff2rig_xfm': None}",
					"anat_acpc_6_applywarp": "{'out_file': None}"
				},
				"result": null,
				"nodes": [
					{
						"name": "inputspec",
						"type": "node",
						"inputs": {
							"anat_leaf": "[Undefined]",
							"anat_brain": "[Undefined]",
							"brain_mask": "[Undefined]",
							"template_brain_only_for_anat": "[Undefined]",
							"template_brain_for_acpc": "[Undefined]",
							"template_head_for_acpc": "[Undefined]"
						},
						"outputs": {
							"anat_leaf": "[Undefined]",
							"anat_brain": "[Undefined]",
							"brain_mask": "[Undefined]",
							"template_brain_only_for_anat": "[Undefined]",
							"template_brain_for_acpc": "[Undefined]",
							"template_head_for_acpc": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "anat_acpc_1_fov",
						"type": "node",
						"inputs": {
							"in_file": "[Undefined]",
							"reference": "[Undefined]",
							"out_file": "[Undefined]",
							"out_matrix_file": "[Undefined]",
							"out_log": "[Undefined]",
							"in_matrix_file": "[Undefined]",
							"apply_xfm": "[Undefined]",
							"apply_isoxfm": "[Undefined]",
							"datatype": "[Undefined]",
							"cost": "[Undefined]",
							"cost_func": "[Undefined]",
							"uses_qform": "[Undefined]",
							"display_init": "[Undefined]",
							"angle_rep": "[Undefined]",
							"interp": "[Undefined]",
							"sinc_width": "[Undefined]",
							"sinc_window": "[Undefined]",
							"bins": "[Undefined]",
							"dof": "[Undefined]",
							"no_resample": "[Undefined]",
							"force_scaling": "[Undefined]",
							"min_sampling": "[Undefined]",
							"padding_size": "[Undefined]",
							"searchr_x": "[Undefined]",
							"searchr_y": "[Undefined]",
							"searchr_z": "[Undefined]",
							"no_search": "[Undefined]",
							"coarse_search": "[Undefined]",
							"fine_search": "[Undefined]",
							"schedule": "[Undefined]",
							"ref_weight": "[Undefined]",
							"in_weight": "[Undefined]",
							"no_clamp": "[Undefined]",
							"no_resample_blur": "[Undefined]",
							"rigid2D": "[Undefined]",
							"save_log": "[Undefined]",
							"verbose": "[Undefined]",
							"bgvalue": "[Undefined]",
							"wm_seg": "[Undefined]",
							"wmcoords": "[Undefined]",
							"wmnorms": "[Undefined]",
							"fieldmap": "[Undefined]",
							"fieldmapmask": "[Undefined]",
							"pedir": "[Undefined]",
							"echospacing": "[Undefined]",
							"bbrtype": "[Undefined]",
							"bbrslope": "[Undefined]",
							"output_type": "NIFTI_GZ",
							"args": "-applyxfm",
							"environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
						},
						"outputs": {
							"out_file": "[Undefined]",
							"out_matrix_file": "[Undefined]",
							"out_log": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "anat_acpc_2_fov_convertxfm",
						"type": "node",
						"inputs": {
							"in_file": "[Undefined]",
							"in_file2": "[Undefined]",
							"invert_xfm": "True",
							"concat_xfm": "[Undefined]",
							"fix_scale_skew": "[Undefined]",
							"out_file": "[Undefined]",
							"output_type": "NIFTI_GZ",
							"args": "[Undefined]",
							"environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
						},
						"outputs": {
							"out_file": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "anat_acpc_3_flirt",
						"type": "node",
						"inputs": {
							"in_file": "[Undefined]",
							"reference": "[Undefined]",
							"out_file": "[Undefined]",
							"out_matrix_file": "[Undefined]",
							"out_log": "[Undefined]",
							"in_matrix_file": "[Undefined]",
							"apply_xfm": "[Undefined]",
							"apply_isoxfm": "[Undefined]",
							"datatype": "[Undefined]",
							"cost": "[Undefined]",
							"cost_func": "[Undefined]",
							"uses_qform": "[Undefined]",
							"display_init": "[Undefined]",
							"angle_rep": "[Undefined]",
							"interp": "spline",
							"sinc_width": "[Undefined]",
							"sinc_window": "[Undefined]",
							"bins": "[Undefined]",
							"dof": "[Undefined]",
							"no_resample": "[Undefined]",
							"force_scaling": "[Undefined]",
							"min_sampling": "[Undefined]",
							"padding_size": "[Undefined]",
							"searchr_x": "[30, 30]",
							"searchr_y": "[30, 30]",
							"searchr_z": "[30, 30]",
							"no_search": "[Undefined]",
							"coarse_search": "[Undefined]",
							"fine_search": "[Undefined]",
							"schedule": "[Undefined]",
							"ref_weight": "[Undefined]",
							"in_weight": "[Undefined]",
							"no_clamp": "[Undefined]",
							"no_resample_blur": "[Undefined]",
							"rigid2D": "[Undefined]",
							"save_log": "[Undefined]",
							"verbose": "[Undefined]",
							"bgvalue": "[Undefined]",
							"wm_seg": "[Undefined]",
							"wmcoords": "[Undefined]",
							"wmnorms": "[Undefined]",
							"fieldmap": "[Undefined]",
							"fieldmapmask": "[Undefined]",
							"pedir": "[Undefined]",
							"echospacing": "[Undefined]",
							"bbrtype": "[Undefined]",
							"bbrslope": "[Undefined]",
							"output_type": "NIFTI_GZ",
							"args": "[Undefined]",
							"environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
						},
						"outputs": {
							"out_file": "[Undefined]",
							"out_matrix_file": "[Undefined]",
							"out_log": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "anat_acpc_4_concatxfm",
						"type": "node",
						"inputs": {
							"in_file": "[Undefined]",
							"in_file2": "[Undefined]",
							"invert_xfm": "[Undefined]",
							"concat_xfm": "True",
							"fix_scale_skew": "[Undefined]",
							"out_file": "[Undefined]",
							"output_type": "NIFTI_GZ",
							"args": "[Undefined]",
							"environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
						},
						"outputs": {
							"out_file": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "anat_acpc_5_aff2rigid",
						"type": "node",
						"inputs": {
							"function_str": "def fsl_aff_to_rigid(in_xfm, out_name):\n\n    out_mat = os.path.join(os.getcwd(), out_name)\n\n    #   Script for getting a 6 DOF approx to a 12 DOF standard transformation\n    #\n    #   Mark Jenkinson\n    #   FMRIB Image Analysis Group\n    #\n    #   Copyright (C) 2012 University of Oxford\n    #\n    #   Part of FSL - FMRIB's Software Library\n    #   http://www.fmrib.ox.ac.uk/fsl\n    #   fsl@fmrib.ox.ac.uk\n    #\n    #   Developed at FMRIB (Oxford Centre for Functional Magnetic Resonance\n    #   Imaging of the Brain), Department of Clinical Neurology, Oxford\n    #   University, Oxford, UK\n    #\n    #\n    #   LICENCE\n    #\n    #   FMRIB Software Library, Release 5.0 (c) 2012, The University of\n    #   Oxford (the \"Software\")\n    #\n    #   The Software remains the property of the University of Oxford (\"the\n    #   University\").\n    #\n    #   The Software is distributed \"AS IS\" under this Licence solely for\n    #   non-commercial use in the hope that it will be useful, but in order\n    #   that the University as a charitable foundation protects its assets for\n    #   the benefit of its educational and research purposes, the University\n    #   makes clear that no condition is made or to be implied, nor is any\n    #   warranty given or to be implied, as to the accuracy of the Software,\n    #   or that it will be suitable for any particular purpose or for use\n    #   under any specific conditions. Furthermore, the University disclaims\n    #   all responsibility for the use which is made of the Software. It\n    #   further disclaims any liability for the outcomes arising from using\n    #   the Software.\n    #\n    #   The Licensee agrees to indemnify the University and hold the\n    #   University harmless from and against any and all claims, damages and\n    #   liabilities asserted by third parties (including claims for\n    #   negligence) which arise directly or indirectly from the use of the\n    #   Software or the sale of any products based on the Software.\n    #\n    #   No part of the Software may be reproduced, modified, transmitted or\n    #   transferred in any form or by any means, electronic or mechanical,\n    #   without the express permission of the University. The permission of\n    #   the University is not required if the said reproduction, modification,\n    #   transmission or transference is done without financial return, the\n    #   conditions of this Licence are imposed upon the receiver of the\n    #   product, and all original and amended source code is included in any\n    #   transmitted product. You may be held legally responsible for any\n    #   copyright infringement that is caused or encouraged by your failure to\n    #   abide by these terms and conditions.\n    #\n    #   You are not permitted under this Licence to use this Software\n    #   commercially. Use for which any financial return is received shall be\n    #   defined as commercial use, and includes (1) integration of all or part\n    #   of the source code or the Software into a product for sale or license\n    #   by or on behalf of Licensee to third parties or (2) use of the\n    #   Software or any derivative of it for research with the final aim of\n    #   developing software products for sale or license to a third party or\n    #   (3) use of the Software or any derivative of it for research with the\n    #   final aim of developing non-software products for sale or license to a\n    #   third party, or (4) use of the Software to provide any service to an\n    #   external organisation for which payment is received. If you are\n    #   interested in using the Software commercially, please contact Isis\n    #   Innovation Limited (\"Isis\"), the technology transfer company of the\n    #   University, to negotiate a licence. Contact details are:\n    #   innovation@isis.ox.ac.uk quoting reference DE/9564.\n\n    # Load in the necessary info\n    a = loadtxt(in_xfm)\n    # set specific AC and PC coordinates in FLIRT convention (x1=AC, x2=PC, x3=point above x1 in the mid-sag plane)\n    x1 = matrix([[91], [129], [67], [1]])\n    x2 = matrix([[91], [100], [70], [1]])\n    x3 = matrix([[91], [129], [117], [1]])\n\n    ainv = linalg.inv(a)\n\n    # vectors v are in MNI space, vectors w are in native space\n    v21 = (x2 - x1)\n    v31 = (x3 - x1)\n    # normalise and force orthogonality\n    v21 = v21 / linalg.norm(v21)\n    v31 = v31 - multiply(v31.T * v21, v21)\n    v31 = v31 / linalg.norm(v31)\n    tmp = cross(v21[0:3, 0].T, v31[0:3, 0].T).T\n    v41 = mat(zeros((4, 1)))\n    v41[0:3, 0] = tmp\n    # Map vectors to native space\n    w21 = ainv * (v21)\n    w31 = ainv * (v31)\n    # normalise and force orthogonality\n    w21 = w21 / linalg.norm(w21)\n    w31 = w31 - multiply(w31.T * w21, w21)\n    w31 = w31 / linalg.norm(w31)\n    tmp = cross(w21[0:3, 0].T, w31[0:3, 0].T).T\n    w41 = mat(zeros((4, 1)))\n    w41[0:3, 0] = tmp\n\n    # setup matrix: native to MNI space\n    r1 = matrix(eye(4))\n    r1[0:4, 0] = w21\n    r1[0:4, 1] = w31\n    r1[0:4, 2] = w41\n    r2 = matrix(eye(4))\n    r2[0, 0:4] = v21.T\n    r2[1, 0:4] = v31.T\n    r2[2, 0:4] = v41.T\n    r = r2.T * r1.T\n\n    # Fix the translation (keep AC=x1 in the same place)\n    ACmni = x1\n    ACnat = ainv * x1\n    trans = ACmni - r * ACnat\n    r[0:3, 3] = trans[0:3]\n\n    # Save out the result\n    savetxt(out_mat, r, fmt='%14.10f')\n\n    return out_mat\n",
							"in_xfm": "[Undefined]",
							"out_name": "acpc.mat"
						},
						"outputs": {
							"out_mat": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "outputspec",
						"type": "node",
						"inputs": {
							"acpc_aligned_head": "[Undefined]",
							"acpc_brain_mask": "[Undefined]",
							"from-T1w_to-ACPC_mode-image_desc-aff2rig_xfm": "[Undefined]",
							"acpc_aligned_brain": "[Undefined]"
						},
						"outputs": {
							"acpc_aligned_head": "[Undefined]",
							"acpc_brain_mask": "[Undefined]",
							"from-T1w_to-ACPC_mode-image_desc-aff2rig_xfm": "[Undefined]",
							"acpc_aligned_brain": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "anat_acpc_6_applywarp",
						"type": "node",
						"inputs": {
							"in_file": "[Undefined]",
							"out_file": "[Undefined]",
							"ref_file": "[Undefined]",
							"field_file": "[Undefined]",
							"abswarp": "[Undefined]",
							"relwarp": "True",
							"datatype": "[Undefined]",
							"supersample": "[Undefined]",
							"superlevel": "[Undefined]",
							"premat": "[Undefined]",
							"postmat": "[Undefined]",
							"mask_file": "[Undefined]",
							"interp": "spline",
							"output_type": "NIFTI_GZ",
							"args": "[Undefined]",
							"environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
						},
						"outputs": {
							"out_file": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					}
				],
				"edges": [
					{
						"origin": "inputspec",
						"target": "anat_acpc_1_fov"
					},
					{
						"origin": "inputspec",
						"target": "anat_acpc_3_flirt"
					},
					{
						"origin": "inputspec",
						"target": "anat_acpc_6_applywarp"
					},
					{
						"origin": "anat_acpc_1_fov",
						"target": "anat_acpc_2_fov_convertxfm"
					},
					{
						"origin": "anat_acpc_1_fov",
						"target": "anat_acpc_3_flirt"
					},
					{
						"origin": "anat_acpc_2_fov_convertxfm",
						"target": "anat_acpc_4_concatxfm"
					},
					{
						"origin": "anat_acpc_3_flirt",
						"target": "anat_acpc_4_concatxfm"
					},
					{
						"origin": "anat_acpc_4_concatxfm",
						"target": "anat_acpc_5_aff2rigid"
					},
					{
						"origin": "anat_acpc_5_aff2rigid",
						"target": "outputspec"
					},
					{
						"origin": "anat_acpc_5_aff2rigid",
						"target": "anat_acpc_6_applywarp"
					},
					{
						"origin": "anat_acpc_6_applywarp",
						"target": "outputspec"
					}
				]
			},
			{
				"name": "gather_T1w-ACPC-template",
				"type": "workflow",
				"inputs": {
					"inputnode": "{'creds_path': None, 'data': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz', 'dl_dir': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working/pipeline_cpac_default_monkey_skullstrip', 'scan': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
					"check_for_s3": "{'function_str': 'CPAC.utils.datasource.check_for_s3', 'img_type': 'other'}",
					"outputspec": "{}"
				},
				"outputs": {
					"inputnode": "{'creds_path': None, 'data': None, 'dl_dir': None, 'scan': None, 'unique_id': None}",
					"check_for_s3": "{'local_path': None}",
					"outputspec": "{'data': None, 'scan': None, 'unique_id': None}"
				},
				"result": null,
				"nodes": [
					{
						"name": "inputnode",
						"type": "node",
						"inputs": {
							"unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
							"data": "/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz",
							"scan": "[Undefined]",
							"creds_path": "None",
							"dl_dir": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working/pipeline_cpac_default_monkey_skullstrip"
						},
						"outputs": {
							"unique_id": "[Undefined]",
							"data": "[Undefined]",
							"scan": "[Undefined]",
							"creds_path": "[Undefined]",
							"dl_dir": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "check_for_s3",
						"type": "node",
						"inputs": {
							"function_str": "CPAC.utils.datasource.check_for_s3",
							"file_path": "[Undefined]",
							"creds_path": "[Undefined]",
							"dl_dir": "[Undefined]",
							"img_type": "other"
						},
						"outputs": {
							"local_path": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "outputspec",
						"type": "node",
						"inputs": {
							"unique_id": "[Undefined]",
							"data": "[Undefined]",
							"scan": "[Undefined]"
						},
						"outputs": {
							"unique_id": "[Undefined]",
							"data": "[Undefined]",
							"scan": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					}
				],
				"edges": [
					{
						"origin": "inputnode",
						"target": "check_for_s3"
					},
					{
						"origin": "inputnode",
						"target": "outputspec"
					},
					{
						"origin": "check_for_s3",
						"target": "outputspec"
					}
				]
			},
			{
				"name": "anat_denoise_54",
				"type": "node",
				"inputs": {
					"dimension": "[Undefined]",
					"input_image": "[Undefined]",
					"noise_model": "Gaussian",
					"shrink_factor": "1",
					"output_image": "[Undefined]",
					"save_noise": "False",
					"noise_image": "[Undefined]",
					"verbose": "[Undefined]",
					"num_threads": "1",
					"args": "[Undefined]",
					"environ": "{'NSLOTS': '1'}"
				},
				"outputs": {
					"output_image": "[Undefined]",
					"noise_image": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "anat_n4_56",
				"type": "node",
				"inputs": {
					"dimension": "3",
					"input_image": "[Undefined]",
					"mask_image": "[Undefined]",
					"weight_image": "[Undefined]",
					"output_image": "[Undefined]",
					"bspline_fitting_distance": "[Undefined]",
					"bspline_order": "[Undefined]",
					"shrink_factor": "2",
					"n_iterations": "[Undefined]",
					"convergence_threshold": "[Undefined]",
					"save_bias": "False",
					"bias_image": "[Undefined]",
					"copy_header": "True",
					"rescale_intensities": "False",
					"histogram_sharpening": "[Undefined]",
					"num_threads": "1",
					"args": "[Undefined]",
					"environ": "{'NSLOTS': '1'}"
				},
				"outputs": {
					"output_image": "[Undefined]",
					"bias_image": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "gather_unet-model",
				"type": "workflow",
				"inputs": {
					"inputnode": "{'creds_path': None, 'data': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model', 'dl_dir': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working/pipeline_cpac_default_monkey_skullstrip', 'scan': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
					"check_for_s3": "{'function_str': 'CPAC.utils.datasource.check_for_s3', 'img_type': 'other'}",
					"outputspec": "{}"
				},
				"outputs": {
					"inputnode": "{'creds_path': None, 'data': None, 'dl_dir': None, 'scan': None, 'unique_id': None}",
					"check_for_s3": "{'local_path': None}",
					"outputspec": "{'data': None, 'scan': None, 'unique_id': None}"
				},
				"result": null,
				"nodes": [
					{
						"name": "inputnode",
						"type": "node",
						"inputs": {
							"unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
							"data": "s3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model",
							"scan": "[Undefined]",
							"creds_path": "None",
							"dl_dir": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working/pipeline_cpac_default_monkey_skullstrip"
						},
						"outputs": {
							"unique_id": "[Undefined]",
							"data": "[Undefined]",
							"scan": "[Undefined]",
							"creds_path": "[Undefined]",
							"dl_dir": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "check_for_s3",
						"type": "node",
						"inputs": {
							"function_str": "CPAC.utils.datasource.check_for_s3",
							"file_path": "[Undefined]",
							"creds_path": "[Undefined]",
							"dl_dir": "[Undefined]",
							"img_type": "other"
						},
						"outputs": {
							"local_path": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "outputspec",
						"type": "node",
						"inputs": {
							"unique_id": "[Undefined]",
							"data": "[Undefined]",
							"scan": "[Undefined]"
						},
						"outputs": {
							"unique_id": "[Undefined]",
							"data": "[Undefined]",
							"scan": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					}
				],
				"edges": [
					{
						"origin": "inputnode",
						"target": "check_for_s3"
					},
					{
						"origin": "inputnode",
						"target": "outputspec"
					},
					{
						"origin": "check_for_s3",
						"target": "outputspec"
					}
				]
			},
			{
				"name": "unet_mask_59",
				"type": "node",
				"inputs": {
					"function_str": "def predict_volumes(model_path, rimg_in=None, cimg_in=None, bmsk_in=None, suffix=\"unet_pre_mask\", \n        ed_iter=0, save_dice=False, save_nii=True, nii_outdir=None, verbose=False, \n        rescale_dim=256, num_slice=3):\n\n    import torch\n    import torch.nn as nn\n    import numpy as np\n    from torch.autograd import Variable\n    from CPAC.unet.function import extract_large_comp, estimate_dice, write_nifti, fill_holes, erosion_dilation\n    from CPAC.unet.model import UNet2d\n    from CPAC.unet.dataset import VolumeDataset, BlockDataset\n    from torch.utils.data import DataLoader\n    import os, sys\n    import nibabel as nib\n    import pickle\n\n    train_model = UNet2d(dim_in=3, num_conv_block=5, kernel_root=16)\n    checkpoint = torch.load(model_path, map_location={'cuda:0':'cpu'})\n    train_model.load_state_dict(checkpoint['state_dict'])\n    model = nn.Sequential(train_model, nn.Softmax2d())\n\n    use_gpu=torch.cuda.is_available()\n    model_on_gpu=next(model.parameters()).is_cuda\n    use_bn=True\n    if use_gpu:\n        if not model_on_gpu:\n            model.cuda()\n    else:\n        if model_on_gpu:\n            model.cpu()\n\n    NoneType=type(None)\n    if isinstance(rimg_in, NoneType) and isinstance(cimg_in, NoneType):\n        print(\"Input rimg_in or cimg_in\")\n        sys.exit(1)\n\n    if save_dice:\n        dice_dict=dict()\n\n    volume_dataset=VolumeDataset(rimg_in=rimg_in, cimg_in=cimg_in, bmsk_in=bmsk_in)\n    volume_loader=DataLoader(dataset=volume_dataset, batch_size=1)\n\n    for idx, vol in enumerate(volume_loader):\n        if len(vol)==1: # just img\n            ptype=1 # Predict\n            cimg=vol\n            bmsk=None\n            block_dataset=BlockDataset(rimg=cimg, bfld=None, bmsk=None, num_slice=num_slice, rescale_dim=rescale_dim)\n        elif len(vol)==2: # img & msk\n            ptype=2 # image test\n            cimg=vol[0]\n            bmsk=vol[1]\n            block_dataset=BlockDataset(rimg=cimg, bfld=None, bmsk=bmsk, num_slice=num_slice, rescale_dim=rescale_dim)\n        elif len(vol==3): # img bias_field & msk\n            ptype=3 # image bias correction test\n            cimg=vol[0]\n            bfld=vol[1]\n            bmsk=vol[2]\n            block_dataset=BlockDataset(rimg=cimg, bfld=bfld, bmsk=bmsk, num_slice=num_slice, rescale_dim=rescale_dim)\n        else:\n            print(\"Invalid Volume Dataset!\")\n            sys.exit(2)\n\n        rescale_shape=block_dataset.get_rescale_shape()\n        raw_shape=block_dataset.get_raw_shape()\n\n        for od in range(3):\n            backard_ind=np.arange(3)\n            backard_ind=np.insert(np.delete(backard_ind, 0), od, 0)\n\n            block_data, slice_list, slice_weight=block_dataset.get_one_directory(axis=od)\n            pr_bmsk=torch.zeros([len(slice_weight), rescale_dim, rescale_dim])\n            if use_gpu:\n                pr_bmsk=pr_bmsk.cuda()\n            for (i, ind) in enumerate(slice_list):\n                if ptype==1:\n                    rimg_blk=block_data[i]\n                    if use_gpu:\n                        rimg_blk=rimg_blk.cuda()\n                elif ptype==2:\n                    rimg_blk, bmsk_blk=block_data[i]\n                    if use_gpu:\n                        rimg_blk=rimg_blk.cuda()\n                        bmsk_blk=bmsk_blk.cuda()\n                else:\n                    rimg_blk, bfld_blk, bmsk_blk=block_data[i]\n                    if use_gpu:\n                        rimg_blk=rimg_blk.cuda()\n                        bfld_blk=bfld_blk.cuda()\n                        bmsk_blk=bmsk_blk.cuda()\n                pr_bmsk_blk=model(torch.unsqueeze(Variable(rimg_blk), 0))\n                pr_bmsk[ind[1], :, :]=pr_bmsk_blk.data[0][1, :, :]\n\n            if use_gpu:\n                pr_bmsk=pr_bmsk.cpu()\n\n            pr_bmsk=pr_bmsk.permute(backard_ind[0], backard_ind[1], backard_ind[2])\n            pr_bmsk=pr_bmsk[:rescale_shape[0], :rescale_shape[1], :rescale_shape[2]]\n            uns_pr_bmsk=torch.unsqueeze(pr_bmsk, 0)\n            uns_pr_bmsk=torch.unsqueeze(uns_pr_bmsk, 0)\n            uns_pr_bmsk=nn.functional.interpolate(uns_pr_bmsk, size=raw_shape, mode=\"trilinear\", align_corners=False)\n            pr_bmsk=torch.squeeze(uns_pr_bmsk)\n\n            if od==0:\n                pr_3_bmsk=torch.unsqueeze(pr_bmsk, 3)\n            else:\n                pr_3_bmsk=torch.cat((pr_3_bmsk, torch.unsqueeze(pr_bmsk, 3)), dim=3)\n\n        pr_bmsk=pr_3_bmsk.mean(dim=3)\n\n        pr_bmsk=pr_bmsk.numpy()\n        pr_bmsk_final=extract_large_comp(pr_bmsk>0.5)\n        pr_bmsk_final=fill_holes(pr_bmsk_final)\n        if ed_iter>0:\n            pr_bmsk_final=erosion_dilation(pr_bmsk_final, iterations=ed_iter)\n\n        if isinstance(bmsk, torch.Tensor):\n            bmsk=bmsk.data[0].numpy()\n            dice=estimate_dice(bmsk, pr_bmsk_final)\n            if verbose:\n                print(dice)\n\n        t1w_nii=volume_dataset.getCurCimgNii()\n        t1w_path=t1w_nii.get_filename()\n        t1w_dir, t1w_file=os.path.split(t1w_path)\n        t1w_name=os.path.splitext(t1w_file)[0]\n        t1w_name=os.path.splitext(t1w_name)[0]\n\n        if save_nii:\n            t1w_aff=t1w_nii.affine\n            t1w_shape=t1w_nii.shape\n\n            if isinstance(nii_outdir, NoneType):\n                nii_outdir = os.getcwd()\n\n            out_path=os.path.join(nii_outdir, t1w_name+\"_\"+suffix+\".nii.gz\")\n            write_nifti(np.array(pr_bmsk_final, dtype=np.float32), t1w_aff, t1w_shape, out_path)\n\n        if save_dice:\n            dice_dict[t1w_name]=dice\n\n    if save_dice:\n        return dice_dict\n\n    # return output mask\n    return out_path\n",
					"model_path": "[Undefined]",
					"cimg_in": "[Undefined]"
				},
				"outputs": {
					"out_path": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "unet_masked_brain_59",
				"type": "node",
				"inputs": {
					"op_string": "-mul %s",
					"operand_files": "[Undefined]",
					"in_file": "[Undefined]",
					"out_file": "[Undefined]",
					"internal_datatype": "[Undefined]",
					"output_datatype": "[Undefined]",
					"nan2zeros": "[Undefined]",
					"output_type": "NIFTI_GZ",
					"args": "[Undefined]",
					"environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "native_brain_to_template_brain_59",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"reference": "[Undefined]",
					"out_file": "[Undefined]",
					"out_matrix_file": "[Undefined]",
					"out_log": "[Undefined]",
					"in_matrix_file": "[Undefined]",
					"apply_xfm": "[Undefined]",
					"apply_isoxfm": "[Undefined]",
					"datatype": "[Undefined]",
					"cost": "[Undefined]",
					"cost_func": "[Undefined]",
					"uses_qform": "[Undefined]",
					"display_init": "[Undefined]",
					"angle_rep": "[Undefined]",
					"interp": "sinc",
					"sinc_width": "[Undefined]",
					"sinc_window": "[Undefined]",
					"bins": "[Undefined]",
					"dof": "6",
					"no_resample": "[Undefined]",
					"force_scaling": "[Undefined]",
					"min_sampling": "[Undefined]",
					"padding_size": "[Undefined]",
					"searchr_x": "[Undefined]",
					"searchr_y": "[Undefined]",
					"searchr_z": "[Undefined]",
					"no_search": "[Undefined]",
					"coarse_search": "[Undefined]",
					"fine_search": "[Undefined]",
					"schedule": "[Undefined]",
					"ref_weight": "[Undefined]",
					"in_weight": "[Undefined]",
					"no_clamp": "[Undefined]",
					"no_resample_blur": "[Undefined]",
					"rigid2D": "[Undefined]",
					"save_log": "[Undefined]",
					"verbose": "[Undefined]",
					"bgvalue": "[Undefined]",
					"wm_seg": "[Undefined]",
					"wmcoords": "[Undefined]",
					"wmnorms": "[Undefined]",
					"fieldmap": "[Undefined]",
					"fieldmapmask": "[Undefined]",
					"pedir": "[Undefined]",
					"echospacing": "[Undefined]",
					"bbrtype": "[Undefined]",
					"bbrslope": "[Undefined]",
					"output_type": "NIFTI_GZ",
					"args": "[Undefined]",
					"environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
				},
				"outputs": {
					"out_file": "[Undefined]",
					"out_matrix_file": "[Undefined]",
					"out_log": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "resampled_T1w-brain-template",
				"type": "node",
				"inputs": {
					"function_str": "CPAC.utils.datasource.resolve_resolution",
					"resolution": "2mm",
					"template": "/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz",
					"template_name": "T1w-brain-template",
					"tag": "resolution_for_anat"
				},
				"outputs": {
					"resampled_template": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "native_head_to_template_head_59",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"reference": "[Undefined]",
					"out_file": "[Undefined]",
					"out_matrix_file": "[Undefined]",
					"out_log": "[Undefined]",
					"in_matrix_file": "[Undefined]",
					"apply_xfm": "True",
					"apply_isoxfm": "[Undefined]",
					"datatype": "[Undefined]",
					"cost": "[Undefined]",
					"cost_func": "[Undefined]",
					"uses_qform": "[Undefined]",
					"display_init": "[Undefined]",
					"angle_rep": "[Undefined]",
					"interp": "[Undefined]",
					"sinc_width": "[Undefined]",
					"sinc_window": "[Undefined]",
					"bins": "[Undefined]",
					"dof": "[Undefined]",
					"no_resample": "[Undefined]",
					"force_scaling": "[Undefined]",
					"min_sampling": "[Undefined]",
					"padding_size": "[Undefined]",
					"searchr_x": "[Undefined]",
					"searchr_y": "[Undefined]",
					"searchr_z": "[Undefined]",
					"no_search": "[Undefined]",
					"coarse_search": "[Undefined]",
					"fine_search": "[Undefined]",
					"schedule": "[Undefined]",
					"ref_weight": "[Undefined]",
					"in_weight": "[Undefined]",
					"no_clamp": "[Undefined]",
					"no_resample_blur": "[Undefined]",
					"rigid2D": "[Undefined]",
					"save_log": "[Undefined]",
					"verbose": "[Undefined]",
					"bgvalue": "[Undefined]",
					"wm_seg": "[Undefined]",
					"wmcoords": "[Undefined]",
					"wmnorms": "[Undefined]",
					"fieldmap": "[Undefined]",
					"fieldmapmask": "[Undefined]",
					"pedir": "[Undefined]",
					"echospacing": "[Undefined]",
					"bbrtype": "[Undefined]",
					"bbrslope": "[Undefined]",
					"output_type": "NIFTI_GZ",
					"args": "[Undefined]",
					"environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
				},
				"outputs": {
					"out_file": "[Undefined]",
					"out_matrix_file": "[Undefined]",
					"out_log": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "resampled_T1w-template",
				"type": "node",
				"inputs": {
					"function_str": "CPAC.utils.datasource.resolve_resolution",
					"resolution": "2mm",
					"template": "/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz",
					"template_name": "T1w-template",
					"tag": "resolution_for_anat"
				},
				"outputs": {
					"resampled_template": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "template_brain_mask_59",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"out_file": "[Undefined]",
					"internal_datatype": "[Undefined]",
					"output_datatype": "[Undefined]",
					"nan2zeros": "[Undefined]",
					"output_type": "NIFTI_GZ",
					"args": "-bin",
					"environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "template_head_to_template_59",
				"type": "node",
				"inputs": {
					"dimension": "3",
					"fixed_image": "[Undefined]",
					"fixed_image_mask": "[Undefined]",
					"fixed_image_masks": "[Undefined]",
					"moving_image": "[Undefined]",
					"moving_image_mask": "[Undefined]",
					"moving_image_masks": "[Undefined]",
					"save_state": "[Undefined]",
					"restore_state": "[Undefined]",
					"initial_moving_transform": "[Undefined]",
					"invert_initial_moving_transform": "[Undefined]",
					"initial_moving_transform_com": "[Undefined]",
					"metric_item_trait": "[Undefined]",
					"metric_stage_trait": "[Undefined]",
					"metric": "['CC']",
					"metric_weight_item_trait": "1.0",
					"metric_weight_stage_trait": "[Undefined]",
					"metric_weight": "[1.0, 5.0]",
					"radius_bins_item_trait": "5",
					"radius_bins_stage_trait": "[Undefined]",
					"radius_or_number_of_bins": "[5]",
					"sampling_strategy_item_trait": "[Undefined]",
					"sampling_strategy_stage_trait": "[Undefined]",
					"sampling_strategy": "[Undefined]",
					"sampling_percentage_item_trait": "[Undefined]",
					"sampling_percentage_stage_trait": "[Undefined]",
					"sampling_percentage": "[Undefined]",
					"use_estimate_learning_rate_once": "[Undefined]",
					"use_histogram_matching": "True",
					"interpolation": "NearestNeighbor",
					"interpolation_parameters": "[Undefined]",
					"write_composite_transform": "False",
					"collapse_output_transforms": "True",
					"initialize_transforms_per_stage": "False",
					"float": "[Undefined]",
					"transforms": "['SyN']",
					"transform_parameters": "[<generator object _serialize_inout.<locals>.<genexpr> at 0x152499eba9d0>]",
					"restrict_deformation": "[Undefined]",
					"number_of_iterations": "[[60, 50, 20]]",
					"smoothing_sigmas": "[[0.6, 0.2, 0.0]]",
					"sigma_units": "[Undefined]",
					"shrink_factors": "[[4, 2, 1]]",
					"convergence_threshold": "[1e-08]",
					"convergence_window_size": "[10]",
					"output_transform_prefix": "transform",
					"output_warped_image": "[Undefined]",
					"output_inverse_warped_image": "[Undefined]",
					"winsorize_upper_quantile": "1.0",
					"winsorize_lower_quantile": "0.0",
					"random_seed": "[Undefined]",
					"verbose": "False",
					"num_threads": "1",
					"args": "[Undefined]",
					"environ": "{'NSLOTS': '1'}"
				},
				"outputs": {
					"forward_transforms": "[Undefined]",
					"reverse_forward_transforms": "[Undefined]",
					"reverse_transforms": "[Undefined]",
					"forward_invert_flags": "[Undefined]",
					"reverse_forward_invert_flags": "[Undefined]",
					"reverse_invert_flags": "[Undefined]",
					"composite_transform": "[Undefined]",
					"inverse_composite_transform": "[Undefined]",
					"warped_image": "[Undefined]",
					"inverse_warped_image": "[Undefined]",
					"save_state": "[Undefined]",
					"metric_value": "[Undefined]",
					"elapsed_time": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "template_head_transform_to_template_59",
				"type": "node",
				"inputs": {
					"dimension": "3",
					"input_image_type": "[Undefined]",
					"input_image": "[Undefined]",
					"output_image": "[Undefined]",
					"out_postfix": "_trans",
					"reference_image": "[Undefined]",
					"interpolation": "Linear",
					"interpolation_parameters": "[Undefined]",
					"transforms": "[Undefined]",
					"invert_transform_flags": "[Undefined]",
					"default_value": "0.0",
					"print_out_composite_warp_file": "[Undefined]",
					"float": "False",
					"num_threads": "1",
					"args": "[Undefined]",
					"environ": "{'NSLOTS': '1'}"
				},
				"outputs": {
					"output_image": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "convert_xfm",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"in_file2": "[Undefined]",
					"invert_xfm": "True",
					"concat_xfm": "[Undefined]",
					"fix_scale_skew": "[Undefined]",
					"out_file": "[Undefined]",
					"output_type": "NIFTI_GZ",
					"args": "[Undefined]",
					"environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "template_brain_to_native_brain_59",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"reference": "[Undefined]",
					"out_file": "[Undefined]",
					"out_matrix_file": "[Undefined]",
					"out_log": "[Undefined]",
					"in_matrix_file": "[Undefined]",
					"apply_xfm": "True",
					"apply_isoxfm": "[Undefined]",
					"datatype": "[Undefined]",
					"cost": "[Undefined]",
					"cost_func": "[Undefined]",
					"uses_qform": "[Undefined]",
					"display_init": "[Undefined]",
					"angle_rep": "[Undefined]",
					"interp": "[Undefined]",
					"sinc_width": "[Undefined]",
					"sinc_window": "[Undefined]",
					"bins": "[Undefined]",
					"dof": "[Undefined]",
					"no_resample": "[Undefined]",
					"force_scaling": "[Undefined]",
					"min_sampling": "[Undefined]",
					"padding_size": "[Undefined]",
					"searchr_x": "[Undefined]",
					"searchr_y": "[Undefined]",
					"searchr_z": "[Undefined]",
					"no_search": "[Undefined]",
					"coarse_search": "[Undefined]",
					"fine_search": "[Undefined]",
					"schedule": "[Undefined]",
					"ref_weight": "[Undefined]",
					"in_weight": "[Undefined]",
					"no_clamp": "[Undefined]",
					"no_resample_blur": "[Undefined]",
					"rigid2D": "[Undefined]",
					"save_log": "[Undefined]",
					"verbose": "[Undefined]",
					"bgvalue": "[Undefined]",
					"wm_seg": "[Undefined]",
					"wmcoords": "[Undefined]",
					"wmnorms": "[Undefined]",
					"fieldmap": "[Undefined]",
					"fieldmapmask": "[Undefined]",
					"pedir": "[Undefined]",
					"echospacing": "[Undefined]",
					"bbrtype": "[Undefined]",
					"bbrslope": "[Undefined]",
					"output_type": "NIFTI_GZ",
					"args": "[Undefined]",
					"environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
				},
				"outputs": {
					"out_file": "[Undefined]",
					"out_matrix_file": "[Undefined]",
					"out_log": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "refined_mask_59",
				"type": "node",
				"inputs": {
					"thresh": "0.5",
					"direction": "below",
					"use_robust_range": "[Undefined]",
					"use_nonzero_voxels": "[Undefined]",
					"in_file": "[Undefined]",
					"out_file": "[Undefined]",
					"internal_datatype": "[Undefined]",
					"output_datatype": "[Undefined]",
					"nan2zeros": "[Undefined]",
					"output_type": "NIFTI_GZ",
					"args": "-bin",
					"environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "brain_extraction_64",
				"type": "node",
				"inputs": {
					"in_file_a": "[Undefined]",
					"in_file_b": "[Undefined]",
					"in_file_c": "[Undefined]",
					"out_file": "[Undefined]",
					"expr": "a*step(b)",
					"start_idx": "[Undefined]",
					"stop_idx": "[Undefined]",
					"single_idx": "[Undefined]",
					"overwrite": "[Undefined]",
					"other": "[Undefined]",
					"num_threads": "1",
					"outputtype": "NIFTI_GZ",
					"args": "[Undefined]",
					"environ": "{}"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "ANTS_T1_to_template_70",
				"type": "workflow",
				"inputs": {
					"inputspec": "{'input_brain': '[Undefined]', 'input_head': '[Undefined]', 'input_mask': '[Undefined]', 'interpolation': 'LanczosWindowedSinc', 'reference_brain': '[Undefined]', 'reference_head': '[Undefined]', 'reference_mask': '[Undefined]', 'transform': '[Undefined]'}",
					"anat_mni_ants_register": "{'inputspec': {'ants_para': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'fixed_image_mask': None, 'interp': '[Undefined]', 'moving_brain': '[Undefined]', 'moving_mask': '[Undefined]', 'moving_skull': '[Undefined]', 'reference_brain': '[Undefined]', 'reference_mask': '[Undefined]', 'reference_skull': '[Undefined]'}, 'calc_ants_warp': {'function_str': 'def hardcoded_reg(moving_brain, reference_brain, moving_skull,\\n                  reference_skull, ants_para, moving_mask=None,\\n                  reference_mask=None, fixed_image_mask=None, interp=None,\\n                  reg_with_skull=0):\\n    # TODO: expand transforms to cover all in ANTs para\\n\\n    regcmd = [\"antsRegistration\"]\\n    for para_index in range(len(ants_para)):\\n        for para_type in ants_para[para_index]:\\n            if para_type == \\'dimensionality\\':\\n                if ants_para[para_index][para_type] not in [2, 3, 4]:\\n                    err_msg = \\'Dimensionality specified in ANTs parameters: %d, is not supported. \\' \\\\\\n                              \\'Change to 2, 3, or 4 and try again\\' % \\\\\\n                              ants_para[para_index][para_type]\\n                    raise Exception(err_msg)\\n                else:\\n                    regcmd.append(\"--dimensionality\")\\n                    regcmd.append(str(ants_para[para_index][para_type]))\\n\\n            elif para_type == \\'verbose\\':\\n                if ants_para[para_index][para_type] not in [0, 1]:\\n                    err_msg = \\'Verbose output option in ANTs parameters: %d, is not supported. \\' \\\\\\n                              \\'Change to 0 or 1 and try again\\' % \\\\\\n                              ants_para[para_index][para_type]\\n                    raise Exception(err_msg)\\n                else:\\n                    regcmd.append(\"--verbose\")\\n                    regcmd.append(str(ants_para[para_index][para_type]))\\n\\n            elif para_type == \\'float\\':\\n                if ants_para[para_index][para_type] not in [0, 1]:\\n                    err_msg = \\'Float option in ANTs parameters: %d, is not supported. \\' \\\\\\n                              \\'Change to 0 or 1 and try again\\' % \\\\\\n                              ants_para[para_index][para_type]\\n                    raise Exception(err_msg)\\n                else:\\n                    regcmd.append(\"--float\")\\n                    regcmd.append(str(ants_para[para_index][para_type]))\\n\\n            elif para_type == \\'collapse-output-transforms\\':\\n                if ants_para[para_index][para_type] not in [0, 1]:\\n                    err_msg = \\'collapse-output-transforms specified in ANTs parameters: %d, is not supported. \\' \\\\\\n                              \\'Change to 0 or 1 and try again\\' % \\\\\\n                              ants_para[para_index][para_type]\\n                    raise Exception(err_msg)\\n                else:\\n                    regcmd.append(\"--collapse-output-transforms\")\\n                    regcmd.append(str(ants_para[para_index][para_type]))\\n\\n            elif para_type == \\'winsorize-image-intensities\\':\\n                if ants_para[para_index][para_type][\\'lowerQuantile\\'] is None or ants_para[para_index][para_type][\\'upperQuantile\\'] is None:\\n                    err_msg = \\'Please specifiy lowerQuantile and upperQuantile of ANTs parameters --winsorize-image-intensities in pipeline config. \\'\\n                    raise Exception(err_msg)\\n                else:\\n                    regcmd.append(\"--winsorize-image-intensities\")\\n                    regcmd.append(\"[{0},{1}]\".format(ants_para[para_index][para_type][\\'lowerQuantile\\'],\\n                        ants_para[para_index][para_type][\\'upperQuantile\\']))\\n\\n            elif para_type == \\'initial-moving-transform\\':\\n                if ants_para[para_index][para_type][\\n                    \\'initializationFeature\\'] is None:\\n                    err_msg = \\'Please specifiy initializationFeature of ANTs parameters in pipeline config. \\'\\n                    raise Exception(err_msg)\\n                else:\\n                    regcmd.append(\"--initial-moving-transform\")\\n                    if reg_with_skull == 1:\\n                        regcmd.append(\"[{0},{1},{2}]\".format(\\n                            reference_skull, moving_skull,\\n                            ants_para[para_index][para_type][\\n                                \\'initializationFeature\\']))\\n                    else:\\n                        regcmd.append(\"[{0},{1},{2}]\".format(\\n                            reference_brain, moving_brain,\\n                            ants_para[para_index][para_type][\\n                                \\'initializationFeature\\']))\\n\\n            elif para_type == \\'transforms\\':\\n                for trans_index in range(\\n                        len(ants_para[para_index][para_type])):\\n                    for trans_type in ants_para[para_index][para_type][\\n                        trans_index]:\\n                        regcmd.append(\"--transform\")\\n                        if trans_type == \\'Rigid\\' or trans_type == \\'Affine\\':\\n                            if ants_para[para_index][para_type][trans_index][\\n                                trans_type][\\'gradientStep\\'] is None:\\n                                err_msg = \\'Please specifiy % s Gradient Step of ANTs parameters in pipeline config. \\' % trans_type\\n                                raise Exception(err_msg)\\n                            else:\\n                                regcmd.append(\"{0}[{1}]\".format(\\n                                    trans_type,\\n                                    ants_para[para_index][para_type][\\n                                        trans_index][trans_type][\\n                                        \\'gradientStep\\']))\\n\\n                        if trans_type == \\'SyN\\':\\n                            if ants_para[para_index][para_type][trans_index][\\n                                trans_type][\\'gradientStep\\'] is None:\\n                                err_msg = \\'Please specifiy % s Gradient Step of ANTs parameters in pipeline config. \\' % trans_type\\n                                raise Exception(err_msg)\\n                            else:\\n                                SyN_para = []\\n                                SyN_para.append(\"{0}\".format(\\n                                    ants_para[para_index][para_type][\\n                                        trans_index][trans_type][\\n                                        \\'gradientStep\\']))\\n                                if ants_para[para_index][para_type][\\n                                    trans_index][trans_type][\\n                                    \\'updateFieldVarianceInVoxelSpace\\'] is not None:\\n                                    SyN_para.append(\"{0}\".format(\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'updateFieldVarianceInVoxelSpace\\']))\\n                                if ants_para[para_index][para_type][\\n                                    trans_index][trans_type][\\n                                    \\'totalFieldVarianceInVoxelSpace\\'] is not None:\\n                                    SyN_para.append(\"{0}\".format(\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'totalFieldVarianceInVoxelSpace\\']))\\n                                SyN_para = \\',\\'.join([str(elem)\\n                                                     for elem in SyN_para])\\n                                regcmd.append(\"{0}[{1}]\".format(\\n                                    trans_type, SyN_para))\\n\\n                        if ants_para[para_index][para_type][trans_index][\\n                            trans_type][\\'metric\\'][\\'type\\'] == \\'MI\\':\\n                            if ants_para[para_index][para_type][trans_index][\\n                                trans_type][\\'metric\\'][\\n                                \\'metricWeight\\'] is None or \\\\\\n                                            ants_para[para_index][para_type][\\n                                                trans_index][trans_type][\\n                                                \\'metric\\'][\\n                                                \\'numberOfBins\\'] is None:\\n                                err_msg = \\'Please specifiy metricWeight and numberOfBins for metric MI of ANTs parameters in pipeline config.\\'\\n                                raise Exception(err_msg)\\n                            else:\\n                                MI_para = []\\n                                MI_para.append(\"{0},{1}\".format(\\n                                    ants_para[para_index][para_type][\\n                                        trans_index][trans_type][\\'metric\\']\\n                                    [\\'metricWeight\\'],\\n                                    ants_para[para_index][para_type][\\n                                        trans_index][trans_type][\\'metric\\'][\\n                                        \\'numberOfBins\\']))\\n                                if \\'samplingStrategy\\' in \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'metric\\'] and \\\\\\n                                                ants_para[para_index][\\n                                                    para_type][trans_index][\\n                                                    trans_type][\\'metric\\'][\\n                                                    \\'samplingStrategy\\'] in [\\n                                            \\'None\\', \\'Regular\\', \\'Random\\']:\\n                                    MI_para.append(\"{0}\".format(\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'metric\\'][\\'samplingStrategy\\']))\\n                                if \\'samplingPercentage\\' in \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'metric\\'] and \\\\\\n                                                ants_para[para_index][\\n                                                    para_type][trans_index][\\n                                                    trans_type][\\'metric\\'][\\n                                                    \\'samplingPercentage\\'] is not None:\\n                                    MI_para.append(\"{0}\".format(\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'metric\\'][\\'samplingPercentage\\']))\\n                                MI_para = \\',\\'.join(\\n                                    [str(elem) for elem in MI_para])\\n                                regcmd.append(\"--metric\")\\n                                if reg_with_skull == 1:\\n                                    regcmd.append(\"MI[{0},{1},{2}]\".format(\\n                                        reference_skull, moving_skull, MI_para))\\n                                else:\\n                                    regcmd.append(\"MI[{0},{1},{2}]\".format(\\n                                        reference_brain, moving_brain, MI_para))\\n\\n                        if ants_para[para_index][para_type][trans_index][\\n                            trans_type][\\'metric\\'][\\'type\\'] == \\'CC\\':\\n                            if ants_para[para_index][para_type][trans_index][\\n                                trans_type][\\'metric\\'][\\n                                \\'metricWeight\\'] is None or \\\\\\n                                            ants_para[para_index][para_type][\\n                                                trans_index][trans_type][\\n                                                \\'metric\\'][\\'radius\\'] is None:\\n                                err_msg = \\'Please specifiy metricWeight and radius for metric CC of ANTs parameters in pipeline config.\\'\\n                                raise Exception(err_msg)\\n                            else:\\n                                CC_para = []\\n                                CC_para.append(\"{0},{1}\".format(\\n                                    ants_para[para_index][para_type][\\n                                        trans_index][trans_type][\\'metric\\']\\n                                    [\\'metricWeight\\'],\\n                                    ants_para[para_index][para_type][\\n                                        trans_index][trans_type][\\'metric\\'][\\n                                        \\'radius\\']))\\n                                if \\'samplingStrategy\\' in \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'metric\\'] and \\\\\\n                                                ants_para[para_index][\\n                                                    para_type][trans_index][\\n                                                    trans_type][\\'metric\\'][\\n                                                    \\'samplingStrategy\\'] in [\\n                                            \\'None\\', \\'Regular\\', \\'Random\\']:\\n                                    CC_para.append(\"{0}\".format(\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'metric\\'][\\'samplingStrategy\\']))\\n                                if \\'samplingPercentage\\' in \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'metric\\'] and \\\\\\n                                                ants_para[para_index][\\n                                                    para_type][trans_index][\\n                                                    trans_type][\\'metric\\'][\\n                                                    \\'samplingPercentage\\'] is not None:\\n                                    CC_para.append(\"{0}\".format(\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'metric\\'][\\'samplingPercentage\\']))\\n                                CC_para = \\',\\'.join(\\n                                    [str(elem) for elem in CC_para])\\n                                regcmd.append(\"--metric\")\\n                                regcmd.append(\"CC[{0},{1},{2}]\".format(\\n                                    reference_skull, moving_skull, CC_para))\\n\\n                        if \\'convergence\\' in \\\\\\n                                ants_para[para_index][para_type][trans_index][\\n                                    trans_type]:\\n                            convergence_para = []\\n                            if ants_para[para_index][para_type][trans_index][\\n                                trans_type][\\'convergence\\'][\\n                                \\'iteration\\'] is None:\\n                                err_msg = \\'Please specifiy convergence iteration of ANTs parameters in pipeline config.\\'\\n                                raise Exception(err_msg)\\n                            else:\\n                                convergence_para.append(\"{0}\".format(\\n                                    ants_para[para_index][para_type][\\n                                        trans_index][trans_type][\\n                                        \\'convergence\\'][\\'iteration\\']))\\n                                if \\'convergenceThreshold\\' in \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'convergence\\'] and \\\\\\n                                                ants_para[para_index][\\n                                                    para_type][trans_index][\\n                                                    trans_type][\\n                                                    \\'convergence\\'][\\n                                                    \\'convergenceThreshold\\'] is not None:\\n                                    convergence_para.append(\"{0}\".format(\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'convergence\\'][\\n                                            \\'convergenceThreshold\\']))\\n                                if \\'convergenceWindowSize\\' in \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'convergence\\'] and \\\\\\n                                                ants_para[para_index][\\n                                                    para_type][trans_index][\\n                                                    trans_type][\\n                                                    \\'convergence\\'][\\n                                                    \\'convergenceWindowSize\\'] is not None:\\n                                    convergence_para.append(\"{0}\".format(\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'convergence\\'][\\n                                            \\'convergenceWindowSize\\']))\\n                                convergence_para = \\',\\'.join(\\n                                    [str(elem) for elem in convergence_para])\\n                                regcmd.append(\"--convergence\")\\n                                regcmd.append(\\n                                    \"[{0}]\".format(convergence_para))\\n\\n                        if \\'smoothing-sigmas\\' in \\\\\\n                                ants_para[para_index][para_type][trans_index][\\n                                    trans_type] and \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'smoothing-sigmas\\'] is not None:\\n                            regcmd.append(\"--smoothing-sigmas\")\\n                            regcmd.append(\"{0}\".format(\\n                                ants_para[para_index][para_type][trans_index][\\n                                    trans_type][\\'smoothing-sigmas\\']))\\n\\n                        if \\'shrink-factors\\' in \\\\\\n                                ants_para[para_index][para_type][trans_index][\\n                                    trans_type] and \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'shrink-factors\\'] is not None:\\n                            regcmd.append(\"--shrink-factors\")\\n                            regcmd.append(\"{0}\".format(\\n                                ants_para[para_index][para_type][trans_index][\\n                                    trans_type][\\'shrink-factors\\']))\\n\\n                        if \\'use-histogram-matching\\' in \\\\\\n                                ants_para[para_index][para_type][trans_index][\\n                                    trans_type]:\\n                            if ants_para[para_index][para_type][trans_index][\\n                                trans_type][\\'use-histogram-matching\\']:\\n                                regcmd.append(\"--use-histogram-matching\")\\n                                regcmd.append(\"1\")\\n\\n                        if \\'winsorize-image-intensities\\' in \\\\\\n                                ants_para[para_index][para_type][trans_index][\\n                                    trans_type] and \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'winsorize-image-intensities\\'][\\n                                            \\'lowerQuantile\\'] is not None and \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'winsorize-image-intensities\\'][\\n                                            \\'upperQuantile\\'] is not None:\\n                            regcmd.append(\"--winsorize-image-intensities\")\\n                            regcmd.append(\"[{0},{1}]\".format(\\n                                ants_para[para_index][para_type][trans_index][\\n                                    trans_type][\\'winsorize-image-intensities\\']\\n                                [\\'lowerQuantile\\'],\\n                                ants_para[para_index][para_type][trans_index][\\n                                    trans_type][\\n                                    \\'winsorize-image-intensities\\'][\\n                                    \\'upperQuantile\\']))\\n\\n                        if \\'masks\\' in ants_para[para_index][para_type][trans_index][\\n                            trans_type] and ants_para[para_index][para_type][\\n                                trans_index][trans_type][\\'masks\\'] is not None:\\n                            if ants_para[para_index][para_type][trans_index][trans_type][\\'masks\\']:\\n                                regcmd.append(\"--masks\")\\n                                regcmd.append(\"[{0},{1}]\".format(reference_mask, moving_mask))\\n                            else:\\n                                regcmd.append(\"--masks\")\\n                                regcmd.append(\"[NULL,NULL]\")\\n\\n            elif para_type == \\'masks\\':\\n                # lesion preproc has\\n                if fixed_image_mask is not None:\\n                    regcmd.append(\"--masks\")\\n                    regcmd.append(str(fixed_image_mask))\\n                else:\\n                    if ants_para[para_index][para_type][\\n                        \\'fixed_image_mask\\'] == False and \\\\\\n                                    ants_para[para_index][para_type][\\n                                        \\'moving_image_mask\\'] == True:\\n                        err_msg = \\'Masks option in ANTs parameters: %d is not supported. \\' \\\\\\n                                  \\'Please set `fixed_image_mask` as True. \\' \\\\\\n                                  \\'Or set both `fixed_image_mask` and `moving_image_mask` as False\\' % \\\\\\n                                  ants_para[para_index][para_type]\\n                        raise Exception(err_msg)\\n                    elif ants_para[para_index][para_type][\\n                        \\'fixed_image_mask\\'] == True and \\\\\\n                                    ants_para[para_index][para_type][\\n                                        \\'moving_image_mask\\'] == True:\\n                        regcmd.append(\"--masks\")\\n                        regcmd.append(\\'[\\' + str(reference_mask) + \\',\\' + str(\\n                            moving_mask) + \\']\\')\\n                    elif ants_para[para_index][para_type][\\n                        \\'fixed_image_mask\\'] == True and \\\\\\n                                    ants_para[para_index][para_type][\\n                                        \\'moving_image_mask\\'] == False:\\n                        regcmd.append(\"--masks\")\\n                        regcmd.append(\\'[\\' + str(reference_mask) + \\']\\')\\n                    else:\\n                        continue\\n\\n    if interp is not None:\\n        regcmd.append(\"--interpolation\")\\n        regcmd.append(\"{0}\".format(interp))\\n\\n    regcmd.append(\"--output\")\\n    regcmd.append(\"[transform,transform_Warped.nii.gz]\")\\n\\n    # write out the actual command-line entry for testing/validation later\\n    command_file = os.path.join(os.getcwd(), \\'command.txt\\')\\n    with open(command_file, \\'wt\\') as f:\\n        f.write(\\' \\'.join(regcmd))\\n\\n    try:\\n        retcode = subprocess.check_output(regcmd)\\n    except Exception as e:\\n        raise Exception(\\'[!] ANTS registration did not complete successfully.\\'\\n                        \\'\\\\n\\\\nError details:\\\\n{0}\\\\n{1}\\\\n\\'.format(e, e.output))\\n\\n    warp_list = []\\n    warped_image = None\\n\\n    files = [f for f in os.listdir(\\'.\\') if os.path.isfile(f)]\\n\\n    for f in files:\\n        if (\"transform\" in f) and (\"Warped\" not in f):\\n            warp_list.append(os.getcwd() + \"/\" + f)\\n        if \"Warped\" in f:\\n            warped_image = os.getcwd() + \"/\" + f\\n\\n    if not warped_image:\\n        raise Exception(\"\\\\n\\\\n[!] No registration output file found. ANTS \"\\n                        \"registration may not have completed \"\\n                        \"successfully.\\\\n\\\\n\")\\n\\n    return warp_list, warped_image\\n', 'reg_with_skull': '[Undefined]'}, 'select_forward_initial': {'function_str': \"def seperate_warps_list(warp_list, selection):\\n    selected_warp = None\\n    for warp in warp_list:\\n        if selection == 'Warp':\\n            if '3Warp' in warp or '2Warp' in warp or '1Warp' in warp:\\n                selected_warp = warp\\n        else:\\n            if selection in warp:\\n                selected_warp = warp\\n    return selected_warp\\n\", 'selection': 'Initial'}, 'select_forward_rigid': {'function_str': \"def seperate_warps_list(warp_list, selection):\\n    selected_warp = None\\n    for warp in warp_list:\\n        if selection == 'Warp':\\n            if '3Warp' in warp or '2Warp' in warp or '1Warp' in warp:\\n                selected_warp = warp\\n        else:\\n            if selection in warp:\\n                selected_warp = warp\\n    return selected_warp\\n\", 'selection': 'Rigid'}, 'select_forward_affine': {'function_str': \"def seperate_warps_list(warp_list, selection):\\n    selected_warp = None\\n    for warp in warp_list:\\n        if selection == 'Warp':\\n            if '3Warp' in warp or '2Warp' in warp or '1Warp' in warp:\\n                selected_warp = warp\\n        else:\\n            if selection in warp:\\n                selected_warp = warp\\n    return selected_warp\\n\", 'selection': 'Affine'}, 'select_forward_warp': {'function_str': \"def seperate_warps_list(warp_list, selection):\\n    selected_warp = None\\n    for warp in warp_list:\\n        if selection == 'Warp':\\n            if '3Warp' in warp or '2Warp' in warp or '1Warp' in warp:\\n                selected_warp = warp\\n        else:\\n            if selection in warp:\\n                selected_warp = warp\\n    return selected_warp\\n\", 'selection': 'Warp'}, 'select_inverse_warp': {'function_str': \"def seperate_warps_list(warp_list, selection):\\n    selected_warp = None\\n    for warp in warp_list:\\n        if selection == 'Warp':\\n            if '3Warp' in warp or '2Warp' in warp or '1Warp' in warp:\\n                selected_warp = warp\\n        else:\\n            if selection in warp:\\n                selected_warp = warp\\n    return selected_warp\\n\", 'selection': 'Inverse'}, 'outputspec': {'composite_transform': '[Undefined]', 'wait': '[Undefined]'}}",
					"write_composite_linear_xfm": "{'args': '[Undefined]', 'default_value': 0.0, 'dimension': 3, 'environ': {'NSLOTS': '1'}, 'float': False, 'input_image_type': 0, 'interpolation_parameters': '[Undefined]', 'invert_transform_flags': '[Undefined]', 'num_threads': 1, 'out_postfix': '_trans', 'output_image': 'from-T1w_to-template_mode-image_desc-linear_xfm.nii.gz', 'print_out_composite_warp_file': True}",
					"collect_transforms": "{'axis': 'vstack', 'no_flatten': False, 'ravel_inputs': False}",
					"check_transforms": "{'function_str': 'def check_transforms(transform_list):\\n    transform_number = list(filter(None, transform_list))\\n    return [(transform_number[index]) for index in\\n            range(len(transform_number))], len(transform_number)\\n'}",
					"write_composite_invlinear_xfm": "{'args': '[Undefined]', 'default_value': 0.0, 'dimension': 3, 'environ': {'NSLOTS': '1'}, 'float': False, 'input_image_type': 0, 'interpolation_parameters': '[Undefined]', 'num_threads': 1, 'out_postfix': '_trans', 'output_image': 'from-template_to-T1w_mode-image_desc-linear_xfm.nii.gz', 'print_out_composite_warp_file': True}",
					"collect_inv_transforms": "{'axis': 'vstack', 'no_flatten': False, 'ravel_inputs': False}",
					"check_inv_transforms": "{'function_str': 'def check_transforms(transform_list):\\n    transform_number = list(filter(None, transform_list))\\n    return [(transform_number[index]) for index in\\n            range(len(transform_number))], len(transform_number)\\n'}",
					"inverse_transform_flags": "{'function_str': \"def generate_inverse_transform_flags(transform_list):\\n    inverse_transform_flags = []\\n    for transform in transform_list:\\n        # check `blip_warp_inverse` file name and rename it\\n        if 'WARPINV' in transform:\\n            inverse_transform_flags.append(False)\\n        if 'updated_affine' in transform:\\n            inverse_transform_flags.append(True)\\n        if 'Initial' in transform:\\n            inverse_transform_flags.append(True)\\n        if 'Rigid' in transform:\\n            inverse_transform_flags.append(True)\\n        if 'Affine' in transform:\\n            inverse_transform_flags.append(True)\\n        if 'InverseWarp' in transform:\\n            inverse_transform_flags.append(False)\\n    return inverse_transform_flags\\n\"}",
					"write_composite_xfm": "{'args': '[Undefined]', 'default_value': 0.0, 'dimension': 3, 'environ': {'NSLOTS': '1'}, 'float': False, 'input_image_type': 0, 'interpolation_parameters': '[Undefined]', 'invert_transform_flags': '[Undefined]', 'num_threads': 1, 'out_postfix': '_trans', 'output_image': 'from-T1w_to-template_mode-image_xfm.nii.gz', 'print_out_composite_warp_file': True}",
					"collect_all_transforms": "{'axis': 'vstack', 'no_flatten': False, 'ravel_inputs': False}",
					"check_all_transforms": "{'function_str': 'def check_transforms(transform_list):\\n    transform_number = list(filter(None, transform_list))\\n    return [(transform_number[index]) for index in\\n            range(len(transform_number))], len(transform_number)\\n'}",
					"write_composite_inv_xfm": "{'args': '[Undefined]', 'default_value': 0.0, 'dimension': 3, 'environ': {'NSLOTS': '1'}, 'float': False, 'input_image_type': 0, 'interpolation_parameters': '[Undefined]', 'num_threads': 1, 'out_postfix': '_trans', 'output_image': 'from-template_to-T1w_mode-image_xfm.nii.gz', 'print_out_composite_warp_file': True}",
					"collect_all_inv_transforms": "{'axis': 'vstack', 'no_flatten': False, 'ravel_inputs': False}",
					"check_all_inv_transforms": "{'function_str': 'def check_transforms(transform_list):\\n    transform_number = list(filter(None, transform_list))\\n    return [(transform_number[index]) for index in\\n            range(len(transform_number))], len(transform_number)\\n'}",
					"inverse_all_transform_flags": "{'function_str': \"def generate_inverse_transform_flags(transform_list):\\n    inverse_transform_flags = []\\n    for transform in transform_list:\\n        # check `blip_warp_inverse` file name and rename it\\n        if 'WARPINV' in transform:\\n            inverse_transform_flags.append(False)\\n        if 'updated_affine' in transform:\\n            inverse_transform_flags.append(True)\\n        if 'Initial' in transform:\\n            inverse_transform_flags.append(True)\\n        if 'Rigid' in transform:\\n            inverse_transform_flags.append(True)\\n        if 'Affine' in transform:\\n            inverse_transform_flags.append(True)\\n        if 'InverseWarp' in transform:\\n            inverse_transform_flags.append(False)\\n    return inverse_transform_flags\\n\"}"
				},
				"outputs": {
					"inputspec": "{'input_brain': None, 'input_head': None, 'input_mask': None, 'interpolation': None, 'reference_brain': None, 'reference_head': None, 'reference_mask': None, 'transform': None}",
					"anat_mni_ants_register": "{'inputspec': {'ants_para': None, 'fixed_image_mask': None, 'interp': None, 'moving_brain': None, 'moving_mask': None, 'moving_skull': None, 'reference_brain': None, 'reference_mask': None, 'reference_skull': None}, 'calc_ants_warp': {'warp_list': None, 'warped_image': None}, 'select_forward_initial': {'selected_warp': None}, 'select_forward_rigid': {'selected_warp': None}, 'select_forward_affine': {'selected_warp': None}, 'select_forward_warp': {'selected_warp': None}, 'select_inverse_warp': {'selected_warp': None}, 'outputspec': {'ants_affine_xfm': None, 'ants_initial_xfm': None, 'ants_rigid_xfm': None, 'composite_transform': None, 'inverse_warp_field': None, 'normalized_output_brain': None, 'wait': None, 'warp_field': None}}",
					"write_composite_linear_xfm": "{'output_image': None}",
					"collect_transforms": "{'out': None}",
					"check_transforms": "{'checked_transform_list': None, 'list_length': None}",
					"write_composite_invlinear_xfm": "{'output_image': None}",
					"collect_inv_transforms": "{'out': None}",
					"check_inv_transforms": "{'checked_transform_list': None, 'list_length': None}",
					"inverse_transform_flags": "{'inverse_transform_flags': None}",
					"write_composite_xfm": "{'output_image': None}",
					"collect_all_transforms": "{'out': None}",
					"check_all_transforms": "{'checked_transform_list': None, 'list_length': None}",
					"write_composite_inv_xfm": "{'output_image': None}",
					"collect_all_inv_transforms": "{'out': None}",
					"check_all_inv_transforms": "{'checked_transform_list': None, 'list_length': None}",
					"inverse_all_transform_flags": "{'inverse_transform_flags': None}"
				},
				"result": null,
				"nodes": [
					{
						"name": "inputspec",
						"type": "node",
						"inputs": {
							"input_brain": "[Undefined]",
							"reference_brain": "[Undefined]",
							"input_head": "[Undefined]",
							"reference_head": "[Undefined]",
							"input_mask": "[Undefined]",
							"reference_mask": "[Undefined]",
							"transform": "[Undefined]",
							"interpolation": "LanczosWindowedSinc"
						},
						"outputs": {
							"input_brain": "[Undefined]",
							"reference_brain": "[Undefined]",
							"input_head": "[Undefined]",
							"reference_head": "[Undefined]",
							"input_mask": "[Undefined]",
							"reference_mask": "[Undefined]",
							"transform": "[Undefined]",
							"interpolation": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "anat_mni_ants_register",
						"type": "workflow",
						"inputs": {
							"inputspec": "{'ants_para': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'fixed_image_mask': None, 'interp': '[Undefined]', 'moving_brain': '[Undefined]', 'moving_mask': '[Undefined]', 'moving_skull': '[Undefined]', 'reference_brain': '[Undefined]', 'reference_mask': '[Undefined]', 'reference_skull': '[Undefined]'}",
							"calc_ants_warp": "{'function_str': 'def hardcoded_reg(moving_brain, reference_brain, moving_skull,\\n                  reference_skull, ants_para, moving_mask=None,\\n                  reference_mask=None, fixed_image_mask=None, interp=None,\\n                  reg_with_skull=0):\\n    # TODO: expand transforms to cover all in ANTs para\\n\\n    regcmd = [\"antsRegistration\"]\\n    for para_index in range(len(ants_para)):\\n        for para_type in ants_para[para_index]:\\n            if para_type == \\'dimensionality\\':\\n                if ants_para[para_index][para_type] not in [2, 3, 4]:\\n                    err_msg = \\'Dimensionality specified in ANTs parameters: %d, is not supported. \\' \\\\\\n                              \\'Change to 2, 3, or 4 and try again\\' % \\\\\\n                              ants_para[para_index][para_type]\\n                    raise Exception(err_msg)\\n                else:\\n                    regcmd.append(\"--dimensionality\")\\n                    regcmd.append(str(ants_para[para_index][para_type]))\\n\\n            elif para_type == \\'verbose\\':\\n                if ants_para[para_index][para_type] not in [0, 1]:\\n                    err_msg = \\'Verbose output option in ANTs parameters: %d, is not supported. \\' \\\\\\n                              \\'Change to 0 or 1 and try again\\' % \\\\\\n                              ants_para[para_index][para_type]\\n                    raise Exception(err_msg)\\n                else:\\n                    regcmd.append(\"--verbose\")\\n                    regcmd.append(str(ants_para[para_index][para_type]))\\n\\n            elif para_type == \\'float\\':\\n                if ants_para[para_index][para_type] not in [0, 1]:\\n                    err_msg = \\'Float option in ANTs parameters: %d, is not supported. \\' \\\\\\n                              \\'Change to 0 or 1 and try again\\' % \\\\\\n                              ants_para[para_index][para_type]\\n                    raise Exception(err_msg)\\n                else:\\n                    regcmd.append(\"--float\")\\n                    regcmd.append(str(ants_para[para_index][para_type]))\\n\\n            elif para_type == \\'collapse-output-transforms\\':\\n                if ants_para[para_index][para_type] not in [0, 1]:\\n                    err_msg = \\'collapse-output-transforms specified in ANTs parameters: %d, is not supported. \\' \\\\\\n                              \\'Change to 0 or 1 and try again\\' % \\\\\\n                              ants_para[para_index][para_type]\\n                    raise Exception(err_msg)\\n                else:\\n                    regcmd.append(\"--collapse-output-transforms\")\\n                    regcmd.append(str(ants_para[para_index][para_type]))\\n\\n            elif para_type == \\'winsorize-image-intensities\\':\\n                if ants_para[para_index][para_type][\\'lowerQuantile\\'] is None or ants_para[para_index][para_type][\\'upperQuantile\\'] is None:\\n                    err_msg = \\'Please specifiy lowerQuantile and upperQuantile of ANTs parameters --winsorize-image-intensities in pipeline config. \\'\\n                    raise Exception(err_msg)\\n                else:\\n                    regcmd.append(\"--winsorize-image-intensities\")\\n                    regcmd.append(\"[{0},{1}]\".format(ants_para[para_index][para_type][\\'lowerQuantile\\'],\\n                        ants_para[para_index][para_type][\\'upperQuantile\\']))\\n\\n            elif para_type == \\'initial-moving-transform\\':\\n                if ants_para[para_index][para_type][\\n                    \\'initializationFeature\\'] is None:\\n                    err_msg = \\'Please specifiy initializationFeature of ANTs parameters in pipeline config. \\'\\n                    raise Exception(err_msg)\\n                else:\\n                    regcmd.append(\"--initial-moving-transform\")\\n                    if reg_with_skull == 1:\\n                        regcmd.append(\"[{0},{1},{2}]\".format(\\n                            reference_skull, moving_skull,\\n                            ants_para[para_index][para_type][\\n                                \\'initializationFeature\\']))\\n                    else:\\n                        regcmd.append(\"[{0},{1},{2}]\".format(\\n                            reference_brain, moving_brain,\\n                            ants_para[para_index][para_type][\\n                                \\'initializationFeature\\']))\\n\\n            elif para_type == \\'transforms\\':\\n                for trans_index in range(\\n                        len(ants_para[para_index][para_type])):\\n                    for trans_type in ants_para[para_index][para_type][\\n                        trans_index]:\\n                        regcmd.append(\"--transform\")\\n                        if trans_type == \\'Rigid\\' or trans_type == \\'Affine\\':\\n                            if ants_para[para_index][para_type][trans_index][\\n                                trans_type][\\'gradientStep\\'] is None:\\n                                err_msg = \\'Please specifiy % s Gradient Step of ANTs parameters in pipeline config. \\' % trans_type\\n                                raise Exception(err_msg)\\n                            else:\\n                                regcmd.append(\"{0}[{1}]\".format(\\n                                    trans_type,\\n                                    ants_para[para_index][para_type][\\n                                        trans_index][trans_type][\\n                                        \\'gradientStep\\']))\\n\\n                        if trans_type == \\'SyN\\':\\n                            if ants_para[para_index][para_type][trans_index][\\n                                trans_type][\\'gradientStep\\'] is None:\\n                                err_msg = \\'Please specifiy % s Gradient Step of ANTs parameters in pipeline config. \\' % trans_type\\n                                raise Exception(err_msg)\\n                            else:\\n                                SyN_para = []\\n                                SyN_para.append(\"{0}\".format(\\n                                    ants_para[para_index][para_type][\\n                                        trans_index][trans_type][\\n                                        \\'gradientStep\\']))\\n                                if ants_para[para_index][para_type][\\n                                    trans_index][trans_type][\\n                                    \\'updateFieldVarianceInVoxelSpace\\'] is not None:\\n                                    SyN_para.append(\"{0}\".format(\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'updateFieldVarianceInVoxelSpace\\']))\\n                                if ants_para[para_index][para_type][\\n                                    trans_index][trans_type][\\n                                    \\'totalFieldVarianceInVoxelSpace\\'] is not None:\\n                                    SyN_para.append(\"{0}\".format(\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'totalFieldVarianceInVoxelSpace\\']))\\n                                SyN_para = \\',\\'.join([str(elem)\\n                                                     for elem in SyN_para])\\n                                regcmd.append(\"{0}[{1}]\".format(\\n                                    trans_type, SyN_para))\\n\\n                        if ants_para[para_index][para_type][trans_index][\\n                            trans_type][\\'metric\\'][\\'type\\'] == \\'MI\\':\\n                            if ants_para[para_index][para_type][trans_index][\\n                                trans_type][\\'metric\\'][\\n                                \\'metricWeight\\'] is None or \\\\\\n                                            ants_para[para_index][para_type][\\n                                                trans_index][trans_type][\\n                                                \\'metric\\'][\\n                                                \\'numberOfBins\\'] is None:\\n                                err_msg = \\'Please specifiy metricWeight and numberOfBins for metric MI of ANTs parameters in pipeline config.\\'\\n                                raise Exception(err_msg)\\n                            else:\\n                                MI_para = []\\n                                MI_para.append(\"{0},{1}\".format(\\n                                    ants_para[para_index][para_type][\\n                                        trans_index][trans_type][\\'metric\\']\\n                                    [\\'metricWeight\\'],\\n                                    ants_para[para_index][para_type][\\n                                        trans_index][trans_type][\\'metric\\'][\\n                                        \\'numberOfBins\\']))\\n                                if \\'samplingStrategy\\' in \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'metric\\'] and \\\\\\n                                                ants_para[para_index][\\n                                                    para_type][trans_index][\\n                                                    trans_type][\\'metric\\'][\\n                                                    \\'samplingStrategy\\'] in [\\n                                            \\'None\\', \\'Regular\\', \\'Random\\']:\\n                                    MI_para.append(\"{0}\".format(\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'metric\\'][\\'samplingStrategy\\']))\\n                                if \\'samplingPercentage\\' in \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'metric\\'] and \\\\\\n                                                ants_para[para_index][\\n                                                    para_type][trans_index][\\n                                                    trans_type][\\'metric\\'][\\n                                                    \\'samplingPercentage\\'] is not None:\\n                                    MI_para.append(\"{0}\".format(\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'metric\\'][\\'samplingPercentage\\']))\\n                                MI_para = \\',\\'.join(\\n                                    [str(elem) for elem in MI_para])\\n                                regcmd.append(\"--metric\")\\n                                if reg_with_skull == 1:\\n                                    regcmd.append(\"MI[{0},{1},{2}]\".format(\\n                                        reference_skull, moving_skull, MI_para))\\n                                else:\\n                                    regcmd.append(\"MI[{0},{1},{2}]\".format(\\n                                        reference_brain, moving_brain, MI_para))\\n\\n                        if ants_para[para_index][para_type][trans_index][\\n                            trans_type][\\'metric\\'][\\'type\\'] == \\'CC\\':\\n                            if ants_para[para_index][para_type][trans_index][\\n                                trans_type][\\'metric\\'][\\n                                \\'metricWeight\\'] is None or \\\\\\n                                            ants_para[para_index][para_type][\\n                                                trans_index][trans_type][\\n                                                \\'metric\\'][\\'radius\\'] is None:\\n                                err_msg = \\'Please specifiy metricWeight and radius for metric CC of ANTs parameters in pipeline config.\\'\\n                                raise Exception(err_msg)\\n                            else:\\n                                CC_para = []\\n                                CC_para.append(\"{0},{1}\".format(\\n                                    ants_para[para_index][para_type][\\n                                        trans_index][trans_type][\\'metric\\']\\n                                    [\\'metricWeight\\'],\\n                                    ants_para[para_index][para_type][\\n                                        trans_index][trans_type][\\'metric\\'][\\n                                        \\'radius\\']))\\n                                if \\'samplingStrategy\\' in \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'metric\\'] and \\\\\\n                                                ants_para[para_index][\\n                                                    para_type][trans_index][\\n                                                    trans_type][\\'metric\\'][\\n                                                    \\'samplingStrategy\\'] in [\\n                                            \\'None\\', \\'Regular\\', \\'Random\\']:\\n                                    CC_para.append(\"{0}\".format(\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'metric\\'][\\'samplingStrategy\\']))\\n                                if \\'samplingPercentage\\' in \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'metric\\'] and \\\\\\n                                                ants_para[para_index][\\n                                                    para_type][trans_index][\\n                                                    trans_type][\\'metric\\'][\\n                                                    \\'samplingPercentage\\'] is not None:\\n                                    CC_para.append(\"{0}\".format(\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'metric\\'][\\'samplingPercentage\\']))\\n                                CC_para = \\',\\'.join(\\n                                    [str(elem) for elem in CC_para])\\n                                regcmd.append(\"--metric\")\\n                                regcmd.append(\"CC[{0},{1},{2}]\".format(\\n                                    reference_skull, moving_skull, CC_para))\\n\\n                        if \\'convergence\\' in \\\\\\n                                ants_para[para_index][para_type][trans_index][\\n                                    trans_type]:\\n                            convergence_para = []\\n                            if ants_para[para_index][para_type][trans_index][\\n                                trans_type][\\'convergence\\'][\\n                                \\'iteration\\'] is None:\\n                                err_msg = \\'Please specifiy convergence iteration of ANTs parameters in pipeline config.\\'\\n                                raise Exception(err_msg)\\n                            else:\\n                                convergence_para.append(\"{0}\".format(\\n                                    ants_para[para_index][para_type][\\n                                        trans_index][trans_type][\\n                                        \\'convergence\\'][\\'iteration\\']))\\n                                if \\'convergenceThreshold\\' in \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'convergence\\'] and \\\\\\n                                                ants_para[para_index][\\n                                                    para_type][trans_index][\\n                                                    trans_type][\\n                                                    \\'convergence\\'][\\n                                                    \\'convergenceThreshold\\'] is not None:\\n                                    convergence_para.append(\"{0}\".format(\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'convergence\\'][\\n                                            \\'convergenceThreshold\\']))\\n                                if \\'convergenceWindowSize\\' in \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'convergence\\'] and \\\\\\n                                                ants_para[para_index][\\n                                                    para_type][trans_index][\\n                                                    trans_type][\\n                                                    \\'convergence\\'][\\n                                                    \\'convergenceWindowSize\\'] is not None:\\n                                    convergence_para.append(\"{0}\".format(\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'convergence\\'][\\n                                            \\'convergenceWindowSize\\']))\\n                                convergence_para = \\',\\'.join(\\n                                    [str(elem) for elem in convergence_para])\\n                                regcmd.append(\"--convergence\")\\n                                regcmd.append(\\n                                    \"[{0}]\".format(convergence_para))\\n\\n                        if \\'smoothing-sigmas\\' in \\\\\\n                                ants_para[para_index][para_type][trans_index][\\n                                    trans_type] and \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'smoothing-sigmas\\'] is not None:\\n                            regcmd.append(\"--smoothing-sigmas\")\\n                            regcmd.append(\"{0}\".format(\\n                                ants_para[para_index][para_type][trans_index][\\n                                    trans_type][\\'smoothing-sigmas\\']))\\n\\n                        if \\'shrink-factors\\' in \\\\\\n                                ants_para[para_index][para_type][trans_index][\\n                                    trans_type] and \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'shrink-factors\\'] is not None:\\n                            regcmd.append(\"--shrink-factors\")\\n                            regcmd.append(\"{0}\".format(\\n                                ants_para[para_index][para_type][trans_index][\\n                                    trans_type][\\'shrink-factors\\']))\\n\\n                        if \\'use-histogram-matching\\' in \\\\\\n                                ants_para[para_index][para_type][trans_index][\\n                                    trans_type]:\\n                            if ants_para[para_index][para_type][trans_index][\\n                                trans_type][\\'use-histogram-matching\\']:\\n                                regcmd.append(\"--use-histogram-matching\")\\n                                regcmd.append(\"1\")\\n\\n                        if \\'winsorize-image-intensities\\' in \\\\\\n                                ants_para[para_index][para_type][trans_index][\\n                                    trans_type] and \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'winsorize-image-intensities\\'][\\n                                            \\'lowerQuantile\\'] is not None and \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'winsorize-image-intensities\\'][\\n                                            \\'upperQuantile\\'] is not None:\\n                            regcmd.append(\"--winsorize-image-intensities\")\\n                            regcmd.append(\"[{0},{1}]\".format(\\n                                ants_para[para_index][para_type][trans_index][\\n                                    trans_type][\\'winsorize-image-intensities\\']\\n                                [\\'lowerQuantile\\'],\\n                                ants_para[para_index][para_type][trans_index][\\n                                    trans_type][\\n                                    \\'winsorize-image-intensities\\'][\\n                                    \\'upperQuantile\\']))\\n\\n                        if \\'masks\\' in ants_para[para_index][para_type][trans_index][\\n                            trans_type] and ants_para[para_index][para_type][\\n                                trans_index][trans_type][\\'masks\\'] is not None:\\n                            if ants_para[para_index][para_type][trans_index][trans_type][\\'masks\\']:\\n                                regcmd.append(\"--masks\")\\n                                regcmd.append(\"[{0},{1}]\".format(reference_mask, moving_mask))\\n                            else:\\n                                regcmd.append(\"--masks\")\\n                                regcmd.append(\"[NULL,NULL]\")\\n\\n            elif para_type == \\'masks\\':\\n                # lesion preproc has\\n                if fixed_image_mask is not None:\\n                    regcmd.append(\"--masks\")\\n                    regcmd.append(str(fixed_image_mask))\\n                else:\\n                    if ants_para[para_index][para_type][\\n                        \\'fixed_image_mask\\'] == False and \\\\\\n                                    ants_para[para_index][para_type][\\n                                        \\'moving_image_mask\\'] == True:\\n                        err_msg = \\'Masks option in ANTs parameters: %d is not supported. \\' \\\\\\n                                  \\'Please set `fixed_image_mask` as True. \\' \\\\\\n                                  \\'Or set both `fixed_image_mask` and `moving_image_mask` as False\\' % \\\\\\n                                  ants_para[para_index][para_type]\\n                        raise Exception(err_msg)\\n                    elif ants_para[para_index][para_type][\\n                        \\'fixed_image_mask\\'] == True and \\\\\\n                                    ants_para[para_index][para_type][\\n                                        \\'moving_image_mask\\'] == True:\\n                        regcmd.append(\"--masks\")\\n                        regcmd.append(\\'[\\' + str(reference_mask) + \\',\\' + str(\\n                            moving_mask) + \\']\\')\\n                    elif ants_para[para_index][para_type][\\n                        \\'fixed_image_mask\\'] == True and \\\\\\n                                    ants_para[para_index][para_type][\\n                                        \\'moving_image_mask\\'] == False:\\n                        regcmd.append(\"--masks\")\\n                        regcmd.append(\\'[\\' + str(reference_mask) + \\']\\')\\n                    else:\\n                        continue\\n\\n    if interp is not None:\\n        regcmd.append(\"--interpolation\")\\n        regcmd.append(\"{0}\".format(interp))\\n\\n    regcmd.append(\"--output\")\\n    regcmd.append(\"[transform,transform_Warped.nii.gz]\")\\n\\n    # write out the actual command-line entry for testing/validation later\\n    command_file = os.path.join(os.getcwd(), \\'command.txt\\')\\n    with open(command_file, \\'wt\\') as f:\\n        f.write(\\' \\'.join(regcmd))\\n\\n    try:\\n        retcode = subprocess.check_output(regcmd)\\n    except Exception as e:\\n        raise Exception(\\'[!] ANTS registration did not complete successfully.\\'\\n                        \\'\\\\n\\\\nError details:\\\\n{0}\\\\n{1}\\\\n\\'.format(e, e.output))\\n\\n    warp_list = []\\n    warped_image = None\\n\\n    files = [f for f in os.listdir(\\'.\\') if os.path.isfile(f)]\\n\\n    for f in files:\\n        if (\"transform\" in f) and (\"Warped\" not in f):\\n            warp_list.append(os.getcwd() + \"/\" + f)\\n        if \"Warped\" in f:\\n            warped_image = os.getcwd() + \"/\" + f\\n\\n    if not warped_image:\\n        raise Exception(\"\\\\n\\\\n[!] No registration output file found. ANTS \"\\n                        \"registration may not have completed \"\\n                        \"successfully.\\\\n\\\\n\")\\n\\n    return warp_list, warped_image\\n', 'reg_with_skull': '[Undefined]'}",
							"select_forward_initial": "{'function_str': \"def seperate_warps_list(warp_list, selection):\\n    selected_warp = None\\n    for warp in warp_list:\\n        if selection == 'Warp':\\n            if '3Warp' in warp or '2Warp' in warp or '1Warp' in warp:\\n                selected_warp = warp\\n        else:\\n            if selection in warp:\\n                selected_warp = warp\\n    return selected_warp\\n\", 'selection': 'Initial'}",
							"select_forward_rigid": "{'function_str': \"def seperate_warps_list(warp_list, selection):\\n    selected_warp = None\\n    for warp in warp_list:\\n        if selection == 'Warp':\\n            if '3Warp' in warp or '2Warp' in warp or '1Warp' in warp:\\n                selected_warp = warp\\n        else:\\n            if selection in warp:\\n                selected_warp = warp\\n    return selected_warp\\n\", 'selection': 'Rigid'}",
							"select_forward_affine": "{'function_str': \"def seperate_warps_list(warp_list, selection):\\n    selected_warp = None\\n    for warp in warp_list:\\n        if selection == 'Warp':\\n            if '3Warp' in warp or '2Warp' in warp or '1Warp' in warp:\\n                selected_warp = warp\\n        else:\\n            if selection in warp:\\n                selected_warp = warp\\n    return selected_warp\\n\", 'selection': 'Affine'}",
							"select_forward_warp": "{'function_str': \"def seperate_warps_list(warp_list, selection):\\n    selected_warp = None\\n    for warp in warp_list:\\n        if selection == 'Warp':\\n            if '3Warp' in warp or '2Warp' in warp or '1Warp' in warp:\\n                selected_warp = warp\\n        else:\\n            if selection in warp:\\n                selected_warp = warp\\n    return selected_warp\\n\", 'selection': 'Warp'}",
							"select_inverse_warp": "{'function_str': \"def seperate_warps_list(warp_list, selection):\\n    selected_warp = None\\n    for warp in warp_list:\\n        if selection == 'Warp':\\n            if '3Warp' in warp or '2Warp' in warp or '1Warp' in warp:\\n                selected_warp = warp\\n        else:\\n            if selection in warp:\\n                selected_warp = warp\\n    return selected_warp\\n\", 'selection': 'Inverse'}",
							"outputspec": "{'composite_transform': '[Undefined]', 'wait': '[Undefined]'}"
						},
						"outputs": {
							"inputspec": "{'ants_para': None, 'fixed_image_mask': None, 'interp': None, 'moving_brain': None, 'moving_mask': None, 'moving_skull': None, 'reference_brain': None, 'reference_mask': None, 'reference_skull': None}",
							"calc_ants_warp": "{'warp_list': None, 'warped_image': None}",
							"select_forward_initial": "{'selected_warp': None}",
							"select_forward_rigid": "{'selected_warp': None}",
							"select_forward_affine": "{'selected_warp': None}",
							"select_forward_warp": "{'selected_warp': None}",
							"select_inverse_warp": "{'selected_warp': None}",
							"outputspec": "{'ants_affine_xfm': None, 'ants_initial_xfm': None, 'ants_rigid_xfm': None, 'composite_transform': None, 'inverse_warp_field': None, 'normalized_output_brain': None, 'wait': None, 'warp_field': None}"
						},
						"result": null,
						"nodes": [
							{
								"name": "inputspec",
								"type": "node",
								"inputs": {
									"moving_brain": "[Undefined]",
									"reference_brain": "[Undefined]",
									"moving_skull": "[Undefined]",
									"reference_skull": "[Undefined]",
									"reference_mask": "[Undefined]",
									"moving_mask": "[Undefined]",
									"fixed_image_mask": "None",
									"ants_para": "[{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}]",
									"interp": "[Undefined]"
								},
								"outputs": {
									"moving_brain": "[Undefined]",
									"reference_brain": "[Undefined]",
									"moving_skull": "[Undefined]",
									"reference_skull": "[Undefined]",
									"reference_mask": "[Undefined]",
									"moving_mask": "[Undefined]",
									"fixed_image_mask": "[Undefined]",
									"ants_para": "[Undefined]",
									"interp": "[Undefined]"
								},
								"result": null,
								"nodes": [],
								"edges": []
							},
							{
								"name": "calc_ants_warp",
								"type": "node",
								"inputs": {
									"function_str": "def hardcoded_reg(moving_brain, reference_brain, moving_skull,\n                  reference_skull, ants_para, moving_mask=None,\n                  reference_mask=None, fixed_image_mask=None, interp=None,\n                  reg_with_skull=0):\n    # TODO: expand transforms to cover all in ANTs para\n\n    regcmd = [\"antsRegistration\"]\n    for para_index in range(len(ants_para)):\n        for para_type in ants_para[para_index]:\n            if para_type == 'dimensionality':\n                if ants_para[para_index][para_type] not in [2, 3, 4]:\n                    err_msg = 'Dimensionality specified in ANTs parameters: %d, is not supported. ' \\\n                              'Change to 2, 3, or 4 and try again' % \\\n                              ants_para[para_index][para_type]\n                    raise Exception(err_msg)\n                else:\n                    regcmd.append(\"--dimensionality\")\n                    regcmd.append(str(ants_para[para_index][para_type]))\n\n            elif para_type == 'verbose':\n                if ants_para[para_index][para_type] not in [0, 1]:\n                    err_msg = 'Verbose output option in ANTs parameters: %d, is not supported. ' \\\n                              'Change to 0 or 1 and try again' % \\\n                              ants_para[para_index][para_type]\n                    raise Exception(err_msg)\n                else:\n                    regcmd.append(\"--verbose\")\n                    regcmd.append(str(ants_para[para_index][para_type]))\n\n            elif para_type == 'float':\n                if ants_para[para_index][para_type] not in [0, 1]:\n                    err_msg = 'Float option in ANTs parameters: %d, is not supported. ' \\\n                              'Change to 0 or 1 and try again' % \\\n                              ants_para[para_index][para_type]\n                    raise Exception(err_msg)\n                else:\n                    regcmd.append(\"--float\")\n                    regcmd.append(str(ants_para[para_index][para_type]))\n\n            elif para_type == 'collapse-output-transforms':\n                if ants_para[para_index][para_type] not in [0, 1]:\n                    err_msg = 'collapse-output-transforms specified in ANTs parameters: %d, is not supported. ' \\\n                              'Change to 0 or 1 and try again' % \\\n                              ants_para[para_index][para_type]\n                    raise Exception(err_msg)\n                else:\n                    regcmd.append(\"--collapse-output-transforms\")\n                    regcmd.append(str(ants_para[para_index][para_type]))\n\n            elif para_type == 'winsorize-image-intensities':\n                if ants_para[para_index][para_type]['lowerQuantile'] is None or ants_para[para_index][para_type]['upperQuantile'] is None:\n                    err_msg = 'Please specifiy lowerQuantile and upperQuantile of ANTs parameters --winsorize-image-intensities in pipeline config. '\n                    raise Exception(err_msg)\n                else:\n                    regcmd.append(\"--winsorize-image-intensities\")\n                    regcmd.append(\"[{0},{1}]\".format(ants_para[para_index][para_type]['lowerQuantile'],\n                        ants_para[para_index][para_type]['upperQuantile']))\n\n            elif para_type == 'initial-moving-transform':\n                if ants_para[para_index][para_type][\n                    'initializationFeature'] is None:\n                    err_msg = 'Please specifiy initializationFeature of ANTs parameters in pipeline config. '\n                    raise Exception(err_msg)\n                else:\n                    regcmd.append(\"--initial-moving-transform\")\n                    if reg_with_skull == 1:\n                        regcmd.append(\"[{0},{1},{2}]\".format(\n                            reference_skull, moving_skull,\n                            ants_para[para_index][para_type][\n                                'initializationFeature']))\n                    else:\n                        regcmd.append(\"[{0},{1},{2}]\".format(\n                            reference_brain, moving_brain,\n                            ants_para[para_index][para_type][\n                                'initializationFeature']))\n\n            elif para_type == 'transforms':\n                for trans_index in range(\n                        len(ants_para[para_index][para_type])):\n                    for trans_type in ants_para[para_index][para_type][\n                        trans_index]:\n                        regcmd.append(\"--transform\")\n                        if trans_type == 'Rigid' or trans_type == 'Affine':\n                            if ants_para[para_index][para_type][trans_index][\n                                trans_type]['gradientStep'] is None:\n                                err_msg = 'Please specifiy % s Gradient Step of ANTs parameters in pipeline config. ' % trans_type\n                                raise Exception(err_msg)\n                            else:\n                                regcmd.append(\"{0}[{1}]\".format(\n                                    trans_type,\n                                    ants_para[para_index][para_type][\n                                        trans_index][trans_type][\n                                        'gradientStep']))\n\n                        if trans_type == 'SyN':\n                            if ants_para[para_index][para_type][trans_index][\n                                trans_type]['gradientStep'] is None:\n                                err_msg = 'Please specifiy % s Gradient Step of ANTs parameters in pipeline config. ' % trans_type\n                                raise Exception(err_msg)\n                            else:\n                                SyN_para = []\n                                SyN_para.append(\"{0}\".format(\n                                    ants_para[para_index][para_type][\n                                        trans_index][trans_type][\n                                        'gradientStep']))\n                                if ants_para[para_index][para_type][\n                                    trans_index][trans_type][\n                                    'updateFieldVarianceInVoxelSpace'] is not None:\n                                    SyN_para.append(\"{0}\".format(\n                                        ants_para[para_index][para_type][\n                                            trans_index][trans_type][\n                                            'updateFieldVarianceInVoxelSpace']))\n                                if ants_para[para_index][para_type][\n                                    trans_index][trans_type][\n                                    'totalFieldVarianceInVoxelSpace'] is not None:\n                                    SyN_para.append(\"{0}\".format(\n                                        ants_para[para_index][para_type][\n                                            trans_index][trans_type][\n                                            'totalFieldVarianceInVoxelSpace']))\n                                SyN_para = ','.join([str(elem)\n                                                     for elem in SyN_para])\n                                regcmd.append(\"{0}[{1}]\".format(\n                                    trans_type, SyN_para))\n\n                        if ants_para[para_index][para_type][trans_index][\n                            trans_type]['metric']['type'] == 'MI':\n                            if ants_para[para_index][para_type][trans_index][\n                                trans_type]['metric'][\n                                'metricWeight'] is None or \\\n                                            ants_para[para_index][para_type][\n                                                trans_index][trans_type][\n                                                'metric'][\n                                                'numberOfBins'] is None:\n                                err_msg = 'Please specifiy metricWeight and numberOfBins for metric MI of ANTs parameters in pipeline config.'\n                                raise Exception(err_msg)\n                            else:\n                                MI_para = []\n                                MI_para.append(\"{0},{1}\".format(\n                                    ants_para[para_index][para_type][\n                                        trans_index][trans_type]['metric']\n                                    ['metricWeight'],\n                                    ants_para[para_index][para_type][\n                                        trans_index][trans_type]['metric'][\n                                        'numberOfBins']))\n                                if 'samplingStrategy' in \\\n                                        ants_para[para_index][para_type][\n                                            trans_index][trans_type][\n                                            'metric'] and \\\n                                                ants_para[para_index][\n                                                    para_type][trans_index][\n                                                    trans_type]['metric'][\n                                                    'samplingStrategy'] in [\n                                            'None', 'Regular', 'Random']:\n                                    MI_para.append(\"{0}\".format(\n                                        ants_para[para_index][para_type][\n                                            trans_index][trans_type][\n                                            'metric']['samplingStrategy']))\n                                if 'samplingPercentage' in \\\n                                        ants_para[para_index][para_type][\n                                            trans_index][trans_type][\n                                            'metric'] and \\\n                                                ants_para[para_index][\n                                                    para_type][trans_index][\n                                                    trans_type]['metric'][\n                                                    'samplingPercentage'] is not None:\n                                    MI_para.append(\"{0}\".format(\n                                        ants_para[para_index][para_type][\n                                            trans_index][trans_type][\n                                            'metric']['samplingPercentage']))\n                                MI_para = ','.join(\n                                    [str(elem) for elem in MI_para])\n                                regcmd.append(\"--metric\")\n                                if reg_with_skull == 1:\n                                    regcmd.append(\"MI[{0},{1},{2}]\".format(\n                                        reference_skull, moving_skull, MI_para))\n                                else:\n                                    regcmd.append(\"MI[{0},{1},{2}]\".format(\n                                        reference_brain, moving_brain, MI_para))\n\n                        if ants_para[para_index][para_type][trans_index][\n                            trans_type]['metric']['type'] == 'CC':\n                            if ants_para[para_index][para_type][trans_index][\n                                trans_type]['metric'][\n                                'metricWeight'] is None or \\\n                                            ants_para[para_index][para_type][\n                                                trans_index][trans_type][\n                                                'metric']['radius'] is None:\n                                err_msg = 'Please specifiy metricWeight and radius for metric CC of ANTs parameters in pipeline config.'\n                                raise Exception(err_msg)\n                            else:\n                                CC_para = []\n                                CC_para.append(\"{0},{1}\".format(\n                                    ants_para[para_index][para_type][\n                                        trans_index][trans_type]['metric']\n                                    ['metricWeight'],\n                                    ants_para[para_index][para_type][\n                                        trans_index][trans_type]['metric'][\n                                        'radius']))\n                                if 'samplingStrategy' in \\\n                                        ants_para[para_index][para_type][\n                                            trans_index][trans_type][\n                                            'metric'] and \\\n                                                ants_para[para_index][\n                                                    para_type][trans_index][\n                                                    trans_type]['metric'][\n                                                    'samplingStrategy'] in [\n                                            'None', 'Regular', 'Random']:\n                                    CC_para.append(\"{0}\".format(\n                                        ants_para[para_index][para_type][\n                                            trans_index][trans_type][\n                                            'metric']['samplingStrategy']))\n                                if 'samplingPercentage' in \\\n                                        ants_para[para_index][para_type][\n                                            trans_index][trans_type][\n                                            'metric'] and \\\n                                                ants_para[para_index][\n                                                    para_type][trans_index][\n                                                    trans_type]['metric'][\n                                                    'samplingPercentage'] is not None:\n                                    CC_para.append(\"{0}\".format(\n                                        ants_para[para_index][para_type][\n                                            trans_index][trans_type][\n                                            'metric']['samplingPercentage']))\n                                CC_para = ','.join(\n                                    [str(elem) for elem in CC_para])\n                                regcmd.append(\"--metric\")\n                                regcmd.append(\"CC[{0},{1},{2}]\".format(\n                                    reference_skull, moving_skull, CC_para))\n\n                        if 'convergence' in \\\n                                ants_para[para_index][para_type][trans_index][\n                                    trans_type]:\n                            convergence_para = []\n                            if ants_para[para_index][para_type][trans_index][\n                                trans_type]['convergence'][\n                                'iteration'] is None:\n                                err_msg = 'Please specifiy convergence iteration of ANTs parameters in pipeline config.'\n                                raise Exception(err_msg)\n                            else:\n                                convergence_para.append(\"{0}\".format(\n                                    ants_para[para_index][para_type][\n                                        trans_index][trans_type][\n                                        'convergence']['iteration']))\n                                if 'convergenceThreshold' in \\\n                                        ants_para[para_index][para_type][\n                                            trans_index][trans_type][\n                                            'convergence'] and \\\n                                                ants_para[para_index][\n                                                    para_type][trans_index][\n                                                    trans_type][\n                                                    'convergence'][\n                                                    'convergenceThreshold'] is not None:\n                                    convergence_para.append(\"{0}\".format(\n                                        ants_para[para_index][para_type][\n                                            trans_index][trans_type][\n                                            'convergence'][\n                                            'convergenceThreshold']))\n                                if 'convergenceWindowSize' in \\\n                                        ants_para[para_index][para_type][\n                                            trans_index][trans_type][\n                                            'convergence'] and \\\n                                                ants_para[para_index][\n                                                    para_type][trans_index][\n                                                    trans_type][\n                                                    'convergence'][\n                                                    'convergenceWindowSize'] is not None:\n                                    convergence_para.append(\"{0}\".format(\n                                        ants_para[para_index][para_type][\n                                            trans_index][trans_type][\n                                            'convergence'][\n                                            'convergenceWindowSize']))\n                                convergence_para = ','.join(\n                                    [str(elem) for elem in convergence_para])\n                                regcmd.append(\"--convergence\")\n                                regcmd.append(\n                                    \"[{0}]\".format(convergence_para))\n\n                        if 'smoothing-sigmas' in \\\n                                ants_para[para_index][para_type][trans_index][\n                                    trans_type] and \\\n                                        ants_para[para_index][para_type][\n                                            trans_index][trans_type][\n                                            'smoothing-sigmas'] is not None:\n                            regcmd.append(\"--smoothing-sigmas\")\n                            regcmd.append(\"{0}\".format(\n                                ants_para[para_index][para_type][trans_index][\n                                    trans_type]['smoothing-sigmas']))\n\n                        if 'shrink-factors' in \\\n                                ants_para[para_index][para_type][trans_index][\n                                    trans_type] and \\\n                                        ants_para[para_index][para_type][\n                                            trans_index][trans_type][\n                                            'shrink-factors'] is not None:\n                            regcmd.append(\"--shrink-factors\")\n                            regcmd.append(\"{0}\".format(\n                                ants_para[para_index][para_type][trans_index][\n                                    trans_type]['shrink-factors']))\n\n                        if 'use-histogram-matching' in \\\n                                ants_para[para_index][para_type][trans_index][\n                                    trans_type]:\n                            if ants_para[para_index][para_type][trans_index][\n                                trans_type]['use-histogram-matching']:\n                                regcmd.append(\"--use-histogram-matching\")\n                                regcmd.append(\"1\")\n\n                        if 'winsorize-image-intensities' in \\\n                                ants_para[para_index][para_type][trans_index][\n                                    trans_type] and \\\n                                        ants_para[para_index][para_type][\n                                            trans_index][trans_type][\n                                            'winsorize-image-intensities'][\n                                            'lowerQuantile'] is not None and \\\n                                        ants_para[para_index][para_type][\n                                            trans_index][trans_type][\n                                            'winsorize-image-intensities'][\n                                            'upperQuantile'] is not None:\n                            regcmd.append(\"--winsorize-image-intensities\")\n                            regcmd.append(\"[{0},{1}]\".format(\n                                ants_para[para_index][para_type][trans_index][\n                                    trans_type]['winsorize-image-intensities']\n                                ['lowerQuantile'],\n                                ants_para[para_index][para_type][trans_index][\n                                    trans_type][\n                                    'winsorize-image-intensities'][\n                                    'upperQuantile']))\n\n                        if 'masks' in ants_para[para_index][para_type][trans_index][\n                            trans_type] and ants_para[para_index][para_type][\n                                trans_index][trans_type]['masks'] is not None:\n                            if ants_para[para_index][para_type][trans_index][trans_type]['masks']:\n                                regcmd.append(\"--masks\")\n                                regcmd.append(\"[{0},{1}]\".format(reference_mask, moving_mask))\n                            else:\n                                regcmd.append(\"--masks\")\n                                regcmd.append(\"[NULL,NULL]\")\n\n            elif para_type == 'masks':\n                # lesion preproc has\n                if fixed_image_mask is not None:\n                    regcmd.append(\"--masks\")\n                    regcmd.append(str(fixed_image_mask))\n                else:\n                    if ants_para[para_index][para_type][\n                        'fixed_image_mask'] == False and \\\n                                    ants_para[para_index][para_type][\n                                        'moving_image_mask'] == True:\n                        err_msg = 'Masks option in ANTs parameters: %d is not supported. ' \\\n                                  'Please set `fixed_image_mask` as True. ' \\\n                                  'Or set both `fixed_image_mask` and `moving_image_mask` as False' % \\\n                                  ants_para[para_index][para_type]\n                        raise Exception(err_msg)\n                    elif ants_para[para_index][para_type][\n                        'fixed_image_mask'] == True and \\\n                                    ants_para[para_index][para_type][\n                                        'moving_image_mask'] == True:\n                        regcmd.append(\"--masks\")\n                        regcmd.append('[' + str(reference_mask) + ',' + str(\n                            moving_mask) + ']')\n                    elif ants_para[para_index][para_type][\n                        'fixed_image_mask'] == True and \\\n                                    ants_para[para_index][para_type][\n                                        'moving_image_mask'] == False:\n                        regcmd.append(\"--masks\")\n                        regcmd.append('[' + str(reference_mask) + ']')\n                    else:\n                        continue\n\n    if interp is not None:\n        regcmd.append(\"--interpolation\")\n        regcmd.append(\"{0}\".format(interp))\n\n    regcmd.append(\"--output\")\n    regcmd.append(\"[transform,transform_Warped.nii.gz]\")\n\n    # write out the actual command-line entry for testing/validation later\n    command_file = os.path.join(os.getcwd(), 'command.txt')\n    with open(command_file, 'wt') as f:\n        f.write(' '.join(regcmd))\n\n    try:\n        retcode = subprocess.check_output(regcmd)\n    except Exception as e:\n        raise Exception('[!] ANTS registration did not complete successfully.'\n                        '\\n\\nError details:\\n{0}\\n{1}\\n'.format(e, e.output))\n\n    warp_list = []\n    warped_image = None\n\n    files = [f for f in os.listdir('.') if os.path.isfile(f)]\n\n    for f in files:\n        if (\"transform\" in f) and (\"Warped\" not in f):\n            warp_list.append(os.getcwd() + \"/\" + f)\n        if \"Warped\" in f:\n            warped_image = os.getcwd() + \"/\" + f\n\n    if not warped_image:\n        raise Exception(\"\\n\\n[!] No registration output file found. ANTS \"\n                        \"registration may not have completed \"\n                        \"successfully.\\n\\n\")\n\n    return warp_list, warped_image\n",
									"moving_brain": "[Undefined]",
									"reference_brain": "[Undefined]",
									"moving_skull": "[Undefined]",
									"reference_skull": "[Undefined]",
									"ants_para": "[Undefined]",
									"moving_mask": "[Undefined]",
									"reference_mask": "[Undefined]",
									"fixed_image_mask": "[Undefined]",
									"interp": "[Undefined]",
									"reg_with_skull": "[Undefined]"
								},
								"outputs": {
									"warp_list": "[Undefined]",
									"warped_image": "[Undefined]"
								},
								"result": null,
								"nodes": [],
								"edges": []
							},
							{
								"name": "select_forward_initial",
								"type": "node",
								"inputs": {
									"function_str": "def seperate_warps_list(warp_list, selection):\n    selected_warp = None\n    for warp in warp_list:\n        if selection == 'Warp':\n            if '3Warp' in warp or '2Warp' in warp or '1Warp' in warp:\n                selected_warp = warp\n        else:\n            if selection in warp:\n                selected_warp = warp\n    return selected_warp\n",
									"warp_list": "[Undefined]",
									"selection": "Initial"
								},
								"outputs": {
									"selected_warp": "[Undefined]"
								},
								"result": null,
								"nodes": [],
								"edges": []
							},
							{
								"name": "select_forward_rigid",
								"type": "node",
								"inputs": {
									"function_str": "def seperate_warps_list(warp_list, selection):\n    selected_warp = None\n    for warp in warp_list:\n        if selection == 'Warp':\n            if '3Warp' in warp or '2Warp' in warp or '1Warp' in warp:\n                selected_warp = warp\n        else:\n            if selection in warp:\n                selected_warp = warp\n    return selected_warp\n",
									"warp_list": "[Undefined]",
									"selection": "Rigid"
								},
								"outputs": {
									"selected_warp": "[Undefined]"
								},
								"result": null,
								"nodes": [],
								"edges": []
							},
							{
								"name": "select_forward_affine",
								"type": "node",
								"inputs": {
									"function_str": "def seperate_warps_list(warp_list, selection):\n    selected_warp = None\n    for warp in warp_list:\n        if selection == 'Warp':\n            if '3Warp' in warp or '2Warp' in warp or '1Warp' in warp:\n                selected_warp = warp\n        else:\n            if selection in warp:\n                selected_warp = warp\n    return selected_warp\n",
									"warp_list": "[Undefined]",
									"selection": "Affine"
								},
								"outputs": {
									"selected_warp": "[Undefined]"
								},
								"result": null,
								"nodes": [],
								"edges": []
							},
							{
								"name": "select_forward_warp",
								"type": "node",
								"inputs": {
									"function_str": "def seperate_warps_list(warp_list, selection):\n    selected_warp = None\n    for warp in warp_list:\n        if selection == 'Warp':\n            if '3Warp' in warp or '2Warp' in warp or '1Warp' in warp:\n                selected_warp = warp\n        else:\n            if selection in warp:\n                selected_warp = warp\n    return selected_warp\n",
									"warp_list": "[Undefined]",
									"selection": "Warp"
								},
								"outputs": {
									"selected_warp": "[Undefined]"
								},
								"result": null,
								"nodes": [],
								"edges": []
							},
							{
								"name": "select_inverse_warp",
								"type": "node",
								"inputs": {
									"function_str": "def seperate_warps_list(warp_list, selection):\n    selected_warp = None\n    for warp in warp_list:\n        if selection == 'Warp':\n            if '3Warp' in warp or '2Warp' in warp or '1Warp' in warp:\n                selected_warp = warp\n        else:\n            if selection in warp:\n                selected_warp = warp\n    return selected_warp\n",
									"warp_list": "[Undefined]",
									"selection": "Inverse"
								},
								"outputs": {
									"selected_warp": "[Undefined]"
								},
								"result": null,
								"nodes": [],
								"edges": []
							},
							{
								"name": "outputspec",
								"type": "node",
								"inputs": {
									"ants_initial_xfm": "[Undefined]",
									"ants_rigid_xfm": "[Undefined]",
									"ants_affine_xfm": "[Undefined]",
									"warp_field": "[Undefined]",
									"inverse_warp_field": "[Undefined]",
									"composite_transform": "[Undefined]",
									"wait": "[Undefined]",
									"normalized_output_brain": "[Undefined]"
								},
								"outputs": {
									"ants_initial_xfm": "[Undefined]",
									"ants_rigid_xfm": "[Undefined]",
									"ants_affine_xfm": "[Undefined]",
									"warp_field": "[Undefined]",
									"inverse_warp_field": "[Undefined]",
									"composite_transform": "[Undefined]",
									"wait": "[Undefined]",
									"normalized_output_brain": "[Undefined]"
								},
								"result": null,
								"nodes": [],
								"edges": []
							}
						],
						"edges": [
							{
								"origin": "inputspec",
								"target": "calc_ants_warp"
							},
							{
								"origin": "calc_ants_warp",
								"target": "select_forward_initial"
							},
							{
								"origin": "calc_ants_warp",
								"target": "select_forward_rigid"
							},
							{
								"origin": "calc_ants_warp",
								"target": "select_forward_affine"
							},
							{
								"origin": "calc_ants_warp",
								"target": "select_forward_warp"
							},
							{
								"origin": "calc_ants_warp",
								"target": "select_inverse_warp"
							},
							{
								"origin": "calc_ants_warp",
								"target": "outputspec"
							},
							{
								"origin": "select_forward_initial",
								"target": "outputspec"
							},
							{
								"origin": "select_forward_rigid",
								"target": "outputspec"
							},
							{
								"origin": "select_forward_affine",
								"target": "outputspec"
							},
							{
								"origin": "select_forward_warp",
								"target": "outputspec"
							},
							{
								"origin": "select_inverse_warp",
								"target": "outputspec"
							}
						]
					},
					{
						"name": "write_composite_linear_xfm",
						"type": "node",
						"inputs": {
							"dimension": "3",
							"input_image_type": "0",
							"input_image": "[Undefined]",
							"output_image": "from-T1w_to-template_mode-image_desc-linear_xfm.nii.gz",
							"out_postfix": "_trans",
							"reference_image": "[Undefined]",
							"interpolation": "Linear",
							"interpolation_parameters": "[Undefined]",
							"transforms": "[Undefined]",
							"invert_transform_flags": "[Undefined]",
							"default_value": "0.0",
							"print_out_composite_warp_file": "True",
							"float": "False",
							"num_threads": "1",
							"args": "[Undefined]",
							"environ": "{'NSLOTS': '1'}"
						},
						"outputs": {
							"output_image": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "collect_transforms",
						"type": "node",
						"inputs": {
							"axis": "vstack",
							"no_flatten": "False",
							"ravel_inputs": "False",
							"in1": "[Undefined]",
							"in2": "[Undefined]",
							"in3": "[Undefined]"
						},
						"outputs": {
							"out": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "check_transforms",
						"type": "node",
						"inputs": {
							"function_str": "def check_transforms(transform_list):\n    transform_number = list(filter(None, transform_list))\n    return [(transform_number[index]) for index in\n            range(len(transform_number))], len(transform_number)\n",
							"transform_list": "[Undefined]"
						},
						"outputs": {
							"checked_transform_list": "[Undefined]",
							"list_length": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "write_composite_invlinear_xfm",
						"type": "node",
						"inputs": {
							"dimension": "3",
							"input_image_type": "0",
							"input_image": "[Undefined]",
							"output_image": "from-template_to-T1w_mode-image_desc-linear_xfm.nii.gz",
							"out_postfix": "_trans",
							"reference_image": "[Undefined]",
							"interpolation": "Linear",
							"interpolation_parameters": "[Undefined]",
							"transforms": "[Undefined]",
							"invert_transform_flags": "[Undefined]",
							"default_value": "0.0",
							"print_out_composite_warp_file": "True",
							"float": "False",
							"num_threads": "1",
							"args": "[Undefined]",
							"environ": "{'NSLOTS': '1'}"
						},
						"outputs": {
							"output_image": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "collect_inv_transforms",
						"type": "node",
						"inputs": {
							"axis": "vstack",
							"no_flatten": "False",
							"ravel_inputs": "False",
							"in1": "[Undefined]",
							"in2": "[Undefined]",
							"in3": "[Undefined]"
						},
						"outputs": {
							"out": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "check_inv_transforms",
						"type": "node",
						"inputs": {
							"function_str": "def check_transforms(transform_list):\n    transform_number = list(filter(None, transform_list))\n    return [(transform_number[index]) for index in\n            range(len(transform_number))], len(transform_number)\n",
							"transform_list": "[Undefined]"
						},
						"outputs": {
							"checked_transform_list": "[Undefined]",
							"list_length": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "inverse_transform_flags",
						"type": "node",
						"inputs": {
							"function_str": "def generate_inverse_transform_flags(transform_list):\n    inverse_transform_flags = []\n    for transform in transform_list:\n        # check `blip_warp_inverse` file name and rename it\n        if 'WARPINV' in transform:\n            inverse_transform_flags.append(False)\n        if 'updated_affine' in transform:\n            inverse_transform_flags.append(True)\n        if 'Initial' in transform:\n            inverse_transform_flags.append(True)\n        if 'Rigid' in transform:\n            inverse_transform_flags.append(True)\n        if 'Affine' in transform:\n            inverse_transform_flags.append(True)\n        if 'InverseWarp' in transform:\n            inverse_transform_flags.append(False)\n    return inverse_transform_flags\n",
							"transform_list": "[Undefined]"
						},
						"outputs": {
							"inverse_transform_flags": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "write_composite_xfm",
						"type": "node",
						"inputs": {
							"dimension": "3",
							"input_image_type": "0",
							"input_image": "[Undefined]",
							"output_image": "from-T1w_to-template_mode-image_xfm.nii.gz",
							"out_postfix": "_trans",
							"reference_image": "[Undefined]",
							"interpolation": "Linear",
							"interpolation_parameters": "[Undefined]",
							"transforms": "[Undefined]",
							"invert_transform_flags": "[Undefined]",
							"default_value": "0.0",
							"print_out_composite_warp_file": "True",
							"float": "False",
							"num_threads": "1",
							"args": "[Undefined]",
							"environ": "{'NSLOTS': '1'}"
						},
						"outputs": {
							"output_image": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "collect_all_transforms",
						"type": "node",
						"inputs": {
							"axis": "vstack",
							"no_flatten": "False",
							"ravel_inputs": "False",
							"in1": "[Undefined]",
							"in2": "[Undefined]",
							"in3": "[Undefined]",
							"in4": "[Undefined]"
						},
						"outputs": {
							"out": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "check_all_transforms",
						"type": "node",
						"inputs": {
							"function_str": "def check_transforms(transform_list):\n    transform_number = list(filter(None, transform_list))\n    return [(transform_number[index]) for index in\n            range(len(transform_number))], len(transform_number)\n",
							"transform_list": "[Undefined]"
						},
						"outputs": {
							"checked_transform_list": "[Undefined]",
							"list_length": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "write_composite_inv_xfm",
						"type": "node",
						"inputs": {
							"dimension": "3",
							"input_image_type": "0",
							"input_image": "[Undefined]",
							"output_image": "from-template_to-T1w_mode-image_xfm.nii.gz",
							"out_postfix": "_trans",
							"reference_image": "[Undefined]",
							"interpolation": "Linear",
							"interpolation_parameters": "[Undefined]",
							"transforms": "[Undefined]",
							"invert_transform_flags": "[Undefined]",
							"default_value": "0.0",
							"print_out_composite_warp_file": "True",
							"float": "False",
							"num_threads": "1",
							"args": "[Undefined]",
							"environ": "{'NSLOTS': '1'}"
						},
						"outputs": {
							"output_image": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "collect_all_inv_transforms",
						"type": "node",
						"inputs": {
							"axis": "vstack",
							"no_flatten": "False",
							"ravel_inputs": "False",
							"in1": "[Undefined]",
							"in2": "[Undefined]",
							"in3": "[Undefined]",
							"in4": "[Undefined]"
						},
						"outputs": {
							"out": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "check_all_inv_transforms",
						"type": "node",
						"inputs": {
							"function_str": "def check_transforms(transform_list):\n    transform_number = list(filter(None, transform_list))\n    return [(transform_number[index]) for index in\n            range(len(transform_number))], len(transform_number)\n",
							"transform_list": "[Undefined]"
						},
						"outputs": {
							"checked_transform_list": "[Undefined]",
							"list_length": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "inverse_all_transform_flags",
						"type": "node",
						"inputs": {
							"function_str": "def generate_inverse_transform_flags(transform_list):\n    inverse_transform_flags = []\n    for transform in transform_list:\n        # check `blip_warp_inverse` file name and rename it\n        if 'WARPINV' in transform:\n            inverse_transform_flags.append(False)\n        if 'updated_affine' in transform:\n            inverse_transform_flags.append(True)\n        if 'Initial' in transform:\n            inverse_transform_flags.append(True)\n        if 'Rigid' in transform:\n            inverse_transform_flags.append(True)\n        if 'Affine' in transform:\n            inverse_transform_flags.append(True)\n        if 'InverseWarp' in transform:\n            inverse_transform_flags.append(False)\n    return inverse_transform_flags\n",
							"transform_list": "[Undefined]"
						},
						"outputs": {
							"inverse_transform_flags": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					}
				],
				"edges": [
					{
						"origin": "inputspec",
						"target": "anat_mni_ants_register"
					},
					{
						"origin": "inputspec",
						"target": "write_composite_linear_xfm"
					},
					{
						"origin": "inputspec",
						"target": "write_composite_invlinear_xfm"
					},
					{
						"origin": "inputspec",
						"target": "write_composite_xfm"
					},
					{
						"origin": "inputspec",
						"target": "write_composite_inv_xfm"
					},
					{
						"origin": "anat_mni_ants_register",
						"target": "collect_transforms"
					},
					{
						"origin": "anat_mni_ants_register",
						"target": "collect_inv_transforms"
					},
					{
						"origin": "anat_mni_ants_register",
						"target": "collect_all_transforms"
					},
					{
						"origin": "anat_mni_ants_register",
						"target": "collect_all_inv_transforms"
					},
					{
						"origin": "collect_transforms",
						"target": "check_transforms"
					},
					{
						"origin": "check_transforms",
						"target": "write_composite_linear_xfm"
					},
					{
						"origin": "collect_inv_transforms",
						"target": "check_inv_transforms"
					},
					{
						"origin": "check_inv_transforms",
						"target": "write_composite_invlinear_xfm"
					},
					{
						"origin": "check_inv_transforms",
						"target": "inverse_transform_flags"
					},
					{
						"origin": "inverse_transform_flags",
						"target": "write_composite_invlinear_xfm"
					},
					{
						"origin": "collect_all_transforms",
						"target": "check_all_transforms"
					},
					{
						"origin": "check_all_transforms",
						"target": "write_composite_xfm"
					},
					{
						"origin": "collect_all_inv_transforms",
						"target": "check_all_inv_transforms"
					},
					{
						"origin": "check_all_inv_transforms",
						"target": "write_composite_inv_xfm"
					},
					{
						"origin": "check_all_inv_transforms",
						"target": "inverse_all_transform_flags"
					},
					{
						"origin": "inverse_all_transform_flags",
						"target": "write_composite_inv_xfm"
					}
				]
			},
			{
				"name": "resampled_T1w-brain-template-mask",
				"type": "node",
				"inputs": {
					"function_str": "CPAC.utils.datasource.resolve_resolution",
					"resolution": "2mm",
					"template": "/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask.nii.gz",
					"template_name": "T1w-brain-template-mask",
					"tag": "resolution_for_anat"
				},
				"outputs": {
					"resampled_template": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "warp_wholehead_T1w_to_T1template_83",
				"type": "workflow",
				"inputs": {
					"inputspec": "{'input_image': '[Undefined]', 'interpolation': 'LanczosWindowedSinc', 'reference': '[Undefined]', 'transform': '[Undefined]'}",
					"apply_warp_warp_wholehead_T1w_to_T1template_83": "{'args': '[Undefined]', 'default_value': 0.0, 'dimension': 3, 'environ': {'NSLOTS': '1'}, 'float': False, 'input_image_type': '[Undefined]', 'interpolation_parameters': '[Undefined]', 'invert_transform_flags': '[Undefined]', 'num_threads': 1, 'out_postfix': '_trans', 'output_image': '[Undefined]', 'print_out_composite_warp_file': '[Undefined]'}",
					"interp_string": "{'function_str': \"def interpolation_string(interpolation, reg_tool):\\n    if reg_tool == 'ants':\\n        pass\\n    elif reg_tool == 'fsl':\\n        # translate to FSL\\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\\n        #          in C-PAC are now converted to .nii.gz\\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\\n    return interpolation\\n\", 'reg_tool': 'ants'}",
					"single_ants_xfm_to_list": "{'function_str': 'def single_ants_xfm_to_list(transform):\\n    transform_list = [transform]\\n    return transform_list\\n'}",
					"outputspec": "{}"
				},
				"outputs": {
					"inputspec": "{'input_image': None, 'interpolation': None, 'reference': None, 'transform': None}",
					"apply_warp_warp_wholehead_T1w_to_T1template_83": "{'output_image': None}",
					"interp_string": "{'interpolation': None}",
					"single_ants_xfm_to_list": "{'transform_list': None}",
					"outputspec": "{'output_image': None}"
				},
				"result": null,
				"nodes": [
					{
						"name": "inputspec",
						"type": "node",
						"inputs": {
							"input_image": "[Undefined]",
							"reference": "[Undefined]",
							"transform": "[Undefined]",
							"interpolation": "LanczosWindowedSinc"
						},
						"outputs": {
							"input_image": "[Undefined]",
							"reference": "[Undefined]",
							"transform": "[Undefined]",
							"interpolation": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "apply_warp_warp_wholehead_T1w_to_T1template_83",
						"type": "node",
						"inputs": {
							"dimension": "3",
							"input_image_type": "[Undefined]",
							"input_image": "[Undefined]",
							"output_image": "[Undefined]",
							"out_postfix": "_trans",
							"reference_image": "[Undefined]",
							"interpolation": "Linear",
							"interpolation_parameters": "[Undefined]",
							"transforms": "[Undefined]",
							"invert_transform_flags": "[Undefined]",
							"default_value": "0.0",
							"print_out_composite_warp_file": "[Undefined]",
							"float": "False",
							"num_threads": "1",
							"args": "[Undefined]",
							"environ": "{'NSLOTS': '1'}"
						},
						"outputs": {
							"output_image": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "interp_string",
						"type": "node",
						"inputs": {
							"function_str": "def interpolation_string(interpolation, reg_tool):\n    if reg_tool == 'ants':\n        pass\n    elif reg_tool == 'fsl':\n        # translate to FSL\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\n        #          in C-PAC are now converted to .nii.gz\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\n    return interpolation\n",
							"interpolation": "[Undefined]",
							"reg_tool": "ants"
						},
						"outputs": {
							"interpolation": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "single_ants_xfm_to_list",
						"type": "node",
						"inputs": {
							"function_str": "def single_ants_xfm_to_list(transform):\n    transform_list = [transform]\n    return transform_list\n",
							"transform": "[Undefined]"
						},
						"outputs": {
							"transform_list": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "outputspec",
						"type": "node",
						"inputs": {
							"output_image": "[Undefined]"
						},
						"outputs": {
							"output_image": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					}
				],
				"edges": [
					{
						"origin": "inputspec",
						"target": "apply_warp_warp_wholehead_T1w_to_T1template_83"
					},
					{
						"origin": "inputspec",
						"target": "interp_string"
					},
					{
						"origin": "inputspec",
						"target": "single_ants_xfm_to_list"
					},
					{
						"origin": "apply_warp_warp_wholehead_T1w_to_T1template_83",
						"target": "outputspec"
					},
					{
						"origin": "interp_string",
						"target": "apply_warp_warp_wholehead_T1w_to_T1template_83"
					},
					{
						"origin": "single_ants_xfm_to_list",
						"target": "apply_warp_warp_wholehead_T1w_to_T1template_83"
					}
				]
			},
			{
				"name": "write_composite_xfm",
				"type": "node",
				"inputs": {
					"dimension": "3",
					"input_image_type": "0",
					"input_image": "[Undefined]",
					"output_image": "from-T1w_to-template_mode-image_xfm.nii.gz",
					"out_postfix": "_trans",
					"reference_image": "[Undefined]",
					"interpolation": "Linear",
					"interpolation_parameters": "[Undefined]",
					"transforms": "[Undefined]",
					"invert_transform_flags": "[Undefined]",
					"default_value": "0.0",
					"print_out_composite_warp_file": "True",
					"float": "False",
					"num_threads": "1",
					"args": "[Undefined]",
					"environ": "{'NSLOTS': '1'}"
				},
				"outputs": {
					"output_image": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "warp_T1mask_to_T1template_87",
				"type": "workflow",
				"inputs": {
					"inputspec": "{'input_image': '[Undefined]', 'interpolation': 'NearestNeighbor', 'reference': '[Undefined]', 'transform': '[Undefined]'}",
					"apply_warp_warp_T1mask_to_T1template_87": "{'args': '[Undefined]', 'default_value': 0.0, 'dimension': 3, 'environ': {'NSLOTS': '1'}, 'float': False, 'input_image_type': '[Undefined]', 'interpolation_parameters': '[Undefined]', 'invert_transform_flags': '[Undefined]', 'num_threads': 1, 'out_postfix': '_trans', 'output_image': '[Undefined]', 'print_out_composite_warp_file': '[Undefined]'}",
					"interp_string": "{'function_str': \"def interpolation_string(interpolation, reg_tool):\\n    if reg_tool == 'ants':\\n        pass\\n    elif reg_tool == 'fsl':\\n        # translate to FSL\\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\\n        #          in C-PAC are now converted to .nii.gz\\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\\n    return interpolation\\n\", 'reg_tool': 'ants'}",
					"single_ants_xfm_to_list": "{'function_str': 'def single_ants_xfm_to_list(transform):\\n    transform_list = [transform]\\n    return transform_list\\n'}",
					"outputspec": "{}"
				},
				"outputs": {
					"inputspec": "{'input_image': None, 'interpolation': None, 'reference': None, 'transform': None}",
					"apply_warp_warp_T1mask_to_T1template_87": "{'output_image': None}",
					"interp_string": "{'interpolation': None}",
					"single_ants_xfm_to_list": "{'transform_list': None}",
					"outputspec": "{'output_image': None}"
				},
				"result": null,
				"nodes": [
					{
						"name": "inputspec",
						"type": "node",
						"inputs": {
							"input_image": "[Undefined]",
							"reference": "[Undefined]",
							"transform": "[Undefined]",
							"interpolation": "NearestNeighbor"
						},
						"outputs": {
							"input_image": "[Undefined]",
							"reference": "[Undefined]",
							"transform": "[Undefined]",
							"interpolation": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "apply_warp_warp_T1mask_to_T1template_87",
						"type": "node",
						"inputs": {
							"dimension": "3",
							"input_image_type": "[Undefined]",
							"input_image": "[Undefined]",
							"output_image": "[Undefined]",
							"out_postfix": "_trans",
							"reference_image": "[Undefined]",
							"interpolation": "Linear",
							"interpolation_parameters": "[Undefined]",
							"transforms": "[Undefined]",
							"invert_transform_flags": "[Undefined]",
							"default_value": "0.0",
							"print_out_composite_warp_file": "[Undefined]",
							"float": "False",
							"num_threads": "1",
							"args": "[Undefined]",
							"environ": "{'NSLOTS': '1'}"
						},
						"outputs": {
							"output_image": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "interp_string",
						"type": "node",
						"inputs": {
							"function_str": "def interpolation_string(interpolation, reg_tool):\n    if reg_tool == 'ants':\n        pass\n    elif reg_tool == 'fsl':\n        # translate to FSL\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\n        #          in C-PAC are now converted to .nii.gz\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\n    return interpolation\n",
							"interpolation": "[Undefined]",
							"reg_tool": "ants"
						},
						"outputs": {
							"interpolation": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "single_ants_xfm_to_list",
						"type": "node",
						"inputs": {
							"function_str": "def single_ants_xfm_to_list(transform):\n    transform_list = [transform]\n    return transform_list\n",
							"transform": "[Undefined]"
						},
						"outputs": {
							"transform_list": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "outputspec",
						"type": "node",
						"inputs": {
							"output_image": "[Undefined]"
						},
						"outputs": {
							"output_image": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					}
				],
				"edges": [
					{
						"origin": "inputspec",
						"target": "apply_warp_warp_T1mask_to_T1template_87"
					},
					{
						"origin": "inputspec",
						"target": "interp_string"
					},
					{
						"origin": "inputspec",
						"target": "single_ants_xfm_to_list"
					},
					{
						"origin": "apply_warp_warp_T1mask_to_T1template_87",
						"target": "outputspec"
					},
					{
						"origin": "interp_string",
						"target": "apply_warp_warp_T1mask_to_T1template_87"
					},
					{
						"origin": "single_ants_xfm_to_list",
						"target": "apply_warp_warp_T1mask_to_T1template_87"
					}
				]
			},
			{
				"name": "seg_preproc_ants_prior_91",
				"type": "workflow",
				"inputs": {
					"inputspec": "{'anatomical_brain': '[Undefined]', 'anatomical_brain_mask': '[Undefined]', 'csf_label': [24], 'gm_label': [3, 42], 'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'wm_label': [2, 41]}",
					"seg_preproc_ants_prior_91_antsJointLabel": "{'function_str': 'def hardcoded_antsJointLabelFusion(anatomical_brain, anatomical_brain_mask,\\n                                   template_brain_list,\\n                                   template_segmentation_list):\\n    \"\"\"run antsJointLabelFusion.sh\\n\\n    Parameters\\n    ----------\\n\\n    anatomical_brain : string (nifti file)\\n        Target image to be labeled.\\n\\n    anatomical_brain_mask : string (nifti file)\\n        Target mask image\\n\\n    template_brain_list : list\\n        Atlas to be warped to target image.\\n\\n    template_segmentation_list : list\\n        Labels corresponding to atlas.\\n\\n    Returns\\n    -------\\n\\n    multiatlas_Intensity : string (nifti file)\\n\\n    multiatlas_Labels : string (nifti file)\\n    \"\"\"\\n    import os\\n    import subprocess\\n\\n    cmd = [\"${ANTSPATH}${ANTSPATH:+/}antsJointLabelFusion.sh\"]\\n    cmd.append(\\n        \" -d 3 -o ants_multiatlas_ -t {0} -x {1} -y b -c 0\".format(\\n            anatomical_brain, anatomical_brain_mask))\\n\\n    if (not len(template_brain_list) == len(template_segmentation_list)):\\n        err_msg = \\'\\\\n\\\\n[!] C-PAC says: Please check ANTs Prior-based \\' \\\\\\n                  \\'Segmentation setting. For performing ANTs Prior-based \\' \\\\\\n                  \\'segmentation method the number of specified \\' \\\\\\n                  \\'segmentations should be identical to the number of atlas \\' \\\\\\n                  \\'image sets.\\\\n\\\\n\\'\\n        raise Exception(err_msg)\\n    else:\\n        for index in range(len(template_brain_list)):\\n            cmd.append(\\n                \" -g {0} -l {1}\".format(\\n                    template_brain_list[index],\\n                    template_segmentation_list[index]))\\n\\n    # write out the actual command-line entry for testing/validation later\\n    command_file = os.path.join(os.getcwd(), \\'command.txt\\')\\n    with open(command_file, \\'wt\\') as f:\\n        f.write(\\' \\'.join(cmd))\\n\\n    str = \"\"\\n    bash_cmd = str.join(cmd)\\n\\n    try:\\n        retcode = subprocess.check_output(bash_cmd, shell=True) \\\\\\n            # noqa: F841  # pylint: disable=unused-variable\\n    except Exception as e:  # pylint: disable=broad-except,invalid-name\\n        # pylint: disable=raise-missing-from\\n        raise Exception(\\'[!] antsJointLabel segmentation method did not \\'\\n                        \\'complete successfully.\\\\n\\\\nError \\'\\n                        \\'details:\\\\n{0}\\\\n{1}\\\\n\\'.format(\\n                            e,\\n                            getattr(e, \\'output\\', \\'\\')))\\n\\n    multiatlas_Intensity = None\\n    multiatlas_Labels = None\\n\\n    files = [f for f in os.listdir(\\'.\\') if os.path.isfile(f)]\\n\\n    for f in files:\\n        if \"Intensity\" in f:\\n            multiatlas_Intensity = os.getcwd() + \"/\" + f\\n        if \"Labels\" in f:\\n            multiatlas_Labels = os.getcwd() + \"/\" + f\\n\\n    if not multiatlas_Labels:\\n        raise Exception(\"\\\\n\\\\n[!] No multiatlas labels file found. \"\\n                        \"antsJointLabelFusion may not have completed \"\\n                        \"successfully.\\\\n\\\\n\")\\n\\n    return multiatlas_Intensity, multiatlas_Labels\\n'}",
					"seg_preproc_ants_prior_91_tissue_mask": "{'function_str': 'def pick_tissue_from_labels_file(multiatlas_Labels, csf_label=[4,14,15,24,43],\\n                                 gm_label=[3,42], wm_label=[2,41]):\\n    \"\"\"Pick tissue mask from multiatlas labels file\\n    based off of FreeSurferColorLUT https://surfer.nmr.mgh.harvard.edu/fswiki/FsTutorial/AnatomicalROI/FreeSurferColorLUT\\n    or user provided label value\\n\\n    Parameters\\n    ----------\\n    multiatlas_Labels : string (nifti file)\\n\\n    csf_label : list\\n        a list of integer label values corresponding to CSF in multiatlas file\\n\\n    gm_label : list\\n        a list of integer label value corresponding to Gray Matter in multiatlas file\\n\\n    wm_label : list\\n        a list of integer label value corresponding to White Matter in multiatlas file\\n\\n    Returns\\n    -------\\n    csf_mask : string (nifti file)\\n\\n    gm_mask : string (nifti file)\\n\\n    wm_mask : string (nifti file)\\n    \"\"\"\\n    # pylint: disable=import-outside-toplevel,redefined-outer-name,reimported\\n    import os\\n    import nibabel as nb\\n    import numpy as np\\n\\n    img = nb.load(multiatlas_Labels)\\n    data = img.get_fdata()\\n\\n    # pick tissue mask from multiatlas labels file\\n    # based off of FreeSurferColorLUT or user provided label values\\n    # hard-coded csf/gm/wm label values are based off of FreeSurferColorLUT\\n\\n    # FreeSurfer Ventricle Labels:\\n    # Left-Lateral-Ventricle 4, 3rd-Ventricle 14, 4th-Ventricle 15, Right-Lateral-Ventricle 43\\n\\n    csf = np.zeros(np.size(data))\\n    csf[np.where(np.in1d(data, np.array(csf_label)))] = 1\\n    csf = csf.reshape(data.shape)\\n\\n    gm = np.zeros(np.size(data))\\n    gm[np.where(np.in1d(data, np.array(gm_label)))] = 1\\n    gm = gm.reshape(data.shape)\\n\\n    wm = np.zeros(np.size(data))\\n    wm[np.where(np.in1d(data, np.array(wm_label)))] = 1\\n    wm = wm.reshape(data.shape)\\n\\n    save_img_csf = nb.Nifti1Image(csf, header=img.header, affine=img.affine)\\n    save_img_gm = nb.Nifti1Image(gm, header=img.header, affine=img.affine)\\n    save_img_wm = nb.Nifti1Image(wm, header=img.header, affine=img.affine)\\n\\n    save_img_csf.to_filename(\\'csf_mask.nii.gz\\')\\n    save_img_gm.to_filename(\\'gm_mask.nii.gz\\')\\n    save_img_wm.to_filename(\\'wm_mask.nii.gz\\')\\n\\n    csf_mask = os.path.join(os.getcwd(), \\'csf_mask.nii.gz\\')\\n    gm_mask = os.path.join(os.getcwd(), \\'gm_mask.nii.gz\\')\\n    wm_mask = os.path.join(os.getcwd(), \\'wm_mask.nii.gz\\')\\n\\n    return csf_mask, gm_mask, wm_mask\\n'}",
					"outputspec": "{}"
				},
				"outputs": {
					"inputspec": "{'anatomical_brain': None, 'anatomical_brain_mask': None, 'csf_label': None, 'gm_label': None, 'template_brain_list': None, 'template_segmentation_list': None, 'wm_label': None}",
					"seg_preproc_ants_prior_91_antsJointLabel": "{'multiatlas_Intensity': None, 'multiatlas_Labels': None}",
					"seg_preproc_ants_prior_91_tissue_mask": "{'csf_mask': None, 'gm_mask': None, 'wm_mask': None}",
					"outputspec": "{'csf_mask': None, 'gm_mask': None, 'wm_mask': None}"
				},
				"result": null,
				"nodes": [
					{
						"name": "inputspec",
						"type": "node",
						"inputs": {
							"anatomical_brain": "[Undefined]",
							"anatomical_brain_mask": "[Undefined]",
							"template_brain_list": "['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz']",
							"template_segmentation_list": "['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz']",
							"csf_label": "[24]",
							"gm_label": "[3, 42]",
							"wm_label": "[2, 41]"
						},
						"outputs": {
							"anatomical_brain": "[Undefined]",
							"anatomical_brain_mask": "[Undefined]",
							"template_brain_list": "[Undefined]",
							"template_segmentation_list": "[Undefined]",
							"csf_label": "[Undefined]",
							"gm_label": "[Undefined]",
							"wm_label": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "seg_preproc_ants_prior_91_antsJointLabel",
						"type": "node",
						"inputs": {
							"function_str": "def hardcoded_antsJointLabelFusion(anatomical_brain, anatomical_brain_mask,\n                                   template_brain_list,\n                                   template_segmentation_list):\n    \"\"\"run antsJointLabelFusion.sh\n\n    Parameters\n    ----------\n\n    anatomical_brain : string (nifti file)\n        Target image to be labeled.\n\n    anatomical_brain_mask : string (nifti file)\n        Target mask image\n\n    template_brain_list : list\n        Atlas to be warped to target image.\n\n    template_segmentation_list : list\n        Labels corresponding to atlas.\n\n    Returns\n    -------\n\n    multiatlas_Intensity : string (nifti file)\n\n    multiatlas_Labels : string (nifti file)\n    \"\"\"\n    import os\n    import subprocess\n\n    cmd = [\"${ANTSPATH}${ANTSPATH:+/}antsJointLabelFusion.sh\"]\n    cmd.append(\n        \" -d 3 -o ants_multiatlas_ -t {0} -x {1} -y b -c 0\".format(\n            anatomical_brain, anatomical_brain_mask))\n\n    if (not len(template_brain_list) == len(template_segmentation_list)):\n        err_msg = '\\n\\n[!] C-PAC says: Please check ANTs Prior-based ' \\\n                  'Segmentation setting. For performing ANTs Prior-based ' \\\n                  'segmentation method the number of specified ' \\\n                  'segmentations should be identical to the number of atlas ' \\\n                  'image sets.\\n\\n'\n        raise Exception(err_msg)\n    else:\n        for index in range(len(template_brain_list)):\n            cmd.append(\n                \" -g {0} -l {1}\".format(\n                    template_brain_list[index],\n                    template_segmentation_list[index]))\n\n    # write out the actual command-line entry for testing/validation later\n    command_file = os.path.join(os.getcwd(), 'command.txt')\n    with open(command_file, 'wt') as f:\n        f.write(' '.join(cmd))\n\n    str = \"\"\n    bash_cmd = str.join(cmd)\n\n    try:\n        retcode = subprocess.check_output(bash_cmd, shell=True) \\\n            # noqa: F841  # pylint: disable=unused-variable\n    except Exception as e:  # pylint: disable=broad-except,invalid-name\n        # pylint: disable=raise-missing-from\n        raise Exception('[!] antsJointLabel segmentation method did not '\n                        'complete successfully.\\n\\nError '\n                        'details:\\n{0}\\n{1}\\n'.format(\n                            e,\n                            getattr(e, 'output', '')))\n\n    multiatlas_Intensity = None\n    multiatlas_Labels = None\n\n    files = [f for f in os.listdir('.') if os.path.isfile(f)]\n\n    for f in files:\n        if \"Intensity\" in f:\n            multiatlas_Intensity = os.getcwd() + \"/\" + f\n        if \"Labels\" in f:\n            multiatlas_Labels = os.getcwd() + \"/\" + f\n\n    if not multiatlas_Labels:\n        raise Exception(\"\\n\\n[!] No multiatlas labels file found. \"\n                        \"antsJointLabelFusion may not have completed \"\n                        \"successfully.\\n\\n\")\n\n    return multiatlas_Intensity, multiatlas_Labels\n",
							"anatomical_brain": "[Undefined]",
							"anatomical_brain_mask": "[Undefined]",
							"template_brain_list": "[Undefined]",
							"template_segmentation_list": "[Undefined]"
						},
						"outputs": {
							"multiatlas_Intensity": "[Undefined]",
							"multiatlas_Labels": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "seg_preproc_ants_prior_91_tissue_mask",
						"type": "node",
						"inputs": {
							"function_str": "def pick_tissue_from_labels_file(multiatlas_Labels, csf_label=[4,14,15,24,43],\n                                 gm_label=[3,42], wm_label=[2,41]):\n    \"\"\"Pick tissue mask from multiatlas labels file\n    based off of FreeSurferColorLUT https://surfer.nmr.mgh.harvard.edu/fswiki/FsTutorial/AnatomicalROI/FreeSurferColorLUT\n    or user provided label value\n\n    Parameters\n    ----------\n    multiatlas_Labels : string (nifti file)\n\n    csf_label : list\n        a list of integer label values corresponding to CSF in multiatlas file\n\n    gm_label : list\n        a list of integer label value corresponding to Gray Matter in multiatlas file\n\n    wm_label : list\n        a list of integer label value corresponding to White Matter in multiatlas file\n\n    Returns\n    -------\n    csf_mask : string (nifti file)\n\n    gm_mask : string (nifti file)\n\n    wm_mask : string (nifti file)\n    \"\"\"\n    # pylint: disable=import-outside-toplevel,redefined-outer-name,reimported\n    import os\n    import nibabel as nb\n    import numpy as np\n\n    img = nb.load(multiatlas_Labels)\n    data = img.get_fdata()\n\n    # pick tissue mask from multiatlas labels file\n    # based off of FreeSurferColorLUT or user provided label values\n    # hard-coded csf/gm/wm label values are based off of FreeSurferColorLUT\n\n    # FreeSurfer Ventricle Labels:\n    # Left-Lateral-Ventricle 4, 3rd-Ventricle 14, 4th-Ventricle 15, Right-Lateral-Ventricle 43\n\n    csf = np.zeros(np.size(data))\n    csf[np.where(np.in1d(data, np.array(csf_label)))] = 1\n    csf = csf.reshape(data.shape)\n\n    gm = np.zeros(np.size(data))\n    gm[np.where(np.in1d(data, np.array(gm_label)))] = 1\n    gm = gm.reshape(data.shape)\n\n    wm = np.zeros(np.size(data))\n    wm[np.where(np.in1d(data, np.array(wm_label)))] = 1\n    wm = wm.reshape(data.shape)\n\n    save_img_csf = nb.Nifti1Image(csf, header=img.header, affine=img.affine)\n    save_img_gm = nb.Nifti1Image(gm, header=img.header, affine=img.affine)\n    save_img_wm = nb.Nifti1Image(wm, header=img.header, affine=img.affine)\n\n    save_img_csf.to_filename('csf_mask.nii.gz')\n    save_img_gm.to_filename('gm_mask.nii.gz')\n    save_img_wm.to_filename('wm_mask.nii.gz')\n\n    csf_mask = os.path.join(os.getcwd(), 'csf_mask.nii.gz')\n    gm_mask = os.path.join(os.getcwd(), 'gm_mask.nii.gz')\n    wm_mask = os.path.join(os.getcwd(), 'wm_mask.nii.gz')\n\n    return csf_mask, gm_mask, wm_mask\n",
							"multiatlas_Labels": "[Undefined]",
							"csf_label": "[Undefined]",
							"gm_label": "[Undefined]",
							"wm_label": "[Undefined]"
						},
						"outputs": {
							"csf_mask": "[Undefined]",
							"gm_mask": "[Undefined]",
							"wm_mask": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "outputspec",
						"type": "node",
						"inputs": {
							"csf_mask": "[Undefined]",
							"gm_mask": "[Undefined]",
							"wm_mask": "[Undefined]"
						},
						"outputs": {
							"csf_mask": "[Undefined]",
							"gm_mask": "[Undefined]",
							"wm_mask": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					}
				],
				"edges": [
					{
						"origin": "inputspec",
						"target": "seg_preproc_ants_prior_91_antsJointLabel"
					},
					{
						"origin": "inputspec",
						"target": "seg_preproc_ants_prior_91_tissue_mask"
					},
					{
						"origin": "seg_preproc_ants_prior_91_antsJointLabel",
						"target": "seg_preproc_ants_prior_91_tissue_mask"
					},
					{
						"origin": "seg_preproc_ants_prior_91_tissue_mask",
						"target": "outputspec"
					}
				]
			},
			{
				"name": "func_deoblique_2",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"deoblique": "True",
					"xorigin": "[Undefined]",
					"yorigin": "[Undefined]",
					"zorigin": "[Undefined]",
					"duporigin_file": "[Undefined]",
					"xdel": "[Undefined]",
					"ydel": "[Undefined]",
					"zdel": "[Undefined]",
					"xyzscale": "[Undefined]",
					"space": "[Undefined]",
					"atrcopy": "[Undefined]",
					"atrstring": "[Undefined]",
					"atrfloat": "[Undefined]",
					"atrint": "[Undefined]",
					"saveatr": "[Undefined]",
					"nosaveatr": "[Undefined]",
					"args": "[Undefined]",
					"environ": "{}"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "func_reorient_2",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"out_file": "[Undefined]",
					"orientation": "RPI",
					"resample_mode": "[Undefined]",
					"voxel_size": "[Undefined]",
					"master": "[Undefined]",
					"num_threads": "1",
					"outputtype": "NIFTI_GZ",
					"args": "[Undefined]",
					"environ": "{}"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "edit_func_96",
				"type": "workflow",
				"inputs": {
					"inputspec": "{'func': '[Undefined]', 'start_idx': 0, 'stop_idx': None}",
					"func_get_idx": "{'function_str': 'def get_idx(in_files, stop_idx=None, start_idx=None):\\n    \"\"\"\\n    Method to get the first and the last slice for\\n    the functional run. It verifies the user specified\\n    first and last slice. If the values are not valid, it\\n    calculates and returns the very first and the last slice\\n\\n    Parameters\\n    ----------\\n    in_file : str (nifti file)\\n       Path to input functional run\\n\\n    stop_idx : int\\n        Last volume to be considered, specified by user\\n        in the configuration file\\n\\n    stop_idx : int\\n        First volume to be considered, specified by user\\n        in the configuration file\\n\\n    Returns\\n    -------\\n    stop_idx :  int\\n        Value of first slice to consider for the functional run\\n\\n    start_idx : int\\n        Value of last slice to consider for the functional run\\n\\n    \"\"\"\\n\\n    # Import packages\\n    from nibabel import load\\n\\n    # Init variables\\n    img = load(in_files)\\n    hdr = img.header\\n    shape = hdr.get_data_shape()\\n\\n    # Check to make sure the input file is 4-dimensional\\n    if len(shape) != 4:\\n        raise TypeError(\\'Input nifti file: %s is not a 4D file\\' % in_files)\\n    # Grab the number of volumes\\n    nvols = int(hdr.get_data_shape()[3])\\n\\n    if (start_idx == None) or (int(start_idx) < 0) or (\\n        int(start_idx) > (nvols - 1)):\\n        startidx = 0\\n    else:\\n        startidx = int(start_idx)\\n\\n    if (stop_idx in [None, \"End\"]) or (int(stop_idx) > (nvols - 1)):\\n        stopidx = nvols - 1\\n    else:\\n        stopidx = int(stop_idx)\\n\\n    return stopidx, startidx\\n'}",
					"func_drop_trs": "{'args': '[Undefined]', 'environ': {}, 'expr': 'a', 'in_file_b': '[Undefined]', 'in_file_c': '[Undefined]', 'num_threads': 1, 'other': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'overwrite': '[Undefined]', 'single_idx': '[Undefined]'}",
					"outputspec": "{}"
				},
				"outputs": {
					"inputspec": "{'func': None, 'start_idx': None, 'stop_idx': None}",
					"func_get_idx": "{'startidx': None, 'stopidx': None}",
					"func_drop_trs": "{'out_file': None}",
					"outputspec": "{'edited_func': None}"
				},
				"result": null,
				"nodes": [
					{
						"name": "inputspec",
						"type": "node",
						"inputs": {
							"func": "[Undefined]",
							"start_idx": "0",
							"stop_idx": "None"
						},
						"outputs": {
							"func": "[Undefined]",
							"start_idx": "[Undefined]",
							"stop_idx": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "func_get_idx",
						"type": "node",
						"inputs": {
							"function_str": "def get_idx(in_files, stop_idx=None, start_idx=None):\n    \"\"\"\n    Method to get the first and the last slice for\n    the functional run. It verifies the user specified\n    first and last slice. If the values are not valid, it\n    calculates and returns the very first and the last slice\n\n    Parameters\n    ----------\n    in_file : str (nifti file)\n       Path to input functional run\n\n    stop_idx : int\n        Last volume to be considered, specified by user\n        in the configuration file\n\n    stop_idx : int\n        First volume to be considered, specified by user\n        in the configuration file\n\n    Returns\n    -------\n    stop_idx :  int\n        Value of first slice to consider for the functional run\n\n    start_idx : int\n        Value of last slice to consider for the functional run\n\n    \"\"\"\n\n    # Import packages\n    from nibabel import load\n\n    # Init variables\n    img = load(in_files)\n    hdr = img.header\n    shape = hdr.get_data_shape()\n\n    # Check to make sure the input file is 4-dimensional\n    if len(shape) != 4:\n        raise TypeError('Input nifti file: %s is not a 4D file' % in_files)\n    # Grab the number of volumes\n    nvols = int(hdr.get_data_shape()[3])\n\n    if (start_idx == None) or (int(start_idx) < 0) or (\n        int(start_idx) > (nvols - 1)):\n        startidx = 0\n    else:\n        startidx = int(start_idx)\n\n    if (stop_idx in [None, \"End\"]) or (int(stop_idx) > (nvols - 1)):\n        stopidx = nvols - 1\n    else:\n        stopidx = int(stop_idx)\n\n    return stopidx, startidx\n",
							"in_files": "[Undefined]",
							"stop_idx": "[Undefined]",
							"start_idx": "[Undefined]"
						},
						"outputs": {
							"stopidx": "[Undefined]",
							"startidx": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "func_drop_trs",
						"type": "node",
						"inputs": {
							"in_file_a": "[Undefined]",
							"in_file_b": "[Undefined]",
							"in_file_c": "[Undefined]",
							"out_file": "[Undefined]",
							"expr": "a",
							"start_idx": "[Undefined]",
							"stop_idx": "[Undefined]",
							"single_idx": "[Undefined]",
							"overwrite": "[Undefined]",
							"other": "[Undefined]",
							"num_threads": "1",
							"outputtype": "NIFTI_GZ",
							"args": "[Undefined]",
							"environ": "{}"
						},
						"outputs": {
							"out_file": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "outputspec",
						"type": "node",
						"inputs": {
							"edited_func": "[Undefined]"
						},
						"outputs": {
							"edited_func": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					}
				],
				"edges": [
					{
						"origin": "inputspec",
						"target": "func_get_idx"
					},
					{
						"origin": "inputspec",
						"target": "func_drop_trs"
					},
					{
						"origin": "func_get_idx",
						"target": "func_drop_trs"
					},
					{
						"origin": "func_drop_trs",
						"target": "outputspec"
					}
				]
			},
			{
				"name": "func_despiked_98",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"out_file": "[Undefined]",
					"num_threads": "1",
					"outputtype": "NIFTI_GZ",
					"args": "[Undefined]",
					"environ": "{}"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "func_slice_timing_correction_100",
				"type": "workflow",
				"inputs": {
					"inputspec": "{'func_ts': '[Undefined]', 'tpattern': '[Undefined]', 'tr': '[Undefined]'}",
					"slice_timing": "{'args': '[Undefined]', 'environ': {}, 'ignore': '[Undefined]', 'interp': '[Undefined]', 'num_threads': 1, 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'rlt': '[Undefined]', 'rltplus': '[Undefined]', 'slice_encoding_direction': 'k', 'slice_timing': '[Undefined]', 'tslice': '[Undefined]', 'tzero': '[Undefined]'}",
					"outputspec": "{}"
				},
				"outputs": {
					"inputspec": "{'func_ts': None, 'tpattern': None, 'tr': None}",
					"slice_timing": "{'out_file': None, 'timing_file': None}",
					"outputspec": "{'slice_time_corrected': None}"
				},
				"result": null,
				"nodes": [
					{
						"name": "inputspec",
						"type": "node",
						"inputs": {
							"func_ts": "[Undefined]",
							"tr": "[Undefined]",
							"tpattern": "[Undefined]"
						},
						"outputs": {
							"func_ts": "[Undefined]",
							"tr": "[Undefined]",
							"tpattern": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "slice_timing",
						"type": "node",
						"inputs": {
							"in_file": "[Undefined]",
							"out_file": "[Undefined]",
							"tr": "[Undefined]",
							"tzero": "[Undefined]",
							"tslice": "[Undefined]",
							"ignore": "[Undefined]",
							"interp": "[Undefined]",
							"tpattern": "[Undefined]",
							"slice_timing": "[Undefined]",
							"slice_encoding_direction": "k",
							"rlt": "[Undefined]",
							"rltplus": "[Undefined]",
							"num_threads": "1",
							"outputtype": "NIFTI_GZ",
							"args": "[Undefined]",
							"environ": "{}"
						},
						"outputs": {
							"timing_file": "[Undefined]",
							"out_file": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "outputspec",
						"type": "node",
						"inputs": {
							"slice_time_corrected": "[Undefined]"
						},
						"outputs": {
							"slice_time_corrected": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					}
				],
				"edges": [
					{
						"origin": "inputspec",
						"target": "slice_timing"
					},
					{
						"origin": "slice_timing",
						"target": "outputspec"
					}
				]
			},
			{
				"name": "func_mean_103",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"out_file": "[Undefined]",
					"mask": "[Undefined]",
					"options": "-mean",
					"num_threads": "1",
					"outputtype": "NIFTI_GZ",
					"args": "[Undefined]",
					"environ": "{}"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "func_get_mean_RPI_106",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"out_file": "[Undefined]",
					"mask": "[Undefined]",
					"options": "-mean",
					"num_threads": "1",
					"outputtype": "NIFTI_GZ",
					"args": "[Undefined]",
					"environ": "{}"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "out_split_func_109",
				"type": "node",
				"inputs": {
					"out_file": "[Undefined]"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "func_generate_ref_109",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"in_weight_volume": "[Undefined]",
					"out_file": "[Undefined]",
					"basefile": "[Undefined]",
					"zpad": "4",
					"md1d_file": "[Undefined]",
					"oned_file": "[Undefined]",
					"verbose": "[Undefined]",
					"timeshift": "[Undefined]",
					"copyorigin": "[Undefined]",
					"oned_matrix_save": "[Undefined]",
					"interp": "[Undefined]",
					"num_threads": "1",
					"outputtype": "NIFTI_GZ",
					"args": "-twopass -Fourier",
					"environ": "{}"
				},
				"outputs": {
					"out_file": "[Undefined]",
					"md1d_file": "[Undefined]",
					"oned_file": "[Undefined]",
					"oned_matrix_save": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "out_motion_109",
				"type": "node",
				"inputs": {
					"out_file": "[Undefined]"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "func_motion_correct_3dvolreg_109",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"in_weight_volume": "[Undefined]",
					"out_file": "[Undefined]",
					"basefile": "[Undefined]",
					"zpad": "4",
					"md1d_file": "max_displacement.1D",
					"oned_file": "[Undefined]",
					"verbose": "[Undefined]",
					"timeshift": "[Undefined]",
					"copyorigin": "[Undefined]",
					"oned_matrix_save": "[Undefined]",
					"interp": "[Undefined]",
					"num_threads": "1",
					"outputtype": "NIFTI_GZ",
					"args": "-twopass -Fourier",
					"environ": "{}"
				},
				"outputs": {
					"out_file": "[Undefined]",
					"md1d_file": "[Undefined]",
					"oned_file": "[Undefined]",
					"oned_matrix_save": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "out_motion_A_109",
				"type": "node",
				"inputs": {
					"out_file": "[Undefined]"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "out_md1d_109",
				"type": "node",
				"inputs": {
					"out_file": "[Undefined]"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "out_oned_109",
				"type": "node",
				"inputs": {
					"out_file": "[Undefined]"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "out_oned_matrix_109",
				"type": "node",
				"inputs": {
					"out_file": "[Undefined]"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "anat_brain_mask_bin_117",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"in_file2": "[Undefined]",
					"mask_file": "[Undefined]",
					"out_file": "[Undefined]",
					"op_string": "-bin",
					"suffix": "[Undefined]",
					"out_data_type": "[Undefined]",
					"output_type": "NIFTI_GZ",
					"args": "[Undefined]",
					"environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "anat_brain_mask_filled_117",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"out_file": "[Undefined]",
					"count": "[Undefined]",
					"datum": "[Undefined]",
					"dilate_inputs": "[Undefined]",
					"dilate_results": "[Undefined]",
					"frac": "[Undefined]",
					"inter": "[Undefined]",
					"union": "[Undefined]",
					"fill_holes": "True",
					"fill_dirs": "[Undefined]",
					"verbose": "[Undefined]",
					"num_threads": "1",
					"outputtype": "NIFTI_GZ",
					"args": "[Undefined]",
					"environ": "{}"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "raw_func_deoblique_117",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"deoblique": "True",
					"xorigin": "[Undefined]",
					"yorigin": "[Undefined]",
					"zorigin": "[Undefined]",
					"duporigin_file": "[Undefined]",
					"xdel": "[Undefined]",
					"ydel": "[Undefined]",
					"zdel": "[Undefined]",
					"xyzscale": "[Undefined]",
					"space": "[Undefined]",
					"atrcopy": "[Undefined]",
					"atrstring": "[Undefined]",
					"atrfloat": "[Undefined]",
					"atrint": "[Undefined]",
					"saveatr": "[Undefined]",
					"nosaveatr": "[Undefined]",
					"args": "[Undefined]",
					"environ": "{}"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "raw_func_reorient_117",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"out_file": "[Undefined]",
					"orientation": "RPI",
					"resample_mode": "[Undefined]",
					"voxel_size": "[Undefined]",
					"master": "[Undefined]",
					"num_threads": "1",
					"outputtype": "NIFTI_GZ",
					"args": "[Undefined]",
					"environ": "{}"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "init_bold_mask_117",
				"type": "workflow",
				"inputs": {
					"inputspec": "{'anat_brain': '[Undefined]', 'anatomical_brain_mask': '[Undefined]', 'func': '[Undefined]', 'init_func_brain_mask': '[Undefined]'}",
					"func_single_volume": "{'args': '[Undefined]', 'environ': {}, 'expr': 'a', 'in_file_b': '[Undefined]', 'in_file_c': '[Undefined]', 'num_threads': 1, 'other': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'overwrite': '[Undefined]', 'single_idx': 1, 'start_idx': '[Undefined]', 'stop_idx': '[Undefined]'}",
					"func_tmp_brain": "{'args': '[Undefined]', 'environ': {}, 'expr': 'a*b', 'in_file_c': '[Undefined]', 'num_threads': 1, 'other': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'overwrite': '[Undefined]', 'single_idx': '[Undefined]', 'start_idx': '[Undefined]', 'stop_idx': '[Undefined]'}",
					"func_single_volume_n4_corrected": "{'args': '-r True', 'bias_image': '[Undefined]', 'bspline_fitting_distance': 200.0, 'bspline_order': '[Undefined]', 'convergence_threshold': '[Undefined]', 'copy_header': True, 'dimension': 3, 'environ': {'NSLOTS': '1'}, 'histogram_sharpening': '[Undefined]', 'mask_image': '[Undefined]', 'n_iterations': '[Undefined]', 'num_threads': 1, 'output_image': '[Undefined]', 'rescale_intensities': False, 'save_bias': False, 'shrink_factor': '[Undefined]', 'weight_image': '[Undefined]'}",
					"func_tmp_brain_mask_pre": "{'args': '[Undefined]', 'center': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'frac': '[Undefined]', 'functional': '[Undefined]', 'mask': True, 'mesh': '[Undefined]', 'no_output': '[Undefined]', 'out_file': '[Undefined]', 'outline': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding': '[Undefined]', 'radius': '[Undefined]', 'reduce_bias': '[Undefined]', 'remove_eyes': '[Undefined]', 'robust': '[Undefined]', 'skull': '[Undefined]', 'surfaces': '[Undefined]', 't2_guided': '[Undefined]', 'threshold': '[Undefined]', 'vertical_gradient': '[Undefined]'}",
					"func_tmp_brain_mask_dil": "{'args': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'in_file2': '[Undefined]', 'mask_file': '[Undefined]', 'op_string': '-dilM', 'out_data_type': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'suffix': '[Undefined]'}",
					"func_to_anat_linear_reg": "{'angle_rep': '[Undefined]', 'apply_isoxfm': '[Undefined]', 'apply_xfm': '[Undefined]', 'args': '[Undefined]', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': '[Undefined]', 'coarse_search': '[Undefined]', 'cost': 'mutualinfo', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'dof': 6, 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_matrix_file': '[Undefined]', 'in_weight': '[Undefined]', 'interp': '[Undefined]', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': '[Undefined]', 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'schedule': '[Undefined]', 'searchr_x': '[Undefined]', 'searchr_y': '[Undefined]', 'searchr_z': '[Undefined]', 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}",
					"inv_func2anat_affine": "{'args': '[Undefined]', 'concat_xfm': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fix_scale_skew': '[Undefined]', 'in_file2': '[Undefined]', 'invert_xfm': True, 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ'}",
					"reg_anat_mask_to_func": "{'angle_rep': '[Undefined]', 'apply_isoxfm': '[Undefined]', 'apply_xfm': True, 'args': '[Undefined]', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': '[Undefined]', 'coarse_search': '[Undefined]', 'cost': 'mutualinfo', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'dof': 6, 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_weight': '[Undefined]', 'interp': 'nearestneighbour', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': '[Undefined]', 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'schedule': '[Undefined]', 'searchr_x': '[Undefined]', 'searchr_y': '[Undefined]', 'searchr_z': '[Undefined]', 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}",
					"func_mask": "{'args': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'internal_datatype': '[Undefined]', 'nan2zeros': '[Undefined]', 'op_string': '-mul %s', 'out_file': '[Undefined]', 'output_datatype': '[Undefined]', 'output_type': 'NIFTI_GZ'}",
					"outputspec": "{}"
				},
				"outputs": {
					"inputspec": "{'anat_brain': None, 'anatomical_brain_mask': None, 'func': None, 'init_func_brain_mask': None}",
					"func_single_volume": "{'out_file': None}",
					"func_tmp_brain": "{'out_file': None}",
					"func_single_volume_n4_corrected": "{'bias_image': None, 'output_image': None}",
					"func_tmp_brain_mask_pre": "{'inskull_mask_file': None, 'inskull_mesh_file': None, 'mask_file': None, 'meshfile': None, 'out_file': None, 'outline_file': None, 'outskin_mask_file': None, 'outskin_mesh_file': None, 'outskull_mask_file': None, 'outskull_mesh_file': None, 'skull_file': None, 'skull_mask_file': None}",
					"func_tmp_brain_mask_dil": "{'out_file': None}",
					"func_to_anat_linear_reg": "{'out_file': None, 'out_log': None, 'out_matrix_file': None}",
					"inv_func2anat_affine": "{'out_file': None}",
					"reg_anat_mask_to_func": "{'out_file': None, 'out_log': None, 'out_matrix_file': None}",
					"func_mask": "{'out_file': None}",
					"outputspec": "{'func_brain_mask': None}"
				},
				"result": null,
				"nodes": [
					{
						"name": "inputspec",
						"type": "node",
						"inputs": {
							"func": "[Undefined]",
							"anatomical_brain_mask": "[Undefined]",
							"anat_brain": "[Undefined]",
							"init_func_brain_mask": "[Undefined]"
						},
						"outputs": {
							"func": "[Undefined]",
							"anatomical_brain_mask": "[Undefined]",
							"anat_brain": "[Undefined]",
							"init_func_brain_mask": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "func_single_volume",
						"type": "node",
						"inputs": {
							"in_file_a": "[Undefined]",
							"in_file_b": "[Undefined]",
							"in_file_c": "[Undefined]",
							"out_file": "[Undefined]",
							"expr": "a",
							"start_idx": "[Undefined]",
							"stop_idx": "[Undefined]",
							"single_idx": "1",
							"overwrite": "[Undefined]",
							"other": "[Undefined]",
							"num_threads": "1",
							"outputtype": "NIFTI_GZ",
							"args": "[Undefined]",
							"environ": "{}"
						},
						"outputs": {
							"out_file": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "func_tmp_brain",
						"type": "node",
						"inputs": {
							"in_file_a": "[Undefined]",
							"in_file_b": "[Undefined]",
							"in_file_c": "[Undefined]",
							"out_file": "[Undefined]",
							"expr": "a*b",
							"start_idx": "[Undefined]",
							"stop_idx": "[Undefined]",
							"single_idx": "[Undefined]",
							"overwrite": "[Undefined]",
							"other": "[Undefined]",
							"num_threads": "1",
							"outputtype": "NIFTI_GZ",
							"args": "[Undefined]",
							"environ": "{}"
						},
						"outputs": {
							"out_file": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "func_single_volume_n4_corrected",
						"type": "node",
						"inputs": {
							"dimension": "3",
							"input_image": "[Undefined]",
							"mask_image": "[Undefined]",
							"weight_image": "[Undefined]",
							"output_image": "[Undefined]",
							"bspline_fitting_distance": "200.0",
							"bspline_order": "[Undefined]",
							"shrink_factor": "[Undefined]",
							"n_iterations": "[Undefined]",
							"convergence_threshold": "[Undefined]",
							"save_bias": "False",
							"bias_image": "[Undefined]",
							"copy_header": "True",
							"rescale_intensities": "False",
							"histogram_sharpening": "[Undefined]",
							"num_threads": "1",
							"args": "-r True",
							"environ": "{'NSLOTS': '1'}"
						},
						"outputs": {
							"output_image": "[Undefined]",
							"bias_image": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "func_tmp_brain_mask_pre",
						"type": "node",
						"inputs": {
							"in_file": "[Undefined]",
							"out_file": "[Undefined]",
							"outline": "[Undefined]",
							"mask": "True",
							"skull": "[Undefined]",
							"no_output": "[Undefined]",
							"frac": "[Undefined]",
							"vertical_gradient": "[Undefined]",
							"radius": "[Undefined]",
							"center": "[Undefined]",
							"threshold": "[Undefined]",
							"mesh": "[Undefined]",
							"robust": "[Undefined]",
							"padding": "[Undefined]",
							"remove_eyes": "[Undefined]",
							"surfaces": "[Undefined]",
							"t2_guided": "[Undefined]",
							"functional": "[Undefined]",
							"reduce_bias": "[Undefined]",
							"output_type": "NIFTI_GZ",
							"args": "[Undefined]",
							"environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
						},
						"outputs": {
							"out_file": "[Undefined]",
							"mask_file": "[Undefined]",
							"outline_file": "[Undefined]",
							"meshfile": "[Undefined]",
							"inskull_mask_file": "[Undefined]",
							"inskull_mesh_file": "[Undefined]",
							"outskull_mask_file": "[Undefined]",
							"outskull_mesh_file": "[Undefined]",
							"outskin_mask_file": "[Undefined]",
							"outskin_mesh_file": "[Undefined]",
							"skull_mask_file": "[Undefined]",
							"skull_file": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "func_tmp_brain_mask_dil",
						"type": "node",
						"inputs": {
							"in_file": "[Undefined]",
							"in_file2": "[Undefined]",
							"mask_file": "[Undefined]",
							"out_file": "[Undefined]",
							"op_string": "-dilM",
							"suffix": "[Undefined]",
							"out_data_type": "[Undefined]",
							"output_type": "NIFTI_GZ",
							"args": "[Undefined]",
							"environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
						},
						"outputs": {
							"out_file": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "func_to_anat_linear_reg",
						"type": "node",
						"inputs": {
							"in_file": "[Undefined]",
							"reference": "[Undefined]",
							"out_file": "[Undefined]",
							"out_matrix_file": "[Undefined]",
							"out_log": "[Undefined]",
							"in_matrix_file": "[Undefined]",
							"apply_xfm": "[Undefined]",
							"apply_isoxfm": "[Undefined]",
							"datatype": "[Undefined]",
							"cost": "mutualinfo",
							"cost_func": "[Undefined]",
							"uses_qform": "[Undefined]",
							"display_init": "[Undefined]",
							"angle_rep": "[Undefined]",
							"interp": "[Undefined]",
							"sinc_width": "[Undefined]",
							"sinc_window": "[Undefined]",
							"bins": "[Undefined]",
							"dof": "6",
							"no_resample": "[Undefined]",
							"force_scaling": "[Undefined]",
							"min_sampling": "[Undefined]",
							"padding_size": "[Undefined]",
							"searchr_x": "[Undefined]",
							"searchr_y": "[Undefined]",
							"searchr_z": "[Undefined]",
							"no_search": "[Undefined]",
							"coarse_search": "[Undefined]",
							"fine_search": "[Undefined]",
							"schedule": "[Undefined]",
							"ref_weight": "[Undefined]",
							"in_weight": "[Undefined]",
							"no_clamp": "[Undefined]",
							"no_resample_blur": "[Undefined]",
							"rigid2D": "[Undefined]",
							"save_log": "[Undefined]",
							"verbose": "[Undefined]",
							"bgvalue": "[Undefined]",
							"wm_seg": "[Undefined]",
							"wmcoords": "[Undefined]",
							"wmnorms": "[Undefined]",
							"fieldmap": "[Undefined]",
							"fieldmapmask": "[Undefined]",
							"pedir": "[Undefined]",
							"echospacing": "[Undefined]",
							"bbrtype": "[Undefined]",
							"bbrslope": "[Undefined]",
							"output_type": "NIFTI_GZ",
							"args": "[Undefined]",
							"environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
						},
						"outputs": {
							"out_file": "[Undefined]",
							"out_matrix_file": "[Undefined]",
							"out_log": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "inv_func2anat_affine",
						"type": "node",
						"inputs": {
							"in_file": "[Undefined]",
							"in_file2": "[Undefined]",
							"invert_xfm": "True",
							"concat_xfm": "[Undefined]",
							"fix_scale_skew": "[Undefined]",
							"out_file": "[Undefined]",
							"output_type": "NIFTI_GZ",
							"args": "[Undefined]",
							"environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
						},
						"outputs": {
							"out_file": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "reg_anat_mask_to_func",
						"type": "node",
						"inputs": {
							"in_file": "[Undefined]",
							"reference": "[Undefined]",
							"out_file": "[Undefined]",
							"out_matrix_file": "[Undefined]",
							"out_log": "[Undefined]",
							"in_matrix_file": "[Undefined]",
							"apply_xfm": "True",
							"apply_isoxfm": "[Undefined]",
							"datatype": "[Undefined]",
							"cost": "mutualinfo",
							"cost_func": "[Undefined]",
							"uses_qform": "[Undefined]",
							"display_init": "[Undefined]",
							"angle_rep": "[Undefined]",
							"interp": "nearestneighbour",
							"sinc_width": "[Undefined]",
							"sinc_window": "[Undefined]",
							"bins": "[Undefined]",
							"dof": "6",
							"no_resample": "[Undefined]",
							"force_scaling": "[Undefined]",
							"min_sampling": "[Undefined]",
							"padding_size": "[Undefined]",
							"searchr_x": "[Undefined]",
							"searchr_y": "[Undefined]",
							"searchr_z": "[Undefined]",
							"no_search": "[Undefined]",
							"coarse_search": "[Undefined]",
							"fine_search": "[Undefined]",
							"schedule": "[Undefined]",
							"ref_weight": "[Undefined]",
							"in_weight": "[Undefined]",
							"no_clamp": "[Undefined]",
							"no_resample_blur": "[Undefined]",
							"rigid2D": "[Undefined]",
							"save_log": "[Undefined]",
							"verbose": "[Undefined]",
							"bgvalue": "[Undefined]",
							"wm_seg": "[Undefined]",
							"wmcoords": "[Undefined]",
							"wmnorms": "[Undefined]",
							"fieldmap": "[Undefined]",
							"fieldmapmask": "[Undefined]",
							"pedir": "[Undefined]",
							"echospacing": "[Undefined]",
							"bbrtype": "[Undefined]",
							"bbrslope": "[Undefined]",
							"output_type": "NIFTI_GZ",
							"args": "[Undefined]",
							"environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
						},
						"outputs": {
							"out_file": "[Undefined]",
							"out_matrix_file": "[Undefined]",
							"out_log": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "func_mask",
						"type": "node",
						"inputs": {
							"op_string": "-mul %s",
							"operand_files": "[Undefined]",
							"in_file": "[Undefined]",
							"out_file": "[Undefined]",
							"internal_datatype": "[Undefined]",
							"output_datatype": "[Undefined]",
							"nan2zeros": "[Undefined]",
							"output_type": "NIFTI_GZ",
							"args": "[Undefined]",
							"environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
						},
						"outputs": {
							"out_file": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "outputspec",
						"type": "node",
						"inputs": {
							"func_brain_mask": "[Undefined]"
						},
						"outputs": {
							"func_brain_mask": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					}
				],
				"edges": [
					{
						"origin": "inputspec",
						"target": "func_single_volume"
					},
					{
						"origin": "inputspec",
						"target": "func_to_anat_linear_reg"
					},
					{
						"origin": "inputspec",
						"target": "reg_anat_mask_to_func"
					},
					{
						"origin": "func_single_volume",
						"target": "func_tmp_brain"
					},
					{
						"origin": "func_single_volume",
						"target": "func_single_volume_n4_corrected"
					},
					{
						"origin": "func_tmp_brain",
						"target": "func_to_anat_linear_reg"
					},
					{
						"origin": "func_tmp_brain",
						"target": "reg_anat_mask_to_func"
					},
					{
						"origin": "func_single_volume_n4_corrected",
						"target": "func_tmp_brain_mask_pre"
					},
					{
						"origin": "func_tmp_brain_mask_pre",
						"target": "func_tmp_brain_mask_dil"
					},
					{
						"origin": "func_tmp_brain_mask_dil",
						"target": "func_tmp_brain"
					},
					{
						"origin": "func_tmp_brain_mask_dil",
						"target": "func_mask"
					},
					{
						"origin": "func_to_anat_linear_reg",
						"target": "inv_func2anat_affine"
					},
					{
						"origin": "inv_func2anat_affine",
						"target": "reg_anat_mask_to_func"
					},
					{
						"origin": "reg_anat_mask_to_func",
						"target": "func_mask"
					},
					{
						"origin": "func_mask",
						"target": "outputspec"
					}
				]
			},
			{
				"name": "func_tmp_brain_mask_dil_117",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"in_file2": "[Undefined]",
					"mask_file": "[Undefined]",
					"out_file": "[Undefined]",
					"op_string": "-dilM",
					"suffix": "[Undefined]",
					"out_data_type": "[Undefined]",
					"output_type": "NIFTI_GZ",
					"args": "[Undefined]",
					"environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "refined_bold_mask_117",
				"type": "workflow",
				"inputs": {
					"inputspec": "{'anat_brain': '[Undefined]', 'anatomical_brain_mask': '[Undefined]', 'func': '[Undefined]', 'init_func_brain_mask': '[Undefined]'}",
					"func_single_volume": "{'args': '[Undefined]', 'environ': {}, 'expr': 'a', 'in_file_b': '[Undefined]', 'in_file_c': '[Undefined]', 'num_threads': 1, 'other': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'overwrite': '[Undefined]', 'single_idx': 1, 'start_idx': '[Undefined]', 'stop_idx': '[Undefined]'}",
					"func_tmp_brain": "{'args': '[Undefined]', 'environ': {}, 'expr': 'a*b', 'in_file_c': '[Undefined]', 'num_threads': 1, 'other': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'overwrite': '[Undefined]', 'single_idx': '[Undefined]', 'start_idx': '[Undefined]', 'stop_idx': '[Undefined]'}",
					"func_to_anat_linear_reg": "{'angle_rep': '[Undefined]', 'apply_isoxfm': '[Undefined]', 'apply_xfm': '[Undefined]', 'args': '[Undefined]', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': '[Undefined]', 'coarse_search': '[Undefined]', 'cost': 'mutualinfo', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'dof': 6, 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_matrix_file': '[Undefined]', 'in_weight': '[Undefined]', 'interp': '[Undefined]', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': '[Undefined]', 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'schedule': '[Undefined]', 'searchr_x': '[Undefined]', 'searchr_y': '[Undefined]', 'searchr_z': '[Undefined]', 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}",
					"inv_func2anat_affine": "{'args': '[Undefined]', 'concat_xfm': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fix_scale_skew': '[Undefined]', 'in_file2': '[Undefined]', 'invert_xfm': True, 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ'}",
					"reg_anat_mask_to_func": "{'angle_rep': '[Undefined]', 'apply_isoxfm': '[Undefined]', 'apply_xfm': True, 'args': '[Undefined]', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': '[Undefined]', 'coarse_search': '[Undefined]', 'cost': 'mutualinfo', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'dof': 6, 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_weight': '[Undefined]', 'interp': 'nearestneighbour', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': '[Undefined]', 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'schedule': '[Undefined]', 'searchr_x': '[Undefined]', 'searchr_y': '[Undefined]', 'searchr_z': '[Undefined]', 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}",
					"func_mask": "{'args': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'internal_datatype': '[Undefined]', 'nan2zeros': '[Undefined]', 'op_string': '-mul %s', 'out_file': '[Undefined]', 'output_datatype': '[Undefined]', 'output_type': 'NIFTI_GZ'}",
					"outputspec": "{}"
				},
				"outputs": {
					"inputspec": "{'anat_brain': None, 'anatomical_brain_mask': None, 'func': None, 'init_func_brain_mask': None}",
					"func_single_volume": "{'out_file': None}",
					"func_tmp_brain": "{'out_file': None}",
					"func_to_anat_linear_reg": "{'out_file': None, 'out_log': None, 'out_matrix_file': None}",
					"inv_func2anat_affine": "{'out_file': None}",
					"reg_anat_mask_to_func": "{'out_file': None, 'out_log': None, 'out_matrix_file': None}",
					"func_mask": "{'out_file': None}",
					"outputspec": "{'func_brain_mask': None}"
				},
				"result": null,
				"nodes": [
					{
						"name": "inputspec",
						"type": "node",
						"inputs": {
							"func": "[Undefined]",
							"anatomical_brain_mask": "[Undefined]",
							"anat_brain": "[Undefined]",
							"init_func_brain_mask": "[Undefined]"
						},
						"outputs": {
							"func": "[Undefined]",
							"anatomical_brain_mask": "[Undefined]",
							"anat_brain": "[Undefined]",
							"init_func_brain_mask": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "func_single_volume",
						"type": "node",
						"inputs": {
							"in_file_a": "[Undefined]",
							"in_file_b": "[Undefined]",
							"in_file_c": "[Undefined]",
							"out_file": "[Undefined]",
							"expr": "a",
							"start_idx": "[Undefined]",
							"stop_idx": "[Undefined]",
							"single_idx": "1",
							"overwrite": "[Undefined]",
							"other": "[Undefined]",
							"num_threads": "1",
							"outputtype": "NIFTI_GZ",
							"args": "[Undefined]",
							"environ": "{}"
						},
						"outputs": {
							"out_file": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "func_tmp_brain",
						"type": "node",
						"inputs": {
							"in_file_a": "[Undefined]",
							"in_file_b": "[Undefined]",
							"in_file_c": "[Undefined]",
							"out_file": "[Undefined]",
							"expr": "a*b",
							"start_idx": "[Undefined]",
							"stop_idx": "[Undefined]",
							"single_idx": "[Undefined]",
							"overwrite": "[Undefined]",
							"other": "[Undefined]",
							"num_threads": "1",
							"outputtype": "NIFTI_GZ",
							"args": "[Undefined]",
							"environ": "{}"
						},
						"outputs": {
							"out_file": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "func_to_anat_linear_reg",
						"type": "node",
						"inputs": {
							"in_file": "[Undefined]",
							"reference": "[Undefined]",
							"out_file": "[Undefined]",
							"out_matrix_file": "[Undefined]",
							"out_log": "[Undefined]",
							"in_matrix_file": "[Undefined]",
							"apply_xfm": "[Undefined]",
							"apply_isoxfm": "[Undefined]",
							"datatype": "[Undefined]",
							"cost": "mutualinfo",
							"cost_func": "[Undefined]",
							"uses_qform": "[Undefined]",
							"display_init": "[Undefined]",
							"angle_rep": "[Undefined]",
							"interp": "[Undefined]",
							"sinc_width": "[Undefined]",
							"sinc_window": "[Undefined]",
							"bins": "[Undefined]",
							"dof": "6",
							"no_resample": "[Undefined]",
							"force_scaling": "[Undefined]",
							"min_sampling": "[Undefined]",
							"padding_size": "[Undefined]",
							"searchr_x": "[Undefined]",
							"searchr_y": "[Undefined]",
							"searchr_z": "[Undefined]",
							"no_search": "[Undefined]",
							"coarse_search": "[Undefined]",
							"fine_search": "[Undefined]",
							"schedule": "[Undefined]",
							"ref_weight": "[Undefined]",
							"in_weight": "[Undefined]",
							"no_clamp": "[Undefined]",
							"no_resample_blur": "[Undefined]",
							"rigid2D": "[Undefined]",
							"save_log": "[Undefined]",
							"verbose": "[Undefined]",
							"bgvalue": "[Undefined]",
							"wm_seg": "[Undefined]",
							"wmcoords": "[Undefined]",
							"wmnorms": "[Undefined]",
							"fieldmap": "[Undefined]",
							"fieldmapmask": "[Undefined]",
							"pedir": "[Undefined]",
							"echospacing": "[Undefined]",
							"bbrtype": "[Undefined]",
							"bbrslope": "[Undefined]",
							"output_type": "NIFTI_GZ",
							"args": "[Undefined]",
							"environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
						},
						"outputs": {
							"out_file": "[Undefined]",
							"out_matrix_file": "[Undefined]",
							"out_log": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "inv_func2anat_affine",
						"type": "node",
						"inputs": {
							"in_file": "[Undefined]",
							"in_file2": "[Undefined]",
							"invert_xfm": "True",
							"concat_xfm": "[Undefined]",
							"fix_scale_skew": "[Undefined]",
							"out_file": "[Undefined]",
							"output_type": "NIFTI_GZ",
							"args": "[Undefined]",
							"environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
						},
						"outputs": {
							"out_file": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "reg_anat_mask_to_func",
						"type": "node",
						"inputs": {
							"in_file": "[Undefined]",
							"reference": "[Undefined]",
							"out_file": "[Undefined]",
							"out_matrix_file": "[Undefined]",
							"out_log": "[Undefined]",
							"in_matrix_file": "[Undefined]",
							"apply_xfm": "True",
							"apply_isoxfm": "[Undefined]",
							"datatype": "[Undefined]",
							"cost": "mutualinfo",
							"cost_func": "[Undefined]",
							"uses_qform": "[Undefined]",
							"display_init": "[Undefined]",
							"angle_rep": "[Undefined]",
							"interp": "nearestneighbour",
							"sinc_width": "[Undefined]",
							"sinc_window": "[Undefined]",
							"bins": "[Undefined]",
							"dof": "6",
							"no_resample": "[Undefined]",
							"force_scaling": "[Undefined]",
							"min_sampling": "[Undefined]",
							"padding_size": "[Undefined]",
							"searchr_x": "[Undefined]",
							"searchr_y": "[Undefined]",
							"searchr_z": "[Undefined]",
							"no_search": "[Undefined]",
							"coarse_search": "[Undefined]",
							"fine_search": "[Undefined]",
							"schedule": "[Undefined]",
							"ref_weight": "[Undefined]",
							"in_weight": "[Undefined]",
							"no_clamp": "[Undefined]",
							"no_resample_blur": "[Undefined]",
							"rigid2D": "[Undefined]",
							"save_log": "[Undefined]",
							"verbose": "[Undefined]",
							"bgvalue": "[Undefined]",
							"wm_seg": "[Undefined]",
							"wmcoords": "[Undefined]",
							"wmnorms": "[Undefined]",
							"fieldmap": "[Undefined]",
							"fieldmapmask": "[Undefined]",
							"pedir": "[Undefined]",
							"echospacing": "[Undefined]",
							"bbrtype": "[Undefined]",
							"bbrslope": "[Undefined]",
							"output_type": "NIFTI_GZ",
							"args": "[Undefined]",
							"environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
						},
						"outputs": {
							"out_file": "[Undefined]",
							"out_matrix_file": "[Undefined]",
							"out_log": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "func_mask",
						"type": "node",
						"inputs": {
							"op_string": "-mul %s",
							"operand_files": "[Undefined]",
							"in_file": "[Undefined]",
							"out_file": "[Undefined]",
							"internal_datatype": "[Undefined]",
							"output_datatype": "[Undefined]",
							"nan2zeros": "[Undefined]",
							"output_type": "NIFTI_GZ",
							"args": "[Undefined]",
							"environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
						},
						"outputs": {
							"out_file": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "outputspec",
						"type": "node",
						"inputs": {
							"func_brain_mask": "[Undefined]"
						},
						"outputs": {
							"func_brain_mask": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					}
				],
				"edges": [
					{
						"origin": "inputspec",
						"target": "func_single_volume"
					},
					{
						"origin": "inputspec",
						"target": "func_tmp_brain"
					},
					{
						"origin": "inputspec",
						"target": "func_to_anat_linear_reg"
					},
					{
						"origin": "inputspec",
						"target": "reg_anat_mask_to_func"
					},
					{
						"origin": "inputspec",
						"target": "func_mask"
					},
					{
						"origin": "func_single_volume",
						"target": "func_tmp_brain"
					},
					{
						"origin": "func_tmp_brain",
						"target": "func_to_anat_linear_reg"
					},
					{
						"origin": "func_tmp_brain",
						"target": "reg_anat_mask_to_func"
					},
					{
						"origin": "func_to_anat_linear_reg",
						"target": "inv_func2anat_affine"
					},
					{
						"origin": "inv_func2anat_affine",
						"target": "reg_anat_mask_to_func"
					},
					{
						"origin": "reg_anat_mask_to_func",
						"target": "func_mask"
					},
					{
						"origin": "func_mask",
						"target": "outputspec"
					}
				]
			},
			{
				"name": "func_mask_final_117",
				"type": "node",
				"inputs": {
					"op_string": "-mul %s",
					"operand_files": "[Undefined]",
					"in_file": "[Undefined]",
					"out_file": "[Undefined]",
					"internal_datatype": "[Undefined]",
					"output_datatype": "[Undefined]",
					"nan2zeros": "[Undefined]",
					"output_type": "NIFTI_GZ",
					"args": "[Undefined]",
					"environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "func_extract_brain_122",
				"type": "node",
				"inputs": {
					"in_file_a": "[Undefined]",
					"in_file_b": "[Undefined]",
					"in_file_c": "[Undefined]",
					"out_file": "[Undefined]",
					"expr": "a*b",
					"start_idx": "[Undefined]",
					"stop_idx": "[Undefined]",
					"single_idx": "[Undefined]",
					"overwrite": "[Undefined]",
					"other": "[Undefined]",
					"num_threads": "1",
					"outputtype": "NIFTI_GZ",
					"args": "[Undefined]",
					"environ": "{}"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "gen_motion_stats_126",
				"type": "workflow",
				"inputs": {
					"inputspec": "{'mask': '[Undefined]', 'max_displacement': '[Undefined]', 'motion_correct': '[Undefined]', 'movement_parameters': '[Undefined]', 'rels_displacement': '[Undefined]', 'transformations': '[Undefined]'}",
					"cal_DVARS": "{'args': '[Undefined]', 'environ': {}, 'method': 'dvars', 'num_threads': 1, 'out_file': '[Undefined]', 'outputtype': 'AFNI'}",
					"cal_DVARS_strip": "{'function_str': 'CPAC.generate_motion_statistics.generate_motion_statistics.DVARS_strip_t0'}",
					"outputspec": "{}",
					"calculate_FD": "{'function_str': 'CPAC.generate_motion_statistics.generate_motion_statistics.calculate_FD_P'}",
					"calculate_FDJ": "{'calc_from': 'affine', 'center': '[Undefined]', 'function_str': 'CPAC.generate_motion_statistics.generate_motion_statistics.calculate_FD_J'}",
					"get_all_motion_parameters": "{'function_str': 'CPAC.generate_motion_statistics.generate_motion_statistics.get_allmotion'}",
					"calc_motion_parameters": "{'function_str': 'CPAC.generate_motion_statistics.generate_motion_statistics.gen_motion_parameters', 'motion_correct_tool': '3dvolreg'}",
					"calc_power_parameters": "{'function_str': 'CPAC.generate_motion_statistics.generate_motion_statistics.gen_power_parameters', 'motion_correct_tool': '3dvolreg'}"
				},
				"outputs": {
					"inputspec": "{'mask': None, 'max_displacement': None, 'motion_correct': None, 'movement_parameters': None, 'rels_displacement': None, 'transformations': None}",
					"cal_DVARS": "{'out_file': None}",
					"cal_DVARS_strip": "{'DVARS_val': None, 'out_file': None}",
					"outputspec": "{'DVARS_1D': None, 'FDJ_1D': None, 'FDP_1D': None, 'desc-summary_motion': None, 'motion': None, 'motion_params': None, 'power_params': None}",
					"calculate_FD": "{'fd': None, 'out_file': None}",
					"calculate_FDJ": "{'fd': None, 'out_file': None}",
					"get_all_motion_parameters": "{'all_motion_val': None, 'summary_motion_power': None}",
					"calc_motion_parameters": "{'info': None, 'maxdisp': None, 'out_file': None, 'relsdisp': None}",
					"calc_power_parameters": "{'info': None, 'out_file': None}"
				},
				"result": null,
				"nodes": [
					{
						"name": "inputspec",
						"type": "node",
						"inputs": {
							"movement_parameters": "[Undefined]",
							"max_displacement": "[Undefined]",
							"rels_displacement": "[Undefined]",
							"motion_correct": "[Undefined]",
							"mask": "[Undefined]",
							"transformations": "[Undefined]"
						},
						"outputs": {
							"movement_parameters": "[Undefined]",
							"max_displacement": "[Undefined]",
							"rels_displacement": "[Undefined]",
							"motion_correct": "[Undefined]",
							"mask": "[Undefined]",
							"transformations": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "cal_DVARS",
						"type": "node",
						"inputs": {
							"in_file": "[Undefined]",
							"mask": "[Undefined]",
							"out_file": "[Undefined]",
							"method": "dvars",
							"num_threads": "1",
							"outputtype": "AFNI",
							"args": "[Undefined]",
							"environ": "{}"
						},
						"outputs": {
							"out_file": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "cal_DVARS_strip",
						"type": "node",
						"inputs": {
							"function_str": "CPAC.generate_motion_statistics.generate_motion_statistics.DVARS_strip_t0",
							"file_1D": "[Undefined]"
						},
						"outputs": {
							"out_file": "[Undefined]",
							"DVARS_val": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "outputspec",
						"type": "node",
						"inputs": {
							"FDP_1D": "[Undefined]",
							"FDJ_1D": "[Undefined]",
							"DVARS_1D": "[Undefined]",
							"power_params": "[Undefined]",
							"motion_params": "[Undefined]",
							"motion": "[Undefined]",
							"desc-summary_motion": "[Undefined]"
						},
						"outputs": {
							"FDP_1D": "[Undefined]",
							"FDJ_1D": "[Undefined]",
							"DVARS_1D": "[Undefined]",
							"power_params": "[Undefined]",
							"motion_params": "[Undefined]",
							"motion": "[Undefined]",
							"desc-summary_motion": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "calculate_FD",
						"type": "node",
						"inputs": {
							"function_str": "CPAC.generate_motion_statistics.generate_motion_statistics.calculate_FD_P",
							"in_file": "[Undefined]"
						},
						"outputs": {
							"out_file": "[Undefined]",
							"fd": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "calculate_FDJ",
						"type": "node",
						"inputs": {
							"function_str": "CPAC.generate_motion_statistics.generate_motion_statistics.calculate_FD_J",
							"in_file": "[Undefined]",
							"calc_from": "affine",
							"center": "[Undefined]"
						},
						"outputs": {
							"out_file": "[Undefined]",
							"fd": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "get_all_motion_parameters",
						"type": "node",
						"inputs": {
							"function_str": "CPAC.generate_motion_statistics.generate_motion_statistics.get_allmotion",
							"fdj": "[Undefined]",
							"fdp": "[Undefined]",
							"maxdisp": "[Undefined]",
							"motion": "[Undefined]",
							"power": "[Undefined]",
							"relsdisp": "[Undefined]",
							"dvars": "[Undefined]"
						},
						"outputs": {
							"all_motion_val": "[Undefined]",
							"summary_motion_power": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "calc_motion_parameters",
						"type": "node",
						"inputs": {
							"function_str": "CPAC.generate_motion_statistics.generate_motion_statistics.gen_motion_parameters",
							"movement_parameters": "[Undefined]",
							"max_displacement": "[Undefined]",
							"motion_correct_tool": "3dvolreg",
							"rels_displacement": "[Undefined]"
						},
						"outputs": {
							"out_file": "[Undefined]",
							"info": "[Undefined]",
							"maxdisp": "[Undefined]",
							"relsdisp": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "calc_power_parameters",
						"type": "node",
						"inputs": {
							"function_str": "CPAC.generate_motion_statistics.generate_motion_statistics.gen_power_parameters",
							"fdp": "[Undefined]",
							"fdj": "[Undefined]",
							"dvars": "[Undefined]",
							"motion_correct_tool": "3dvolreg"
						},
						"outputs": {
							"out_file": "[Undefined]",
							"info": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					}
				],
				"edges": [
					{
						"origin": "inputspec",
						"target": "cal_DVARS"
					},
					{
						"origin": "inputspec",
						"target": "calculate_FD"
					},
					{
						"origin": "inputspec",
						"target": "calculate_FDJ"
					},
					{
						"origin": "inputspec",
						"target": "calc_motion_parameters"
					},
					{
						"origin": "cal_DVARS",
						"target": "cal_DVARS_strip"
					},
					{
						"origin": "cal_DVARS",
						"target": "calc_power_parameters"
					},
					{
						"origin": "cal_DVARS_strip",
						"target": "outputspec"
					},
					{
						"origin": "cal_DVARS_strip",
						"target": "get_all_motion_parameters"
					},
					{
						"origin": "calculate_FD",
						"target": "outputspec"
					},
					{
						"origin": "calculate_FD",
						"target": "get_all_motion_parameters"
					},
					{
						"origin": "calculate_FD",
						"target": "calc_power_parameters"
					},
					{
						"origin": "calculate_FDJ",
						"target": "outputspec"
					},
					{
						"origin": "calculate_FDJ",
						"target": "get_all_motion_parameters"
					},
					{
						"origin": "calculate_FDJ",
						"target": "calc_power_parameters"
					},
					{
						"origin": "get_all_motion_parameters",
						"target": "outputspec"
					},
					{
						"origin": "calc_motion_parameters",
						"target": "get_all_motion_parameters"
					},
					{
						"origin": "calc_motion_parameters",
						"target": "outputspec"
					},
					{
						"origin": "calc_power_parameters",
						"target": "get_all_motion_parameters"
					},
					{
						"origin": "calc_power_parameters",
						"target": "outputspec"
					}
				]
			},
			{
				"name": "func_normalize_124",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"in_file2": "[Undefined]",
					"mask_file": "[Undefined]",
					"out_file": "[Undefined]",
					"op_string": "-ing 10000",
					"suffix": "[Undefined]",
					"out_data_type": "float",
					"output_type": "NIFTI_GZ",
					"args": "[Undefined]",
					"environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "func_mean_n4_corrected_105",
				"type": "node",
				"inputs": {
					"dimension": "3",
					"input_image": "[Undefined]",
					"mask_image": "[Undefined]",
					"weight_image": "[Undefined]",
					"output_image": "[Undefined]",
					"bspline_fitting_distance": "200.0",
					"bspline_order": "[Undefined]",
					"shrink_factor": "[Undefined]",
					"n_iterations": "[Undefined]",
					"convergence_threshold": "[Undefined]",
					"save_bias": "False",
					"bias_image": "[Undefined]",
					"copy_header": "True",
					"rescale_intensities": "False",
					"histogram_sharpening": "[Undefined]",
					"num_threads": "1",
					"args": "-r True",
					"environ": "{'NSLOTS': '1'}"
				},
				"outputs": {
					"output_image": "[Undefined]",
					"bias_image": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "func_to_anat_FLIRT_143",
				"type": "workflow",
				"inputs": {
					"inputspec": "{'anat': '[Undefined]', 'dof': 6, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'func': '[Undefined]', 'interp': 'spline'}",
					"linear_func_to_anat": "{'angle_rep': '[Undefined]', 'apply_isoxfm': '[Undefined]', 'apply_xfm': '[Undefined]', 'args': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': '[Undefined]', 'coarse_search': '[Undefined]', 'cost': 'mutualinfo', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_matrix_file': '[Undefined]', 'in_weight': '[Undefined]', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': '[Undefined]', 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'schedule': '[Undefined]', 'searchr_x': '[Undefined]', 'searchr_y': '[Undefined]', 'searchr_z': '[Undefined]', 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}",
					"outputspec": "{}"
				},
				"outputs": {
					"inputspec": "{'anat': None, 'dof': None, 'fieldmap': None, 'fieldmapmask': None, 'func': None, 'interp': None}",
					"linear_func_to_anat": "{'out_file': None, 'out_log': None, 'out_matrix_file': None}",
					"outputspec": "{'anat_func_nobbreg': None, 'func_to_anat_linear_xfm_nobbreg': None}"
				},
				"result": null,
				"nodes": [
					{
						"name": "inputspec",
						"type": "node",
						"inputs": {
							"func": "[Undefined]",
							"anat": "[Undefined]",
							"dof": "6",
							"interp": "spline",
							"fieldmap": "[Undefined]",
							"fieldmapmask": "[Undefined]"
						},
						"outputs": {
							"func": "[Undefined]",
							"anat": "[Undefined]",
							"dof": "[Undefined]",
							"interp": "[Undefined]",
							"fieldmap": "[Undefined]",
							"fieldmapmask": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "linear_func_to_anat",
						"type": "node",
						"inputs": {
							"in_file": "[Undefined]",
							"reference": "[Undefined]",
							"out_file": "[Undefined]",
							"out_matrix_file": "[Undefined]",
							"out_log": "[Undefined]",
							"in_matrix_file": "[Undefined]",
							"apply_xfm": "[Undefined]",
							"apply_isoxfm": "[Undefined]",
							"datatype": "[Undefined]",
							"cost": "mutualinfo",
							"cost_func": "[Undefined]",
							"uses_qform": "[Undefined]",
							"display_init": "[Undefined]",
							"angle_rep": "[Undefined]",
							"interp": "spline",
							"sinc_width": "[Undefined]",
							"sinc_window": "[Undefined]",
							"bins": "[Undefined]",
							"dof": "6",
							"no_resample": "[Undefined]",
							"force_scaling": "[Undefined]",
							"min_sampling": "[Undefined]",
							"padding_size": "[Undefined]",
							"searchr_x": "[Undefined]",
							"searchr_y": "[Undefined]",
							"searchr_z": "[Undefined]",
							"no_search": "[Undefined]",
							"coarse_search": "[Undefined]",
							"fine_search": "[Undefined]",
							"schedule": "[Undefined]",
							"ref_weight": "[Undefined]",
							"in_weight": "[Undefined]",
							"no_clamp": "[Undefined]",
							"no_resample_blur": "[Undefined]",
							"rigid2D": "[Undefined]",
							"save_log": "[Undefined]",
							"verbose": "[Undefined]",
							"bgvalue": "[Undefined]",
							"wm_seg": "[Undefined]",
							"wmcoords": "[Undefined]",
							"wmnorms": "[Undefined]",
							"fieldmap": "[Undefined]",
							"fieldmapmask": "[Undefined]",
							"pedir": "[Undefined]",
							"echospacing": "[Undefined]",
							"bbrtype": "[Undefined]",
							"bbrslope": "[Undefined]",
							"output_type": "NIFTI_GZ",
							"args": "-searchrx -30 30 -searchry -30 30 -searchrz -30 30",
							"environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
						},
						"outputs": {
							"out_file": "[Undefined]",
							"out_matrix_file": "[Undefined]",
							"out_log": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "outputspec",
						"type": "node",
						"inputs": {
							"func_to_anat_linear_xfm_nobbreg": "[Undefined]",
							"anat_func_nobbreg": "[Undefined]"
						},
						"outputs": {
							"func_to_anat_linear_xfm_nobbreg": "[Undefined]",
							"anat_func_nobbreg": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					}
				],
				"edges": [
					{
						"origin": "inputspec",
						"target": "linear_func_to_anat"
					},
					{
						"origin": "linear_func_to_anat",
						"target": "outputspec"
					}
				]
			},
			{
				"name": "create_func_to_T1wtemplate_xfm_152",
				"type": "workflow",
				"inputs": {
					"inputspec": "{'T1w-brain-template_funcreg': '[Undefined]', 'T1w_to_template_xfm': '[Undefined]', 'blip_warp': '[Undefined]', 'coreg_xfm': '[Undefined]', 'input_brain': '[Undefined]', 'mean_bold': '[Undefined]', 'template_to_T1w_xfm': '[Undefined]'}",
					"fsl_reg_2_itk": "{'args': '[Undefined]', 'environ': {}, 'fsl2ras': True, 'itk_transform': True}",
					"change_transform_type": "{'function_str': 'def change_itk_transform_type(input_affine_file):\\n    \"\"\"\\n    this function takes in the affine.txt produced by the c3d_affine_tool\\n    (which converted an FSL FLIRT affine.mat into the affine.txt)\\n\\n    it then modifies the \\'Transform Type\\' of this affine.txt so that it is\\n    compatible with the antsApplyTransforms tool and produces a new affine\\n    file titled \\'updated_affine.txt\\'\\n    \"\"\"\\n\\n    new_file_lines = []\\n\\n    with open(input_affine_file) as f:\\n        for line in f:\\n            if \\'Transform:\\' in line:\\n                if \\'MatrixOffsetTransformBase_double_3_3\\' in line:\\n                    transform_line = \\'Transform: AffineTransform_double_3_3\\\\n\\'\\n                    new_file_lines.append(transform_line)\\n            else:\\n                new_file_lines.append(line)\\n\\n    updated_affine_file = os.path.join(os.getcwd(), \\'updated_affine.txt\\')\\n\\n    with open(updated_affine_file, \\'wt\\') as f:\\n        for line in new_file_lines:\\n            f.write(line)\\n\\n    return updated_affine_file\\n'}",
					"write_composite_xfm": "{'args': '[Undefined]', 'default_value': 0.0, 'dimension': 3, 'environ': {'NSLOTS': '1'}, 'float': False, 'input_image_type': 0, 'interpolation': 'LanczosWindowedSinc', 'interpolation_parameters': '[Undefined]', 'invert_transform_flags': '[Undefined]', 'num_threads': 1, 'out_postfix': '_trans', 'output_image': 'from-bold_to-template_mode-image_xfm.nii.gz', 'print_out_composite_warp_file': True}",
					"collect_all_transforms": "{'axis': 'vstack', 'no_flatten': False, 'ravel_inputs': False}",
					"write_composite_inv_xfm": "{'args': '[Undefined]', 'default_value': 0.0, 'dimension': 3, 'environ': {'NSLOTS': '1'}, 'float': False, 'input_image_type': 0, 'interpolation': 'LanczosWindowedSinc', 'interpolation_parameters': '[Undefined]', 'invert_transform_flags': [True, False], 'num_threads': 1, 'out_postfix': '_trans', 'output_image': 'from-template_to-bold_mode-image_xfm.nii.gz', 'print_out_composite_warp_file': True}",
					"collect_inv_transforms": "{'axis': 'vstack', 'no_flatten': False, 'ravel_inputs': False}"
				},
				"outputs": {
					"inputspec": "{'T1w-brain-template_funcreg': None, 'T1w_to_template_xfm': None, 'blip_warp': None, 'coreg_xfm': None, 'input_brain': None, 'mean_bold': None, 'template_to_T1w_xfm': None}",
					"fsl_reg_2_itk": "{'itk_transform': None}",
					"change_transform_type": "{'updated_affine_file': None}",
					"write_composite_xfm": "{'output_image': None}",
					"collect_all_transforms": "{'out': None}",
					"write_composite_inv_xfm": "{'output_image': None}",
					"collect_inv_transforms": "{'out': None}"
				},
				"result": null,
				"nodes": [
					{
						"name": "inputspec",
						"type": "node",
						"inputs": {
							"input_brain": "[Undefined]",
							"mean_bold": "[Undefined]",
							"coreg_xfm": "[Undefined]",
							"T1w-brain-template_funcreg": "[Undefined]",
							"T1w_to_template_xfm": "[Undefined]",
							"template_to_T1w_xfm": "[Undefined]",
							"blip_warp": "[Undefined]"
						},
						"outputs": {
							"input_brain": "[Undefined]",
							"mean_bold": "[Undefined]",
							"coreg_xfm": "[Undefined]",
							"T1w-brain-template_funcreg": "[Undefined]",
							"T1w_to_template_xfm": "[Undefined]",
							"template_to_T1w_xfm": "[Undefined]",
							"blip_warp": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "fsl_reg_2_itk",
						"type": "node",
						"inputs": {
							"reference_file": "[Undefined]",
							"source_file": "[Undefined]",
							"transform_file": "[Undefined]",
							"itk_transform": "True",
							"fsl2ras": "True",
							"args": "[Undefined]",
							"environ": "{}"
						},
						"outputs": {
							"itk_transform": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "change_transform_type",
						"type": "node",
						"inputs": {
							"function_str": "def change_itk_transform_type(input_affine_file):\n    \"\"\"\n    this function takes in the affine.txt produced by the c3d_affine_tool\n    (which converted an FSL FLIRT affine.mat into the affine.txt)\n\n    it then modifies the 'Transform Type' of this affine.txt so that it is\n    compatible with the antsApplyTransforms tool and produces a new affine\n    file titled 'updated_affine.txt'\n    \"\"\"\n\n    new_file_lines = []\n\n    with open(input_affine_file) as f:\n        for line in f:\n            if 'Transform:' in line:\n                if 'MatrixOffsetTransformBase_double_3_3' in line:\n                    transform_line = 'Transform: AffineTransform_double_3_3\\n'\n                    new_file_lines.append(transform_line)\n            else:\n                new_file_lines.append(line)\n\n    updated_affine_file = os.path.join(os.getcwd(), 'updated_affine.txt')\n\n    with open(updated_affine_file, 'wt') as f:\n        for line in new_file_lines:\n            f.write(line)\n\n    return updated_affine_file\n",
							"input_affine_file": "[Undefined]"
						},
						"outputs": {
							"updated_affine_file": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "write_composite_xfm",
						"type": "node",
						"inputs": {
							"dimension": "3",
							"input_image_type": "0",
							"input_image": "[Undefined]",
							"output_image": "from-bold_to-template_mode-image_xfm.nii.gz",
							"out_postfix": "_trans",
							"reference_image": "[Undefined]",
							"interpolation": "LanczosWindowedSinc",
							"interpolation_parameters": "[Undefined]",
							"transforms": "[Undefined]",
							"invert_transform_flags": "[Undefined]",
							"default_value": "0.0",
							"print_out_composite_warp_file": "True",
							"float": "False",
							"num_threads": "1",
							"args": "[Undefined]",
							"environ": "{'NSLOTS': '1'}"
						},
						"outputs": {
							"output_image": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "collect_all_transforms",
						"type": "node",
						"inputs": {
							"axis": "vstack",
							"no_flatten": "False",
							"ravel_inputs": "False",
							"in1": "[Undefined]",
							"in2": "[Undefined]"
						},
						"outputs": {
							"out": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "write_composite_inv_xfm",
						"type": "node",
						"inputs": {
							"dimension": "3",
							"input_image_type": "0",
							"input_image": "[Undefined]",
							"output_image": "from-template_to-bold_mode-image_xfm.nii.gz",
							"out_postfix": "_trans",
							"reference_image": "[Undefined]",
							"interpolation": "LanczosWindowedSinc",
							"interpolation_parameters": "[Undefined]",
							"transforms": "[Undefined]",
							"invert_transform_flags": "[True, False]",
							"default_value": "0.0",
							"print_out_composite_warp_file": "True",
							"float": "False",
							"num_threads": "1",
							"args": "[Undefined]",
							"environ": "{'NSLOTS': '1'}"
						},
						"outputs": {
							"output_image": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "collect_inv_transforms",
						"type": "node",
						"inputs": {
							"axis": "vstack",
							"no_flatten": "False",
							"ravel_inputs": "False",
							"in1": "[Undefined]",
							"in2": "[Undefined]"
						},
						"outputs": {
							"out": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					}
				],
				"edges": [
					{
						"origin": "inputspec",
						"target": "fsl_reg_2_itk"
					},
					{
						"origin": "inputspec",
						"target": "write_composite_xfm"
					},
					{
						"origin": "inputspec",
						"target": "collect_all_transforms"
					},
					{
						"origin": "inputspec",
						"target": "write_composite_inv_xfm"
					},
					{
						"origin": "inputspec",
						"target": "collect_inv_transforms"
					},
					{
						"origin": "fsl_reg_2_itk",
						"target": "change_transform_type"
					},
					{
						"origin": "change_transform_type",
						"target": "collect_all_transforms"
					},
					{
						"origin": "change_transform_type",
						"target": "collect_inv_transforms"
					},
					{
						"origin": "collect_all_transforms",
						"target": "write_composite_xfm"
					},
					{
						"origin": "collect_inv_transforms",
						"target": "write_composite_inv_xfm"
					}
				]
			},
			{
				"name": "resampled_T1w-brain-template-funcreg",
				"type": "node",
				"inputs": {
					"function_str": "CPAC.utils.datasource.resolve_resolution",
					"resolution": "2mm",
					"template": "/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz",
					"template_name": "T1w-brain-template-funcreg",
					"tag": "func_preproc_outputs"
				},
				"outputs": {
					"resampled_template": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "write_composite_inv_xfm",
				"type": "node",
				"inputs": {
					"dimension": "3",
					"input_image_type": "0",
					"input_image": "[Undefined]",
					"output_image": "from-template_to-T1w_mode-image_xfm.nii.gz",
					"out_postfix": "_trans",
					"reference_image": "[Undefined]",
					"interpolation": "Linear",
					"interpolation_parameters": "[Undefined]",
					"transforms": "[Undefined]",
					"invert_transform_flags": "[Undefined]",
					"default_value": "0.0",
					"print_out_composite_warp_file": "True",
					"float": "False",
					"num_threads": "1",
					"args": "[Undefined]",
					"environ": "{'NSLOTS': '1'}"
				},
				"outputs": {
					"output_image": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "nuisance_regressors_Regressor_1_160",
				"type": "workflow",
				"inputs": {
					"inputspec": "{'anat_to_func_linear_xfm_file_path': '[Undefined]', 'anat_to_mni_linear_xfm_file_path': '[Undefined]', 'anatomical_eroded_brain_mask_file_path': '[Undefined]', 'anatomical_file_path': '[Undefined]', 'creds_path': '[Undefined]', 'csf_mask_file_path': '[Undefined]', 'dl_dir': '[Undefined]', 'dvars_file_path': '[Undefined]', 'fd_j_file_path': '[Undefined]', 'fd_p_file_path': '[Undefined]', 'func_to_anat_linear_xfm_file_path': '[Undefined]', 'functional_brain_mask_file_path': '[Undefined]', 'functional_file_path': '[Undefined]', 'gm_mask_file_path': '[Undefined]', 'lat_ventricles_mask_file_path': '[Undefined]', 'mni_to_anat_linear_xfm_file_path': '[Undefined]', 'motion_parameters_file_path': '[Undefined]', 'selector': '[Undefined]', 'tr': '[Undefined]', 'wm_mask_file_path': '[Undefined]'}",
					"functional_mean": "{'args': '[Undefined]', 'environ': {}, 'mask': '[Undefined]', 'num_threads': 1, 'options': '-mean', 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ'}",
					"WhiteMatter_Functional_flirt": "{'angle_rep': '[Undefined]', 'apply_isoxfm': '[Undefined]', 'apply_xfm': True, 'args': '[Undefined]', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': '[Undefined]', 'coarse_search': '[Undefined]', 'cost': '[Undefined]', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'dof': '[Undefined]', 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_weight': '[Undefined]', 'interp': 'nearestneighbour', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': '[Undefined]', 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'schedule': '[Undefined]', 'searchr_x': '[Undefined]', 'searchr_y': '[Undefined]', 'searchr_z': '[Undefined]', 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}",
					"WhiteMatter_merge_masks": "{'axis': 'vstack', 'no_flatten': False, 'ravel_inputs': False}",
					"WhiteMatter_union_masks": "{'args': '[Undefined]', 'count': '[Undefined]', 'datum': '[Undefined]', 'dilate_inputs': '[Undefined]', 'dilate_results': '[Undefined]', 'environ': {}, 'fill_dirs': '[Undefined]', 'fill_holes': '[Undefined]', 'frac': '[Undefined]', 'inter': '[Undefined]', 'num_threads': 1, 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'union': '[Undefined]', 'verbose': '[Undefined]'}",
					"WhiteMatter_std": "{'args': '-nzstdev', 'environ': {}, 'num_threads': 1, 'options': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI'}",
					"WhiteMatter_standardized": "{'args': '[Undefined]', 'environ': {}, 'expr': 'a/b', 'in_file_c': '[Undefined]', 'num_threads': 1, 'other': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI', 'overwrite': '[Undefined]', 'single_idx': '[Undefined]', 'start_idx': '[Undefined]', 'stop_idx': '[Undefined]'}",
					"WhiteMatter_pc": "{'args': '-vmean -nscale', 'environ': {}, 'num_threads': 1, 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'pcs': 5, 'pcs_file': '[Undefined]'}",
					"CerebrospinalFluid_Functional_flirt": "{'angle_rep': '[Undefined]', 'apply_isoxfm': '[Undefined]', 'apply_xfm': True, 'args': '[Undefined]', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': '[Undefined]', 'coarse_search': '[Undefined]', 'cost': '[Undefined]', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'dof': '[Undefined]', 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_weight': '[Undefined]', 'interp': 'nearestneighbour', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': '[Undefined]', 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'schedule': '[Undefined]', 'searchr_x': '[Undefined]', 'searchr_y': '[Undefined]', 'searchr_z': '[Undefined]', 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}",
					"CerebrospinalFluid_merge_masks": "{'axis': 'vstack', 'no_flatten': False, 'ravel_inputs': False}",
					"CerebrospinalFluid_union_masks": "{'args': '[Undefined]', 'count': '[Undefined]', 'datum': '[Undefined]', 'dilate_inputs': '[Undefined]', 'dilate_results': '[Undefined]', 'environ': {}, 'fill_dirs': '[Undefined]', 'fill_holes': '[Undefined]', 'frac': '[Undefined]', 'inter': '[Undefined]', 'num_threads': 1, 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'union': '[Undefined]', 'verbose': '[Undefined]'}",
					"CerebrospinalFluid_std": "{'args': '-nzstdev', 'environ': {}, 'num_threads': 1, 'options': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI'}",
					"CerebrospinalFluid_standardized": "{'args': '[Undefined]', 'environ': {}, 'expr': 'a/b', 'in_file_c': '[Undefined]', 'num_threads': 1, 'other': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI', 'overwrite': '[Undefined]', 'single_idx': '[Undefined]', 'start_idx': '[Undefined]', 'stop_idx': '[Undefined]'}",
					"CerebrospinalFluid_pc": "{'args': '-vmean -nscale', 'environ': {}, 'num_threads': 1, 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'pcs': 5, 'pcs_file': '[Undefined]'}",
					"GlobalSignal_merge_masks": "{'axis': 'vstack', 'no_flatten': False, 'ravel_inputs': False}",
					"GlobalSignal_union_masks": "{'args': '[Undefined]', 'count': '[Undefined]', 'datum': '[Undefined]', 'dilate_inputs': '[Undefined]', 'dilate_results': '[Undefined]', 'environ': {}, 'fill_dirs': '[Undefined]', 'fill_holes': '[Undefined]', 'frac': '[Undefined]', 'inter': '[Undefined]', 'num_threads': 1, 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'union': '[Undefined]', 'verbose': '[Undefined]'}",
					"GlobalSignal_mean": "{'args': '-1Dformat', 'debug': '[Undefined]', 'environ': {}, 'format1D': '[Undefined]', 'format1DR': '[Undefined]', 'mask': '[Undefined]', 'mask_f2short': '[Undefined]', 'nobriklab': '[Undefined]', 'nomeanout': '[Undefined]', 'num_roi': '[Undefined]', 'out_file': '[Undefined]', 'quiet': False, 'roisel': '[Undefined]', 'stat': '[Undefined]', 'zerofill': '[Undefined]'}",
					"build_nuisance_regressors": "{'acompcor_file_path': '[Undefined]', 'censor_file_path': '[Undefined]', 'custom_file_paths': '[Undefined]', 'function_str': 'CPAC.nuisance.nuisance.gather_nuisance', 'grey_matter_summary_file_path': '[Undefined]', 'selector': {'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}, 'extraction_resolution': 'Functional'}, 'GlobalSignal': {'summary': {'filter': 'Mean', 'method': 'Mean'}}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}, 'extraction_resolution': 'Functional'}}, 'tcompcor_file_path': '[Undefined]'}",
					"outputspec": "{}"
				},
				"outputs": {
					"inputspec": "{'anat_to_func_linear_xfm_file_path': None, 'anat_to_mni_linear_xfm_file_path': None, 'anatomical_eroded_brain_mask_file_path': None, 'anatomical_file_path': None, 'creds_path': None, 'csf_mask_file_path': None, 'dl_dir': None, 'dvars_file_path': None, 'fd_j_file_path': None, 'fd_p_file_path': None, 'func_to_anat_linear_xfm_file_path': None, 'functional_brain_mask_file_path': None, 'functional_file_path': None, 'gm_mask_file_path': None, 'lat_ventricles_mask_file_path': None, 'mni_to_anat_linear_xfm_file_path': None, 'motion_parameters_file_path': None, 'selector': None, 'tr': None, 'wm_mask_file_path': None}",
					"functional_mean": "{'out_file': None}",
					"WhiteMatter_Functional_flirt": "{'out_file': None, 'out_log': None, 'out_matrix_file': None}",
					"WhiteMatter_merge_masks": "{'out': None}",
					"WhiteMatter_union_masks": "{'out_file': None}",
					"WhiteMatter_std": "{'out_file': None}",
					"WhiteMatter_standardized": "{'out_file': None}",
					"WhiteMatter_pc": "{'out_file': None, 'pcs_file': None}",
					"CerebrospinalFluid_Functional_flirt": "{'out_file': None, 'out_log': None, 'out_matrix_file': None}",
					"CerebrospinalFluid_merge_masks": "{'out': None}",
					"CerebrospinalFluid_union_masks": "{'out_file': None}",
					"CerebrospinalFluid_std": "{'out_file': None}",
					"CerebrospinalFluid_standardized": "{'out_file': None}",
					"CerebrospinalFluid_pc": "{'out_file': None, 'pcs_file': None}",
					"GlobalSignal_merge_masks": "{'out': None}",
					"GlobalSignal_union_masks": "{'out_file': None}",
					"GlobalSignal_mean": "{'out_file': None}",
					"build_nuisance_regressors": "{'censor_indices': None, 'out_file': None}",
					"outputspec": "{'censor_indices': None, 'regressors_file_path': None}"
				},
				"result": null,
				"nodes": [
					{
						"name": "inputspec",
						"type": "node",
						"inputs": {
							"selector": "[Undefined]",
							"functional_file_path": "[Undefined]",
							"anatomical_file_path": "[Undefined]",
							"anatomical_eroded_brain_mask_file_path": "[Undefined]",
							"gm_mask_file_path": "[Undefined]",
							"wm_mask_file_path": "[Undefined]",
							"csf_mask_file_path": "[Undefined]",
							"lat_ventricles_mask_file_path": "[Undefined]",
							"functional_brain_mask_file_path": "[Undefined]",
							"func_to_anat_linear_xfm_file_path": "[Undefined]",
							"anat_to_func_linear_xfm_file_path": "[Undefined]",
							"mni_to_anat_linear_xfm_file_path": "[Undefined]",
							"anat_to_mni_linear_xfm_file_path": "[Undefined]",
							"motion_parameters_file_path": "[Undefined]",
							"fd_j_file_path": "[Undefined]",
							"fd_p_file_path": "[Undefined]",
							"dvars_file_path": "[Undefined]",
							"creds_path": "[Undefined]",
							"dl_dir": "[Undefined]",
							"tr": "[Undefined]"
						},
						"outputs": {
							"selector": "[Undefined]",
							"functional_file_path": "[Undefined]",
							"anatomical_file_path": "[Undefined]",
							"anatomical_eroded_brain_mask_file_path": "[Undefined]",
							"gm_mask_file_path": "[Undefined]",
							"wm_mask_file_path": "[Undefined]",
							"csf_mask_file_path": "[Undefined]",
							"lat_ventricles_mask_file_path": "[Undefined]",
							"functional_brain_mask_file_path": "[Undefined]",
							"func_to_anat_linear_xfm_file_path": "[Undefined]",
							"anat_to_func_linear_xfm_file_path": "[Undefined]",
							"mni_to_anat_linear_xfm_file_path": "[Undefined]",
							"anat_to_mni_linear_xfm_file_path": "[Undefined]",
							"motion_parameters_file_path": "[Undefined]",
							"fd_j_file_path": "[Undefined]",
							"fd_p_file_path": "[Undefined]",
							"dvars_file_path": "[Undefined]",
							"creds_path": "[Undefined]",
							"dl_dir": "[Undefined]",
							"tr": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "functional_mean",
						"type": "node",
						"inputs": {
							"in_file": "[Undefined]",
							"out_file": "[Undefined]",
							"mask": "[Undefined]",
							"options": "-mean",
							"num_threads": "1",
							"outputtype": "NIFTI_GZ",
							"args": "[Undefined]",
							"environ": "{}"
						},
						"outputs": {
							"out_file": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "WhiteMatter_Functional_flirt",
						"type": "node",
						"inputs": {
							"in_file": "[Undefined]",
							"reference": "[Undefined]",
							"out_file": "[Undefined]",
							"out_matrix_file": "[Undefined]",
							"out_log": "[Undefined]",
							"in_matrix_file": "[Undefined]",
							"apply_xfm": "True",
							"apply_isoxfm": "[Undefined]",
							"datatype": "[Undefined]",
							"cost": "[Undefined]",
							"cost_func": "[Undefined]",
							"uses_qform": "[Undefined]",
							"display_init": "[Undefined]",
							"angle_rep": "[Undefined]",
							"interp": "nearestneighbour",
							"sinc_width": "[Undefined]",
							"sinc_window": "[Undefined]",
							"bins": "[Undefined]",
							"dof": "[Undefined]",
							"no_resample": "[Undefined]",
							"force_scaling": "[Undefined]",
							"min_sampling": "[Undefined]",
							"padding_size": "[Undefined]",
							"searchr_x": "[Undefined]",
							"searchr_y": "[Undefined]",
							"searchr_z": "[Undefined]",
							"no_search": "[Undefined]",
							"coarse_search": "[Undefined]",
							"fine_search": "[Undefined]",
							"schedule": "[Undefined]",
							"ref_weight": "[Undefined]",
							"in_weight": "[Undefined]",
							"no_clamp": "[Undefined]",
							"no_resample_blur": "[Undefined]",
							"rigid2D": "[Undefined]",
							"save_log": "[Undefined]",
							"verbose": "[Undefined]",
							"bgvalue": "[Undefined]",
							"wm_seg": "[Undefined]",
							"wmcoords": "[Undefined]",
							"wmnorms": "[Undefined]",
							"fieldmap": "[Undefined]",
							"fieldmapmask": "[Undefined]",
							"pedir": "[Undefined]",
							"echospacing": "[Undefined]",
							"bbrtype": "[Undefined]",
							"bbrslope": "[Undefined]",
							"output_type": "NIFTI_GZ",
							"args": "[Undefined]",
							"environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
						},
						"outputs": {
							"out_file": "[Undefined]",
							"out_matrix_file": "[Undefined]",
							"out_log": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "WhiteMatter_merge_masks",
						"type": "node",
						"inputs": {
							"axis": "vstack",
							"no_flatten": "False",
							"ravel_inputs": "False",
							"in1": "[Undefined]"
						},
						"outputs": {
							"out": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "WhiteMatter_union_masks",
						"type": "node",
						"inputs": {
							"in_files": "[Undefined]",
							"out_file": "[Undefined]",
							"count": "[Undefined]",
							"datum": "[Undefined]",
							"dilate_inputs": "[Undefined]",
							"dilate_results": "[Undefined]",
							"frac": "[Undefined]",
							"inter": "[Undefined]",
							"union": "[Undefined]",
							"fill_holes": "[Undefined]",
							"fill_dirs": "[Undefined]",
							"verbose": "[Undefined]",
							"num_threads": "1",
							"outputtype": "NIFTI_GZ",
							"args": "[Undefined]",
							"environ": "{}"
						},
						"outputs": {
							"out_file": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "WhiteMatter_std",
						"type": "node",
						"inputs": {
							"in_file": "[Undefined]",
							"out_file": "[Undefined]",
							"mask": "[Undefined]",
							"options": "[Undefined]",
							"num_threads": "1",
							"outputtype": "NIFTI",
							"args": "-nzstdev",
							"environ": "{}"
						},
						"outputs": {
							"out_file": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "WhiteMatter_standardized",
						"type": "node",
						"inputs": {
							"in_file_a": "[Undefined]",
							"in_file_b": "[Undefined]",
							"in_file_c": "[Undefined]",
							"out_file": "[Undefined]",
							"expr": "a/b",
							"start_idx": "[Undefined]",
							"stop_idx": "[Undefined]",
							"single_idx": "[Undefined]",
							"overwrite": "[Undefined]",
							"other": "[Undefined]",
							"num_threads": "1",
							"outputtype": "NIFTI",
							"args": "[Undefined]",
							"environ": "{}"
						},
						"outputs": {
							"out_file": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "WhiteMatter_pc",
						"type": "node",
						"inputs": {
							"in_file": "[Undefined]",
							"out_file": "[Undefined]",
							"mask": "[Undefined]",
							"pcs_file": "[Undefined]",
							"pcs": "5",
							"num_threads": "1",
							"outputtype": "NIFTI_GZ",
							"args": "-vmean -nscale",
							"environ": "{}"
						},
						"outputs": {
							"out_file": "[Undefined]",
							"pcs_file": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "CerebrospinalFluid_Functional_flirt",
						"type": "node",
						"inputs": {
							"in_file": "[Undefined]",
							"reference": "[Undefined]",
							"out_file": "[Undefined]",
							"out_matrix_file": "[Undefined]",
							"out_log": "[Undefined]",
							"in_matrix_file": "[Undefined]",
							"apply_xfm": "True",
							"apply_isoxfm": "[Undefined]",
							"datatype": "[Undefined]",
							"cost": "[Undefined]",
							"cost_func": "[Undefined]",
							"uses_qform": "[Undefined]",
							"display_init": "[Undefined]",
							"angle_rep": "[Undefined]",
							"interp": "nearestneighbour",
							"sinc_width": "[Undefined]",
							"sinc_window": "[Undefined]",
							"bins": "[Undefined]",
							"dof": "[Undefined]",
							"no_resample": "[Undefined]",
							"force_scaling": "[Undefined]",
							"min_sampling": "[Undefined]",
							"padding_size": "[Undefined]",
							"searchr_x": "[Undefined]",
							"searchr_y": "[Undefined]",
							"searchr_z": "[Undefined]",
							"no_search": "[Undefined]",
							"coarse_search": "[Undefined]",
							"fine_search": "[Undefined]",
							"schedule": "[Undefined]",
							"ref_weight": "[Undefined]",
							"in_weight": "[Undefined]",
							"no_clamp": "[Undefined]",
							"no_resample_blur": "[Undefined]",
							"rigid2D": "[Undefined]",
							"save_log": "[Undefined]",
							"verbose": "[Undefined]",
							"bgvalue": "[Undefined]",
							"wm_seg": "[Undefined]",
							"wmcoords": "[Undefined]",
							"wmnorms": "[Undefined]",
							"fieldmap": "[Undefined]",
							"fieldmapmask": "[Undefined]",
							"pedir": "[Undefined]",
							"echospacing": "[Undefined]",
							"bbrtype": "[Undefined]",
							"bbrslope": "[Undefined]",
							"output_type": "NIFTI_GZ",
							"args": "[Undefined]",
							"environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
						},
						"outputs": {
							"out_file": "[Undefined]",
							"out_matrix_file": "[Undefined]",
							"out_log": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "CerebrospinalFluid_merge_masks",
						"type": "node",
						"inputs": {
							"axis": "vstack",
							"no_flatten": "False",
							"ravel_inputs": "False",
							"in1": "[Undefined]"
						},
						"outputs": {
							"out": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "CerebrospinalFluid_union_masks",
						"type": "node",
						"inputs": {
							"in_files": "[Undefined]",
							"out_file": "[Undefined]",
							"count": "[Undefined]",
							"datum": "[Undefined]",
							"dilate_inputs": "[Undefined]",
							"dilate_results": "[Undefined]",
							"frac": "[Undefined]",
							"inter": "[Undefined]",
							"union": "[Undefined]",
							"fill_holes": "[Undefined]",
							"fill_dirs": "[Undefined]",
							"verbose": "[Undefined]",
							"num_threads": "1",
							"outputtype": "NIFTI_GZ",
							"args": "[Undefined]",
							"environ": "{}"
						},
						"outputs": {
							"out_file": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "CerebrospinalFluid_std",
						"type": "node",
						"inputs": {
							"in_file": "[Undefined]",
							"out_file": "[Undefined]",
							"mask": "[Undefined]",
							"options": "[Undefined]",
							"num_threads": "1",
							"outputtype": "NIFTI",
							"args": "-nzstdev",
							"environ": "{}"
						},
						"outputs": {
							"out_file": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "CerebrospinalFluid_standardized",
						"type": "node",
						"inputs": {
							"in_file_a": "[Undefined]",
							"in_file_b": "[Undefined]",
							"in_file_c": "[Undefined]",
							"out_file": "[Undefined]",
							"expr": "a/b",
							"start_idx": "[Undefined]",
							"stop_idx": "[Undefined]",
							"single_idx": "[Undefined]",
							"overwrite": "[Undefined]",
							"other": "[Undefined]",
							"num_threads": "1",
							"outputtype": "NIFTI",
							"args": "[Undefined]",
							"environ": "{}"
						},
						"outputs": {
							"out_file": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "CerebrospinalFluid_pc",
						"type": "node",
						"inputs": {
							"in_file": "[Undefined]",
							"out_file": "[Undefined]",
							"mask": "[Undefined]",
							"pcs_file": "[Undefined]",
							"pcs": "5",
							"num_threads": "1",
							"outputtype": "NIFTI_GZ",
							"args": "-vmean -nscale",
							"environ": "{}"
						},
						"outputs": {
							"out_file": "[Undefined]",
							"pcs_file": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "GlobalSignal_merge_masks",
						"type": "node",
						"inputs": {
							"axis": "vstack",
							"no_flatten": "False",
							"ravel_inputs": "False",
							"in1": "[Undefined]"
						},
						"outputs": {
							"out": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "GlobalSignal_union_masks",
						"type": "node",
						"inputs": {
							"in_files": "[Undefined]",
							"out_file": "[Undefined]",
							"count": "[Undefined]",
							"datum": "[Undefined]",
							"dilate_inputs": "[Undefined]",
							"dilate_results": "[Undefined]",
							"frac": "[Undefined]",
							"inter": "[Undefined]",
							"union": "[Undefined]",
							"fill_holes": "[Undefined]",
							"fill_dirs": "[Undefined]",
							"verbose": "[Undefined]",
							"num_threads": "1",
							"outputtype": "NIFTI_GZ",
							"args": "[Undefined]",
							"environ": "{}"
						},
						"outputs": {
							"out_file": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "GlobalSignal_mean",
						"type": "node",
						"inputs": {
							"in_file": "[Undefined]",
							"mask": "[Undefined]",
							"mask_file": "[Undefined]",
							"mask_f2short": "[Undefined]",
							"num_roi": "[Undefined]",
							"zerofill": "[Undefined]",
							"roisel": "[Undefined]",
							"debug": "[Undefined]",
							"quiet": "False",
							"nomeanout": "[Undefined]",
							"nobriklab": "[Undefined]",
							"format1D": "[Undefined]",
							"format1DR": "[Undefined]",
							"stat": "[Undefined]",
							"out_file": "[Undefined]",
							"args": "-1Dformat",
							"environ": "{}"
						},
						"outputs": {
							"out_file": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "build_nuisance_regressors",
						"type": "node",
						"inputs": {
							"function_str": "CPAC.nuisance.nuisance.gather_nuisance",
							"functional_file_path": "[Undefined]",
							"selector": "{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}, 'extraction_resolution': 'Functional'}, 'GlobalSignal': {'summary': {'filter': 'Mean', 'method': 'Mean'}}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}, 'extraction_resolution': 'Functional'}}",
							"grey_matter_summary_file_path": "[Undefined]",
							"white_matter_summary_file_path": "[Undefined]",
							"csf_summary_file_path": "[Undefined]",
							"acompcor_file_path": "[Undefined]",
							"tcompcor_file_path": "[Undefined]",
							"global_summary_file_path": "[Undefined]",
							"motion_parameters_file_path": "[Undefined]",
							"custom_file_paths": "[Undefined]",
							"censor_file_path": "[Undefined]"
						},
						"outputs": {
							"out_file": "[Undefined]",
							"censor_indices": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "outputspec",
						"type": "node",
						"inputs": {
							"regressors_file_path": "[Undefined]",
							"censor_indices": "[Undefined]"
						},
						"outputs": {
							"regressors_file_path": "[Undefined]",
							"censor_indices": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					}
				],
				"edges": [
					{
						"origin": "inputspec",
						"target": "functional_mean"
					},
					{
						"origin": "inputspec",
						"target": "WhiteMatter_Functional_flirt"
					},
					{
						"origin": "inputspec",
						"target": "WhiteMatter_std"
					},
					{
						"origin": "inputspec",
						"target": "WhiteMatter_standardized"
					},
					{
						"origin": "inputspec",
						"target": "CerebrospinalFluid_Functional_flirt"
					},
					{
						"origin": "inputspec",
						"target": "CerebrospinalFluid_std"
					},
					{
						"origin": "inputspec",
						"target": "CerebrospinalFluid_standardized"
					},
					{
						"origin": "inputspec",
						"target": "GlobalSignal_merge_masks"
					},
					{
						"origin": "inputspec",
						"target": "GlobalSignal_mean"
					},
					{
						"origin": "inputspec",
						"target": "build_nuisance_regressors"
					},
					{
						"origin": "functional_mean",
						"target": "WhiteMatter_Functional_flirt"
					},
					{
						"origin": "functional_mean",
						"target": "CerebrospinalFluid_Functional_flirt"
					},
					{
						"origin": "WhiteMatter_Functional_flirt",
						"target": "WhiteMatter_merge_masks"
					},
					{
						"origin": "WhiteMatter_merge_masks",
						"target": "WhiteMatter_union_masks"
					},
					{
						"origin": "WhiteMatter_union_masks",
						"target": "WhiteMatter_std"
					},
					{
						"origin": "WhiteMatter_union_masks",
						"target": "WhiteMatter_pc"
					},
					{
						"origin": "WhiteMatter_std",
						"target": "WhiteMatter_standardized"
					},
					{
						"origin": "WhiteMatter_standardized",
						"target": "WhiteMatter_pc"
					},
					{
						"origin": "WhiteMatter_pc",
						"target": "build_nuisance_regressors"
					},
					{
						"origin": "CerebrospinalFluid_Functional_flirt",
						"target": "CerebrospinalFluid_merge_masks"
					},
					{
						"origin": "CerebrospinalFluid_merge_masks",
						"target": "CerebrospinalFluid_union_masks"
					},
					{
						"origin": "CerebrospinalFluid_union_masks",
						"target": "CerebrospinalFluid_std"
					},
					{
						"origin": "CerebrospinalFluid_union_masks",
						"target": "CerebrospinalFluid_pc"
					},
					{
						"origin": "CerebrospinalFluid_std",
						"target": "CerebrospinalFluid_standardized"
					},
					{
						"origin": "CerebrospinalFluid_standardized",
						"target": "CerebrospinalFluid_pc"
					},
					{
						"origin": "CerebrospinalFluid_pc",
						"target": "build_nuisance_regressors"
					},
					{
						"origin": "GlobalSignal_merge_masks",
						"target": "GlobalSignal_union_masks"
					},
					{
						"origin": "GlobalSignal_union_masks",
						"target": "GlobalSignal_mean"
					},
					{
						"origin": "GlobalSignal_mean",
						"target": "build_nuisance_regressors"
					},
					{
						"origin": "build_nuisance_regressors",
						"target": "outputspec"
					}
				]
			},
			{
				"name": "anat_to_func_linear_xfm_Regressor_1_160",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"in_file2": "[Undefined]",
					"invert_xfm": "True",
					"concat_xfm": "[Undefined]",
					"fix_scale_skew": "[Undefined]",
					"out_file": "[Undefined]",
					"output_type": "NIFTI_GZ",
					"args": "[Undefined]",
					"environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "write_composite_invlinear_xfm",
				"type": "node",
				"inputs": {
					"dimension": "3",
					"input_image_type": "0",
					"input_image": "[Undefined]",
					"output_image": "from-template_to-T1w_mode-image_desc-linear_xfm.nii.gz",
					"out_postfix": "_trans",
					"reference_image": "[Undefined]",
					"interpolation": "Linear",
					"interpolation_parameters": "[Undefined]",
					"transforms": "[Undefined]",
					"invert_transform_flags": "[Undefined]",
					"default_value": "0.0",
					"print_out_composite_warp_file": "True",
					"float": "False",
					"num_threads": "1",
					"args": "[Undefined]",
					"environ": "{'NSLOTS': '1'}"
				},
				"outputs": {
					"output_image": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "write_composite_linear_xfm",
				"type": "node",
				"inputs": {
					"dimension": "3",
					"input_image_type": "0",
					"input_image": "[Undefined]",
					"output_image": "from-T1w_to-template_mode-image_desc-linear_xfm.nii.gz",
					"out_postfix": "_trans",
					"reference_image": "[Undefined]",
					"interpolation": "Linear",
					"interpolation_parameters": "[Undefined]",
					"transforms": "[Undefined]",
					"invert_transform_flags": "[Undefined]",
					"default_value": "0.0",
					"print_out_composite_warp_file": "True",
					"float": "False",
					"num_threads": "1",
					"args": "[Undefined]",
					"environ": "{'NSLOTS': '1'}"
				},
				"outputs": {
					"output_image": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "nuisance_regression_space-native_reg-Regressor_1_177",
				"type": "workflow",
				"inputs": {
					"inputspec": "{'dvars_file_path': '[Undefined]', 'fd_j_file_path': '[Undefined]', 'fd_p_file_path': '[Undefined]', 'functional_brain_mask_file_path': '[Undefined]', 'functional_file_path': '[Undefined]', 'regressor_file': '[Undefined]', 'selector': '[Undefined]'}",
					"nuisance_regression": "{'TR': '[Undefined]', 'args': '[Undefined]', 'automask': '[Undefined]', 'bandpass': '[Undefined]', 'blur': '[Undefined]', 'cenmode': '[Undefined]', 'censor': '[Undefined]', 'censortr': '[Undefined]', 'concat': '[Undefined]', 'dsort': '[Undefined]', 'environ': {}, 'noblock': '[Undefined]', 'norm': False, 'num_threads': 1, 'out_file': 'residuals.nii.gz', 'outputtype': 'NIFTI_GZ', 'polort': 2, 'stopband': '[Undefined]'}",
					"outputspec": "{}"
				},
				"outputs": {
					"inputspec": "{'dvars_file_path': None, 'fd_j_file_path': None, 'fd_p_file_path': None, 'functional_brain_mask_file_path': None, 'functional_file_path': None, 'regressor_file': None, 'selector': None}",
					"nuisance_regression": "{'out_file': None}",
					"outputspec": "{'residual_file_path': None}"
				},
				"result": null,
				"nodes": [
					{
						"name": "inputspec",
						"type": "node",
						"inputs": {
							"selector": "[Undefined]",
							"functional_file_path": "[Undefined]",
							"functional_brain_mask_file_path": "[Undefined]",
							"regressor_file": "[Undefined]",
							"fd_j_file_path": "[Undefined]",
							"fd_p_file_path": "[Undefined]",
							"dvars_file_path": "[Undefined]"
						},
						"outputs": {
							"selector": "[Undefined]",
							"functional_file_path": "[Undefined]",
							"functional_brain_mask_file_path": "[Undefined]",
							"regressor_file": "[Undefined]",
							"fd_j_file_path": "[Undefined]",
							"fd_p_file_path": "[Undefined]",
							"dvars_file_path": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "nuisance_regression",
						"type": "node",
						"inputs": {
							"in_file": "[Undefined]",
							"out_file": "residuals.nii.gz",
							"censor": "[Undefined]",
							"censortr": "[Undefined]",
							"cenmode": "[Undefined]",
							"concat": "[Undefined]",
							"noblock": "[Undefined]",
							"ort": "[Undefined]",
							"polort": "2",
							"dsort": "[Undefined]",
							"bandpass": "[Undefined]",
							"stopband": "[Undefined]",
							"TR": "[Undefined]",
							"mask": "[Undefined]",
							"automask": "[Undefined]",
							"blur": "[Undefined]",
							"norm": "False",
							"num_threads": "1",
							"outputtype": "NIFTI_GZ",
							"args": "[Undefined]",
							"environ": "{}"
						},
						"outputs": {
							"out_file": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "outputspec",
						"type": "node",
						"inputs": {
							"residual_file_path": "[Undefined]"
						},
						"outputs": {
							"residual_file_path": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					}
				],
				"edges": [
					{
						"origin": "inputspec",
						"target": "nuisance_regression"
					},
					{
						"origin": "nuisance_regression",
						"target": "outputspec"
					}
				]
			},
			{
				"name": "filtering_bold_and_regressors_space-native_reg-Regressor_1_177",
				"type": "workflow",
				"inputs": {
					"inputspec": "{'functional_brain_mask_file_path': '[Undefined]', 'functional_file_path': '[Undefined]', 'nuisance_selectors': {'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}, 'extraction_resolution': 'Functional'}, 'GlobalSignal': {'summary': {'filter': 'Mean', 'method': 'Mean'}}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}, 'extraction_resolution': 'Functional'}}, 'regressors_file_path': '[Undefined]', 'tr': '[Undefined]'}",
					"frequency_filter": "{'bandpass_freqs': [0.01, 0.1], 'function_str': 'CPAC.nuisance.bandpass.bandpass_voxels', 'sample_period': '[Undefined]'}",
					"outputspec": "{}"
				},
				"outputs": {
					"inputspec": "{'functional_brain_mask_file_path': None, 'functional_file_path': None, 'nuisance_selectors': None, 'regressors_file_path': None, 'tr': None}",
					"frequency_filter": "{'bandpassed_file': None, 'regressor_file': None}",
					"outputspec": "{'residual_file_path': None, 'residual_regressor': None}"
				},
				"result": null,
				"nodes": [
					{
						"name": "inputspec",
						"type": "node",
						"inputs": {
							"functional_file_path": "[Undefined]",
							"regressors_file_path": "[Undefined]",
							"functional_brain_mask_file_path": "[Undefined]",
							"nuisance_selectors": "{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}, 'extraction_resolution': 'Functional'}, 'GlobalSignal': {'summary': {'filter': 'Mean', 'method': 'Mean'}}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}, 'extraction_resolution': 'Functional'}}",
							"tr": "[Undefined]"
						},
						"outputs": {
							"functional_file_path": "[Undefined]",
							"regressors_file_path": "[Undefined]",
							"functional_brain_mask_file_path": "[Undefined]",
							"nuisance_selectors": "[Undefined]",
							"tr": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "frequency_filter",
						"type": "node",
						"inputs": {
							"function_str": "CPAC.nuisance.bandpass.bandpass_voxels",
							"realigned_file": "[Undefined]",
							"regressor_file": "[Undefined]",
							"bandpass_freqs": "[0.01, 0.1]",
							"sample_period": "[Undefined]"
						},
						"outputs": {
							"bandpassed_file": "[Undefined]",
							"regressor_file": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "outputspec",
						"type": "node",
						"inputs": {
							"residual_file_path": "[Undefined]",
							"residual_regressor": "[Undefined]"
						},
						"outputs": {
							"residual_file_path": "[Undefined]",
							"residual_regressor": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					}
				],
				"edges": [
					{
						"origin": "inputspec",
						"target": "frequency_filter"
					},
					{
						"origin": "frequency_filter",
						"target": "outputspec"
					}
				]
			},
			{
				"name": "warp_ts_to_T1template_201",
				"type": "workflow",
				"inputs": {
					"inputspec": "{'input_image': '[Undefined]', 'interpolation': 'LanczosWindowedSinc', 'reference': '[Undefined]', 'transform': '[Undefined]'}",
					"apply_warp_warp_ts_to_T1template_201": "{'args': '[Undefined]', 'default_value': 0.0, 'dimension': 3, 'environ': {'NSLOTS': '1'}, 'float': False, 'input_image_type': 3, 'interpolation_parameters': '[Undefined]', 'invert_transform_flags': '[Undefined]', 'num_threads': 1, 'out_postfix': '_trans', 'output_image': '[Undefined]', 'print_out_composite_warp_file': '[Undefined]'}",
					"interp_string": "{'function_str': \"def interpolation_string(interpolation, reg_tool):\\n    if reg_tool == 'ants':\\n        pass\\n    elif reg_tool == 'fsl':\\n        # translate to FSL\\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\\n        #          in C-PAC are now converted to .nii.gz\\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\\n    return interpolation\\n\", 'reg_tool': 'ants'}",
					"single_ants_xfm_to_list": "{'function_str': 'def single_ants_xfm_to_list(transform):\\n    transform_list = [transform]\\n    return transform_list\\n'}",
					"outputspec": "{}"
				},
				"outputs": {
					"inputspec": "{'input_image': None, 'interpolation': None, 'reference': None, 'transform': None}",
					"apply_warp_warp_ts_to_T1template_201": "{'output_image': None}",
					"interp_string": "{'interpolation': None}",
					"single_ants_xfm_to_list": "{'transform_list': None}",
					"outputspec": "{'output_image': None}"
				},
				"result": null,
				"nodes": [
					{
						"name": "inputspec",
						"type": "node",
						"inputs": {
							"input_image": "[Undefined]",
							"reference": "[Undefined]",
							"transform": "[Undefined]",
							"interpolation": "LanczosWindowedSinc"
						},
						"outputs": {
							"input_image": "[Undefined]",
							"reference": "[Undefined]",
							"transform": "[Undefined]",
							"interpolation": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "apply_warp_warp_ts_to_T1template_201",
						"type": "node",
						"inputs": {
							"dimension": "3",
							"input_image_type": "3",
							"input_image": "[Undefined]",
							"output_image": "[Undefined]",
							"out_postfix": "_trans",
							"reference_image": "[Undefined]",
							"interpolation": "Linear",
							"interpolation_parameters": "[Undefined]",
							"transforms": "[Undefined]",
							"invert_transform_flags": "[Undefined]",
							"default_value": "0.0",
							"print_out_composite_warp_file": "[Undefined]",
							"float": "False",
							"num_threads": "1",
							"args": "[Undefined]",
							"environ": "{'NSLOTS': '1'}"
						},
						"outputs": {
							"output_image": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "interp_string",
						"type": "node",
						"inputs": {
							"function_str": "def interpolation_string(interpolation, reg_tool):\n    if reg_tool == 'ants':\n        pass\n    elif reg_tool == 'fsl':\n        # translate to FSL\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\n        #          in C-PAC are now converted to .nii.gz\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\n    return interpolation\n",
							"interpolation": "[Undefined]",
							"reg_tool": "ants"
						},
						"outputs": {
							"interpolation": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "single_ants_xfm_to_list",
						"type": "node",
						"inputs": {
							"function_str": "def single_ants_xfm_to_list(transform):\n    transform_list = [transform]\n    return transform_list\n",
							"transform": "[Undefined]"
						},
						"outputs": {
							"transform_list": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "outputspec",
						"type": "node",
						"inputs": {
							"output_image": "[Undefined]"
						},
						"outputs": {
							"output_image": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					}
				],
				"edges": [
					{
						"origin": "inputspec",
						"target": "apply_warp_warp_ts_to_T1template_201"
					},
					{
						"origin": "inputspec",
						"target": "interp_string"
					},
					{
						"origin": "inputspec",
						"target": "single_ants_xfm_to_list"
					},
					{
						"origin": "apply_warp_warp_ts_to_T1template_201",
						"target": "outputspec"
					},
					{
						"origin": "interp_string",
						"target": "apply_warp_warp_ts_to_T1template_201"
					},
					{
						"origin": "single_ants_xfm_to_list",
						"target": "apply_warp_warp_ts_to_T1template_201"
					}
				]
			},
			{
				"name": "write_composite_xfm",
				"type": "node",
				"inputs": {
					"dimension": "3",
					"input_image_type": "0",
					"input_image": "[Undefined]",
					"output_image": "from-bold_to-template_mode-image_xfm.nii.gz",
					"out_postfix": "_trans",
					"reference_image": "[Undefined]",
					"interpolation": "LanczosWindowedSinc",
					"interpolation_parameters": "[Undefined]",
					"transforms": "[Undefined]",
					"invert_transform_flags": "[Undefined]",
					"default_value": "0.0",
					"print_out_composite_warp_file": "True",
					"float": "False",
					"num_threads": "1",
					"args": "[Undefined]",
					"environ": "{'NSLOTS': '1'}"
				},
				"outputs": {
					"output_image": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "warp_funcreg-sbref_to_T1wtemplate_205",
				"type": "workflow",
				"inputs": {
					"inputspec": "{'input_image': '[Undefined]', 'interpolation': 'NearestNeighbor', 'reference': '[Undefined]', 'transform': '[Undefined]'}",
					"apply_warp_warp_funcreg-sbref_to_T1wtemplate_205": "{'args': '[Undefined]', 'default_value': 0.0, 'dimension': 3, 'environ': {'NSLOTS': '1'}, 'float': False, 'input_image_type': '[Undefined]', 'interpolation_parameters': '[Undefined]', 'invert_transform_flags': '[Undefined]', 'num_threads': 1, 'out_postfix': '_trans', 'output_image': '[Undefined]', 'print_out_composite_warp_file': '[Undefined]'}",
					"interp_string": "{'function_str': \"def interpolation_string(interpolation, reg_tool):\\n    if reg_tool == 'ants':\\n        pass\\n    elif reg_tool == 'fsl':\\n        # translate to FSL\\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\\n        #          in C-PAC are now converted to .nii.gz\\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\\n    return interpolation\\n\", 'reg_tool': 'ants'}",
					"single_ants_xfm_to_list": "{'function_str': 'def single_ants_xfm_to_list(transform):\\n    transform_list = [transform]\\n    return transform_list\\n'}",
					"outputspec": "{}"
				},
				"outputs": {
					"inputspec": "{'input_image': None, 'interpolation': None, 'reference': None, 'transform': None}",
					"apply_warp_warp_funcreg-sbref_to_T1wtemplate_205": "{'output_image': None}",
					"interp_string": "{'interpolation': None}",
					"single_ants_xfm_to_list": "{'transform_list': None}",
					"outputspec": "{'output_image': None}"
				},
				"result": null,
				"nodes": [
					{
						"name": "inputspec",
						"type": "node",
						"inputs": {
							"input_image": "[Undefined]",
							"reference": "[Undefined]",
							"transform": "[Undefined]",
							"interpolation": "NearestNeighbor"
						},
						"outputs": {
							"input_image": "[Undefined]",
							"reference": "[Undefined]",
							"transform": "[Undefined]",
							"interpolation": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "apply_warp_warp_funcreg-sbref_to_T1wtemplate_205",
						"type": "node",
						"inputs": {
							"dimension": "3",
							"input_image_type": "[Undefined]",
							"input_image": "[Undefined]",
							"output_image": "[Undefined]",
							"out_postfix": "_trans",
							"reference_image": "[Undefined]",
							"interpolation": "Linear",
							"interpolation_parameters": "[Undefined]",
							"transforms": "[Undefined]",
							"invert_transform_flags": "[Undefined]",
							"default_value": "0.0",
							"print_out_composite_warp_file": "[Undefined]",
							"float": "False",
							"num_threads": "1",
							"args": "[Undefined]",
							"environ": "{'NSLOTS': '1'}"
						},
						"outputs": {
							"output_image": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "interp_string",
						"type": "node",
						"inputs": {
							"function_str": "def interpolation_string(interpolation, reg_tool):\n    if reg_tool == 'ants':\n        pass\n    elif reg_tool == 'fsl':\n        # translate to FSL\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\n        #          in C-PAC are now converted to .nii.gz\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\n    return interpolation\n",
							"interpolation": "[Undefined]",
							"reg_tool": "ants"
						},
						"outputs": {
							"interpolation": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "single_ants_xfm_to_list",
						"type": "node",
						"inputs": {
							"function_str": "def single_ants_xfm_to_list(transform):\n    transform_list = [transform]\n    return transform_list\n",
							"transform": "[Undefined]"
						},
						"outputs": {
							"transform_list": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "outputspec",
						"type": "node",
						"inputs": {
							"output_image": "[Undefined]"
						},
						"outputs": {
							"output_image": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					}
				],
				"edges": [
					{
						"origin": "inputspec",
						"target": "apply_warp_warp_funcreg-sbref_to_T1wtemplate_205"
					},
					{
						"origin": "inputspec",
						"target": "interp_string"
					},
					{
						"origin": "inputspec",
						"target": "single_ants_xfm_to_list"
					},
					{
						"origin": "apply_warp_warp_funcreg-sbref_to_T1wtemplate_205",
						"target": "outputspec"
					},
					{
						"origin": "interp_string",
						"target": "apply_warp_warp_funcreg-sbref_to_T1wtemplate_205"
					},
					{
						"origin": "single_ants_xfm_to_list",
						"target": "apply_warp_warp_funcreg-sbref_to_T1wtemplate_205"
					}
				]
			},
			{
				"name": "warp_funcreg-mask_to_T1wtemplate_209",
				"type": "workflow",
				"inputs": {
					"inputspec": "{'input_image': '[Undefined]', 'interpolation': 'NearestNeighbor', 'reference': '[Undefined]', 'transform': '[Undefined]'}",
					"apply_warp_warp_funcreg-mask_to_T1wtemplate_209": "{'args': '[Undefined]', 'default_value': 0.0, 'dimension': 3, 'environ': {'NSLOTS': '1'}, 'float': False, 'input_image_type': '[Undefined]', 'interpolation_parameters': '[Undefined]', 'invert_transform_flags': '[Undefined]', 'num_threads': 1, 'out_postfix': '_trans', 'output_image': '[Undefined]', 'print_out_composite_warp_file': '[Undefined]'}",
					"interp_string": "{'function_str': \"def interpolation_string(interpolation, reg_tool):\\n    if reg_tool == 'ants':\\n        pass\\n    elif reg_tool == 'fsl':\\n        # translate to FSL\\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\\n        #          in C-PAC are now converted to .nii.gz\\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\\n    return interpolation\\n\", 'reg_tool': 'ants'}",
					"single_ants_xfm_to_list": "{'function_str': 'def single_ants_xfm_to_list(transform):\\n    transform_list = [transform]\\n    return transform_list\\n'}",
					"outputspec": "{}"
				},
				"outputs": {
					"inputspec": "{'input_image': None, 'interpolation': None, 'reference': None, 'transform': None}",
					"apply_warp_warp_funcreg-mask_to_T1wtemplate_209": "{'output_image': None}",
					"interp_string": "{'interpolation': None}",
					"single_ants_xfm_to_list": "{'transform_list': None}",
					"outputspec": "{'output_image': None}"
				},
				"result": null,
				"nodes": [
					{
						"name": "inputspec",
						"type": "node",
						"inputs": {
							"input_image": "[Undefined]",
							"reference": "[Undefined]",
							"transform": "[Undefined]",
							"interpolation": "NearestNeighbor"
						},
						"outputs": {
							"input_image": "[Undefined]",
							"reference": "[Undefined]",
							"transform": "[Undefined]",
							"interpolation": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "apply_warp_warp_funcreg-mask_to_T1wtemplate_209",
						"type": "node",
						"inputs": {
							"dimension": "3",
							"input_image_type": "[Undefined]",
							"input_image": "[Undefined]",
							"output_image": "[Undefined]",
							"out_postfix": "_trans",
							"reference_image": "[Undefined]",
							"interpolation": "Linear",
							"interpolation_parameters": "[Undefined]",
							"transforms": "[Undefined]",
							"invert_transform_flags": "[Undefined]",
							"default_value": "0.0",
							"print_out_composite_warp_file": "[Undefined]",
							"float": "False",
							"num_threads": "1",
							"args": "[Undefined]",
							"environ": "{'NSLOTS': '1'}"
						},
						"outputs": {
							"output_image": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "interp_string",
						"type": "node",
						"inputs": {
							"function_str": "def interpolation_string(interpolation, reg_tool):\n    if reg_tool == 'ants':\n        pass\n    elif reg_tool == 'fsl':\n        # translate to FSL\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\n        #          in C-PAC are now converted to .nii.gz\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\n    return interpolation\n",
							"interpolation": "[Undefined]",
							"reg_tool": "ants"
						},
						"outputs": {
							"interpolation": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "single_ants_xfm_to_list",
						"type": "node",
						"inputs": {
							"function_str": "def single_ants_xfm_to_list(transform):\n    transform_list = [transform]\n    return transform_list\n",
							"transform": "[Undefined]"
						},
						"outputs": {
							"transform_list": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "outputspec",
						"type": "node",
						"inputs": {
							"output_image": "[Undefined]"
						},
						"outputs": {
							"output_image": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					}
				],
				"edges": [
					{
						"origin": "inputspec",
						"target": "apply_warp_warp_funcreg-mask_to_T1wtemplate_209"
					},
					{
						"origin": "inputspec",
						"target": "interp_string"
					},
					{
						"origin": "inputspec",
						"target": "single_ants_xfm_to_list"
					},
					{
						"origin": "apply_warp_warp_funcreg-mask_to_T1wtemplate_209",
						"target": "outputspec"
					},
					{
						"origin": "interp_string",
						"target": "apply_warp_warp_funcreg-mask_to_T1wtemplate_209"
					},
					{
						"origin": "single_ants_xfm_to_list",
						"target": "apply_warp_warp_funcreg-mask_to_T1wtemplate_209"
					}
				]
			},
			{
				"name": "warp_deriv-mask_to_T1wtemplate_213",
				"type": "workflow",
				"inputs": {
					"inputspec": "{'input_image': '[Undefined]', 'interpolation': 'NearestNeighbor', 'reference': '[Undefined]', 'transform': '[Undefined]'}",
					"apply_warp_warp_deriv-mask_to_T1wtemplate_213": "{'args': '[Undefined]', 'default_value': 0.0, 'dimension': 3, 'environ': {'NSLOTS': '1'}, 'float': False, 'input_image_type': '[Undefined]', 'interpolation_parameters': '[Undefined]', 'invert_transform_flags': '[Undefined]', 'num_threads': 1, 'out_postfix': '_trans', 'output_image': '[Undefined]', 'print_out_composite_warp_file': '[Undefined]'}",
					"interp_string": "{'function_str': \"def interpolation_string(interpolation, reg_tool):\\n    if reg_tool == 'ants':\\n        pass\\n    elif reg_tool == 'fsl':\\n        # translate to FSL\\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\\n        #          in C-PAC are now converted to .nii.gz\\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\\n    return interpolation\\n\", 'reg_tool': 'ants'}",
					"single_ants_xfm_to_list": "{'function_str': 'def single_ants_xfm_to_list(transform):\\n    transform_list = [transform]\\n    return transform_list\\n'}",
					"outputspec": "{}"
				},
				"outputs": {
					"inputspec": "{'input_image': None, 'interpolation': None, 'reference': None, 'transform': None}",
					"apply_warp_warp_deriv-mask_to_T1wtemplate_213": "{'output_image': None}",
					"interp_string": "{'interpolation': None}",
					"single_ants_xfm_to_list": "{'transform_list': None}",
					"outputspec": "{'output_image': None}"
				},
				"result": null,
				"nodes": [
					{
						"name": "inputspec",
						"type": "node",
						"inputs": {
							"input_image": "[Undefined]",
							"reference": "[Undefined]",
							"transform": "[Undefined]",
							"interpolation": "NearestNeighbor"
						},
						"outputs": {
							"input_image": "[Undefined]",
							"reference": "[Undefined]",
							"transform": "[Undefined]",
							"interpolation": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "apply_warp_warp_deriv-mask_to_T1wtemplate_213",
						"type": "node",
						"inputs": {
							"dimension": "3",
							"input_image_type": "[Undefined]",
							"input_image": "[Undefined]",
							"output_image": "[Undefined]",
							"out_postfix": "_trans",
							"reference_image": "[Undefined]",
							"interpolation": "Linear",
							"interpolation_parameters": "[Undefined]",
							"transforms": "[Undefined]",
							"invert_transform_flags": "[Undefined]",
							"default_value": "0.0",
							"print_out_composite_warp_file": "[Undefined]",
							"float": "False",
							"num_threads": "1",
							"args": "[Undefined]",
							"environ": "{'NSLOTS': '1'}"
						},
						"outputs": {
							"output_image": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "interp_string",
						"type": "node",
						"inputs": {
							"function_str": "def interpolation_string(interpolation, reg_tool):\n    if reg_tool == 'ants':\n        pass\n    elif reg_tool == 'fsl':\n        # translate to FSL\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\n        #          in C-PAC are now converted to .nii.gz\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\n    return interpolation\n",
							"interpolation": "[Undefined]",
							"reg_tool": "ants"
						},
						"outputs": {
							"interpolation": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "single_ants_xfm_to_list",
						"type": "node",
						"inputs": {
							"function_str": "def single_ants_xfm_to_list(transform):\n    transform_list = [transform]\n    return transform_list\n",
							"transform": "[Undefined]"
						},
						"outputs": {
							"transform_list": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "outputspec",
						"type": "node",
						"inputs": {
							"output_image": "[Undefined]"
						},
						"outputs": {
							"output_image": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					}
				],
				"edges": [
					{
						"origin": "inputspec",
						"target": "apply_warp_warp_deriv-mask_to_T1wtemplate_213"
					},
					{
						"origin": "inputspec",
						"target": "interp_string"
					},
					{
						"origin": "inputspec",
						"target": "single_ants_xfm_to_list"
					},
					{
						"origin": "apply_warp_warp_deriv-mask_to_T1wtemplate_213",
						"target": "outputspec"
					},
					{
						"origin": "interp_string",
						"target": "apply_warp_warp_deriv-mask_to_T1wtemplate_213"
					},
					{
						"origin": "single_ants_xfm_to_list",
						"target": "apply_warp_warp_deriv-mask_to_T1wtemplate_213"
					}
				]
			},
			{
				"name": "resampled_T1w-brain-template-deriv",
				"type": "node",
				"inputs": {
					"function_str": "CPAC.utils.datasource.resolve_resolution",
					"resolution": "2mm",
					"template": "/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz",
					"template_name": "T1w-brain-template-deriv",
					"tag": "func_derivative_outputs"
				},
				"outputs": {
					"resampled_template": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "qc_snr_217",
				"type": "workflow",
				"inputs": {
					"inputspec": "{'anatomical_brain': '[Undefined]', 'functional_brain_mask': '[Undefined]', 'functional_preprocessed': '[Undefined]', 'functional_to_anat_linear_xfm': '[Undefined]', 'mean_functional_in_anat': '[Undefined]'}",
					"std_dev": "{'args': '-stdev', 'environ': {}, 'num_threads': 1, 'options': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ'}",
					"std_dev_anat": "{'abswarp': '[Undefined]', 'args': '[Undefined]', 'datatype': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'field_file': '[Undefined]', 'interp': 'trilinear', 'mask_file': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'relwarp': '[Undefined]', 'superlevel': '[Undefined]', 'supersample': '[Undefined]'}",
					"snr": "{'args': '[Undefined]', 'environ': {}, 'expr': 'b/a', 'in_file_c': '[Undefined]', 'num_threads': 1, 'other': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'overwrite': '[Undefined]', 'single_idx': '[Undefined]', 'start_idx': '[Undefined]', 'stop_idx': '[Undefined]'}",
					"snr_val": "{'function_str': 'CPAC.qc.utils.cal_snr_val'}",
					"hist_snr": "{'function_str': 'CPAC.qc.utils.gen_histogram', 'measure': 'snr'}",
					"dp_snr": "{'function_str': 'CPAC.qc.utils.drop_percent', 'percent': 99}",
					"montage_snr": "{'inputspec': {'overlay': '[Undefined]', 'underlay': '[Undefined]'}, 'resample_u': {'function_str': 'CPAC.qc.utils.resample_1mm'}, 'outputspec': {}, 'resample_o': {'function_str': 'CPAC.qc.utils.resample_1mm'}, 'montage_a': {'cbar_name': 'red_to_blue', 'function_str': 'CPAC.qc.utils.montage_axial', 'png_name': 'snr_a.png'}, 'montage_s': {'cbar_name': 'red_to_blue', 'function_str': 'CPAC.qc.utils.montage_sagittal', 'png_name': 'snr_s.png'}}",
					"outputspec": "{}"
				},
				"outputs": {
					"inputspec": "{'anatomical_brain': None, 'functional_brain_mask': None, 'functional_preprocessed': None, 'functional_to_anat_linear_xfm': None, 'mean_functional_in_anat': None}",
					"std_dev": "{'out_file': None}",
					"std_dev_anat": "{'out_file': None}",
					"snr": "{'out_file': None}",
					"snr_val": "{'snr_storefl': None}",
					"hist_snr": "{'hist_path': None}",
					"dp_snr": "{'modified_measure_file': None}",
					"montage_snr": "{'inputspec': {'overlay': None, 'underlay': None}, 'resample_u': {'new_fname': None}, 'outputspec': {'axial_png': None, 'resampled_overlay': None, 'resampled_underlay': None, 'sagittal_png': None}, 'resample_o': {'new_fname': None}, 'montage_a': {'png_name': None}, 'montage_s': {'png_name': None}}",
					"outputspec": "{'snr_axial_image': None, 'snr_histogram_image': None, 'snr_mean': None, 'snr_sagittal_image': None}"
				},
				"result": null,
				"nodes": [
					{
						"name": "inputspec",
						"type": "node",
						"inputs": {
							"functional_preprocessed": "[Undefined]",
							"functional_brain_mask": "[Undefined]",
							"functional_to_anat_linear_xfm": "[Undefined]",
							"anatomical_brain": "[Undefined]",
							"mean_functional_in_anat": "[Undefined]"
						},
						"outputs": {
							"functional_preprocessed": "[Undefined]",
							"functional_brain_mask": "[Undefined]",
							"functional_to_anat_linear_xfm": "[Undefined]",
							"anatomical_brain": "[Undefined]",
							"mean_functional_in_anat": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "std_dev",
						"type": "node",
						"inputs": {
							"in_file": "[Undefined]",
							"out_file": "[Undefined]",
							"mask": "[Undefined]",
							"options": "[Undefined]",
							"num_threads": "1",
							"outputtype": "NIFTI_GZ",
							"args": "-stdev",
							"environ": "{}"
						},
						"outputs": {
							"out_file": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "std_dev_anat",
						"type": "node",
						"inputs": {
							"in_file": "[Undefined]",
							"out_file": "[Undefined]",
							"ref_file": "[Undefined]",
							"field_file": "[Undefined]",
							"abswarp": "[Undefined]",
							"relwarp": "[Undefined]",
							"datatype": "[Undefined]",
							"supersample": "[Undefined]",
							"superlevel": "[Undefined]",
							"premat": "[Undefined]",
							"postmat": "[Undefined]",
							"mask_file": "[Undefined]",
							"interp": "trilinear",
							"output_type": "NIFTI_GZ",
							"args": "[Undefined]",
							"environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
						},
						"outputs": {
							"out_file": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "snr",
						"type": "node",
						"inputs": {
							"in_file_a": "[Undefined]",
							"in_file_b": "[Undefined]",
							"in_file_c": "[Undefined]",
							"out_file": "[Undefined]",
							"expr": "b/a",
							"start_idx": "[Undefined]",
							"stop_idx": "[Undefined]",
							"single_idx": "[Undefined]",
							"overwrite": "[Undefined]",
							"other": "[Undefined]",
							"num_threads": "1",
							"outputtype": "NIFTI_GZ",
							"args": "[Undefined]",
							"environ": "{}"
						},
						"outputs": {
							"out_file": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "snr_val",
						"type": "node",
						"inputs": {
							"function_str": "CPAC.qc.utils.cal_snr_val",
							"measure_file": "[Undefined]"
						},
						"outputs": {
							"snr_storefl": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "hist_snr",
						"type": "node",
						"inputs": {
							"function_str": "CPAC.qc.utils.gen_histogram",
							"measure_file": "[Undefined]",
							"measure": "snr"
						},
						"outputs": {
							"hist_path": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "dp_snr",
						"type": "node",
						"inputs": {
							"function_str": "CPAC.qc.utils.drop_percent",
							"measure_file": "[Undefined]",
							"percent": "99"
						},
						"outputs": {
							"modified_measure_file": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "montage_snr",
						"type": "workflow",
						"inputs": {
							"inputspec": "{'overlay': '[Undefined]', 'underlay': '[Undefined]'}",
							"resample_u": "{'function_str': 'CPAC.qc.utils.resample_1mm'}",
							"outputspec": "{}",
							"resample_o": "{'function_str': 'CPAC.qc.utils.resample_1mm'}",
							"montage_a": "{'cbar_name': 'red_to_blue', 'function_str': 'CPAC.qc.utils.montage_axial', 'png_name': 'snr_a.png'}",
							"montage_s": "{'cbar_name': 'red_to_blue', 'function_str': 'CPAC.qc.utils.montage_sagittal', 'png_name': 'snr_s.png'}"
						},
						"outputs": {
							"inputspec": "{'overlay': None, 'underlay': None}",
							"resample_u": "{'new_fname': None}",
							"outputspec": "{'axial_png': None, 'resampled_overlay': None, 'resampled_underlay': None, 'sagittal_png': None}",
							"resample_o": "{'new_fname': None}",
							"montage_a": "{'png_name': None}",
							"montage_s": "{'png_name': None}"
						},
						"result": null,
						"nodes": [
							{
								"name": "inputspec",
								"type": "node",
								"inputs": {
									"underlay": "[Undefined]",
									"overlay": "[Undefined]"
								},
								"outputs": {
									"underlay": "[Undefined]",
									"overlay": "[Undefined]"
								},
								"result": null,
								"nodes": [],
								"edges": []
							},
							{
								"name": "resample_u",
								"type": "node",
								"inputs": {
									"function_str": "CPAC.qc.utils.resample_1mm",
									"file_": "[Undefined]"
								},
								"outputs": {
									"new_fname": "[Undefined]"
								},
								"result": null,
								"nodes": [],
								"edges": []
							},
							{
								"name": "outputspec",
								"type": "node",
								"inputs": {
									"axial_png": "[Undefined]",
									"sagittal_png": "[Undefined]",
									"resampled_underlay": "[Undefined]",
									"resampled_overlay": "[Undefined]"
								},
								"outputs": {
									"axial_png": "[Undefined]",
									"sagittal_png": "[Undefined]",
									"resampled_underlay": "[Undefined]",
									"resampled_overlay": "[Undefined]"
								},
								"result": null,
								"nodes": [],
								"edges": []
							},
							{
								"name": "resample_o",
								"type": "node",
								"inputs": {
									"function_str": "CPAC.qc.utils.resample_1mm",
									"file_": "[Undefined]"
								},
								"outputs": {
									"new_fname": "[Undefined]"
								},
								"result": null,
								"nodes": [],
								"edges": []
							},
							{
								"name": "montage_a",
								"type": "node",
								"inputs": {
									"function_str": "CPAC.qc.utils.montage_axial",
									"overlay": "[Undefined]",
									"underlay": "[Undefined]",
									"png_name": "snr_a.png",
									"cbar_name": "red_to_blue"
								},
								"outputs": {
									"png_name": "[Undefined]"
								},
								"result": null,
								"nodes": [],
								"edges": []
							},
							{
								"name": "montage_s",
								"type": "node",
								"inputs": {
									"function_str": "CPAC.qc.utils.montage_sagittal",
									"overlay": "[Undefined]",
									"underlay": "[Undefined]",
									"png_name": "snr_s.png",
									"cbar_name": "red_to_blue"
								},
								"outputs": {
									"png_name": "[Undefined]"
								},
								"result": null,
								"nodes": [],
								"edges": []
							}
						],
						"edges": [
							{
								"origin": "inputspec",
								"target": "resample_u"
							},
							{
								"origin": "inputspec",
								"target": "resample_o"
							},
							{
								"origin": "resample_u",
								"target": "outputspec"
							},
							{
								"origin": "resample_u",
								"target": "montage_a"
							},
							{
								"origin": "resample_u",
								"target": "montage_s"
							},
							{
								"origin": "resample_o",
								"target": "outputspec"
							},
							{
								"origin": "resample_o",
								"target": "montage_a"
							},
							{
								"origin": "resample_o",
								"target": "montage_s"
							},
							{
								"origin": "montage_a",
								"target": "outputspec"
							},
							{
								"origin": "montage_s",
								"target": "outputspec"
							}
						]
					},
					{
						"name": "outputspec",
						"type": "node",
						"inputs": {
							"snr_axial_image": "[Undefined]",
							"snr_sagittal_image": "[Undefined]",
							"snr_histogram_image": "[Undefined]",
							"snr_mean": "[Undefined]"
						},
						"outputs": {
							"snr_axial_image": "[Undefined]",
							"snr_sagittal_image": "[Undefined]",
							"snr_histogram_image": "[Undefined]",
							"snr_mean": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					}
				],
				"edges": [
					{
						"origin": "inputspec",
						"target": "std_dev"
					},
					{
						"origin": "inputspec",
						"target": "std_dev_anat"
					},
					{
						"origin": "inputspec",
						"target": "snr"
					},
					{
						"origin": "inputspec",
						"target": "montage_snr"
					},
					{
						"origin": "std_dev",
						"target": "std_dev_anat"
					},
					{
						"origin": "std_dev_anat",
						"target": "snr"
					},
					{
						"origin": "snr",
						"target": "snr_val"
					},
					{
						"origin": "snr",
						"target": "hist_snr"
					},
					{
						"origin": "snr",
						"target": "dp_snr"
					},
					{
						"origin": "snr_val",
						"target": "outputspec"
					},
					{
						"origin": "hist_snr",
						"target": "outputspec"
					},
					{
						"origin": "dp_snr",
						"target": "montage_snr"
					},
					{
						"origin": "montage_snr",
						"target": "outputspec"
					}
				]
			},
			{
				"name": "anat_edge_226",
				"type": "node",
				"inputs": {
					"function_str": "CPAC.qc.qc.afni_Edge3",
					"in_file": "[Undefined]"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "montage_anat_226",
				"type": "workflow",
				"inputs": {
					"inputspec": "{'overlay': '[Undefined]', 'underlay': '[Undefined]'}",
					"resample_u": "{'function_str': 'CPAC.qc.utils.resample_1mm'}",
					"outputspec": "{}",
					"resample_o": "{'function_str': 'CPAC.qc.utils.resample_1mm'}",
					"montage_a": "{'cbar_name': 'red', 'function_str': 'CPAC.qc.utils.montage_axial', 'png_name': 't1_edge_on_mean_func_in_t1_a.png'}",
					"montage_s": "{'cbar_name': 'red', 'function_str': 'CPAC.qc.utils.montage_sagittal', 'png_name': 't1_edge_on_mean_func_in_t1_s.png'}"
				},
				"outputs": {
					"inputspec": "{'overlay': None, 'underlay': None}",
					"resample_u": "{'new_fname': None}",
					"outputspec": "{'axial_png': None, 'resampled_overlay': None, 'resampled_underlay': None, 'sagittal_png': None}",
					"resample_o": "{'new_fname': None}",
					"montage_a": "{'png_name': None}",
					"montage_s": "{'png_name': None}"
				},
				"result": null,
				"nodes": [
					{
						"name": "inputspec",
						"type": "node",
						"inputs": {
							"underlay": "[Undefined]",
							"overlay": "[Undefined]"
						},
						"outputs": {
							"underlay": "[Undefined]",
							"overlay": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "resample_u",
						"type": "node",
						"inputs": {
							"function_str": "CPAC.qc.utils.resample_1mm",
							"file_": "[Undefined]"
						},
						"outputs": {
							"new_fname": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "outputspec",
						"type": "node",
						"inputs": {
							"axial_png": "[Undefined]",
							"sagittal_png": "[Undefined]",
							"resampled_underlay": "[Undefined]",
							"resampled_overlay": "[Undefined]"
						},
						"outputs": {
							"axial_png": "[Undefined]",
							"sagittal_png": "[Undefined]",
							"resampled_underlay": "[Undefined]",
							"resampled_overlay": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "resample_o",
						"type": "node",
						"inputs": {
							"function_str": "CPAC.qc.utils.resample_1mm",
							"file_": "[Undefined]"
						},
						"outputs": {
							"new_fname": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "montage_a",
						"type": "node",
						"inputs": {
							"function_str": "CPAC.qc.utils.montage_axial",
							"overlay": "[Undefined]",
							"underlay": "[Undefined]",
							"png_name": "t1_edge_on_mean_func_in_t1_a.png",
							"cbar_name": "red"
						},
						"outputs": {
							"png_name": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "montage_s",
						"type": "node",
						"inputs": {
							"function_str": "CPAC.qc.utils.montage_sagittal",
							"overlay": "[Undefined]",
							"underlay": "[Undefined]",
							"png_name": "t1_edge_on_mean_func_in_t1_s.png",
							"cbar_name": "red"
						},
						"outputs": {
							"png_name": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					}
				],
				"edges": [
					{
						"origin": "inputspec",
						"target": "resample_u"
					},
					{
						"origin": "inputspec",
						"target": "resample_o"
					},
					{
						"origin": "resample_u",
						"target": "outputspec"
					},
					{
						"origin": "resample_u",
						"target": "montage_a"
					},
					{
						"origin": "resample_u",
						"target": "montage_s"
					},
					{
						"origin": "resample_o",
						"target": "outputspec"
					},
					{
						"origin": "resample_o",
						"target": "montage_a"
					},
					{
						"origin": "resample_o",
						"target": "montage_s"
					},
					{
						"origin": "montage_a",
						"target": "outputspec"
					},
					{
						"origin": "montage_s",
						"target": "outputspec"
					}
				]
			},
			{
				"name": "qc_motion_114",
				"type": "workflow",
				"inputs": {
					"inputspec": "{'motion_parameters': '[Undefined]'}",
					"motion_plot": "{'function_str': 'CPAC.qc.utils.gen_motion_plt'}",
					"outputspec": "{}"
				},
				"outputs": {
					"inputspec": "{'motion_parameters': None}",
					"motion_plot": "{'rotation_plot': None, 'translation_plot': None}",
					"outputspec": "{'motion_rotation_plot': None, 'motion_translation_plot': None}"
				},
				"result": null,
				"nodes": [
					{
						"name": "inputspec",
						"type": "node",
						"inputs": {
							"motion_parameters": "[Undefined]"
						},
						"outputs": {
							"motion_parameters": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "motion_plot",
						"type": "node",
						"inputs": {
							"function_str": "CPAC.qc.utils.gen_motion_plt",
							"motion_parameters": "[Undefined]"
						},
						"outputs": {
							"translation_plot": "[Undefined]",
							"rotation_plot": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "outputspec",
						"type": "node",
						"inputs": {
							"motion_translation_plot": "[Undefined]",
							"motion_rotation_plot": "[Undefined]"
						},
						"outputs": {
							"motion_translation_plot": "[Undefined]",
							"motion_rotation_plot": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					}
				],
				"edges": [
					{
						"origin": "inputspec",
						"target": "motion_plot"
					},
					{
						"origin": "motion_plot",
						"target": "outputspec"
					}
				]
			},
			{
				"name": "qc_fd_135",
				"type": "workflow",
				"inputs": {
					"inputspec": "{'excluded_volumes': '[Undefined]', 'fd': '[Undefined]'}",
					"fd_plot": "{'function_str': 'CPAC.qc.utils.gen_plot_png', 'measure': 'FD'}",
					"outputspec": "{}"
				},
				"outputs": {
					"inputspec": "{'excluded_volumes': None, 'fd': None}",
					"fd_plot": "{'hist_path': None}",
					"outputspec": "{'fd_histogram_plot': None}"
				},
				"result": null,
				"nodes": [
					{
						"name": "inputspec",
						"type": "node",
						"inputs": {
							"fd": "[Undefined]",
							"excluded_volumes": "[Undefined]"
						},
						"outputs": {
							"fd": "[Undefined]",
							"excluded_volumes": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "fd_plot",
						"type": "node",
						"inputs": {
							"function_str": "CPAC.qc.utils.gen_plot_png",
							"arr": "[Undefined]",
							"measure": "FD",
							"ex_vol": "[Undefined]"
						},
						"outputs": {
							"hist_path": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "outputspec",
						"type": "node",
						"inputs": {
							"fd_histogram_plot": "[Undefined]"
						},
						"outputs": {
							"fd_histogram_plot": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					}
				],
				"edges": [
					{
						"origin": "inputspec",
						"target": "fd_plot"
					},
					{
						"origin": "fd_plot",
						"target": "outputspec"
					}
				]
			},
			{
				"name": "qc_skullstrip_233",
				"type": "workflow",
				"inputs": {
					"inputspec": "{'anatomical_brain': '[Undefined]', 'anatomical_reorient': '[Undefined]'}",
					"skull_edge": "{'function_str': 'CPAC.qc.qc.afni_Edge3'}",
					"montage_skull": "{'inputspec': {'overlay': '[Undefined]', 'underlay': '[Undefined]'}, 'resample_u': {'function_str': 'CPAC.qc.utils.resample_1mm'}, 'outputspec': {}, 'resample_o': {'function_str': 'CPAC.qc.utils.resample_1mm'}, 'montage_a': {'cbar_name': 'red', 'function_str': 'CPAC.qc.utils.montage_axial', 'png_name': 'skull_vis_a.png'}, 'montage_s': {'cbar_name': 'red', 'function_str': 'CPAC.qc.utils.montage_sagittal', 'png_name': 'skull_vis_s.png'}}",
					"outputspec": "{}"
				},
				"outputs": {
					"inputspec": "{'anatomical_brain': None, 'anatomical_reorient': None}",
					"skull_edge": "{'out_file': None}",
					"montage_skull": "{'inputspec': {'overlay': None, 'underlay': None}, 'resample_u': {'new_fname': None}, 'outputspec': {'axial_png': None, 'resampled_overlay': None, 'resampled_underlay': None, 'sagittal_png': None}, 'resample_o': {'new_fname': None}, 'montage_a': {'png_name': None}, 'montage_s': {'png_name': None}}",
					"outputspec": "{'axial_image': None, 'sagittal_image': None}"
				},
				"result": null,
				"nodes": [
					{
						"name": "inputspec",
						"type": "node",
						"inputs": {
							"anatomical_brain": "[Undefined]",
							"anatomical_reorient": "[Undefined]"
						},
						"outputs": {
							"anatomical_brain": "[Undefined]",
							"anatomical_reorient": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "skull_edge",
						"type": "node",
						"inputs": {
							"function_str": "CPAC.qc.qc.afni_Edge3",
							"in_file": "[Undefined]"
						},
						"outputs": {
							"out_file": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "montage_skull",
						"type": "workflow",
						"inputs": {
							"inputspec": "{'overlay': '[Undefined]', 'underlay': '[Undefined]'}",
							"resample_u": "{'function_str': 'CPAC.qc.utils.resample_1mm'}",
							"outputspec": "{}",
							"resample_o": "{'function_str': 'CPAC.qc.utils.resample_1mm'}",
							"montage_a": "{'cbar_name': 'red', 'function_str': 'CPAC.qc.utils.montage_axial', 'png_name': 'skull_vis_a.png'}",
							"montage_s": "{'cbar_name': 'red', 'function_str': 'CPAC.qc.utils.montage_sagittal', 'png_name': 'skull_vis_s.png'}"
						},
						"outputs": {
							"inputspec": "{'overlay': None, 'underlay': None}",
							"resample_u": "{'new_fname': None}",
							"outputspec": "{'axial_png': None, 'resampled_overlay': None, 'resampled_underlay': None, 'sagittal_png': None}",
							"resample_o": "{'new_fname': None}",
							"montage_a": "{'png_name': None}",
							"montage_s": "{'png_name': None}"
						},
						"result": null,
						"nodes": [
							{
								"name": "inputspec",
								"type": "node",
								"inputs": {
									"underlay": "[Undefined]",
									"overlay": "[Undefined]"
								},
								"outputs": {
									"underlay": "[Undefined]",
									"overlay": "[Undefined]"
								},
								"result": null,
								"nodes": [],
								"edges": []
							},
							{
								"name": "resample_u",
								"type": "node",
								"inputs": {
									"function_str": "CPAC.qc.utils.resample_1mm",
									"file_": "[Undefined]"
								},
								"outputs": {
									"new_fname": "[Undefined]"
								},
								"result": null,
								"nodes": [],
								"edges": []
							},
							{
								"name": "outputspec",
								"type": "node",
								"inputs": {
									"axial_png": "[Undefined]",
									"sagittal_png": "[Undefined]",
									"resampled_underlay": "[Undefined]",
									"resampled_overlay": "[Undefined]"
								},
								"outputs": {
									"axial_png": "[Undefined]",
									"sagittal_png": "[Undefined]",
									"resampled_underlay": "[Undefined]",
									"resampled_overlay": "[Undefined]"
								},
								"result": null,
								"nodes": [],
								"edges": []
							},
							{
								"name": "resample_o",
								"type": "node",
								"inputs": {
									"function_str": "CPAC.qc.utils.resample_1mm",
									"file_": "[Undefined]"
								},
								"outputs": {
									"new_fname": "[Undefined]"
								},
								"result": null,
								"nodes": [],
								"edges": []
							},
							{
								"name": "montage_a",
								"type": "node",
								"inputs": {
									"function_str": "CPAC.qc.utils.montage_axial",
									"overlay": "[Undefined]",
									"underlay": "[Undefined]",
									"png_name": "skull_vis_a.png",
									"cbar_name": "red"
								},
								"outputs": {
									"png_name": "[Undefined]"
								},
								"result": null,
								"nodes": [],
								"edges": []
							},
							{
								"name": "montage_s",
								"type": "node",
								"inputs": {
									"function_str": "CPAC.qc.utils.montage_sagittal",
									"overlay": "[Undefined]",
									"underlay": "[Undefined]",
									"png_name": "skull_vis_s.png",
									"cbar_name": "red"
								},
								"outputs": {
									"png_name": "[Undefined]"
								},
								"result": null,
								"nodes": [],
								"edges": []
							}
						],
						"edges": [
							{
								"origin": "inputspec",
								"target": "resample_u"
							},
							{
								"origin": "inputspec",
								"target": "resample_o"
							},
							{
								"origin": "resample_u",
								"target": "outputspec"
							},
							{
								"origin": "resample_u",
								"target": "montage_a"
							},
							{
								"origin": "resample_u",
								"target": "montage_s"
							},
							{
								"origin": "resample_o",
								"target": "outputspec"
							},
							{
								"origin": "resample_o",
								"target": "montage_a"
							},
							{
								"origin": "resample_o",
								"target": "montage_s"
							},
							{
								"origin": "montage_a",
								"target": "outputspec"
							},
							{
								"origin": "montage_s",
								"target": "outputspec"
							}
						]
					},
					{
						"name": "outputspec",
						"type": "node",
						"inputs": {
							"axial_image": "[Undefined]",
							"sagittal_image": "[Undefined]"
						},
						"outputs": {
							"axial_image": "[Undefined]",
							"sagittal_image": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					}
				],
				"edges": [
					{
						"origin": "inputspec",
						"target": "skull_edge"
					},
					{
						"origin": "inputspec",
						"target": "montage_skull"
					},
					{
						"origin": "skull_edge",
						"target": "montage_skull"
					},
					{
						"origin": "montage_skull",
						"target": "outputspec"
					}
				]
			},
			{
				"name": "anat_mni_ants_register",
				"type": "workflow",
				"inputs": {
					"inputspec": "{'ants_para': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'fixed_image_mask': None, 'interp': '[Undefined]', 'moving_brain': '[Undefined]', 'moving_mask': '[Undefined]', 'moving_skull': '[Undefined]', 'reference_brain': '[Undefined]', 'reference_mask': '[Undefined]', 'reference_skull': '[Undefined]'}",
					"calc_ants_warp": "{'function_str': 'def hardcoded_reg(moving_brain, reference_brain, moving_skull,\\n                  reference_skull, ants_para, moving_mask=None,\\n                  reference_mask=None, fixed_image_mask=None, interp=None,\\n                  reg_with_skull=0):\\n    # TODO: expand transforms to cover all in ANTs para\\n\\n    regcmd = [\"antsRegistration\"]\\n    for para_index in range(len(ants_para)):\\n        for para_type in ants_para[para_index]:\\n            if para_type == \\'dimensionality\\':\\n                if ants_para[para_index][para_type] not in [2, 3, 4]:\\n                    err_msg = \\'Dimensionality specified in ANTs parameters: %d, is not supported. \\' \\\\\\n                              \\'Change to 2, 3, or 4 and try again\\' % \\\\\\n                              ants_para[para_index][para_type]\\n                    raise Exception(err_msg)\\n                else:\\n                    regcmd.append(\"--dimensionality\")\\n                    regcmd.append(str(ants_para[para_index][para_type]))\\n\\n            elif para_type == \\'verbose\\':\\n                if ants_para[para_index][para_type] not in [0, 1]:\\n                    err_msg = \\'Verbose output option in ANTs parameters: %d, is not supported. \\' \\\\\\n                              \\'Change to 0 or 1 and try again\\' % \\\\\\n                              ants_para[para_index][para_type]\\n                    raise Exception(err_msg)\\n                else:\\n                    regcmd.append(\"--verbose\")\\n                    regcmd.append(str(ants_para[para_index][para_type]))\\n\\n            elif para_type == \\'float\\':\\n                if ants_para[para_index][para_type] not in [0, 1]:\\n                    err_msg = \\'Float option in ANTs parameters: %d, is not supported. \\' \\\\\\n                              \\'Change to 0 or 1 and try again\\' % \\\\\\n                              ants_para[para_index][para_type]\\n                    raise Exception(err_msg)\\n                else:\\n                    regcmd.append(\"--float\")\\n                    regcmd.append(str(ants_para[para_index][para_type]))\\n\\n            elif para_type == \\'collapse-output-transforms\\':\\n                if ants_para[para_index][para_type] not in [0, 1]:\\n                    err_msg = \\'collapse-output-transforms specified in ANTs parameters: %d, is not supported. \\' \\\\\\n                              \\'Change to 0 or 1 and try again\\' % \\\\\\n                              ants_para[para_index][para_type]\\n                    raise Exception(err_msg)\\n                else:\\n                    regcmd.append(\"--collapse-output-transforms\")\\n                    regcmd.append(str(ants_para[para_index][para_type]))\\n\\n            elif para_type == \\'winsorize-image-intensities\\':\\n                if ants_para[para_index][para_type][\\'lowerQuantile\\'] is None or ants_para[para_index][para_type][\\'upperQuantile\\'] is None:\\n                    err_msg = \\'Please specifiy lowerQuantile and upperQuantile of ANTs parameters --winsorize-image-intensities in pipeline config. \\'\\n                    raise Exception(err_msg)\\n                else:\\n                    regcmd.append(\"--winsorize-image-intensities\")\\n                    regcmd.append(\"[{0},{1}]\".format(ants_para[para_index][para_type][\\'lowerQuantile\\'],\\n                        ants_para[para_index][para_type][\\'upperQuantile\\']))\\n\\n            elif para_type == \\'initial-moving-transform\\':\\n                if ants_para[para_index][para_type][\\n                    \\'initializationFeature\\'] is None:\\n                    err_msg = \\'Please specifiy initializationFeature of ANTs parameters in pipeline config. \\'\\n                    raise Exception(err_msg)\\n                else:\\n                    regcmd.append(\"--initial-moving-transform\")\\n                    if reg_with_skull == 1:\\n                        regcmd.append(\"[{0},{1},{2}]\".format(\\n                            reference_skull, moving_skull,\\n                            ants_para[para_index][para_type][\\n                                \\'initializationFeature\\']))\\n                    else:\\n                        regcmd.append(\"[{0},{1},{2}]\".format(\\n                            reference_brain, moving_brain,\\n                            ants_para[para_index][para_type][\\n                                \\'initializationFeature\\']))\\n\\n            elif para_type == \\'transforms\\':\\n                for trans_index in range(\\n                        len(ants_para[para_index][para_type])):\\n                    for trans_type in ants_para[para_index][para_type][\\n                        trans_index]:\\n                        regcmd.append(\"--transform\")\\n                        if trans_type == \\'Rigid\\' or trans_type == \\'Affine\\':\\n                            if ants_para[para_index][para_type][trans_index][\\n                                trans_type][\\'gradientStep\\'] is None:\\n                                err_msg = \\'Please specifiy % s Gradient Step of ANTs parameters in pipeline config. \\' % trans_type\\n                                raise Exception(err_msg)\\n                            else:\\n                                regcmd.append(\"{0}[{1}]\".format(\\n                                    trans_type,\\n                                    ants_para[para_index][para_type][\\n                                        trans_index][trans_type][\\n                                        \\'gradientStep\\']))\\n\\n                        if trans_type == \\'SyN\\':\\n                            if ants_para[para_index][para_type][trans_index][\\n                                trans_type][\\'gradientStep\\'] is None:\\n                                err_msg = \\'Please specifiy % s Gradient Step of ANTs parameters in pipeline config. \\' % trans_type\\n                                raise Exception(err_msg)\\n                            else:\\n                                SyN_para = []\\n                                SyN_para.append(\"{0}\".format(\\n                                    ants_para[para_index][para_type][\\n                                        trans_index][trans_type][\\n                                        \\'gradientStep\\']))\\n                                if ants_para[para_index][para_type][\\n                                    trans_index][trans_type][\\n                                    \\'updateFieldVarianceInVoxelSpace\\'] is not None:\\n                                    SyN_para.append(\"{0}\".format(\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'updateFieldVarianceInVoxelSpace\\']))\\n                                if ants_para[para_index][para_type][\\n                                    trans_index][trans_type][\\n                                    \\'totalFieldVarianceInVoxelSpace\\'] is not None:\\n                                    SyN_para.append(\"{0}\".format(\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'totalFieldVarianceInVoxelSpace\\']))\\n                                SyN_para = \\',\\'.join([str(elem)\\n                                                     for elem in SyN_para])\\n                                regcmd.append(\"{0}[{1}]\".format(\\n                                    trans_type, SyN_para))\\n\\n                        if ants_para[para_index][para_type][trans_index][\\n                            trans_type][\\'metric\\'][\\'type\\'] == \\'MI\\':\\n                            if ants_para[para_index][para_type][trans_index][\\n                                trans_type][\\'metric\\'][\\n                                \\'metricWeight\\'] is None or \\\\\\n                                            ants_para[para_index][para_type][\\n                                                trans_index][trans_type][\\n                                                \\'metric\\'][\\n                                                \\'numberOfBins\\'] is None:\\n                                err_msg = \\'Please specifiy metricWeight and numberOfBins for metric MI of ANTs parameters in pipeline config.\\'\\n                                raise Exception(err_msg)\\n                            else:\\n                                MI_para = []\\n                                MI_para.append(\"{0},{1}\".format(\\n                                    ants_para[para_index][para_type][\\n                                        trans_index][trans_type][\\'metric\\']\\n                                    [\\'metricWeight\\'],\\n                                    ants_para[para_index][para_type][\\n                                        trans_index][trans_type][\\'metric\\'][\\n                                        \\'numberOfBins\\']))\\n                                if \\'samplingStrategy\\' in \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'metric\\'] and \\\\\\n                                                ants_para[para_index][\\n                                                    para_type][trans_index][\\n                                                    trans_type][\\'metric\\'][\\n                                                    \\'samplingStrategy\\'] in [\\n                                            \\'None\\', \\'Regular\\', \\'Random\\']:\\n                                    MI_para.append(\"{0}\".format(\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'metric\\'][\\'samplingStrategy\\']))\\n                                if \\'samplingPercentage\\' in \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'metric\\'] and \\\\\\n                                                ants_para[para_index][\\n                                                    para_type][trans_index][\\n                                                    trans_type][\\'metric\\'][\\n                                                    \\'samplingPercentage\\'] is not None:\\n                                    MI_para.append(\"{0}\".format(\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'metric\\'][\\'samplingPercentage\\']))\\n                                MI_para = \\',\\'.join(\\n                                    [str(elem) for elem in MI_para])\\n                                regcmd.append(\"--metric\")\\n                                if reg_with_skull == 1:\\n                                    regcmd.append(\"MI[{0},{1},{2}]\".format(\\n                                        reference_skull, moving_skull, MI_para))\\n                                else:\\n                                    regcmd.append(\"MI[{0},{1},{2}]\".format(\\n                                        reference_brain, moving_brain, MI_para))\\n\\n                        if ants_para[para_index][para_type][trans_index][\\n                            trans_type][\\'metric\\'][\\'type\\'] == \\'CC\\':\\n                            if ants_para[para_index][para_type][trans_index][\\n                                trans_type][\\'metric\\'][\\n                                \\'metricWeight\\'] is None or \\\\\\n                                            ants_para[para_index][para_type][\\n                                                trans_index][trans_type][\\n                                                \\'metric\\'][\\'radius\\'] is None:\\n                                err_msg = \\'Please specifiy metricWeight and radius for metric CC of ANTs parameters in pipeline config.\\'\\n                                raise Exception(err_msg)\\n                            else:\\n                                CC_para = []\\n                                CC_para.append(\"{0},{1}\".format(\\n                                    ants_para[para_index][para_type][\\n                                        trans_index][trans_type][\\'metric\\']\\n                                    [\\'metricWeight\\'],\\n                                    ants_para[para_index][para_type][\\n                                        trans_index][trans_type][\\'metric\\'][\\n                                        \\'radius\\']))\\n                                if \\'samplingStrategy\\' in \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'metric\\'] and \\\\\\n                                                ants_para[para_index][\\n                                                    para_type][trans_index][\\n                                                    trans_type][\\'metric\\'][\\n                                                    \\'samplingStrategy\\'] in [\\n                                            \\'None\\', \\'Regular\\', \\'Random\\']:\\n                                    CC_para.append(\"{0}\".format(\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'metric\\'][\\'samplingStrategy\\']))\\n                                if \\'samplingPercentage\\' in \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'metric\\'] and \\\\\\n                                                ants_para[para_index][\\n                                                    para_type][trans_index][\\n                                                    trans_type][\\'metric\\'][\\n                                                    \\'samplingPercentage\\'] is not None:\\n                                    CC_para.append(\"{0}\".format(\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'metric\\'][\\'samplingPercentage\\']))\\n                                CC_para = \\',\\'.join(\\n                                    [str(elem) for elem in CC_para])\\n                                regcmd.append(\"--metric\")\\n                                regcmd.append(\"CC[{0},{1},{2}]\".format(\\n                                    reference_skull, moving_skull, CC_para))\\n\\n                        if \\'convergence\\' in \\\\\\n                                ants_para[para_index][para_type][trans_index][\\n                                    trans_type]:\\n                            convergence_para = []\\n                            if ants_para[para_index][para_type][trans_index][\\n                                trans_type][\\'convergence\\'][\\n                                \\'iteration\\'] is None:\\n                                err_msg = \\'Please specifiy convergence iteration of ANTs parameters in pipeline config.\\'\\n                                raise Exception(err_msg)\\n                            else:\\n                                convergence_para.append(\"{0}\".format(\\n                                    ants_para[para_index][para_type][\\n                                        trans_index][trans_type][\\n                                        \\'convergence\\'][\\'iteration\\']))\\n                                if \\'convergenceThreshold\\' in \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'convergence\\'] and \\\\\\n                                                ants_para[para_index][\\n                                                    para_type][trans_index][\\n                                                    trans_type][\\n                                                    \\'convergence\\'][\\n                                                    \\'convergenceThreshold\\'] is not None:\\n                                    convergence_para.append(\"{0}\".format(\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'convergence\\'][\\n                                            \\'convergenceThreshold\\']))\\n                                if \\'convergenceWindowSize\\' in \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'convergence\\'] and \\\\\\n                                                ants_para[para_index][\\n                                                    para_type][trans_index][\\n                                                    trans_type][\\n                                                    \\'convergence\\'][\\n                                                    \\'convergenceWindowSize\\'] is not None:\\n                                    convergence_para.append(\"{0}\".format(\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'convergence\\'][\\n                                            \\'convergenceWindowSize\\']))\\n                                convergence_para = \\',\\'.join(\\n                                    [str(elem) for elem in convergence_para])\\n                                regcmd.append(\"--convergence\")\\n                                regcmd.append(\\n                                    \"[{0}]\".format(convergence_para))\\n\\n                        if \\'smoothing-sigmas\\' in \\\\\\n                                ants_para[para_index][para_type][trans_index][\\n                                    trans_type] and \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'smoothing-sigmas\\'] is not None:\\n                            regcmd.append(\"--smoothing-sigmas\")\\n                            regcmd.append(\"{0}\".format(\\n                                ants_para[para_index][para_type][trans_index][\\n                                    trans_type][\\'smoothing-sigmas\\']))\\n\\n                        if \\'shrink-factors\\' in \\\\\\n                                ants_para[para_index][para_type][trans_index][\\n                                    trans_type] and \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'shrink-factors\\'] is not None:\\n                            regcmd.append(\"--shrink-factors\")\\n                            regcmd.append(\"{0}\".format(\\n                                ants_para[para_index][para_type][trans_index][\\n                                    trans_type][\\'shrink-factors\\']))\\n\\n                        if \\'use-histogram-matching\\' in \\\\\\n                                ants_para[para_index][para_type][trans_index][\\n                                    trans_type]:\\n                            if ants_para[para_index][para_type][trans_index][\\n                                trans_type][\\'use-histogram-matching\\']:\\n                                regcmd.append(\"--use-histogram-matching\")\\n                                regcmd.append(\"1\")\\n\\n                        if \\'winsorize-image-intensities\\' in \\\\\\n                                ants_para[para_index][para_type][trans_index][\\n                                    trans_type] and \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'winsorize-image-intensities\\'][\\n                                            \\'lowerQuantile\\'] is not None and \\\\\\n                                        ants_para[para_index][para_type][\\n                                            trans_index][trans_type][\\n                                            \\'winsorize-image-intensities\\'][\\n                                            \\'upperQuantile\\'] is not None:\\n                            regcmd.append(\"--winsorize-image-intensities\")\\n                            regcmd.append(\"[{0},{1}]\".format(\\n                                ants_para[para_index][para_type][trans_index][\\n                                    trans_type][\\'winsorize-image-intensities\\']\\n                                [\\'lowerQuantile\\'],\\n                                ants_para[para_index][para_type][trans_index][\\n                                    trans_type][\\n                                    \\'winsorize-image-intensities\\'][\\n                                    \\'upperQuantile\\']))\\n\\n                        if \\'masks\\' in ants_para[para_index][para_type][trans_index][\\n                            trans_type] and ants_para[para_index][para_type][\\n                                trans_index][trans_type][\\'masks\\'] is not None:\\n                            if ants_para[para_index][para_type][trans_index][trans_type][\\'masks\\']:\\n                                regcmd.append(\"--masks\")\\n                                regcmd.append(\"[{0},{1}]\".format(reference_mask, moving_mask))\\n                            else:\\n                                regcmd.append(\"--masks\")\\n                                regcmd.append(\"[NULL,NULL]\")\\n\\n            elif para_type == \\'masks\\':\\n                # lesion preproc has\\n                if fixed_image_mask is not None:\\n                    regcmd.append(\"--masks\")\\n                    regcmd.append(str(fixed_image_mask))\\n                else:\\n                    if ants_para[para_index][para_type][\\n                        \\'fixed_image_mask\\'] == False and \\\\\\n                                    ants_para[para_index][para_type][\\n                                        \\'moving_image_mask\\'] == True:\\n                        err_msg = \\'Masks option in ANTs parameters: %d is not supported. \\' \\\\\\n                                  \\'Please set `fixed_image_mask` as True. \\' \\\\\\n                                  \\'Or set both `fixed_image_mask` and `moving_image_mask` as False\\' % \\\\\\n                                  ants_para[para_index][para_type]\\n                        raise Exception(err_msg)\\n                    elif ants_para[para_index][para_type][\\n                        \\'fixed_image_mask\\'] == True and \\\\\\n                                    ants_para[para_index][para_type][\\n                                        \\'moving_image_mask\\'] == True:\\n                        regcmd.append(\"--masks\")\\n                        regcmd.append(\\'[\\' + str(reference_mask) + \\',\\' + str(\\n                            moving_mask) + \\']\\')\\n                    elif ants_para[para_index][para_type][\\n                        \\'fixed_image_mask\\'] == True and \\\\\\n                                    ants_para[para_index][para_type][\\n                                        \\'moving_image_mask\\'] == False:\\n                        regcmd.append(\"--masks\")\\n                        regcmd.append(\\'[\\' + str(reference_mask) + \\']\\')\\n                    else:\\n                        continue\\n\\n    if interp is not None:\\n        regcmd.append(\"--interpolation\")\\n        regcmd.append(\"{0}\".format(interp))\\n\\n    regcmd.append(\"--output\")\\n    regcmd.append(\"[transform,transform_Warped.nii.gz]\")\\n\\n    # write out the actual command-line entry for testing/validation later\\n    command_file = os.path.join(os.getcwd(), \\'command.txt\\')\\n    with open(command_file, \\'wt\\') as f:\\n        f.write(\\' \\'.join(regcmd))\\n\\n    try:\\n        retcode = subprocess.check_output(regcmd)\\n    except Exception as e:\\n        raise Exception(\\'[!] ANTS registration did not complete successfully.\\'\\n                        \\'\\\\n\\\\nError details:\\\\n{0}\\\\n{1}\\\\n\\'.format(e, e.output))\\n\\n    warp_list = []\\n    warped_image = None\\n\\n    files = [f for f in os.listdir(\\'.\\') if os.path.isfile(f)]\\n\\n    for f in files:\\n        if (\"transform\" in f) and (\"Warped\" not in f):\\n            warp_list.append(os.getcwd() + \"/\" + f)\\n        if \"Warped\" in f:\\n            warped_image = os.getcwd() + \"/\" + f\\n\\n    if not warped_image:\\n        raise Exception(\"\\\\n\\\\n[!] No registration output file found. ANTS \"\\n                        \"registration may not have completed \"\\n                        \"successfully.\\\\n\\\\n\")\\n\\n    return warp_list, warped_image\\n', 'reg_with_skull': '[Undefined]'}",
					"select_forward_initial": "{'function_str': \"def seperate_warps_list(warp_list, selection):\\n    selected_warp = None\\n    for warp in warp_list:\\n        if selection == 'Warp':\\n            if '3Warp' in warp or '2Warp' in warp or '1Warp' in warp:\\n                selected_warp = warp\\n        else:\\n            if selection in warp:\\n                selected_warp = warp\\n    return selected_warp\\n\", 'selection': 'Initial'}",
					"select_forward_rigid": "{'function_str': \"def seperate_warps_list(warp_list, selection):\\n    selected_warp = None\\n    for warp in warp_list:\\n        if selection == 'Warp':\\n            if '3Warp' in warp or '2Warp' in warp or '1Warp' in warp:\\n                selected_warp = warp\\n        else:\\n            if selection in warp:\\n                selected_warp = warp\\n    return selected_warp\\n\", 'selection': 'Rigid'}",
					"select_forward_affine": "{'function_str': \"def seperate_warps_list(warp_list, selection):\\n    selected_warp = None\\n    for warp in warp_list:\\n        if selection == 'Warp':\\n            if '3Warp' in warp or '2Warp' in warp or '1Warp' in warp:\\n                selected_warp = warp\\n        else:\\n            if selection in warp:\\n                selected_warp = warp\\n    return selected_warp\\n\", 'selection': 'Affine'}",
					"select_forward_warp": "{'function_str': \"def seperate_warps_list(warp_list, selection):\\n    selected_warp = None\\n    for warp in warp_list:\\n        if selection == 'Warp':\\n            if '3Warp' in warp or '2Warp' in warp or '1Warp' in warp:\\n                selected_warp = warp\\n        else:\\n            if selection in warp:\\n                selected_warp = warp\\n    return selected_warp\\n\", 'selection': 'Warp'}",
					"select_inverse_warp": "{'function_str': \"def seperate_warps_list(warp_list, selection):\\n    selected_warp = None\\n    for warp in warp_list:\\n        if selection == 'Warp':\\n            if '3Warp' in warp or '2Warp' in warp or '1Warp' in warp:\\n                selected_warp = warp\\n        else:\\n            if selection in warp:\\n                selected_warp = warp\\n    return selected_warp\\n\", 'selection': 'Inverse'}",
					"outputspec": "{'composite_transform': '[Undefined]', 'wait': '[Undefined]'}"
				},
				"outputs": {
					"inputspec": "{'ants_para': None, 'fixed_image_mask': None, 'interp': None, 'moving_brain': None, 'moving_mask': None, 'moving_skull': None, 'reference_brain': None, 'reference_mask': None, 'reference_skull': None}",
					"calc_ants_warp": "{'warp_list': None, 'warped_image': None}",
					"select_forward_initial": "{'selected_warp': None}",
					"select_forward_rigid": "{'selected_warp': None}",
					"select_forward_affine": "{'selected_warp': None}",
					"select_forward_warp": "{'selected_warp': None}",
					"select_inverse_warp": "{'selected_warp': None}",
					"outputspec": "{'ants_affine_xfm': None, 'ants_initial_xfm': None, 'ants_rigid_xfm': None, 'composite_transform': None, 'inverse_warp_field': None, 'normalized_output_brain': None, 'wait': None, 'warp_field': None}"
				},
				"result": null,
				"nodes": [
					{
						"name": "inputspec",
						"type": "node",
						"inputs": {
							"moving_brain": "[Undefined]",
							"reference_brain": "[Undefined]",
							"moving_skull": "[Undefined]",
							"reference_skull": "[Undefined]",
							"reference_mask": "[Undefined]",
							"moving_mask": "[Undefined]",
							"fixed_image_mask": "None",
							"ants_para": "[{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}]",
							"interp": "[Undefined]"
						},
						"outputs": {
							"moving_brain": "[Undefined]",
							"reference_brain": "[Undefined]",
							"moving_skull": "[Undefined]",
							"reference_skull": "[Undefined]",
							"reference_mask": "[Undefined]",
							"moving_mask": "[Undefined]",
							"fixed_image_mask": "[Undefined]",
							"ants_para": "[Undefined]",
							"interp": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "calc_ants_warp",
						"type": "node",
						"inputs": {
							"function_str": "def hardcoded_reg(moving_brain, reference_brain, moving_skull,\n                  reference_skull, ants_para, moving_mask=None,\n                  reference_mask=None, fixed_image_mask=None, interp=None,\n                  reg_with_skull=0):\n    # TODO: expand transforms to cover all in ANTs para\n\n    regcmd = [\"antsRegistration\"]\n    for para_index in range(len(ants_para)):\n        for para_type in ants_para[para_index]:\n            if para_type == 'dimensionality':\n                if ants_para[para_index][para_type] not in [2, 3, 4]:\n                    err_msg = 'Dimensionality specified in ANTs parameters: %d, is not supported. ' \\\n                              'Change to 2, 3, or 4 and try again' % \\\n                              ants_para[para_index][para_type]\n                    raise Exception(err_msg)\n                else:\n                    regcmd.append(\"--dimensionality\")\n                    regcmd.append(str(ants_para[para_index][para_type]))\n\n            elif para_type == 'verbose':\n                if ants_para[para_index][para_type] not in [0, 1]:\n                    err_msg = 'Verbose output option in ANTs parameters: %d, is not supported. ' \\\n                              'Change to 0 or 1 and try again' % \\\n                              ants_para[para_index][para_type]\n                    raise Exception(err_msg)\n                else:\n                    regcmd.append(\"--verbose\")\n                    regcmd.append(str(ants_para[para_index][para_type]))\n\n            elif para_type == 'float':\n                if ants_para[para_index][para_type] not in [0, 1]:\n                    err_msg = 'Float option in ANTs parameters: %d, is not supported. ' \\\n                              'Change to 0 or 1 and try again' % \\\n                              ants_para[para_index][para_type]\n                    raise Exception(err_msg)\n                else:\n                    regcmd.append(\"--float\")\n                    regcmd.append(str(ants_para[para_index][para_type]))\n\n            elif para_type == 'collapse-output-transforms':\n                if ants_para[para_index][para_type] not in [0, 1]:\n                    err_msg = 'collapse-output-transforms specified in ANTs parameters: %d, is not supported. ' \\\n                              'Change to 0 or 1 and try again' % \\\n                              ants_para[para_index][para_type]\n                    raise Exception(err_msg)\n                else:\n                    regcmd.append(\"--collapse-output-transforms\")\n                    regcmd.append(str(ants_para[para_index][para_type]))\n\n            elif para_type == 'winsorize-image-intensities':\n                if ants_para[para_index][para_type]['lowerQuantile'] is None or ants_para[para_index][para_type]['upperQuantile'] is None:\n                    err_msg = 'Please specifiy lowerQuantile and upperQuantile of ANTs parameters --winsorize-image-intensities in pipeline config. '\n                    raise Exception(err_msg)\n                else:\n                    regcmd.append(\"--winsorize-image-intensities\")\n                    regcmd.append(\"[{0},{1}]\".format(ants_para[para_index][para_type]['lowerQuantile'],\n                        ants_para[para_index][para_type]['upperQuantile']))\n\n            elif para_type == 'initial-moving-transform':\n                if ants_para[para_index][para_type][\n                    'initializationFeature'] is None:\n                    err_msg = 'Please specifiy initializationFeature of ANTs parameters in pipeline config. '\n                    raise Exception(err_msg)\n                else:\n                    regcmd.append(\"--initial-moving-transform\")\n                    if reg_with_skull == 1:\n                        regcmd.append(\"[{0},{1},{2}]\".format(\n                            reference_skull, moving_skull,\n                            ants_para[para_index][para_type][\n                                'initializationFeature']))\n                    else:\n                        regcmd.append(\"[{0},{1},{2}]\".format(\n                            reference_brain, moving_brain,\n                            ants_para[para_index][para_type][\n                                'initializationFeature']))\n\n            elif para_type == 'transforms':\n                for trans_index in range(\n                        len(ants_para[para_index][para_type])):\n                    for trans_type in ants_para[para_index][para_type][\n                        trans_index]:\n                        regcmd.append(\"--transform\")\n                        if trans_type == 'Rigid' or trans_type == 'Affine':\n                            if ants_para[para_index][para_type][trans_index][\n                                trans_type]['gradientStep'] is None:\n                                err_msg = 'Please specifiy % s Gradient Step of ANTs parameters in pipeline config. ' % trans_type\n                                raise Exception(err_msg)\n                            else:\n                                regcmd.append(\"{0}[{1}]\".format(\n                                    trans_type,\n                                    ants_para[para_index][para_type][\n                                        trans_index][trans_type][\n                                        'gradientStep']))\n\n                        if trans_type == 'SyN':\n                            if ants_para[para_index][para_type][trans_index][\n                                trans_type]['gradientStep'] is None:\n                                err_msg = 'Please specifiy % s Gradient Step of ANTs parameters in pipeline config. ' % trans_type\n                                raise Exception(err_msg)\n                            else:\n                                SyN_para = []\n                                SyN_para.append(\"{0}\".format(\n                                    ants_para[para_index][para_type][\n                                        trans_index][trans_type][\n                                        'gradientStep']))\n                                if ants_para[para_index][para_type][\n                                    trans_index][trans_type][\n                                    'updateFieldVarianceInVoxelSpace'] is not None:\n                                    SyN_para.append(\"{0}\".format(\n                                        ants_para[para_index][para_type][\n                                            trans_index][trans_type][\n                                            'updateFieldVarianceInVoxelSpace']))\n                                if ants_para[para_index][para_type][\n                                    trans_index][trans_type][\n                                    'totalFieldVarianceInVoxelSpace'] is not None:\n                                    SyN_para.append(\"{0}\".format(\n                                        ants_para[para_index][para_type][\n                                            trans_index][trans_type][\n                                            'totalFieldVarianceInVoxelSpace']))\n                                SyN_para = ','.join([str(elem)\n                                                     for elem in SyN_para])\n                                regcmd.append(\"{0}[{1}]\".format(\n                                    trans_type, SyN_para))\n\n                        if ants_para[para_index][para_type][trans_index][\n                            trans_type]['metric']['type'] == 'MI':\n                            if ants_para[para_index][para_type][trans_index][\n                                trans_type]['metric'][\n                                'metricWeight'] is None or \\\n                                            ants_para[para_index][para_type][\n                                                trans_index][trans_type][\n                                                'metric'][\n                                                'numberOfBins'] is None:\n                                err_msg = 'Please specifiy metricWeight and numberOfBins for metric MI of ANTs parameters in pipeline config.'\n                                raise Exception(err_msg)\n                            else:\n                                MI_para = []\n                                MI_para.append(\"{0},{1}\".format(\n                                    ants_para[para_index][para_type][\n                                        trans_index][trans_type]['metric']\n                                    ['metricWeight'],\n                                    ants_para[para_index][para_type][\n                                        trans_index][trans_type]['metric'][\n                                        'numberOfBins']))\n                                if 'samplingStrategy' in \\\n                                        ants_para[para_index][para_type][\n                                            trans_index][trans_type][\n                                            'metric'] and \\\n                                                ants_para[para_index][\n                                                    para_type][trans_index][\n                                                    trans_type]['metric'][\n                                                    'samplingStrategy'] in [\n                                            'None', 'Regular', 'Random']:\n                                    MI_para.append(\"{0}\".format(\n                                        ants_para[para_index][para_type][\n                                            trans_index][trans_type][\n                                            'metric']['samplingStrategy']))\n                                if 'samplingPercentage' in \\\n                                        ants_para[para_index][para_type][\n                                            trans_index][trans_type][\n                                            'metric'] and \\\n                                                ants_para[para_index][\n                                                    para_type][trans_index][\n                                                    trans_type]['metric'][\n                                                    'samplingPercentage'] is not None:\n                                    MI_para.append(\"{0}\".format(\n                                        ants_para[para_index][para_type][\n                                            trans_index][trans_type][\n                                            'metric']['samplingPercentage']))\n                                MI_para = ','.join(\n                                    [str(elem) for elem in MI_para])\n                                regcmd.append(\"--metric\")\n                                if reg_with_skull == 1:\n                                    regcmd.append(\"MI[{0},{1},{2}]\".format(\n                                        reference_skull, moving_skull, MI_para))\n                                else:\n                                    regcmd.append(\"MI[{0},{1},{2}]\".format(\n                                        reference_brain, moving_brain, MI_para))\n\n                        if ants_para[para_index][para_type][trans_index][\n                            trans_type]['metric']['type'] == 'CC':\n                            if ants_para[para_index][para_type][trans_index][\n                                trans_type]['metric'][\n                                'metricWeight'] is None or \\\n                                            ants_para[para_index][para_type][\n                                                trans_index][trans_type][\n                                                'metric']['radius'] is None:\n                                err_msg = 'Please specifiy metricWeight and radius for metric CC of ANTs parameters in pipeline config.'\n                                raise Exception(err_msg)\n                            else:\n                                CC_para = []\n                                CC_para.append(\"{0},{1}\".format(\n                                    ants_para[para_index][para_type][\n                                        trans_index][trans_type]['metric']\n                                    ['metricWeight'],\n                                    ants_para[para_index][para_type][\n                                        trans_index][trans_type]['metric'][\n                                        'radius']))\n                                if 'samplingStrategy' in \\\n                                        ants_para[para_index][para_type][\n                                            trans_index][trans_type][\n                                            'metric'] and \\\n                                                ants_para[para_index][\n                                                    para_type][trans_index][\n                                                    trans_type]['metric'][\n                                                    'samplingStrategy'] in [\n                                            'None', 'Regular', 'Random']:\n                                    CC_para.append(\"{0}\".format(\n                                        ants_para[para_index][para_type][\n                                            trans_index][trans_type][\n                                            'metric']['samplingStrategy']))\n                                if 'samplingPercentage' in \\\n                                        ants_para[para_index][para_type][\n                                            trans_index][trans_type][\n                                            'metric'] and \\\n                                                ants_para[para_index][\n                                                    para_type][trans_index][\n                                                    trans_type]['metric'][\n                                                    'samplingPercentage'] is not None:\n                                    CC_para.append(\"{0}\".format(\n                                        ants_para[para_index][para_type][\n                                            trans_index][trans_type][\n                                            'metric']['samplingPercentage']))\n                                CC_para = ','.join(\n                                    [str(elem) for elem in CC_para])\n                                regcmd.append(\"--metric\")\n                                regcmd.append(\"CC[{0},{1},{2}]\".format(\n                                    reference_skull, moving_skull, CC_para))\n\n                        if 'convergence' in \\\n                                ants_para[para_index][para_type][trans_index][\n                                    trans_type]:\n                            convergence_para = []\n                            if ants_para[para_index][para_type][trans_index][\n                                trans_type]['convergence'][\n                                'iteration'] is None:\n                                err_msg = 'Please specifiy convergence iteration of ANTs parameters in pipeline config.'\n                                raise Exception(err_msg)\n                            else:\n                                convergence_para.append(\"{0}\".format(\n                                    ants_para[para_index][para_type][\n                                        trans_index][trans_type][\n                                        'convergence']['iteration']))\n                                if 'convergenceThreshold' in \\\n                                        ants_para[para_index][para_type][\n                                            trans_index][trans_type][\n                                            'convergence'] and \\\n                                                ants_para[para_index][\n                                                    para_type][trans_index][\n                                                    trans_type][\n                                                    'convergence'][\n                                                    'convergenceThreshold'] is not None:\n                                    convergence_para.append(\"{0}\".format(\n                                        ants_para[para_index][para_type][\n                                            trans_index][trans_type][\n                                            'convergence'][\n                                            'convergenceThreshold']))\n                                if 'convergenceWindowSize' in \\\n                                        ants_para[para_index][para_type][\n                                            trans_index][trans_type][\n                                            'convergence'] and \\\n                                                ants_para[para_index][\n                                                    para_type][trans_index][\n                                                    trans_type][\n                                                    'convergence'][\n                                                    'convergenceWindowSize'] is not None:\n                                    convergence_para.append(\"{0}\".format(\n                                        ants_para[para_index][para_type][\n                                            trans_index][trans_type][\n                                            'convergence'][\n                                            'convergenceWindowSize']))\n                                convergence_para = ','.join(\n                                    [str(elem) for elem in convergence_para])\n                                regcmd.append(\"--convergence\")\n                                regcmd.append(\n                                    \"[{0}]\".format(convergence_para))\n\n                        if 'smoothing-sigmas' in \\\n                                ants_para[para_index][para_type][trans_index][\n                                    trans_type] and \\\n                                        ants_para[para_index][para_type][\n                                            trans_index][trans_type][\n                                            'smoothing-sigmas'] is not None:\n                            regcmd.append(\"--smoothing-sigmas\")\n                            regcmd.append(\"{0}\".format(\n                                ants_para[para_index][para_type][trans_index][\n                                    trans_type]['smoothing-sigmas']))\n\n                        if 'shrink-factors' in \\\n                                ants_para[para_index][para_type][trans_index][\n                                    trans_type] and \\\n                                        ants_para[para_index][para_type][\n                                            trans_index][trans_type][\n                                            'shrink-factors'] is not None:\n                            regcmd.append(\"--shrink-factors\")\n                            regcmd.append(\"{0}\".format(\n                                ants_para[para_index][para_type][trans_index][\n                                    trans_type]['shrink-factors']))\n\n                        if 'use-histogram-matching' in \\\n                                ants_para[para_index][para_type][trans_index][\n                                    trans_type]:\n                            if ants_para[para_index][para_type][trans_index][\n                                trans_type]['use-histogram-matching']:\n                                regcmd.append(\"--use-histogram-matching\")\n                                regcmd.append(\"1\")\n\n                        if 'winsorize-image-intensities' in \\\n                                ants_para[para_index][para_type][trans_index][\n                                    trans_type] and \\\n                                        ants_para[para_index][para_type][\n                                            trans_index][trans_type][\n                                            'winsorize-image-intensities'][\n                                            'lowerQuantile'] is not None and \\\n                                        ants_para[para_index][para_type][\n                                            trans_index][trans_type][\n                                            'winsorize-image-intensities'][\n                                            'upperQuantile'] is not None:\n                            regcmd.append(\"--winsorize-image-intensities\")\n                            regcmd.append(\"[{0},{1}]\".format(\n                                ants_para[para_index][para_type][trans_index][\n                                    trans_type]['winsorize-image-intensities']\n                                ['lowerQuantile'],\n                                ants_para[para_index][para_type][trans_index][\n                                    trans_type][\n                                    'winsorize-image-intensities'][\n                                    'upperQuantile']))\n\n                        if 'masks' in ants_para[para_index][para_type][trans_index][\n                            trans_type] and ants_para[para_index][para_type][\n                                trans_index][trans_type]['masks'] is not None:\n                            if ants_para[para_index][para_type][trans_index][trans_type]['masks']:\n                                regcmd.append(\"--masks\")\n                                regcmd.append(\"[{0},{1}]\".format(reference_mask, moving_mask))\n                            else:\n                                regcmd.append(\"--masks\")\n                                regcmd.append(\"[NULL,NULL]\")\n\n            elif para_type == 'masks':\n                # lesion preproc has\n                if fixed_image_mask is not None:\n                    regcmd.append(\"--masks\")\n                    regcmd.append(str(fixed_image_mask))\n                else:\n                    if ants_para[para_index][para_type][\n                        'fixed_image_mask'] == False and \\\n                                    ants_para[para_index][para_type][\n                                        'moving_image_mask'] == True:\n                        err_msg = 'Masks option in ANTs parameters: %d is not supported. ' \\\n                                  'Please set `fixed_image_mask` as True. ' \\\n                                  'Or set both `fixed_image_mask` and `moving_image_mask` as False' % \\\n                                  ants_para[para_index][para_type]\n                        raise Exception(err_msg)\n                    elif ants_para[para_index][para_type][\n                        'fixed_image_mask'] == True and \\\n                                    ants_para[para_index][para_type][\n                                        'moving_image_mask'] == True:\n                        regcmd.append(\"--masks\")\n                        regcmd.append('[' + str(reference_mask) + ',' + str(\n                            moving_mask) + ']')\n                    elif ants_para[para_index][para_type][\n                        'fixed_image_mask'] == True and \\\n                                    ants_para[para_index][para_type][\n                                        'moving_image_mask'] == False:\n                        regcmd.append(\"--masks\")\n                        regcmd.append('[' + str(reference_mask) + ']')\n                    else:\n                        continue\n\n    if interp is not None:\n        regcmd.append(\"--interpolation\")\n        regcmd.append(\"{0}\".format(interp))\n\n    regcmd.append(\"--output\")\n    regcmd.append(\"[transform,transform_Warped.nii.gz]\")\n\n    # write out the actual command-line entry for testing/validation later\n    command_file = os.path.join(os.getcwd(), 'command.txt')\n    with open(command_file, 'wt') as f:\n        f.write(' '.join(regcmd))\n\n    try:\n        retcode = subprocess.check_output(regcmd)\n    except Exception as e:\n        raise Exception('[!] ANTS registration did not complete successfully.'\n                        '\\n\\nError details:\\n{0}\\n{1}\\n'.format(e, e.output))\n\n    warp_list = []\n    warped_image = None\n\n    files = [f for f in os.listdir('.') if os.path.isfile(f)]\n\n    for f in files:\n        if (\"transform\" in f) and (\"Warped\" not in f):\n            warp_list.append(os.getcwd() + \"/\" + f)\n        if \"Warped\" in f:\n            warped_image = os.getcwd() + \"/\" + f\n\n    if not warped_image:\n        raise Exception(\"\\n\\n[!] No registration output file found. ANTS \"\n                        \"registration may not have completed \"\n                        \"successfully.\\n\\n\")\n\n    return warp_list, warped_image\n",
							"moving_brain": "[Undefined]",
							"reference_brain": "[Undefined]",
							"moving_skull": "[Undefined]",
							"reference_skull": "[Undefined]",
							"ants_para": "[Undefined]",
							"moving_mask": "[Undefined]",
							"reference_mask": "[Undefined]",
							"fixed_image_mask": "[Undefined]",
							"interp": "[Undefined]",
							"reg_with_skull": "[Undefined]"
						},
						"outputs": {
							"warp_list": "[Undefined]",
							"warped_image": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "select_forward_initial",
						"type": "node",
						"inputs": {
							"function_str": "def seperate_warps_list(warp_list, selection):\n    selected_warp = None\n    for warp in warp_list:\n        if selection == 'Warp':\n            if '3Warp' in warp or '2Warp' in warp or '1Warp' in warp:\n                selected_warp = warp\n        else:\n            if selection in warp:\n                selected_warp = warp\n    return selected_warp\n",
							"warp_list": "[Undefined]",
							"selection": "Initial"
						},
						"outputs": {
							"selected_warp": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "select_forward_rigid",
						"type": "node",
						"inputs": {
							"function_str": "def seperate_warps_list(warp_list, selection):\n    selected_warp = None\n    for warp in warp_list:\n        if selection == 'Warp':\n            if '3Warp' in warp or '2Warp' in warp or '1Warp' in warp:\n                selected_warp = warp\n        else:\n            if selection in warp:\n                selected_warp = warp\n    return selected_warp\n",
							"warp_list": "[Undefined]",
							"selection": "Rigid"
						},
						"outputs": {
							"selected_warp": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "select_forward_affine",
						"type": "node",
						"inputs": {
							"function_str": "def seperate_warps_list(warp_list, selection):\n    selected_warp = None\n    for warp in warp_list:\n        if selection == 'Warp':\n            if '3Warp' in warp or '2Warp' in warp or '1Warp' in warp:\n                selected_warp = warp\n        else:\n            if selection in warp:\n                selected_warp = warp\n    return selected_warp\n",
							"warp_list": "[Undefined]",
							"selection": "Affine"
						},
						"outputs": {
							"selected_warp": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "select_forward_warp",
						"type": "node",
						"inputs": {
							"function_str": "def seperate_warps_list(warp_list, selection):\n    selected_warp = None\n    for warp in warp_list:\n        if selection == 'Warp':\n            if '3Warp' in warp or '2Warp' in warp or '1Warp' in warp:\n                selected_warp = warp\n        else:\n            if selection in warp:\n                selected_warp = warp\n    return selected_warp\n",
							"warp_list": "[Undefined]",
							"selection": "Warp"
						},
						"outputs": {
							"selected_warp": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "select_inverse_warp",
						"type": "node",
						"inputs": {
							"function_str": "def seperate_warps_list(warp_list, selection):\n    selected_warp = None\n    for warp in warp_list:\n        if selection == 'Warp':\n            if '3Warp' in warp or '2Warp' in warp or '1Warp' in warp:\n                selected_warp = warp\n        else:\n            if selection in warp:\n                selected_warp = warp\n    return selected_warp\n",
							"warp_list": "[Undefined]",
							"selection": "Inverse"
						},
						"outputs": {
							"selected_warp": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "outputspec",
						"type": "node",
						"inputs": {
							"ants_initial_xfm": "[Undefined]",
							"ants_rigid_xfm": "[Undefined]",
							"ants_affine_xfm": "[Undefined]",
							"warp_field": "[Undefined]",
							"inverse_warp_field": "[Undefined]",
							"composite_transform": "[Undefined]",
							"wait": "[Undefined]",
							"normalized_output_brain": "[Undefined]"
						},
						"outputs": {
							"ants_initial_xfm": "[Undefined]",
							"ants_rigid_xfm": "[Undefined]",
							"ants_affine_xfm": "[Undefined]",
							"warp_field": "[Undefined]",
							"inverse_warp_field": "[Undefined]",
							"composite_transform": "[Undefined]",
							"wait": "[Undefined]",
							"normalized_output_brain": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					}
				],
				"edges": [
					{
						"origin": "inputspec",
						"target": "calc_ants_warp"
					},
					{
						"origin": "calc_ants_warp",
						"target": "select_forward_initial"
					},
					{
						"origin": "calc_ants_warp",
						"target": "select_forward_rigid"
					},
					{
						"origin": "calc_ants_warp",
						"target": "select_forward_affine"
					},
					{
						"origin": "calc_ants_warp",
						"target": "select_forward_warp"
					},
					{
						"origin": "calc_ants_warp",
						"target": "select_inverse_warp"
					},
					{
						"origin": "calc_ants_warp",
						"target": "outputspec"
					},
					{
						"origin": "select_forward_initial",
						"target": "outputspec"
					},
					{
						"origin": "select_forward_rigid",
						"target": "outputspec"
					},
					{
						"origin": "select_forward_affine",
						"target": "outputspec"
					},
					{
						"origin": "select_forward_warp",
						"target": "outputspec"
					},
					{
						"origin": "select_inverse_warp",
						"target": "outputspec"
					}
				]
			},
			{
				"name": "montage_mni_anat_237",
				"type": "workflow",
				"inputs": {
					"inputspec": "{'overlay': '[Undefined]', 'underlay': '[Undefined]'}",
					"resample_u": "{'function_str': 'CPAC.qc.utils.resample_1mm'}",
					"outputspec": "{}",
					"resample_o": "{'function_str': 'CPAC.qc.utils.resample_1mm'}",
					"montage_a": "{'cbar_name': 'red', 'function_str': 'CPAC.qc.utils.montage_axial', 'png_name': 'mni_anat_a.png'}",
					"montage_s": "{'cbar_name': 'red', 'function_str': 'CPAC.qc.utils.montage_sagittal', 'png_name': 'mni_anat_s.png'}"
				},
				"outputs": {
					"inputspec": "{'overlay': None, 'underlay': None}",
					"resample_u": "{'new_fname': None}",
					"outputspec": "{'axial_png': None, 'resampled_overlay': None, 'resampled_underlay': None, 'sagittal_png': None}",
					"resample_o": "{'new_fname': None}",
					"montage_a": "{'png_name': None}",
					"montage_s": "{'png_name': None}"
				},
				"result": null,
				"nodes": [
					{
						"name": "inputspec",
						"type": "node",
						"inputs": {
							"underlay": "[Undefined]",
							"overlay": "[Undefined]"
						},
						"outputs": {
							"underlay": "[Undefined]",
							"overlay": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "resample_u",
						"type": "node",
						"inputs": {
							"function_str": "CPAC.qc.utils.resample_1mm",
							"file_": "[Undefined]"
						},
						"outputs": {
							"new_fname": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "outputspec",
						"type": "node",
						"inputs": {
							"axial_png": "[Undefined]",
							"sagittal_png": "[Undefined]",
							"resampled_underlay": "[Undefined]",
							"resampled_overlay": "[Undefined]"
						},
						"outputs": {
							"axial_png": "[Undefined]",
							"sagittal_png": "[Undefined]",
							"resampled_underlay": "[Undefined]",
							"resampled_overlay": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "resample_o",
						"type": "node",
						"inputs": {
							"function_str": "CPAC.qc.utils.resample_1mm",
							"file_": "[Undefined]"
						},
						"outputs": {
							"new_fname": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "montage_a",
						"type": "node",
						"inputs": {
							"function_str": "CPAC.qc.utils.montage_axial",
							"overlay": "[Undefined]",
							"underlay": "[Undefined]",
							"png_name": "mni_anat_a.png",
							"cbar_name": "red"
						},
						"outputs": {
							"png_name": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "montage_s",
						"type": "node",
						"inputs": {
							"function_str": "CPAC.qc.utils.montage_sagittal",
							"overlay": "[Undefined]",
							"underlay": "[Undefined]",
							"png_name": "mni_anat_s.png",
							"cbar_name": "red"
						},
						"outputs": {
							"png_name": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					}
				],
				"edges": [
					{
						"origin": "inputspec",
						"target": "resample_u"
					},
					{
						"origin": "inputspec",
						"target": "resample_o"
					},
					{
						"origin": "resample_u",
						"target": "outputspec"
					},
					{
						"origin": "resample_u",
						"target": "montage_a"
					},
					{
						"origin": "resample_u",
						"target": "montage_s"
					},
					{
						"origin": "resample_o",
						"target": "outputspec"
					},
					{
						"origin": "resample_o",
						"target": "montage_a"
					},
					{
						"origin": "resample_o",
						"target": "montage_s"
					},
					{
						"origin": "montage_a",
						"target": "outputspec"
					},
					{
						"origin": "montage_s",
						"target": "outputspec"
					}
				]
			},
			{
				"name": "anat_template_edge_237",
				"type": "node",
				"inputs": {
					"function_str": "CPAC.qc.qc.afni_Edge3",
					"in_file": "[Undefined]"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "carpet_seg_241",
				"type": "workflow",
				"inputs": {
					"inputspec": "{'anatomical_csf_mask': '[Undefined]', 'anatomical_gm_mask': '[Undefined]', 'anatomical_wm_mask': '[Undefined]', 'functional_to_standard': '[Undefined]', 'mean_functional_to_standard': '[Undefined]'}",
					"gm_resample": "{'args': '[Undefined]', 'environ': {}, 'num_threads': 1, 'orientation': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI', 'resample_mode': '[Undefined]', 'voxel_size': '[Undefined]'}",
					"gm_mask": "{'args': '[Undefined]', 'environ': {}, 'expr': 'astep(a, 0.5)', 'in_file_b': '[Undefined]', 'in_file_c': '[Undefined]', 'num_threads': 1, 'other': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI', 'overwrite': '[Undefined]', 'single_idx': '[Undefined]', 'start_idx': '[Undefined]', 'stop_idx': '[Undefined]'}",
					"wm_resample": "{'args': '[Undefined]', 'environ': {}, 'num_threads': 1, 'orientation': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI', 'resample_mode': '[Undefined]', 'voxel_size': '[Undefined]'}",
					"wm_mask": "{'args': '[Undefined]', 'environ': {}, 'expr': 'astep(a, 0.5)', 'in_file_b': '[Undefined]', 'in_file_c': '[Undefined]', 'num_threads': 1, 'other': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI', 'overwrite': '[Undefined]', 'single_idx': '[Undefined]', 'start_idx': '[Undefined]', 'stop_idx': '[Undefined]'}",
					"csf_resample": "{'args': '[Undefined]', 'environ': {}, 'num_threads': 1, 'orientation': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI', 'resample_mode': '[Undefined]', 'voxel_size': '[Undefined]'}",
					"csf_mask": "{'args': '[Undefined]', 'environ': {}, 'expr': 'astep(a, 0.5)', 'in_file_b': '[Undefined]', 'in_file_c': '[Undefined]', 'num_threads': 1, 'other': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI', 'overwrite': '[Undefined]', 'single_idx': '[Undefined]', 'start_idx': '[Undefined]', 'stop_idx': '[Undefined]'}",
					"carpet_plot": "{'function_str': 'CPAC.qc.utils.gen_carpet_plt', 'output': 'carpet_seg'}",
					"outputspec": "{}"
				},
				"outputs": {
					"inputspec": "{'anatomical_csf_mask': None, 'anatomical_gm_mask': None, 'anatomical_wm_mask': None, 'functional_to_standard': None, 'mean_functional_to_standard': None}",
					"gm_resample": "{'out_file': None}",
					"gm_mask": "{'out_file': None}",
					"wm_resample": "{'out_file': None}",
					"wm_mask": "{'out_file': None}",
					"csf_resample": "{'out_file': None}",
					"csf_mask": "{'out_file': None}",
					"carpet_plot": "{'carpet_plot': None}",
					"outputspec": "{'carpet_plot': None}"
				},
				"result": null,
				"nodes": [
					{
						"name": "inputspec",
						"type": "node",
						"inputs": {
							"functional_to_standard": "[Undefined]",
							"mean_functional_to_standard": "[Undefined]",
							"anatomical_gm_mask": "[Undefined]",
							"anatomical_wm_mask": "[Undefined]",
							"anatomical_csf_mask": "[Undefined]"
						},
						"outputs": {
							"functional_to_standard": "[Undefined]",
							"mean_functional_to_standard": "[Undefined]",
							"anatomical_gm_mask": "[Undefined]",
							"anatomical_wm_mask": "[Undefined]",
							"anatomical_csf_mask": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "gm_resample",
						"type": "node",
						"inputs": {
							"in_file": "[Undefined]",
							"out_file": "[Undefined]",
							"orientation": "[Undefined]",
							"resample_mode": "[Undefined]",
							"voxel_size": "[Undefined]",
							"master": "[Undefined]",
							"num_threads": "1",
							"outputtype": "NIFTI",
							"args": "[Undefined]",
							"environ": "{}"
						},
						"outputs": {
							"out_file": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "gm_mask",
						"type": "node",
						"inputs": {
							"in_file_a": "[Undefined]",
							"in_file_b": "[Undefined]",
							"in_file_c": "[Undefined]",
							"out_file": "[Undefined]",
							"expr": "astep(a, 0.5)",
							"start_idx": "[Undefined]",
							"stop_idx": "[Undefined]",
							"single_idx": "[Undefined]",
							"overwrite": "[Undefined]",
							"other": "[Undefined]",
							"num_threads": "1",
							"outputtype": "NIFTI",
							"args": "[Undefined]",
							"environ": "{}"
						},
						"outputs": {
							"out_file": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "wm_resample",
						"type": "node",
						"inputs": {
							"in_file": "[Undefined]",
							"out_file": "[Undefined]",
							"orientation": "[Undefined]",
							"resample_mode": "[Undefined]",
							"voxel_size": "[Undefined]",
							"master": "[Undefined]",
							"num_threads": "1",
							"outputtype": "NIFTI",
							"args": "[Undefined]",
							"environ": "{}"
						},
						"outputs": {
							"out_file": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "wm_mask",
						"type": "node",
						"inputs": {
							"in_file_a": "[Undefined]",
							"in_file_b": "[Undefined]",
							"in_file_c": "[Undefined]",
							"out_file": "[Undefined]",
							"expr": "astep(a, 0.5)",
							"start_idx": "[Undefined]",
							"stop_idx": "[Undefined]",
							"single_idx": "[Undefined]",
							"overwrite": "[Undefined]",
							"other": "[Undefined]",
							"num_threads": "1",
							"outputtype": "NIFTI",
							"args": "[Undefined]",
							"environ": "{}"
						},
						"outputs": {
							"out_file": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "csf_resample",
						"type": "node",
						"inputs": {
							"in_file": "[Undefined]",
							"out_file": "[Undefined]",
							"orientation": "[Undefined]",
							"resample_mode": "[Undefined]",
							"voxel_size": "[Undefined]",
							"master": "[Undefined]",
							"num_threads": "1",
							"outputtype": "NIFTI",
							"args": "[Undefined]",
							"environ": "{}"
						},
						"outputs": {
							"out_file": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "csf_mask",
						"type": "node",
						"inputs": {
							"in_file_a": "[Undefined]",
							"in_file_b": "[Undefined]",
							"in_file_c": "[Undefined]",
							"out_file": "[Undefined]",
							"expr": "astep(a, 0.5)",
							"start_idx": "[Undefined]",
							"stop_idx": "[Undefined]",
							"single_idx": "[Undefined]",
							"overwrite": "[Undefined]",
							"other": "[Undefined]",
							"num_threads": "1",
							"outputtype": "NIFTI",
							"args": "[Undefined]",
							"environ": "{}"
						},
						"outputs": {
							"out_file": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "carpet_plot",
						"type": "node",
						"inputs": {
							"function_str": "CPAC.qc.utils.gen_carpet_plt",
							"gm_mask": "[Undefined]",
							"wm_mask": "[Undefined]",
							"csf_mask": "[Undefined]",
							"functional_to_standard": "[Undefined]",
							"output": "carpet_seg"
						},
						"outputs": {
							"carpet_plot": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "outputspec",
						"type": "node",
						"inputs": {
							"carpet_plot": "[Undefined]"
						},
						"outputs": {
							"carpet_plot": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					}
				],
				"edges": [
					{
						"origin": "inputspec",
						"target": "gm_resample"
					},
					{
						"origin": "inputspec",
						"target": "wm_resample"
					},
					{
						"origin": "inputspec",
						"target": "csf_resample"
					},
					{
						"origin": "inputspec",
						"target": "carpet_plot"
					},
					{
						"origin": "gm_resample",
						"target": "gm_mask"
					},
					{
						"origin": "gm_mask",
						"target": "carpet_plot"
					},
					{
						"origin": "wm_resample",
						"target": "wm_mask"
					},
					{
						"origin": "wm_mask",
						"target": "carpet_plot"
					},
					{
						"origin": "csf_resample",
						"target": "csf_mask"
					},
					{
						"origin": "csf_mask",
						"target": "carpet_plot"
					},
					{
						"origin": "carpet_plot",
						"target": "outputspec"
					}
				]
			},
			{
				"name": "gather_GM-path",
				"type": "workflow",
				"inputs": {
					"inputnode": "{'creds_path': None, 'data': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'dl_dir': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working/pipeline_cpac_default_monkey_skullstrip', 'scan': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
					"check_for_s3": "{'function_str': 'CPAC.utils.datasource.check_for_s3', 'img_type': 'other'}",
					"outputspec": "{}"
				},
				"outputs": {
					"inputnode": "{'creds_path': None, 'data': None, 'dl_dir': None, 'scan': None, 'unique_id': None}",
					"check_for_s3": "{'local_path': None}",
					"outputspec": "{'data': None, 'scan': None, 'unique_id': None}"
				},
				"result": null,
				"nodes": [
					{
						"name": "inputnode",
						"type": "node",
						"inputs": {
							"unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
							"data": "/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz",
							"scan": "[Undefined]",
							"creds_path": "None",
							"dl_dir": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working/pipeline_cpac_default_monkey_skullstrip"
						},
						"outputs": {
							"unique_id": "[Undefined]",
							"data": "[Undefined]",
							"scan": "[Undefined]",
							"creds_path": "[Undefined]",
							"dl_dir": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "check_for_s3",
						"type": "node",
						"inputs": {
							"function_str": "CPAC.utils.datasource.check_for_s3",
							"file_path": "[Undefined]",
							"creds_path": "[Undefined]",
							"dl_dir": "[Undefined]",
							"img_type": "other"
						},
						"outputs": {
							"local_path": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "outputspec",
						"type": "node",
						"inputs": {
							"unique_id": "[Undefined]",
							"data": "[Undefined]",
							"scan": "[Undefined]"
						},
						"outputs": {
							"unique_id": "[Undefined]",
							"data": "[Undefined]",
							"scan": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					}
				],
				"edges": [
					{
						"origin": "inputnode",
						"target": "check_for_s3"
					},
					{
						"origin": "inputnode",
						"target": "outputspec"
					},
					{
						"origin": "check_for_s3",
						"target": "outputspec"
					}
				]
			},
			{
				"name": "gather_WM-path",
				"type": "workflow",
				"inputs": {
					"inputnode": "{'creds_path': None, 'data': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'dl_dir': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working/pipeline_cpac_default_monkey_skullstrip', 'scan': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
					"check_for_s3": "{'function_str': 'CPAC.utils.datasource.check_for_s3', 'img_type': 'other'}",
					"outputspec": "{}"
				},
				"outputs": {
					"inputnode": "{'creds_path': None, 'data': None, 'dl_dir': None, 'scan': None, 'unique_id': None}",
					"check_for_s3": "{'local_path': None}",
					"outputspec": "{'data': None, 'scan': None, 'unique_id': None}"
				},
				"result": null,
				"nodes": [
					{
						"name": "inputnode",
						"type": "node",
						"inputs": {
							"unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
							"data": "/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz",
							"scan": "[Undefined]",
							"creds_path": "None",
							"dl_dir": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working/pipeline_cpac_default_monkey_skullstrip"
						},
						"outputs": {
							"unique_id": "[Undefined]",
							"data": "[Undefined]",
							"scan": "[Undefined]",
							"creds_path": "[Undefined]",
							"dl_dir": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "check_for_s3",
						"type": "node",
						"inputs": {
							"function_str": "CPAC.utils.datasource.check_for_s3",
							"file_path": "[Undefined]",
							"creds_path": "[Undefined]",
							"dl_dir": "[Undefined]",
							"img_type": "other"
						},
						"outputs": {
							"local_path": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "outputspec",
						"type": "node",
						"inputs": {
							"unique_id": "[Undefined]",
							"data": "[Undefined]",
							"scan": "[Undefined]"
						},
						"outputs": {
							"unique_id": "[Undefined]",
							"data": "[Undefined]",
							"scan": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					}
				],
				"edges": [
					{
						"origin": "inputnode",
						"target": "check_for_s3"
					},
					{
						"origin": "inputnode",
						"target": "outputspec"
					},
					{
						"origin": "check_for_s3",
						"target": "outputspec"
					}
				]
			},
			{
				"name": "gather_CSF-path",
				"type": "workflow",
				"inputs": {
					"inputnode": "{'creds_path': None, 'data': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz', 'dl_dir': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working/pipeline_cpac_default_monkey_skullstrip', 'scan': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
					"check_for_s3": "{'function_str': 'CPAC.utils.datasource.check_for_s3', 'img_type': 'other'}",
					"outputspec": "{}"
				},
				"outputs": {
					"inputnode": "{'creds_path': None, 'data': None, 'dl_dir': None, 'scan': None, 'unique_id': None}",
					"check_for_s3": "{'local_path': None}",
					"outputspec": "{'data': None, 'scan': None, 'unique_id': None}"
				},
				"result": null,
				"nodes": [
					{
						"name": "inputnode",
						"type": "node",
						"inputs": {
							"unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
							"data": "/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz",
							"scan": "[Undefined]",
							"creds_path": "None",
							"dl_dir": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working/pipeline_cpac_default_monkey_skullstrip"
						},
						"outputs": {
							"unique_id": "[Undefined]",
							"data": "[Undefined]",
							"scan": "[Undefined]",
							"creds_path": "[Undefined]",
							"dl_dir": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "check_for_s3",
						"type": "node",
						"inputs": {
							"function_str": "CPAC.utils.datasource.check_for_s3",
							"file_path": "[Undefined]",
							"creds_path": "[Undefined]",
							"dl_dir": "[Undefined]",
							"img_type": "other"
						},
						"outputs": {
							"local_path": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "outputspec",
						"type": "node",
						"inputs": {
							"unique_id": "[Undefined]",
							"data": "[Undefined]",
							"scan": "[Undefined]"
						},
						"outputs": {
							"unique_id": "[Undefined]",
							"data": "[Undefined]",
							"scan": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					}
				],
				"edges": [
					{
						"origin": "inputnode",
						"target": "check_for_s3"
					},
					{
						"origin": "inputnode",
						"target": "outputspec"
					},
					{
						"origin": "check_for_s3",
						"target": "outputspec"
					}
				]
			},
			{
				"name": "montage_mfi_247",
				"type": "workflow",
				"inputs": {
					"inputspec": "{'overlay': '[Undefined]', 'underlay': '[Undefined]'}",
					"resample_u": "{'function_str': 'CPAC.qc.utils.resample_1mm'}",
					"outputspec": "{}",
					"resample_o": "{'function_str': 'CPAC.qc.utils.resample_1mm'}",
					"montage_a": "{'cbar_name': 'red', 'function_str': 'CPAC.qc.utils.montage_axial', 'png_name': 'MNI_edge_on_mean_func_mni_a.png'}",
					"montage_s": "{'cbar_name': 'red', 'function_str': 'CPAC.qc.utils.montage_sagittal', 'png_name': 'MNI_edge_on_mean_func_mni_s.png'}"
				},
				"outputs": {
					"inputspec": "{'overlay': None, 'underlay': None}",
					"resample_u": "{'new_fname': None}",
					"outputspec": "{'axial_png': None, 'resampled_overlay': None, 'resampled_underlay': None, 'sagittal_png': None}",
					"resample_o": "{'new_fname': None}",
					"montage_a": "{'png_name': None}",
					"montage_s": "{'png_name': None}"
				},
				"result": null,
				"nodes": [
					{
						"name": "inputspec",
						"type": "node",
						"inputs": {
							"underlay": "[Undefined]",
							"overlay": "[Undefined]"
						},
						"outputs": {
							"underlay": "[Undefined]",
							"overlay": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "resample_u",
						"type": "node",
						"inputs": {
							"function_str": "CPAC.qc.utils.resample_1mm",
							"file_": "[Undefined]"
						},
						"outputs": {
							"new_fname": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "outputspec",
						"type": "node",
						"inputs": {
							"axial_png": "[Undefined]",
							"sagittal_png": "[Undefined]",
							"resampled_underlay": "[Undefined]",
							"resampled_overlay": "[Undefined]"
						},
						"outputs": {
							"axial_png": "[Undefined]",
							"sagittal_png": "[Undefined]",
							"resampled_underlay": "[Undefined]",
							"resampled_overlay": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "resample_o",
						"type": "node",
						"inputs": {
							"function_str": "CPAC.qc.utils.resample_1mm",
							"file_": "[Undefined]"
						},
						"outputs": {
							"new_fname": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "montage_a",
						"type": "node",
						"inputs": {
							"function_str": "CPAC.qc.utils.montage_axial",
							"overlay": "[Undefined]",
							"underlay": "[Undefined]",
							"png_name": "MNI_edge_on_mean_func_mni_a.png",
							"cbar_name": "red"
						},
						"outputs": {
							"png_name": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					},
					{
						"name": "montage_s",
						"type": "node",
						"inputs": {
							"function_str": "CPAC.qc.utils.montage_sagittal",
							"overlay": "[Undefined]",
							"underlay": "[Undefined]",
							"png_name": "MNI_edge_on_mean_func_mni_s.png",
							"cbar_name": "red"
						},
						"outputs": {
							"png_name": "[Undefined]"
						},
						"result": null,
						"nodes": [],
						"edges": []
					}
				],
				"edges": [
					{
						"origin": "inputspec",
						"target": "resample_u"
					},
					{
						"origin": "inputspec",
						"target": "resample_o"
					},
					{
						"origin": "resample_u",
						"target": "outputspec"
					},
					{
						"origin": "resample_u",
						"target": "montage_a"
					},
					{
						"origin": "resample_u",
						"target": "montage_s"
					},
					{
						"origin": "resample_o",
						"target": "outputspec"
					},
					{
						"origin": "resample_o",
						"target": "montage_a"
					},
					{
						"origin": "resample_o",
						"target": "montage_s"
					},
					{
						"origin": "montage_a",
						"target": "outputspec"
					},
					{
						"origin": "montage_s",
						"target": "outputspec"
					}
				]
			},
			{
				"name": "func_template_edge_247",
				"type": "node",
				"inputs": {
					"function_str": "CPAC.qc.qc.afni_Edge3",
					"in_file": "[Undefined]"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "id_string_desc-preproc_T1w_67",
				"type": "node",
				"inputs": {
					"function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
					"cfg": "C-PAC Configuration ('cpac_default_monkey_skullstrip')",
					"unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
					"resource": "desc-preproc_T1w",
					"scan_id": "[Undefined]",
					"template_desc": "[Undefined]",
					"atlas_id": "[Undefined]",
					"fwhm": "[Undefined]",
					"subdir": "anat"
				},
				"outputs": {
					"out_filename": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "nii_desc-preproc_T1w_67",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"keep_ext": "True",
					"format_string": "[Undefined]",
					"parse_string": "[Undefined]",
					"use_fullpath": "False"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "json_desc-preproc_T1w_67",
				"type": "node",
				"inputs": {
					"function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
					"json_data": "{'CpacProvenance': [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], 'Sources': ['desc-head_T1w', 'desc-preproc_T1w', 'space-T1w_desc-brain_mask'], 'SkullStripped': 'True', 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
					"filename": "[Undefined]"
				},
				"outputs": {
					"json_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "sinker_desc-preproc_T1w_67",
				"type": "node",
				"inputs": {
					"base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output",
					"container": "pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
					"parameterization": "False",
					"strip_dir": "[Undefined]",
					"substitutions": "[Undefined]",
					"regexp_substitutions": "[Undefined]",
					"_outputs": "{}",
					"remove_dest_dir": "False",
					"creds_path": "[Undefined]",
					"encrypt_bucket_keys": "True",
					"bucket": "[Undefined]",
					"local_copy": "[Undefined]"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "id_string_desc-head_T1w_69",
				"type": "node",
				"inputs": {
					"function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
					"cfg": "C-PAC Configuration ('cpac_default_monkey_skullstrip')",
					"unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
					"resource": "desc-head_T1w",
					"scan_id": "[Undefined]",
					"template_desc": "[Undefined]",
					"atlas_id": "[Undefined]",
					"fwhm": "[Undefined]",
					"subdir": "anat"
				},
				"outputs": {
					"out_filename": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "nii_desc-head_T1w_69",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"keep_ext": "True",
					"format_string": "[Undefined]",
					"parse_string": "[Undefined]",
					"use_fullpath": "False"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "json_desc-head_T1w_69",
				"type": "node",
				"inputs": {
					"function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
					"json_data": "{'CpacProvenance': [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'Sources': ['desc-head_T1w', 'desc-preproc_T1w', 'space-T1w_desc-brain_mask'], 'SkullStripped': 'False', 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
					"filename": "[Undefined]"
				},
				"outputs": {
					"json_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "sinker_desc-head_T1w_69",
				"type": "node",
				"inputs": {
					"base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output",
					"container": "pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
					"parameterization": "False",
					"strip_dir": "[Undefined]",
					"substitutions": "[Undefined]",
					"regexp_substitutions": "[Undefined]",
					"_outputs": "{}",
					"remove_dest_dir": "False",
					"creds_path": "[Undefined]",
					"encrypt_bucket_keys": "True",
					"bucket": "[Undefined]",
					"local_copy": "[Undefined]"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "id_string_space-T1w_desc-brain_mask_63",
				"type": "node",
				"inputs": {
					"function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
					"cfg": "C-PAC Configuration ('cpac_default_monkey_skullstrip')",
					"unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
					"resource": "space-T1w_desc-brain_mask",
					"scan_id": "[Undefined]",
					"template_desc": "[Undefined]",
					"atlas_id": "[Undefined]",
					"fwhm": "[Undefined]",
					"subdir": "anat"
				},
				"outputs": {
					"out_filename": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "nii_space-T1w_desc-brain_mask_63",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"keep_ext": "True",
					"format_string": "[Undefined]",
					"parse_string": "[Undefined]",
					"use_fullpath": "False"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "json_space-T1w_desc-brain_mask_63",
				"type": "node",
				"inputs": {
					"function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
					"json_data": "{'CpacProvenance': [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'Sources': ['desc-preproc_T1w', 'T1w-brain-template', 'T1w-template', 'unet-model'], 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
					"filename": "[Undefined]"
				},
				"outputs": {
					"json_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "sinker_space-T1w_desc-brain_mask_63",
				"type": "node",
				"inputs": {
					"base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output",
					"container": "pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
					"parameterization": "False",
					"strip_dir": "[Undefined]",
					"substitutions": "[Undefined]",
					"regexp_substitutions": "[Undefined]",
					"_outputs": "{}",
					"remove_dest_dir": "False",
					"creds_path": "[Undefined]",
					"encrypt_bucket_keys": "True",
					"bucket": "[Undefined]",
					"local_copy": "[Undefined]"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "id_string_space-template_desc-preproc_T1w_76",
				"type": "node",
				"inputs": {
					"function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
					"cfg": "C-PAC Configuration ('cpac_default_monkey_skullstrip')",
					"unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
					"resource": "space-template_desc-preproc_T1w",
					"scan_id": "[Undefined]",
					"template_desc": "template - T1w-based whole-head template - /cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz",
					"atlas_id": "[Undefined]",
					"fwhm": "[Undefined]",
					"subdir": "anat"
				},
				"outputs": {
					"out_filename": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "nii_space-template_desc-preproc_T1w_76",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"keep_ext": "True",
					"format_string": "[Undefined]",
					"parse_string": "[Undefined]",
					"use_fullpath": "False"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "json_space-template_desc-preproc_T1w_76",
				"type": "node",
				"inputs": {
					"function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
					"json_data": "{'CpacProvenance': [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'space-template_desc-preproc_T1w:register_ANTs_anat_to_template'], 'SkullStripped': 'False', 'Sources': ['desc-preproc_T1w', 'space-T1w_desc-brain_mask', 'desc-head_T1w', 'T1w-template', 'T1w-brain-template', 'T1w-brain-template-mask'], 'Description': 'The preprocessed T1w brain transformed to template space.', 'Template': 'template - T1w-based whole-head template - /cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'Resolution': '2mm', 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
					"filename": "[Undefined]"
				},
				"outputs": {
					"json_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "sinker_space-template_desc-preproc_T1w_76",
				"type": "node",
				"inputs": {
					"base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output",
					"container": "pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
					"parameterization": "False",
					"strip_dir": "[Undefined]",
					"substitutions": "[Undefined]",
					"regexp_substitutions": "[Undefined]",
					"_outputs": "{}",
					"remove_dest_dir": "False",
					"creds_path": "[Undefined]",
					"encrypt_bucket_keys": "True",
					"bucket": "[Undefined]",
					"local_copy": "[Undefined]"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "id_string_from-T1w_to-template_mode-image_xfm_77",
				"type": "node",
				"inputs": {
					"function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
					"cfg": "C-PAC Configuration ('cpac_default_monkey_skullstrip')",
					"unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
					"resource": "from-T1w_to-template_mode-image_xfm",
					"scan_id": "[Undefined]",
					"template_desc": "template - T1w-based whole-head template - /cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz",
					"atlas_id": "[Undefined]",
					"fwhm": "[Undefined]",
					"subdir": "anat"
				},
				"outputs": {
					"out_filename": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "nii_from-T1w_to-template_mode-image_xfm_77",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"keep_ext": "True",
					"format_string": "[Undefined]",
					"parse_string": "[Undefined]",
					"use_fullpath": "False"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "json_from-T1w_to-template_mode-image_xfm_77",
				"type": "node",
				"inputs": {
					"function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
					"json_data": "{'CpacProvenance': [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_ANTs_anat_to_template'], 'Sources': ['desc-preproc_T1w', 'space-T1w_desc-brain_mask', 'desc-head_T1w', 'T1w-template', 'T1w-brain-template', 'T1w-brain-template-mask'], 'Description': 'Composite (affine + warp field) transform from T1w native space to T1w-template space.', 'Template': 'template - T1w-based whole-head template - /cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'Resolution': '2mm', 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
					"filename": "[Undefined]"
				},
				"outputs": {
					"json_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "sinker_from-T1w_to-template_mode-image_xfm_77",
				"type": "node",
				"inputs": {
					"base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output",
					"container": "pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
					"parameterization": "False",
					"strip_dir": "[Undefined]",
					"substitutions": "[Undefined]",
					"regexp_substitutions": "[Undefined]",
					"_outputs": "{}",
					"remove_dest_dir": "False",
					"creds_path": "[Undefined]",
					"encrypt_bucket_keys": "True",
					"bucket": "[Undefined]",
					"local_copy": "[Undefined]"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "id_string_from-template_to-T1w_mode-image_xfm_78",
				"type": "node",
				"inputs": {
					"function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
					"cfg": "C-PAC Configuration ('cpac_default_monkey_skullstrip')",
					"unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
					"resource": "from-template_to-T1w_mode-image_xfm",
					"scan_id": "[Undefined]",
					"template_desc": "template - T1w-based whole-head template - /cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz",
					"atlas_id": "[Undefined]",
					"fwhm": "[Undefined]",
					"subdir": "anat"
				},
				"outputs": {
					"out_filename": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "nii_from-template_to-T1w_mode-image_xfm_78",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"keep_ext": "True",
					"format_string": "[Undefined]",
					"parse_string": "[Undefined]",
					"use_fullpath": "False"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "json_from-template_to-T1w_mode-image_xfm_78",
				"type": "node",
				"inputs": {
					"function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
					"json_data": "{'CpacProvenance': [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-template_to-T1w_mode-image_xfm:register_ANTs_anat_to_template'], 'Sources': ['desc-preproc_T1w', 'space-T1w_desc-brain_mask', 'desc-head_T1w', 'T1w-template', 'T1w-brain-template', 'T1w-brain-template-mask'], 'Description': 'Composite (affine + warp field) transform from T1w-template space to T1w native space.', 'Template': 'template - T1w-based whole-head template - /cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'Resolution': '2mm', 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
					"filename": "[Undefined]"
				},
				"outputs": {
					"json_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "sinker_from-template_to-T1w_mode-image_xfm_78",
				"type": "node",
				"inputs": {
					"base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output",
					"container": "pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
					"parameterization": "False",
					"strip_dir": "[Undefined]",
					"substitutions": "[Undefined]",
					"regexp_substitutions": "[Undefined]",
					"_outputs": "{}",
					"remove_dest_dir": "False",
					"creds_path": "[Undefined]",
					"encrypt_bucket_keys": "True",
					"bucket": "[Undefined]",
					"local_copy": "[Undefined]"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "id_string_from-T1w_to-template_mode-image_desc-linear_xfm_79",
				"type": "node",
				"inputs": {
					"function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
					"cfg": "C-PAC Configuration ('cpac_default_monkey_skullstrip')",
					"unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
					"resource": "from-T1w_to-template_mode-image_desc-linear_xfm",
					"scan_id": "[Undefined]",
					"template_desc": "template - T1w-based whole-head template - /cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz",
					"atlas_id": "[Undefined]",
					"fwhm": "[Undefined]",
					"subdir": "anat"
				},
				"outputs": {
					"out_filename": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "nii_from-T1w_to-template_mode-image_desc-linear_xfm_79",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"keep_ext": "True",
					"format_string": "[Undefined]",
					"parse_string": "[Undefined]",
					"use_fullpath": "False"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "json_from-T1w_to-template_mode-image_desc-linear_xfm_79",
				"type": "node",
				"inputs": {
					"function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
					"json_data": "{'CpacProvenance': [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-T1w_to-template_mode-image_desc-linear_xfm:register_ANTs_anat_to_template'], 'Sources': ['desc-preproc_T1w', 'space-T1w_desc-brain_mask', 'desc-head_T1w', 'T1w-template', 'T1w-brain-template', 'T1w-brain-template-mask'], 'Description': 'Linear (affine) transform from T1w native space to T1w-template space.', 'Template': 'template - T1w-based whole-head template - /cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'Resolution': '2mm', 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
					"filename": "[Undefined]"
				},
				"outputs": {
					"json_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "sinker_from-T1w_to-template_mode-image_desc-linear_xfm_79",
				"type": "node",
				"inputs": {
					"base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output",
					"container": "pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
					"parameterization": "False",
					"strip_dir": "[Undefined]",
					"substitutions": "[Undefined]",
					"regexp_substitutions": "[Undefined]",
					"_outputs": "{}",
					"remove_dest_dir": "False",
					"creds_path": "[Undefined]",
					"encrypt_bucket_keys": "True",
					"bucket": "[Undefined]",
					"local_copy": "[Undefined]"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "id_string_from-template_to-T1w_mode-image_desc-linear_xfm_80",
				"type": "node",
				"inputs": {
					"function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
					"cfg": "C-PAC Configuration ('cpac_default_monkey_skullstrip')",
					"unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
					"resource": "from-template_to-T1w_mode-image_desc-linear_xfm",
					"scan_id": "[Undefined]",
					"template_desc": "template - T1w-based whole-head template - /cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz",
					"atlas_id": "[Undefined]",
					"fwhm": "[Undefined]",
					"subdir": "anat"
				},
				"outputs": {
					"out_filename": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "nii_from-template_to-T1w_mode-image_desc-linear_xfm_80",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"keep_ext": "True",
					"format_string": "[Undefined]",
					"parse_string": "[Undefined]",
					"use_fullpath": "False"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "json_from-template_to-T1w_mode-image_desc-linear_xfm_80",
				"type": "node",
				"inputs": {
					"function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
					"json_data": "{'CpacProvenance': [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_ANTs_anat_to_template'], 'Sources': ['desc-preproc_T1w', 'space-T1w_desc-brain_mask', 'desc-head_T1w', 'T1w-template', 'T1w-brain-template', 'T1w-brain-template-mask'], 'Description': 'Linear (affine) transform from T1w-template space to T1w native space.', 'Template': 'template - T1w-based whole-head template - /cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'Resolution': '2mm', 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
					"filename": "[Undefined]"
				},
				"outputs": {
					"json_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "sinker_from-template_to-T1w_mode-image_desc-linear_xfm_80",
				"type": "node",
				"inputs": {
					"base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output",
					"container": "pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
					"parameterization": "False",
					"strip_dir": "[Undefined]",
					"substitutions": "[Undefined]",
					"regexp_substitutions": "[Undefined]",
					"_outputs": "{}",
					"remove_dest_dir": "False",
					"creds_path": "[Undefined]",
					"encrypt_bucket_keys": "True",
					"bucket": "[Undefined]",
					"local_copy": "[Undefined]"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "id_string_from-T1w_to-template_mode-image_desc-nonlinear_xfm_81",
				"type": "node",
				"inputs": {
					"function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
					"cfg": "C-PAC Configuration ('cpac_default_monkey_skullstrip')",
					"unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
					"resource": "from-T1w_to-template_mode-image_desc-nonlinear_xfm",
					"scan_id": "[Undefined]",
					"template_desc": "template - T1w-based whole-head template - /cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz",
					"atlas_id": "[Undefined]",
					"fwhm": "[Undefined]",
					"subdir": "anat"
				},
				"outputs": {
					"out_filename": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "nii_from-T1w_to-template_mode-image_desc-nonlinear_xfm_81",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"keep_ext": "True",
					"format_string": "[Undefined]",
					"parse_string": "[Undefined]",
					"use_fullpath": "False"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "json_from-T1w_to-template_mode-image_desc-nonlinear_xfm_81",
				"type": "node",
				"inputs": {
					"function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
					"json_data": "{'CpacProvenance': [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-T1w_to-template_mode-image_desc-nonlinear_xfm:register_ANTs_anat_to_template'], 'Sources': ['desc-preproc_T1w', 'space-T1w_desc-brain_mask', 'desc-head_T1w', 'T1w-template', 'T1w-brain-template', 'T1w-brain-template-mask'], 'Description': 'Nonlinear (warp field) transform from T1w native space to T1w-template space.', 'Template': 'template - T1w-based whole-head template - /cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'Resolution': '2mm', 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
					"filename": "[Undefined]"
				},
				"outputs": {
					"json_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "sinker_from-T1w_to-template_mode-image_desc-nonlinear_xfm_81",
				"type": "node",
				"inputs": {
					"base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output",
					"container": "pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
					"parameterization": "False",
					"strip_dir": "[Undefined]",
					"substitutions": "[Undefined]",
					"regexp_substitutions": "[Undefined]",
					"_outputs": "{}",
					"remove_dest_dir": "False",
					"creds_path": "[Undefined]",
					"encrypt_bucket_keys": "True",
					"bucket": "[Undefined]",
					"local_copy": "[Undefined]"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "id_string_from-template_to-T1w_mode-image_desc-nonlinear_xfm_82",
				"type": "node",
				"inputs": {
					"function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
					"cfg": "C-PAC Configuration ('cpac_default_monkey_skullstrip')",
					"unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
					"resource": "from-template_to-T1w_mode-image_desc-nonlinear_xfm",
					"scan_id": "[Undefined]",
					"template_desc": "template - T1w-based whole-head template - /cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz",
					"atlas_id": "[Undefined]",
					"fwhm": "[Undefined]",
					"subdir": "anat"
				},
				"outputs": {
					"out_filename": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "nii_from-template_to-T1w_mode-image_desc-nonlinear_xfm_82",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"keep_ext": "True",
					"format_string": "[Undefined]",
					"parse_string": "[Undefined]",
					"use_fullpath": "False"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "json_from-template_to-T1w_mode-image_desc-nonlinear_xfm_82",
				"type": "node",
				"inputs": {
					"function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
					"json_data": "{'CpacProvenance': [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-nonlinear_xfm:register_ANTs_anat_to_template'], 'Sources': ['desc-preproc_T1w', 'space-T1w_desc-brain_mask', 'desc-head_T1w', 'T1w-template', 'T1w-brain-template', 'T1w-brain-template-mask'], 'Description': 'Nonlinear (warp field) transform from T1w-template space to T1w native space.', 'Template': 'template - T1w-based whole-head template - /cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'Resolution': '2mm', 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
					"filename": "[Undefined]"
				},
				"outputs": {
					"json_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "sinker_from-template_to-T1w_mode-image_desc-nonlinear_xfm_82",
				"type": "node",
				"inputs": {
					"base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output",
					"container": "pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
					"parameterization": "False",
					"strip_dir": "[Undefined]",
					"substitutions": "[Undefined]",
					"regexp_substitutions": "[Undefined]",
					"_outputs": "{}",
					"remove_dest_dir": "False",
					"creds_path": "[Undefined]",
					"encrypt_bucket_keys": "True",
					"bucket": "[Undefined]",
					"local_copy": "[Undefined]"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "id_string_space-template_desc-head_T1w_86",
				"type": "node",
				"inputs": {
					"function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
					"cfg": "C-PAC Configuration ('cpac_default_monkey_skullstrip')",
					"unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
					"resource": "space-template_desc-head_T1w",
					"scan_id": "[Undefined]",
					"template_desc": "template - T1w-based whole-head template - /cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz",
					"atlas_id": "[Undefined]",
					"fwhm": "[Undefined]",
					"subdir": "anat"
				},
				"outputs": {
					"out_filename": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "nii_space-template_desc-head_T1w_86",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"keep_ext": "True",
					"format_string": "[Undefined]",
					"parse_string": "[Undefined]",
					"use_fullpath": "False"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "json_space-template_desc-head_T1w_86",
				"type": "node",
				"inputs": {
					"function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
					"json_data": "{'CpacProvenance': [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_ANTs_anat_to_template'], ['T1w-template:template_resample'], 'space-template_desc-head_T1w:transform_whole_head_T1w_to_T1template'], 'SkullStripped': 'False', 'Sources': ['desc-head_T1w', 'from-T1w_to-template_mode-image_xfm', 'T1w-template'], 'Template': 'template - T1w-based whole-head template - /cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'Resolution': '2mm', 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
					"filename": "[Undefined]"
				},
				"outputs": {
					"json_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "sinker_space-template_desc-head_T1w_86",
				"type": "node",
				"inputs": {
					"base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output",
					"container": "pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
					"parameterization": "False",
					"strip_dir": "[Undefined]",
					"substitutions": "[Undefined]",
					"regexp_substitutions": "[Undefined]",
					"_outputs": "{}",
					"remove_dest_dir": "False",
					"creds_path": "[Undefined]",
					"encrypt_bucket_keys": "True",
					"bucket": "[Undefined]",
					"local_copy": "[Undefined]"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "id_string_space-template_desc-brain_mask_90",
				"type": "node",
				"inputs": {
					"function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
					"cfg": "C-PAC Configuration ('cpac_default_monkey_skullstrip')",
					"unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
					"resource": "space-template_desc-brain_mask",
					"scan_id": "[Undefined]",
					"template_desc": "template - T1w-based whole-head template - /cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz",
					"atlas_id": "[Undefined]",
					"fwhm": "[Undefined]",
					"subdir": "anat"
				},
				"outputs": {
					"out_filename": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "nii_space-template_desc-brain_mask_90",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"keep_ext": "True",
					"format_string": "[Undefined]",
					"parse_string": "[Undefined]",
					"use_fullpath": "False"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "json_space-template_desc-brain_mask_90",
				"type": "node",
				"inputs": {
					"function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
					"json_data": "{'CpacProvenance': [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_ANTs_anat_to_template'], ['T1w-template:template_resample'], 'space-template_desc-brain_mask:transform_T1mask_to_T1template'], 'Sources': ['space-T1w_desc-brain_mask', 'from-T1w_to-template_mode-image_xfm', 'T1w-template'], 'Template': 'template - T1w-based whole-head template - /cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'Resolution': '2mm', 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
					"filename": "[Undefined]"
				},
				"outputs": {
					"json_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "sinker_space-template_desc-brain_mask_90",
				"type": "node",
				"inputs": {
					"base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output",
					"container": "pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
					"parameterization": "False",
					"strip_dir": "[Undefined]",
					"substitutions": "[Undefined]",
					"regexp_substitutions": "[Undefined]",
					"_outputs": "{}",
					"remove_dest_dir": "False",
					"creds_path": "[Undefined]",
					"encrypt_bucket_keys": "True",
					"bucket": "[Undefined]",
					"local_copy": "[Undefined]"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "id_string_label-CSF_mask_93",
				"type": "node",
				"inputs": {
					"function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
					"cfg": "C-PAC Configuration ('cpac_default_monkey_skullstrip')",
					"unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
					"resource": "label-CSF_mask",
					"scan_id": "[Undefined]",
					"template_desc": "[Undefined]",
					"atlas_id": "[Undefined]",
					"fwhm": "[Undefined]",
					"subdir": "anat"
				},
				"outputs": {
					"out_filename": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "nii_label-CSF_mask_93",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"keep_ext": "True",
					"format_string": "[Undefined]",
					"parse_string": "[Undefined]",
					"use_fullpath": "False"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "json_label-CSF_mask_93",
				"type": "node",
				"inputs": {
					"function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
					"json_data": "{'CpacProvenance': [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-CSF_mask:tissue_seg_ants_prior'], 'Sources': ['desc-brain_T1w', 'space-T1w_desc-brain_mask'], 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
					"filename": "[Undefined]"
				},
				"outputs": {
					"json_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "sinker_label-CSF_mask_93",
				"type": "node",
				"inputs": {
					"base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output",
					"container": "pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
					"parameterization": "False",
					"strip_dir": "[Undefined]",
					"substitutions": "[Undefined]",
					"regexp_substitutions": "[Undefined]",
					"_outputs": "{}",
					"remove_dest_dir": "False",
					"creds_path": "[Undefined]",
					"encrypt_bucket_keys": "True",
					"bucket": "[Undefined]",
					"local_copy": "[Undefined]"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "id_string_label-GM_mask_94",
				"type": "node",
				"inputs": {
					"function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
					"cfg": "C-PAC Configuration ('cpac_default_monkey_skullstrip')",
					"unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
					"resource": "label-GM_mask",
					"scan_id": "[Undefined]",
					"template_desc": "[Undefined]",
					"atlas_id": "[Undefined]",
					"fwhm": "[Undefined]",
					"subdir": "anat"
				},
				"outputs": {
					"out_filename": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "nii_label-GM_mask_94",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"keep_ext": "True",
					"format_string": "[Undefined]",
					"parse_string": "[Undefined]",
					"use_fullpath": "False"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "json_label-GM_mask_94",
				"type": "node",
				"inputs": {
					"function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
					"json_data": "{'CpacProvenance': [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-GM_mask:tissue_seg_ants_prior'], 'Sources': ['desc-brain_T1w', 'space-T1w_desc-brain_mask'], 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
					"filename": "[Undefined]"
				},
				"outputs": {
					"json_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "sinker_label-GM_mask_94",
				"type": "node",
				"inputs": {
					"base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output",
					"container": "pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
					"parameterization": "False",
					"strip_dir": "[Undefined]",
					"substitutions": "[Undefined]",
					"regexp_substitutions": "[Undefined]",
					"_outputs": "{}",
					"remove_dest_dir": "False",
					"creds_path": "[Undefined]",
					"encrypt_bucket_keys": "True",
					"bucket": "[Undefined]",
					"local_copy": "[Undefined]"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "id_string_label-WM_mask_95",
				"type": "node",
				"inputs": {
					"function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
					"cfg": "C-PAC Configuration ('cpac_default_monkey_skullstrip')",
					"unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
					"resource": "label-WM_mask",
					"scan_id": "[Undefined]",
					"template_desc": "[Undefined]",
					"atlas_id": "[Undefined]",
					"fwhm": "[Undefined]",
					"subdir": "anat"
				},
				"outputs": {
					"out_filename": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "nii_label-WM_mask_95",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"keep_ext": "True",
					"format_string": "[Undefined]",
					"parse_string": "[Undefined]",
					"use_fullpath": "False"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "json_label-WM_mask_95",
				"type": "node",
				"inputs": {
					"function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
					"json_data": "{'CpacProvenance': [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], 'Sources': ['desc-brain_T1w', 'space-T1w_desc-brain_mask'], 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
					"filename": "[Undefined]"
				},
				"outputs": {
					"json_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "sinker_label-WM_mask_95",
				"type": "node",
				"inputs": {
					"base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output",
					"container": "pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
					"parameterization": "False",
					"strip_dir": "[Undefined]",
					"substitutions": "[Undefined]",
					"regexp_substitutions": "[Undefined]",
					"_outputs": "{}",
					"remove_dest_dir": "False",
					"creds_path": "[Undefined]",
					"encrypt_bucket_keys": "True",
					"bucket": "[Undefined]",
					"local_copy": "[Undefined]"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "id_string_desc-preproc_bold_200",
				"type": "node",
				"inputs": {
					"function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
					"cfg": "C-PAC Configuration ('cpac_default_monkey_skullstrip')",
					"unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
					"resource": "desc-preproc_bold",
					"scan_id": "[Undefined]",
					"template_desc": "[Undefined]",
					"atlas_id": "[Undefined]",
					"fwhm": "[Undefined]",
					"subdir": "func"
				},
				"outputs": {
					"out_filename": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "nii_desc-preproc_bold_200",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"keep_ext": "True",
					"format_string": "[Undefined]",
					"parse_string": "[Undefined]",
					"use_fullpath": "False"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "json_desc-preproc_bold_200",
				"type": "node",
				"inputs": {
					"function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
					"json_data": "{'CpacProvenance': [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [['TR:func_metadata_ingress'], [['TR:func_metadata_ingress'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-jenkinson:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-power:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'dvars:calc_motion_stats'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-CSF_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-GM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_ANTs_anat_to_template'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-T1w_to-template_mode-image_desc-linear_xfm:register_ANTs_anat_to_template'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking', 'desc-preproc_bold:func_normalize'], 'desc-confounds_timeseries:nuisance_regressors_generation_T1w_Regressor_1'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-jenkinson:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-power:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'dvars:calc_motion_stats'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking', 'desc-preproc_bold:func_normalize'], 'desc-preproc_bold:nuisance_regression_native'], [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-stc_bold:func_slice_time'], ['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], ['pe-direction:func_metadata_ingress'], 'desc-preproc_bold:apply_phasediff_to_timeseries_separately_default'], [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-stc_bold:func_slice_time'], ['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_ANTs_anat_to_template'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-template_to-T1w_mode-image_xfm:register_ANTs_anat_to_template'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], ['T1w-brain-template-funcreg:template_resample'], 'from-bold_to-template_mode-image_xfm:create_func_to_T1template_xfm'], 'desc-preproc_bold:apply_blip_to_timeseries_separately_default'], 'CpacVariant': {'bold': ['apply_phasediff_to_timeseries_separately_default', 'apply_blip_to_timeseries_separately_default']}, 'SkullStripped': True, 'Sources': ['sbref', 'desc-preproc_bold', 'desc-stc_bold', 'bold', 'from-bold_to-template_mode-image_xfm'], 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
					"filename": "[Undefined]"
				},
				"outputs": {
					"json_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "sinker_desc-preproc_bold_200",
				"type": "node",
				"inputs": {
					"base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output",
					"container": "pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
					"parameterization": "False",
					"strip_dir": "[Undefined]",
					"substitutions": "[Undefined]",
					"regexp_substitutions": "[Undefined]",
					"_outputs": "{}",
					"remove_dest_dir": "False",
					"creds_path": "[Undefined]",
					"encrypt_bucket_keys": "True",
					"bucket": "[Undefined]",
					"local_copy": "[Undefined]"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "id_string_desc-mean_bold_105",
				"type": "node",
				"inputs": {
					"function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
					"cfg": "C-PAC Configuration ('cpac_default_monkey_skullstrip')",
					"unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
					"resource": "desc-mean_bold",
					"scan_id": "[Undefined]",
					"template_desc": "[Undefined]",
					"atlas_id": "[Undefined]",
					"fwhm": "[Undefined]",
					"subdir": "func"
				},
				"outputs": {
					"out_filename": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "nii_desc-mean_bold_105",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"keep_ext": "True",
					"format_string": "[Undefined]",
					"parse_string": "[Undefined]",
					"use_fullpath": "False"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "json_desc-mean_bold_105",
				"type": "node",
				"inputs": {
					"function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
					"json_data": "{'CpacProvenance': [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean'], 'Sources': ['desc-preproc_bold'], 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
					"filename": "[Undefined]"
				},
				"outputs": {
					"json_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "sinker_desc-mean_bold_105",
				"type": "node",
				"inputs": {
					"base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output",
					"container": "pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
					"parameterization": "False",
					"strip_dir": "[Undefined]",
					"substitutions": "[Undefined]",
					"regexp_substitutions": "[Undefined]",
					"_outputs": "{}",
					"remove_dest_dir": "False",
					"creds_path": "[Undefined]",
					"encrypt_bucket_keys": "True",
					"bucket": "[Undefined]",
					"local_copy": "[Undefined]"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "id_string_desc-movementParameters_motion_114",
				"type": "node",
				"inputs": {
					"function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
					"cfg": "C-PAC Configuration ('cpac_default_monkey_skullstrip')",
					"unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
					"resource": "desc-movementParameters_motion",
					"scan_id": "[Undefined]",
					"template_desc": "[Undefined]",
					"atlas_id": "[Undefined]",
					"fwhm": "[Undefined]",
					"subdir": "func"
				},
				"outputs": {
					"out_filename": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "nii_desc-movementParameters_motion_114",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"keep_ext": "True",
					"format_string": "[Undefined]",
					"parse_string": "[Undefined]",
					"use_fullpath": "False"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "json_desc-movementParameters_motion_114",
				"type": "node",
				"inputs": {
					"function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
					"json_data": "{'CpacProvenance': [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], 'Sources': ['desc-preproc_bold', 'motion-basefile'], 'Description': \"Each line contains for one timepoint a 6-DOF rigid transform parameters in the format defined by AFNI's 3dvolreg: [roll, pitch, yaw, superior displacement, left displacement, posterior displacement]. Rotation parameters are in degrees counterclockwise, and translation parameters are in millimeters.\", 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
					"filename": "[Undefined]"
				},
				"outputs": {
					"json_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "sinker_desc-movementParameters_motion_114",
				"type": "node",
				"inputs": {
					"base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output",
					"container": "pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
					"parameterization": "False",
					"strip_dir": "[Undefined]",
					"substitutions": "[Undefined]",
					"regexp_substitutions": "[Undefined]",
					"_outputs": "{}",
					"remove_dest_dir": "False",
					"creds_path": "[Undefined]",
					"encrypt_bucket_keys": "True",
					"bucket": "[Undefined]",
					"local_copy": "[Undefined]"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "id_string_space-bold_desc-brain_mask_121",
				"type": "node",
				"inputs": {
					"function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
					"cfg": "C-PAC Configuration ('cpac_default_monkey_skullstrip')",
					"unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
					"resource": "space-bold_desc-brain_mask",
					"scan_id": "[Undefined]",
					"template_desc": "[Undefined]",
					"atlas_id": "[Undefined]",
					"fwhm": "[Undefined]",
					"subdir": "func"
				},
				"outputs": {
					"out_filename": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "nii_space-bold_desc-brain_mask_121",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"keep_ext": "True",
					"format_string": "[Undefined]",
					"parse_string": "[Undefined]",
					"use_fullpath": "False"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "json_space-bold_desc-brain_mask_121",
				"type": "node",
				"inputs": {
					"function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
					"json_data": "{'CpacProvenance': [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'Sources': ['bold', 'desc-preproc_bold', 'desc-brain_T1w', 'space-T1w_desc-brain_mask'], 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
					"filename": "[Undefined]"
				},
				"outputs": {
					"json_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "sinker_space-bold_desc-brain_mask_121",
				"type": "node",
				"inputs": {
					"base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output",
					"container": "pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
					"parameterization": "False",
					"strip_dir": "[Undefined]",
					"substitutions": "[Undefined]",
					"regexp_substitutions": "[Undefined]",
					"_outputs": "{}",
					"remove_dest_dir": "False",
					"creds_path": "[Undefined]",
					"encrypt_bucket_keys": "True",
					"bucket": "[Undefined]",
					"local_copy": "[Undefined]"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "id_string_motion_139",
				"type": "node",
				"inputs": {
					"function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
					"cfg": "C-PAC Configuration ('cpac_default_monkey_skullstrip')",
					"unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
					"resource": "motion",
					"scan_id": "[Undefined]",
					"template_desc": "[Undefined]",
					"atlas_id": "[Undefined]",
					"fwhm": "[Undefined]",
					"subdir": "func"
				},
				"outputs": {
					"out_filename": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "nii_motion_139",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"keep_ext": "True",
					"format_string": "[Undefined]",
					"parse_string": "[Undefined]",
					"use_fullpath": "False"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "json_motion_139",
				"type": "node",
				"inputs": {
					"function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
					"json_data": "{'CpacProvenance': [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'motion:calc_motion_stats'], 'Sources': ['desc-preproc_bold', 'space-bold_desc-brain_mask', 'desc-movementParameters_motion', 'max-displacement', 'filtered-coordinate-transformation', 'coordinate-transformation', 'subject', 'scan'], 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
					"filename": "[Undefined]"
				},
				"outputs": {
					"json_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "sinker_motion_139",
				"type": "node",
				"inputs": {
					"base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output",
					"container": "pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
					"parameterization": "False",
					"strip_dir": "[Undefined]",
					"substitutions": "[Undefined]",
					"regexp_substitutions": "[Undefined]",
					"_outputs": "{}",
					"remove_dest_dir": "False",
					"creds_path": "[Undefined]",
					"encrypt_bucket_keys": "True",
					"bucket": "[Undefined]",
					"local_copy": "[Undefined]"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "id_string_desc-summary_motion_140",
				"type": "node",
				"inputs": {
					"function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
					"cfg": "C-PAC Configuration ('cpac_default_monkey_skullstrip')",
					"unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
					"resource": "desc-summary_motion",
					"scan_id": "[Undefined]",
					"template_desc": "[Undefined]",
					"atlas_id": "[Undefined]",
					"fwhm": "[Undefined]",
					"subdir": "func"
				},
				"outputs": {
					"out_filename": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "nii_desc-summary_motion_140",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"keep_ext": "True",
					"format_string": "[Undefined]",
					"parse_string": "[Undefined]",
					"use_fullpath": "False"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "json_desc-summary_motion_140",
				"type": "node",
				"inputs": {
					"function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
					"json_data": "{'CpacProvenance': [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'desc-summary_motion:calc_motion_stats'], 'Sources': ['desc-preproc_bold', 'space-bold_desc-brain_mask', 'desc-movementParameters_motion', 'max-displacement', 'filtered-coordinate-transformation', 'coordinate-transformation', 'subject', 'scan'], 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
					"filename": "[Undefined]"
				},
				"outputs": {
					"json_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "sinker_desc-summary_motion_140",
				"type": "node",
				"inputs": {
					"base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output",
					"container": "pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
					"parameterization": "False",
					"strip_dir": "[Undefined]",
					"substitutions": "[Undefined]",
					"regexp_substitutions": "[Undefined]",
					"_outputs": "{}",
					"remove_dest_dir": "False",
					"creds_path": "[Undefined]",
					"encrypt_bucket_keys": "True",
					"bucket": "[Undefined]",
					"local_copy": "[Undefined]"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "id_string_sbref_142",
				"type": "node",
				"inputs": {
					"function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
					"cfg": "C-PAC Configuration ('cpac_default_monkey_skullstrip')",
					"unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
					"resource": "sbref",
					"scan_id": "[Undefined]",
					"template_desc": "[Undefined]",
					"atlas_id": "[Undefined]",
					"fwhm": "[Undefined]",
					"subdir": "func"
				},
				"outputs": {
					"out_filename": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "nii_sbref_142",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"keep_ext": "True",
					"format_string": "[Undefined]",
					"parse_string": "[Undefined]",
					"use_fullpath": "False"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "json_sbref_142",
				"type": "node",
				"inputs": {
					"function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
					"json_data": "{'CpacProvenance': [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], 'Sources': ['desc-mean_bold'], 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
					"filename": "[Undefined]"
				},
				"outputs": {
					"json_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "sinker_sbref_142",
				"type": "node",
				"inputs": {
					"base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output",
					"container": "pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
					"parameterization": "False",
					"strip_dir": "[Undefined]",
					"substitutions": "[Undefined]",
					"regexp_substitutions": "[Undefined]",
					"_outputs": "{}",
					"remove_dest_dir": "False",
					"creds_path": "[Undefined]",
					"encrypt_bucket_keys": "True",
					"bucket": "[Undefined]",
					"local_copy": "[Undefined]"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "id_string_space-T1w_sbref_150",
				"type": "node",
				"inputs": {
					"function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
					"cfg": "C-PAC Configuration ('cpac_default_monkey_skullstrip')",
					"unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
					"resource": "space-T1w_sbref",
					"scan_id": "[Undefined]",
					"template_desc": "[Undefined]",
					"atlas_id": "[Undefined]",
					"fwhm": "[Undefined]",
					"subdir": "func"
				},
				"outputs": {
					"out_filename": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "nii_space-T1w_sbref_150",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"keep_ext": "True",
					"format_string": "[Undefined]",
					"parse_string": "[Undefined]",
					"use_fullpath": "False"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "json_space-T1w_sbref_150",
				"type": "node",
				"inputs": {
					"function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
					"json_data": "{'CpacProvenance': [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'space-T1w_sbref:coregistration'], 'Sources': ['sbref', 'desc-motion_bold', 'pe-direction', 'desc-preproc_T1w', 'label-WM_mask', 'desc-head_T1w'], 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
					"filename": "[Undefined]"
				},
				"outputs": {
					"json_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "sinker_space-T1w_sbref_150",
				"type": "node",
				"inputs": {
					"base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output",
					"container": "pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
					"parameterization": "False",
					"strip_dir": "[Undefined]",
					"substitutions": "[Undefined]",
					"regexp_substitutions": "[Undefined]",
					"_outputs": "{}",
					"remove_dest_dir": "False",
					"creds_path": "[Undefined]",
					"encrypt_bucket_keys": "True",
					"bucket": "[Undefined]",
					"local_copy": "[Undefined]"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "id_string_from-bold_to-T1w_mode-image_desc-linear_xfm_151",
				"type": "node",
				"inputs": {
					"function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
					"cfg": "C-PAC Configuration ('cpac_default_monkey_skullstrip')",
					"unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
					"resource": "from-bold_to-T1w_mode-image_desc-linear_xfm",
					"scan_id": "[Undefined]",
					"template_desc": "[Undefined]",
					"atlas_id": "[Undefined]",
					"fwhm": "[Undefined]",
					"subdir": "func"
				},
				"outputs": {
					"out_filename": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "nii_from-bold_to-T1w_mode-image_desc-linear_xfm_151",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"keep_ext": "True",
					"format_string": "[Undefined]",
					"parse_string": "[Undefined]",
					"use_fullpath": "False"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "json_from-bold_to-T1w_mode-image_desc-linear_xfm_151",
				"type": "node",
				"inputs": {
					"function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
					"json_data": "{'CpacProvenance': [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], 'Sources': ['sbref', 'desc-motion_bold', 'pe-direction', 'desc-preproc_T1w', 'label-WM_mask', 'desc-head_T1w'], 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
					"filename": "[Undefined]"
				},
				"outputs": {
					"json_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "sinker_from-bold_to-T1w_mode-image_desc-linear_xfm_151",
				"type": "node",
				"inputs": {
					"base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output",
					"container": "pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
					"parameterization": "False",
					"strip_dir": "[Undefined]",
					"substitutions": "[Undefined]",
					"regexp_substitutions": "[Undefined]",
					"_outputs": "{}",
					"remove_dest_dir": "False",
					"creds_path": "[Undefined]",
					"encrypt_bucket_keys": "True",
					"bucket": "[Undefined]",
					"local_copy": "[Undefined]"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "id_string_from-bold_to-template_mode-image_xfm_158",
				"type": "node",
				"inputs": {
					"function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
					"cfg": "C-PAC Configuration ('cpac_default_monkey_skullstrip')",
					"unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
					"resource": "from-bold_to-template_mode-image_xfm",
					"scan_id": "[Undefined]",
					"template_desc": "template - T1w-based skull-stripped template resampled to the desired preprocessed-functional resolution - /cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz",
					"atlas_id": "[Undefined]",
					"fwhm": "[Undefined]",
					"subdir": "func"
				},
				"outputs": {
					"out_filename": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "nii_from-bold_to-template_mode-image_xfm_158",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"keep_ext": "True",
					"format_string": "[Undefined]",
					"parse_string": "[Undefined]",
					"use_fullpath": "False"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "json_from-bold_to-template_mode-image_xfm_158",
				"type": "node",
				"inputs": {
					"function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
					"json_data": "{'CpacProvenance': [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_ANTs_anat_to_template'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-template_to-T1w_mode-image_xfm:register_ANTs_anat_to_template'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], ['T1w-brain-template-funcreg:template_resample'], 'from-bold_to-template_mode-image_xfm:create_func_to_T1template_xfm'], 'Sources': ['sbref', 'from-bold_to-T1w_mode-image_desc-linear_xfm', 'from-T1w_to-template_mode-image_xfm', 'from-template_to-T1w_mode-image_xfm', 'desc-brain_T1w', 'T1w-brain-template-funcreg'], 'Template': 'template - T1w-based skull-stripped template resampled to the desired preprocessed-functional resolution - /cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'Resolution': '2mm', 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
					"filename": "[Undefined]"
				},
				"outputs": {
					"json_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "sinker_from-bold_to-template_mode-image_xfm_158",
				"type": "node",
				"inputs": {
					"base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output",
					"container": "pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
					"parameterization": "False",
					"strip_dir": "[Undefined]",
					"substitutions": "[Undefined]",
					"regexp_substitutions": "[Undefined]",
					"_outputs": "{}",
					"remove_dest_dir": "False",
					"creds_path": "[Undefined]",
					"encrypt_bucket_keys": "True",
					"bucket": "[Undefined]",
					"local_copy": "[Undefined]"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "id_string_from-template_to-bold_mode-image_xfm_159",
				"type": "node",
				"inputs": {
					"function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
					"cfg": "C-PAC Configuration ('cpac_default_monkey_skullstrip')",
					"unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
					"resource": "from-template_to-bold_mode-image_xfm",
					"scan_id": "[Undefined]",
					"template_desc": "template - T1w-based skull-stripped template resampled to the desired preprocessed-functional resolution - /cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz",
					"atlas_id": "[Undefined]",
					"fwhm": "[Undefined]",
					"subdir": "func"
				},
				"outputs": {
					"out_filename": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "nii_from-template_to-bold_mode-image_xfm_159",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"keep_ext": "True",
					"format_string": "[Undefined]",
					"parse_string": "[Undefined]",
					"use_fullpath": "False"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "write_composite_inv_xfm",
				"type": "node",
				"inputs": {
					"dimension": "3",
					"input_image_type": "0",
					"input_image": "[Undefined]",
					"output_image": "from-template_to-bold_mode-image_xfm.nii.gz",
					"out_postfix": "_trans",
					"reference_image": "[Undefined]",
					"interpolation": "LanczosWindowedSinc",
					"interpolation_parameters": "[Undefined]",
					"transforms": "[Undefined]",
					"invert_transform_flags": "[True, False]",
					"default_value": "0.0",
					"print_out_composite_warp_file": "True",
					"float": "False",
					"num_threads": "1",
					"args": "[Undefined]",
					"environ": "{'NSLOTS': '1'}"
				},
				"outputs": {
					"output_image": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "json_from-template_to-bold_mode-image_xfm_159",
				"type": "node",
				"inputs": {
					"function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
					"json_data": "{'CpacProvenance': [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_ANTs_anat_to_template'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-template_to-T1w_mode-image_xfm:register_ANTs_anat_to_template'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], ['T1w-brain-template-funcreg:template_resample'], 'from-template_to-bold_mode-image_xfm:create_func_to_T1template_xfm'], 'Sources': ['sbref', 'from-bold_to-T1w_mode-image_desc-linear_xfm', 'from-T1w_to-template_mode-image_xfm', 'from-template_to-T1w_mode-image_xfm', 'desc-brain_T1w', 'T1w-brain-template-funcreg'], 'Template': 'template - T1w-based skull-stripped template resampled to the desired preprocessed-functional resolution - /cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'Resolution': '2mm', 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
					"filename": "[Undefined]"
				},
				"outputs": {
					"json_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "sinker_from-template_to-bold_mode-image_xfm_159",
				"type": "node",
				"inputs": {
					"base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output",
					"container": "pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
					"parameterization": "False",
					"strip_dir": "[Undefined]",
					"substitutions": "[Undefined]",
					"regexp_substitutions": "[Undefined]",
					"_outputs": "{}",
					"remove_dest_dir": "False",
					"creds_path": "[Undefined]",
					"encrypt_bucket_keys": "True",
					"bucket": "[Undefined]",
					"local_copy": "[Undefined]"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "id_string_desc-confounds_timeseries_187",
				"type": "node",
				"inputs": {
					"function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
					"cfg": "C-PAC Configuration ('cpac_default_monkey_skullstrip')",
					"unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
					"resource": "desc-confounds_timeseries",
					"scan_id": "[Undefined]",
					"template_desc": "[Undefined]",
					"atlas_id": "[Undefined]",
					"fwhm": "[Undefined]",
					"subdir": "func"
				},
				"outputs": {
					"out_filename": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "nii_desc-confounds_timeseries_187",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"keep_ext": "True",
					"format_string": "[Undefined]",
					"parse_string": "[Undefined]",
					"use_fullpath": "False"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "json_desc-confounds_timeseries_187",
				"type": "node",
				"inputs": {
					"function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
					"json_data": "{'CpacProvenance': [['TR:func_metadata_ingress'], [['TR:func_metadata_ingress'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-jenkinson:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-power:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'dvars:calc_motion_stats'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-CSF_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-GM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_ANTs_anat_to_template'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-T1w_to-template_mode-image_desc-linear_xfm:register_ANTs_anat_to_template'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking', 'desc-preproc_bold:func_normalize'], 'desc-confounds_timeseries:nuisance_regressors_generation_T1w_Regressor_1'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-jenkinson:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-power:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'dvars:calc_motion_stats'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking', 'desc-preproc_bold:func_normalize'], 'desc-confounds_timeseries:nuisance_regression_native'], 'Sources': ['TR', 'desc-confounds_timeseries', 'space-bold_desc-brain_mask', 'framewise-displacement-jenkinson', 'framewise-displacement-power', 'dvars'], 'Description': 'Regressors that were applied in native space', 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
					"filename": "[Undefined]"
				},
				"outputs": {
					"json_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "sinker_desc-confounds_timeseries_187",
				"type": "node",
				"inputs": {
					"base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output",
					"container": "pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
					"parameterization": "False",
					"strip_dir": "[Undefined]",
					"substitutions": "[Undefined]",
					"regexp_substitutions": "[Undefined]",
					"_outputs": "{}",
					"remove_dest_dir": "False",
					"creds_path": "[Undefined]",
					"encrypt_bucket_keys": "True",
					"bucket": "[Undefined]",
					"local_copy": "[Undefined]"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "id_string_space-template_desc-preproc_bold_204",
				"type": "node",
				"inputs": {
					"function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
					"cfg": "C-PAC Configuration ('cpac_default_monkey_skullstrip')",
					"unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
					"resource": "space-template_desc-preproc_bold",
					"scan_id": "[Undefined]",
					"template_desc": "template - T1w-based skull-stripped template resampled to the desired preprocessed-functional resolution - /cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz",
					"atlas_id": "[Undefined]",
					"fwhm": "[Undefined]",
					"subdir": "func"
				},
				"outputs": {
					"out_filename": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "nii_space-template_desc-preproc_bold_204",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"keep_ext": "True",
					"format_string": "[Undefined]",
					"parse_string": "[Undefined]",
					"use_fullpath": "False"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "json_space-template_desc-preproc_bold_204",
				"type": "node",
				"inputs": {
					"function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
					"json_data": "{'CpacProvenance': [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [['TR:func_metadata_ingress'], [['TR:func_metadata_ingress'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-jenkinson:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-power:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'dvars:calc_motion_stats'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-CSF_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-GM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_ANTs_anat_to_template'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-T1w_to-template_mode-image_desc-linear_xfm:register_ANTs_anat_to_template'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking', 'desc-preproc_bold:func_normalize'], 'desc-confounds_timeseries:nuisance_regressors_generation_T1w_Regressor_1'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-jenkinson:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-power:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'dvars:calc_motion_stats'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking', 'desc-preproc_bold:func_normalize'], 'desc-preproc_bold:nuisance_regression_native'], [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-stc_bold:func_slice_time'], ['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], ['pe-direction:func_metadata_ingress'], 'desc-preproc_bold:apply_phasediff_to_timeseries_separately_default'], [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-stc_bold:func_slice_time'], ['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_ANTs_anat_to_template'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-template_to-T1w_mode-image_xfm:register_ANTs_anat_to_template'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], ['T1w-brain-template-funcreg:template_resample'], 'from-bold_to-template_mode-image_xfm:create_func_to_T1template_xfm'], 'desc-preproc_bold:apply_blip_to_timeseries_separately_default'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_ANTs_anat_to_template'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-template_to-T1w_mode-image_xfm:register_ANTs_anat_to_template'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], ['T1w-brain-template-funcreg:template_resample'], 'from-bold_to-template_mode-image_xfm:create_func_to_T1template_xfm'], ['T1w-brain-template-funcreg:template_resample'], 'space-template_desc-preproc_bold:transform_timeseries_to_T1template'], 'CpacVariant': {'bold': ['apply_phasediff_to_timeseries_separately_default', 'apply_blip_to_timeseries_separately_default'], 'space-template_bold': ['transform_timeseries_to_T1template']}, 'SkullStripped': True, 'Sources': ['desc-preproc_bold', 'from-bold_to-template_mode-image_xfm', 'T1w-brain-template-funcreg'], 'Template': 'template - T1w-based skull-stripped template resampled to the desired preprocessed-functional resolution - /cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'Resolution': '2mm', 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
					"filename": "[Undefined]"
				},
				"outputs": {
					"json_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "sinker_space-template_desc-preproc_bold_204",
				"type": "node",
				"inputs": {
					"base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output",
					"container": "pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
					"parameterization": "False",
					"strip_dir": "[Undefined]",
					"substitutions": "[Undefined]",
					"regexp_substitutions": "[Undefined]",
					"_outputs": "{}",
					"remove_dest_dir": "False",
					"creds_path": "[Undefined]",
					"encrypt_bucket_keys": "True",
					"bucket": "[Undefined]",
					"local_copy": "[Undefined]"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "id_string_space-template_sbref_208",
				"type": "node",
				"inputs": {
					"function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
					"cfg": "C-PAC Configuration ('cpac_default_monkey_skullstrip')",
					"unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
					"resource": "space-template_sbref",
					"scan_id": "[Undefined]",
					"template_desc": "template - T1w-based skull-stripped template resampled to the desired preprocessed-functional resolution - /cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz",
					"atlas_id": "[Undefined]",
					"fwhm": "[Undefined]",
					"subdir": "func"
				},
				"outputs": {
					"out_filename": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "nii_space-template_sbref_208",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"keep_ext": "True",
					"format_string": "[Undefined]",
					"parse_string": "[Undefined]",
					"use_fullpath": "False"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "json_space-template_sbref_208",
				"type": "node",
				"inputs": {
					"function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
					"json_data": "{'CpacProvenance': [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_ANTs_anat_to_template'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-template_to-T1w_mode-image_xfm:register_ANTs_anat_to_template'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], ['T1w-brain-template-funcreg:template_resample'], 'from-bold_to-template_mode-image_xfm:create_func_to_T1template_xfm'], ['T1w-brain-template-funcreg:template_resample'], 'space-template_sbref:transform_sbref_to_T1template'], 'Sources': ['sbref', 'from-bold_to-template_mode-image_xfm', 'T1w-brain-template-funcreg'], 'Description': 'Single-volume sbref of the BOLD time-series transformed to template space.', 'Template': 'template - T1w-based skull-stripped template resampled to the desired preprocessed-functional resolution - /cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'Resolution': '2mm', 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
					"filename": "[Undefined]"
				},
				"outputs": {
					"json_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "sinker_space-template_sbref_208",
				"type": "node",
				"inputs": {
					"base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output",
					"container": "pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
					"parameterization": "False",
					"strip_dir": "[Undefined]",
					"substitutions": "[Undefined]",
					"regexp_substitutions": "[Undefined]",
					"_outputs": "{}",
					"remove_dest_dir": "False",
					"creds_path": "[Undefined]",
					"encrypt_bucket_keys": "True",
					"bucket": "[Undefined]",
					"local_copy": "[Undefined]"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "id_string_space-template_desc-bold_mask_212",
				"type": "node",
				"inputs": {
					"function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
					"cfg": "C-PAC Configuration ('cpac_default_monkey_skullstrip')",
					"unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
					"resource": "space-template_desc-bold_mask",
					"scan_id": "[Undefined]",
					"template_desc": "template - T1w-based skull-stripped template resampled to the desired preprocessed-functional resolution - /cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz",
					"atlas_id": "[Undefined]",
					"fwhm": "[Undefined]",
					"subdir": "func"
				},
				"outputs": {
					"out_filename": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "nii_space-template_desc-bold_mask_212",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"keep_ext": "True",
					"format_string": "[Undefined]",
					"parse_string": "[Undefined]",
					"use_fullpath": "False"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "json_space-template_desc-bold_mask_212",
				"type": "node",
				"inputs": {
					"function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
					"json_data": "{'CpacProvenance': [[['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_ANTs_anat_to_template'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-template_to-T1w_mode-image_xfm:register_ANTs_anat_to_template'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], ['T1w-brain-template-funcreg:template_resample'], 'from-bold_to-template_mode-image_xfm:create_func_to_T1template_xfm'], ['T1w-brain-template-funcreg:template_resample'], 'space-template_desc-bold_mask:transform_bold_mask_to_T1template_default'], 'Sources': ['space-bold_desc-brain_mask', 'from-bold_to-template_mode-image_xfm', 'T1w-brain-template-funcreg'], 'Template': 'template - T1w-based skull-stripped template resampled to the desired preprocessed-functional resolution - /cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'Resolution': '2mm', 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
					"filename": "[Undefined]"
				},
				"outputs": {
					"json_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "sinker_space-template_desc-bold_mask_212",
				"type": "node",
				"inputs": {
					"base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output",
					"container": "pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
					"parameterization": "False",
					"strip_dir": "[Undefined]",
					"substitutions": "[Undefined]",
					"regexp_substitutions": "[Undefined]",
					"_outputs": "{}",
					"remove_dest_dir": "False",
					"creds_path": "[Undefined]",
					"encrypt_bucket_keys": "True",
					"bucket": "[Undefined]",
					"local_copy": "[Undefined]"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "id_string_space-template_res-derivative_desc-bold_mask_216",
				"type": "node",
				"inputs": {
					"function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
					"cfg": "C-PAC Configuration ('cpac_default_monkey_skullstrip')",
					"unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
					"resource": "space-template_res-derivative_desc-bold_mask",
					"scan_id": "[Undefined]",
					"template_desc": "template - T1w-based skull-stripped template resampled to the desired functional derivative resolution - /cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz",
					"atlas_id": "[Undefined]",
					"fwhm": "[Undefined]",
					"subdir": "func"
				},
				"outputs": {
					"out_filename": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "nii_space-template_res-derivative_desc-bold_mask_216",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"keep_ext": "True",
					"format_string": "[Undefined]",
					"parse_string": "[Undefined]",
					"use_fullpath": "False"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "json_space-template_res-derivative_desc-bold_mask_216",
				"type": "node",
				"inputs": {
					"function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
					"json_data": "{'CpacProvenance': [[['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_ANTs_anat_to_template'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-template_to-T1w_mode-image_xfm:register_ANTs_anat_to_template'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], ['T1w-brain-template-funcreg:template_resample'], 'from-bold_to-template_mode-image_xfm:create_func_to_T1template_xfm'], ['T1w-brain-template-deriv:template_resample'], 'space-template_res-derivative_desc-bold_mask:transform_deriv_mask_to_T1template_default'], 'Sources': ['space-bold_desc-brain_mask', 'from-bold_to-template_mode-image_xfm', 'T1w-brain-template-deriv'], 'Template': 'template - T1w-based skull-stripped template resampled to the desired functional derivative resolution - /cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'Resolution': '2mm', 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
					"filename": "[Undefined]"
				},
				"outputs": {
					"json_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "sinker_space-template_res-derivative_desc-bold_mask_216",
				"type": "node",
				"inputs": {
					"base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output",
					"container": "pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
					"parameterization": "False",
					"strip_dir": "[Undefined]",
					"substitutions": "[Undefined]",
					"regexp_substitutions": "[Undefined]",
					"_outputs": "{}",
					"remove_dest_dir": "False",
					"creds_path": "[Undefined]",
					"encrypt_bucket_keys": "True",
					"bucket": "[Undefined]",
					"local_copy": "[Undefined]"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "id_string_desc-boldSnrAxial_quality_222",
				"type": "node",
				"inputs": {
					"function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
					"cfg": "C-PAC Configuration ('cpac_default_monkey_skullstrip')",
					"unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
					"resource": "desc-boldSnrAxial_quality",
					"scan_id": "[Undefined]",
					"template_desc": "[Undefined]",
					"atlas_id": "[Undefined]",
					"fwhm": "[Undefined]",
					"subdir": "func"
				},
				"outputs": {
					"out_filename": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "nii_desc-boldSnrAxial_quality_222",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"keep_ext": "True",
					"format_string": "[Undefined]",
					"parse_string": "[Undefined]",
					"use_fullpath": "False"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "json_desc-boldSnrAxial_quality_222",
				"type": "node",
				"inputs": {
					"function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
					"json_data": "{'CpacProvenance': [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [['TR:func_metadata_ingress'], [['TR:func_metadata_ingress'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-jenkinson:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-power:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'dvars:calc_motion_stats'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-CSF_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-GM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_ANTs_anat_to_template'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-T1w_to-template_mode-image_desc-linear_xfm:register_ANTs_anat_to_template'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking', 'desc-preproc_bold:func_normalize'], 'desc-confounds_timeseries:nuisance_regressors_generation_T1w_Regressor_1'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-jenkinson:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-power:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'dvars:calc_motion_stats'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking', 'desc-preproc_bold:func_normalize'], 'desc-preproc_bold:nuisance_regression_native'], [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-stc_bold:func_slice_time'], ['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], ['pe-direction:func_metadata_ingress'], 'desc-preproc_bold:apply_phasediff_to_timeseries_separately_default'], [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-stc_bold:func_slice_time'], ['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_ANTs_anat_to_template'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-template_to-T1w_mode-image_xfm:register_ANTs_anat_to_template'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], ['T1w-brain-template-funcreg:template_resample'], 'from-bold_to-template_mode-image_xfm:create_func_to_T1template_xfm'], 'desc-preproc_bold:apply_blip_to_timeseries_separately_default'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'space-T1w_sbref:coregistration'], 'desc-boldSnrAxial_quality:qc_snr_plot'], 'CpacVariant': {'bold': ['apply_phasediff_to_timeseries_separately_default', 'apply_blip_to_timeseries_separately_default']}, 'Sources': ['desc-preproc_bold', 'space-bold_desc-brain_mask', 'from-bold_to-T1w_mode-image_desc-linear_xfm', 'desc-preproc_T1w', 'space-T1w_sbref'], 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
					"filename": "[Undefined]"
				},
				"outputs": {
					"json_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "sinker_desc-boldSnrAxial_quality_222",
				"type": "node",
				"inputs": {
					"base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output",
					"container": "pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
					"parameterization": "False",
					"strip_dir": "[Undefined]",
					"substitutions": "[Undefined]",
					"regexp_substitutions": "[Undefined]",
					"_outputs": "{}",
					"remove_dest_dir": "False",
					"creds_path": "[Undefined]",
					"encrypt_bucket_keys": "True",
					"bucket": "[Undefined]",
					"local_copy": "[Undefined]"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "id_string_desc-boldSnrSagittal_quality_223",
				"type": "node",
				"inputs": {
					"function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
					"cfg": "C-PAC Configuration ('cpac_default_monkey_skullstrip')",
					"unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
					"resource": "desc-boldSnrSagittal_quality",
					"scan_id": "[Undefined]",
					"template_desc": "[Undefined]",
					"atlas_id": "[Undefined]",
					"fwhm": "[Undefined]",
					"subdir": "func"
				},
				"outputs": {
					"out_filename": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "nii_desc-boldSnrSagittal_quality_223",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"keep_ext": "True",
					"format_string": "[Undefined]",
					"parse_string": "[Undefined]",
					"use_fullpath": "False"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "json_desc-boldSnrSagittal_quality_223",
				"type": "node",
				"inputs": {
					"function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
					"json_data": "{'CpacProvenance': [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [['TR:func_metadata_ingress'], [['TR:func_metadata_ingress'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-jenkinson:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-power:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'dvars:calc_motion_stats'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-CSF_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-GM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_ANTs_anat_to_template'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-T1w_to-template_mode-image_desc-linear_xfm:register_ANTs_anat_to_template'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking', 'desc-preproc_bold:func_normalize'], 'desc-confounds_timeseries:nuisance_regressors_generation_T1w_Regressor_1'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-jenkinson:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-power:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'dvars:calc_motion_stats'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking', 'desc-preproc_bold:func_normalize'], 'desc-preproc_bold:nuisance_regression_native'], [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-stc_bold:func_slice_time'], ['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], ['pe-direction:func_metadata_ingress'], 'desc-preproc_bold:apply_phasediff_to_timeseries_separately_default'], [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-stc_bold:func_slice_time'], ['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_ANTs_anat_to_template'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-template_to-T1w_mode-image_xfm:register_ANTs_anat_to_template'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], ['T1w-brain-template-funcreg:template_resample'], 'from-bold_to-template_mode-image_xfm:create_func_to_T1template_xfm'], 'desc-preproc_bold:apply_blip_to_timeseries_separately_default'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'space-T1w_sbref:coregistration'], 'desc-boldSnrSagittal_quality:qc_snr_plot'], 'CpacVariant': {'bold': ['apply_phasediff_to_timeseries_separately_default', 'apply_blip_to_timeseries_separately_default']}, 'Sources': ['desc-preproc_bold', 'space-bold_desc-brain_mask', 'from-bold_to-T1w_mode-image_desc-linear_xfm', 'desc-preproc_T1w', 'space-T1w_sbref'], 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
					"filename": "[Undefined]"
				},
				"outputs": {
					"json_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "sinker_desc-boldSnrSagittal_quality_223",
				"type": "node",
				"inputs": {
					"base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output",
					"container": "pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
					"parameterization": "False",
					"strip_dir": "[Undefined]",
					"substitutions": "[Undefined]",
					"regexp_substitutions": "[Undefined]",
					"_outputs": "{}",
					"remove_dest_dir": "False",
					"creds_path": "[Undefined]",
					"encrypt_bucket_keys": "True",
					"bucket": "[Undefined]",
					"local_copy": "[Undefined]"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "id_string_desc-boldSnrHist_quality_224",
				"type": "node",
				"inputs": {
					"function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
					"cfg": "C-PAC Configuration ('cpac_default_monkey_skullstrip')",
					"unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
					"resource": "desc-boldSnrHist_quality",
					"scan_id": "[Undefined]",
					"template_desc": "[Undefined]",
					"atlas_id": "[Undefined]",
					"fwhm": "[Undefined]",
					"subdir": "func"
				},
				"outputs": {
					"out_filename": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "nii_desc-boldSnrHist_quality_224",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"keep_ext": "True",
					"format_string": "[Undefined]",
					"parse_string": "[Undefined]",
					"use_fullpath": "False"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "json_desc-boldSnrHist_quality_224",
				"type": "node",
				"inputs": {
					"function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
					"json_data": "{'CpacProvenance': [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [['TR:func_metadata_ingress'], [['TR:func_metadata_ingress'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-jenkinson:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-power:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'dvars:calc_motion_stats'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-CSF_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-GM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_ANTs_anat_to_template'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-T1w_to-template_mode-image_desc-linear_xfm:register_ANTs_anat_to_template'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking', 'desc-preproc_bold:func_normalize'], 'desc-confounds_timeseries:nuisance_regressors_generation_T1w_Regressor_1'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-jenkinson:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-power:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'dvars:calc_motion_stats'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking', 'desc-preproc_bold:func_normalize'], 'desc-preproc_bold:nuisance_regression_native'], [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-stc_bold:func_slice_time'], ['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], ['pe-direction:func_metadata_ingress'], 'desc-preproc_bold:apply_phasediff_to_timeseries_separately_default'], [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-stc_bold:func_slice_time'], ['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_ANTs_anat_to_template'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-template_to-T1w_mode-image_xfm:register_ANTs_anat_to_template'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], ['T1w-brain-template-funcreg:template_resample'], 'from-bold_to-template_mode-image_xfm:create_func_to_T1template_xfm'], 'desc-preproc_bold:apply_blip_to_timeseries_separately_default'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'space-T1w_sbref:coregistration'], 'desc-boldSnrHist_quality:qc_snr_plot'], 'CpacVariant': {'bold': ['apply_phasediff_to_timeseries_separately_default', 'apply_blip_to_timeseries_separately_default']}, 'Sources': ['desc-preproc_bold', 'space-bold_desc-brain_mask', 'from-bold_to-T1w_mode-image_desc-linear_xfm', 'desc-preproc_T1w', 'space-T1w_sbref'], 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
					"filename": "[Undefined]"
				},
				"outputs": {
					"json_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "sinker_desc-boldSnrHist_quality_224",
				"type": "node",
				"inputs": {
					"base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output",
					"container": "pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
					"parameterization": "False",
					"strip_dir": "[Undefined]",
					"substitutions": "[Undefined]",
					"regexp_substitutions": "[Undefined]",
					"_outputs": "{}",
					"remove_dest_dir": "False",
					"creds_path": "[Undefined]",
					"encrypt_bucket_keys": "True",
					"bucket": "[Undefined]",
					"local_copy": "[Undefined]"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "id_string_desc-boldSnr_quality_225",
				"type": "node",
				"inputs": {
					"function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
					"cfg": "C-PAC Configuration ('cpac_default_monkey_skullstrip')",
					"unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
					"resource": "desc-boldSnr_quality",
					"scan_id": "[Undefined]",
					"template_desc": "[Undefined]",
					"atlas_id": "[Undefined]",
					"fwhm": "[Undefined]",
					"subdir": "func"
				},
				"outputs": {
					"out_filename": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "nii_desc-boldSnr_quality_225",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"keep_ext": "True",
					"format_string": "[Undefined]",
					"parse_string": "[Undefined]",
					"use_fullpath": "False"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "json_desc-boldSnr_quality_225",
				"type": "node",
				"inputs": {
					"function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
					"json_data": "{'CpacProvenance': [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [['TR:func_metadata_ingress'], [['TR:func_metadata_ingress'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-jenkinson:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-power:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'dvars:calc_motion_stats'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-CSF_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-GM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_ANTs_anat_to_template'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-T1w_to-template_mode-image_desc-linear_xfm:register_ANTs_anat_to_template'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking', 'desc-preproc_bold:func_normalize'], 'desc-confounds_timeseries:nuisance_regressors_generation_T1w_Regressor_1'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-jenkinson:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-power:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'dvars:calc_motion_stats'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking', 'desc-preproc_bold:func_normalize'], 'desc-preproc_bold:nuisance_regression_native'], [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-stc_bold:func_slice_time'], ['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], ['pe-direction:func_metadata_ingress'], 'desc-preproc_bold:apply_phasediff_to_timeseries_separately_default'], [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-stc_bold:func_slice_time'], ['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_ANTs_anat_to_template'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['T1w-brain-template-mask:template_resample'], 'from-template_to-T1w_mode-image_xfm:register_ANTs_anat_to_template'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], ['T1w-brain-template-funcreg:template_resample'], 'from-bold_to-template_mode-image_xfm:create_func_to_T1template_xfm'], 'desc-preproc_bold:apply_blip_to_timeseries_separately_default'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean', 'sbref:coregistration_prep_mean'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-preproc_T1w:brain_extraction'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'label-WM_mask:tissue_seg_ants_prior'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-head_T1w:brain_extraction'], 'space-T1w_sbref:coregistration'], 'desc-boldSnr_quality:qc_snr_plot'], 'CpacVariant': {'bold': ['apply_phasediff_to_timeseries_separately_default', 'apply_blip_to_timeseries_separately_default']}, 'Sources': ['desc-preproc_bold', 'space-bold_desc-brain_mask', 'from-bold_to-T1w_mode-image_desc-linear_xfm', 'desc-preproc_T1w', 'space-T1w_sbref'], 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
					"filename": "[Undefined]"
				},
				"outputs": {
					"json_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "sinker_desc-boldSnr_quality_225",
				"type": "node",
				"inputs": {
					"base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output",
					"container": "pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
					"parameterization": "False",
					"strip_dir": "[Undefined]",
					"substitutions": "[Undefined]",
					"regexp_substitutions": "[Undefined]",
					"_outputs": "{}",
					"remove_dest_dir": "False",
					"creds_path": "[Undefined]",
					"encrypt_bucket_keys": "True",
					"bucket": "[Undefined]",
					"local_copy": "[Undefined]"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "id_string_desc-movementParametersTrans_quality_230",
				"type": "node",
				"inputs": {
					"function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
					"cfg": "C-PAC Configuration ('cpac_default_monkey_skullstrip')",
					"unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
					"resource": "desc-movementParametersTrans_quality",
					"scan_id": "[Undefined]",
					"template_desc": "[Undefined]",
					"atlas_id": "[Undefined]",
					"fwhm": "[Undefined]",
					"subdir": "func"
				},
				"outputs": {
					"out_filename": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "nii_desc-movementParametersTrans_quality_230",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"keep_ext": "True",
					"format_string": "[Undefined]",
					"parse_string": "[Undefined]",
					"use_fullpath": "False"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "json_desc-movementParametersTrans_quality_230",
				"type": "node",
				"inputs": {
					"function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
					"json_data": "{'CpacProvenance': [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg', 'desc-movementParametersTrans_quality:qc_motion_plot'], 'Sources': ['desc-movementParameters_motion'], 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
					"filename": "[Undefined]"
				},
				"outputs": {
					"json_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "sinker_desc-movementParametersTrans_quality_230",
				"type": "node",
				"inputs": {
					"base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output",
					"container": "pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
					"parameterization": "False",
					"strip_dir": "[Undefined]",
					"substitutions": "[Undefined]",
					"regexp_substitutions": "[Undefined]",
					"_outputs": "{}",
					"remove_dest_dir": "False",
					"creds_path": "[Undefined]",
					"encrypt_bucket_keys": "True",
					"bucket": "[Undefined]",
					"local_copy": "[Undefined]"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "id_string_desc-movementParametersRot_quality_231",
				"type": "node",
				"inputs": {
					"function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
					"cfg": "C-PAC Configuration ('cpac_default_monkey_skullstrip')",
					"unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
					"resource": "desc-movementParametersRot_quality",
					"scan_id": "[Undefined]",
					"template_desc": "[Undefined]",
					"atlas_id": "[Undefined]",
					"fwhm": "[Undefined]",
					"subdir": "func"
				},
				"outputs": {
					"out_filename": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "nii_desc-movementParametersRot_quality_231",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"keep_ext": "True",
					"format_string": "[Undefined]",
					"parse_string": "[Undefined]",
					"use_fullpath": "False"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "json_desc-movementParametersRot_quality_231",
				"type": "node",
				"inputs": {
					"function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
					"json_data": "{'CpacProvenance': [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg', 'desc-movementParametersRot_quality:qc_motion_plot'], 'Sources': ['desc-movementParameters_motion'], 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
					"filename": "[Undefined]"
				},
				"outputs": {
					"json_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "sinker_desc-movementParametersRot_quality_231",
				"type": "node",
				"inputs": {
					"base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output",
					"container": "pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
					"parameterization": "False",
					"strip_dir": "[Undefined]",
					"substitutions": "[Undefined]",
					"regexp_substitutions": "[Undefined]",
					"_outputs": "{}",
					"remove_dest_dir": "False",
					"creds_path": "[Undefined]",
					"encrypt_bucket_keys": "True",
					"bucket": "[Undefined]",
					"local_copy": "[Undefined]"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "id_string_desc-framewiseDisplacementJenkinsonPlot_quality_232",
				"type": "node",
				"inputs": {
					"function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
					"cfg": "C-PAC Configuration ('cpac_default_monkey_skullstrip')",
					"unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
					"resource": "desc-framewiseDisplacementJenkinsonPlot_quality",
					"scan_id": "[Undefined]",
					"template_desc": "[Undefined]",
					"atlas_id": "[Undefined]",
					"fwhm": "[Undefined]",
					"subdir": "func"
				},
				"outputs": {
					"out_filename": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "nii_desc-framewiseDisplacementJenkinsonPlot_quality_232",
				"type": "node",
				"inputs": {
					"in_file": "[Undefined]",
					"keep_ext": "True",
					"format_string": "[Undefined]",
					"parse_string": "[Undefined]",
					"use_fullpath": "False"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "json_desc-framewiseDisplacementJenkinsonPlot_quality_232",
				"type": "node",
				"inputs": {
					"function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
					"json_data": "{'CpacProvenance': [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], 'desc-preproc_bold:bold_masking'], [['bold:func_ingress'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-head_T1w:acpc_alignment_head'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'desc-brain_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init'], ['T1w-ACPC-template:T1w-ACPC-template_config_ingress'], 'desc-preproc_T1w:acpc_alignment_head', 'desc-preproc_T1w:nlm_filtering', 'desc-preproc_T1w:n4_bias_correction'], ['T1w-brain-template:template_resample'], ['T1w-template:template_resample'], ['unet-model:unet-model_config_ingress'], 'space-T1w_desc-brain_mask:brain_mask_unet'], 'space-bold_desc-brain_mask:bold_mask_anatomical_refined'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-jenkinson:calc_motion_stats', 'desc-framewiseDisplacementJenkinsonPlot_quality:qc_fd_plot'], 'Sources': ['framewise-displacement-jenkinson'], 'CpacConfigHash': '633164750a4de78444ed4f6db868abe70e38d39a', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_default_monkey_skullstrip', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': False, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'cpac', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 3, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 3, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': False}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': True}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': False, 'reconall_args': None, 'ingress_reconall': False}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm_brain.nii.gz', 'FOV_crop': 'flirt', 'align_brain_mask': False, 'T2w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm.nii.gz', 'T2w_brain_ACPC_template': '/cpac_templates/MacaqueYerkes19_T2w_0.5mm_brain.nii.gz', 'run': True, 'run_before_preproc': True, 'brain_size': 70, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/cpac_templates/MacaqueYerkes19_T1w_0.5mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/ccs_template/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['UNet'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': True}, 'FSL-BET': {'frac': 0.3, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [True], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['ANTs_Prior_Based'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': False, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': [], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 0, 'CSF_label': [24], 'GM_label': [3, 42], 'WM_label': [2, 41]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain_mask.nii.gz', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['ANTS'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_template': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Mean_Functional'], 'Mean Functional': {'n4_correct_func': True}, 'Selected Functional Volume': {'func_reg_input_volume': 0}}, 'boundary_based_registration': {'run': [False], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'spline', 'cost': 'mutualinfo', 'dof': 6, 'arguments': '-searchrx -30 30 -searchry -30 30 -searchrz -30 30'}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '2mm', 'func_derivative_outputs': '2mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain.nii.gz', 'T1w_template_funcreg': '/cpac_templates/MacaqueYerkes19_T1w_2mm.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': None, 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': None, 'tzero': None}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': [], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [True], 'Regressors': [{'Name': 'Regressor_1', 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1}, 'CerebrospinalFluid': {'summary': {'components': 5, 'method': 'PC'}}, 'GlobalSignal': {'summary': 'Mean'}, 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'PolyOrt': {'degree': 2}, 'WhiteMatter': {'summary': {'components': 5, 'method': 'PC'}}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': None, 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm_brain.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/cpac_templates/resources/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_1.0mm.nii.gz', 'dilated_symmetric_brain_mask': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/cpac_templates/MacaqueYerkes19_T1w_2mm_brain_mask.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 3.0, 'template_specification_file': 's3://fcp-indi/resources/cpac/resources/mask-thr50-3mm.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': ['Binarized', 'Weighted'], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Significance threshold', 'correlation_threshold': 0.001}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'s3://fcp-indi/resources/cpac/resources/parcellation/Markov91_L_0.5mm.nii.gz': 'Avg', 's3://fcp-indi/resources/cpac/resources/parcellation/Markov91_R_0.5mm.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
					"filename": "[Undefined]"
				},
				"outputs": {
					"json_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			},
			{
				"name": "sinker_desc-framewiseDisplacementJenkinsonPlot_quality_232",
				"type": "node",
				"inputs": {
					"base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/monkey/sub-NDARINV2VY7YYNW/output/output",
					"container": "pipeline_cpac_default_monkey_skullstrip/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
					"parameterization": "False",
					"strip_dir": "[Undefined]",
					"substitutions": "[Undefined]",
					"regexp_substitutions": "[Undefined]",
					"_outputs": "{}",
					"remove_dest_dir": "False",
					"creds_path": "[Undefined]",
					"encrypt_bucket_keys": "True",
					"bucket": "[Undefined]",
					"local_copy": "[Undefined]"
				},
				"outputs": {
					"out_file": "[Undefined]"
				},
				"result": null,
				"nodes": [],
				"edges": []
			}
		],
		"edges": [
			{
				"origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
				"target": "bold_scan_params_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1"
			},
			{
				"origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
				"target": "func_deoblique_2"
			},
			{
				"origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
				"target": "raw_func_deoblique_117"
			},
			{
				"origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
				"target": "id_string_desc-preproc_bold_200"
			},
			{
				"origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
				"target": "id_string_desc-mean_bold_105"
			},
			{
				"origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
				"target": "id_string_desc-movementParameters_motion_114"
			},
			{
				"origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
				"target": "id_string_space-bold_desc-brain_mask_121"
			},
			{
				"origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
				"target": "id_string_motion_139"
			},
			{
				"origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
				"target": "id_string_desc-summary_motion_140"
			},
			{
				"origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
				"target": "id_string_sbref_142"
			},
			{
				"origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
				"target": "id_string_space-T1w_sbref_150"
			},
			{
				"origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
				"target": "id_string_from-bold_to-T1w_mode-image_desc-linear_xfm_151"
			},
			{
				"origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
				"target": "id_string_from-bold_to-template_mode-image_xfm_158"
			},
			{
				"origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
				"target": "id_string_from-template_to-bold_mode-image_xfm_159"
			},
			{
				"origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
				"target": "id_string_desc-confounds_timeseries_187"
			},
			{
				"origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
				"target": "id_string_space-template_desc-preproc_bold_204"
			},
			{
				"origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
				"target": "id_string_space-template_sbref_208"
			},
			{
				"origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
				"target": "id_string_space-template_desc-bold_mask_212"
			},
			{
				"origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
				"target": "id_string_space-template_res-derivative_desc-bold_mask_216"
			},
			{
				"origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
				"target": "id_string_desc-boldSnrAxial_quality_222"
			},
			{
				"origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
				"target": "id_string_desc-boldSnrSagittal_quality_223"
			},
			{
				"origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
				"target": "id_string_desc-boldSnrHist_quality_224"
			},
			{
				"origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
				"target": "id_string_desc-boldSnr_quality_225"
			},
			{
				"origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
				"target": "id_string_desc-movementParametersTrans_quality_230"
			},
			{
				"origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
				"target": "id_string_desc-movementParametersRot_quality_231"
			},
			{
				"origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
				"target": "id_string_desc-framewiseDisplacementJenkinsonPlot_quality_232"
			},
			{
				"origin": "bold_scan_params_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
				"target": "func_slice_timing_correction_100"
			},
			{
				"origin": "bold_scan_params_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
				"target": "nuisance_regressors_Regressor_1_160"
			},
			{
				"origin": "bold_scan_params_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
				"target": "filtering_bold_and_regressors_space-native_reg-Regressor_1_177"
			},
			{
				"origin": "anat_T1w_gather_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
				"target": "anat_deoblique_0"
			},
			{
				"origin": "anat_deoblique_0",
				"target": "anat_reorient_0"
			},
			{
				"origin": "anat_reorient_0",
				"target": "acpc_align_50"
			},
			{
				"origin": "acpc_align_50",
				"target": "anat_denoise_54"
			},
			{
				"origin": "acpc_align_50",
				"target": "brain_extraction_64"
			},
			{
				"origin": "acpc_align_50",
				"target": "ANTS_T1_to_template_70"
			},
			{
				"origin": "acpc_align_50",
				"target": "warp_wholehead_T1w_to_T1template_83"
			},
			{
				"origin": "acpc_align_50",
				"target": "qc_skullstrip_233"
			},
			{
				"origin": "acpc_align_50",
				"target": "nii_desc-head_T1w_69"
			},
			{
				"origin": "gather_T1w-ACPC-template",
				"target": "acpc_align_50"
			},
			{
				"origin": "anat_denoise_54",
				"target": "anat_n4_56"
			},
			{
				"origin": "anat_n4_56",
				"target": "unet_mask_59"
			},
			{
				"origin": "anat_n4_56",
				"target": "unet_masked_brain_59"
			},
			{
				"origin": "anat_n4_56",
				"target": "native_head_to_template_head_59"
			},
			{
				"origin": "gather_unet-model",
				"target": "unet_mask_59"
			},
			{
				"origin": "unet_mask_59",
				"target": "unet_masked_brain_59"
			},
			{
				"origin": "unet_masked_brain_59",
				"target": "native_brain_to_template_brain_59"
			},
			{
				"origin": "unet_masked_brain_59",
				"target": "template_brain_to_native_brain_59"
			},
			{
				"origin": "native_brain_to_template_brain_59",
				"target": "native_head_to_template_head_59"
			},
			{
				"origin": "native_brain_to_template_brain_59",
				"target": "template_head_transform_to_template_59"
			},
			{
				"origin": "native_brain_to_template_brain_59",
				"target": "convert_xfm"
			},
			{
				"origin": "resampled_T1w-brain-template",
				"target": "native_brain_to_template_brain_59"
			},
			{
				"origin": "resampled_T1w-brain-template",
				"target": "template_brain_mask_59"
			},
			{
				"origin": "resampled_T1w-brain-template",
				"target": "template_head_to_template_59"
			},
			{
				"origin": "resampled_T1w-brain-template",
				"target": "ANTS_T1_to_template_70"
			},
			{
				"origin": "resampled_T1w-brain-template",
				"target": "anat_template_edge_237"
			},
			{
				"origin": "native_head_to_template_head_59",
				"target": "template_head_to_template_59"
			},
			{
				"origin": "resampled_T1w-template",
				"target": "native_head_to_template_head_59"
			},
			{
				"origin": "resampled_T1w-template",
				"target": "ANTS_T1_to_template_70"
			},
			{
				"origin": "resampled_T1w-template",
				"target": "warp_wholehead_T1w_to_T1template_83"
			},
			{
				"origin": "resampled_T1w-template",
				"target": "warp_T1mask_to_T1template_87"
			},
			{
				"origin": "template_brain_mask_59",
				"target": "template_head_transform_to_template_59"
			},
			{
				"origin": "template_head_to_template_59",
				"target": "template_head_transform_to_template_59"
			},
			{
				"origin": "template_head_transform_to_template_59",
				"target": "template_brain_to_native_brain_59"
			},
			{
				"origin": "convert_xfm",
				"target": "template_brain_to_native_brain_59"
			},
			{
				"origin": "template_brain_to_native_brain_59",
				"target": "refined_mask_59"
			},
			{
				"origin": "refined_mask_59",
				"target": "brain_extraction_64"
			},
			{
				"origin": "refined_mask_59",
				"target": "ANTS_T1_to_template_70"
			},
			{
				"origin": "refined_mask_59",
				"target": "warp_T1mask_to_T1template_87"
			},
			{
				"origin": "refined_mask_59",
				"target": "seg_preproc_ants_prior_91"
			},
			{
				"origin": "refined_mask_59",
				"target": "anat_brain_mask_bin_117"
			},
			{
				"origin": "refined_mask_59",
				"target": "nuisance_regressors_Regressor_1_160"
			},
			{
				"origin": "refined_mask_59",
				"target": "nii_space-T1w_desc-brain_mask_63"
			},
			{
				"origin": "brain_extraction_64",
				"target": "ANTS_T1_to_template_70"
			},
			{
				"origin": "brain_extraction_64",
				"target": "seg_preproc_ants_prior_91"
			},
			{
				"origin": "brain_extraction_64",
				"target": "init_bold_mask_117"
			},
			{
				"origin": "brain_extraction_64",
				"target": "refined_bold_mask_117"
			},
			{
				"origin": "brain_extraction_64",
				"target": "func_to_anat_FLIRT_143"
			},
			{
				"origin": "brain_extraction_64",
				"target": "create_func_to_T1wtemplate_xfm_152"
			},
			{
				"origin": "brain_extraction_64",
				"target": "nuisance_regressors_Regressor_1_160"
			},
			{
				"origin": "brain_extraction_64",
				"target": "qc_snr_217"
			},
			{
				"origin": "brain_extraction_64",
				"target": "anat_edge_226"
			},
			{
				"origin": "brain_extraction_64",
				"target": "qc_skullstrip_233"
			},
			{
				"origin": "brain_extraction_64",
				"target": "nii_desc-preproc_T1w_67"
			},
			{
				"origin": "resampled_T1w-brain-template-mask",
				"target": "ANTS_T1_to_template_70"
			},
			{
				"origin": "warp_wholehead_T1w_to_T1template_83",
				"target": "nii_space-template_desc-head_T1w_86"
			},
			{
				"origin": "write_composite_xfm",
				"target": "warp_wholehead_T1w_to_T1template_83"
			},
			{
				"origin": "write_composite_xfm",
				"target": "warp_T1mask_to_T1template_87"
			},
			{
				"origin": "write_composite_xfm",
				"target": "create_func_to_T1wtemplate_xfm_152"
			},
			{
				"origin": "write_composite_xfm",
				"target": "nii_from-T1w_to-template_mode-image_xfm_77"
			},
			{
				"origin": "warp_T1mask_to_T1template_87",
				"target": "nii_space-template_desc-brain_mask_90"
			},
			{
				"origin": "seg_preproc_ants_prior_91",
				"target": "nuisance_regressors_Regressor_1_160"
			},
			{
				"origin": "seg_preproc_ants_prior_91",
				"target": "nii_label-CSF_mask_93"
			},
			{
				"origin": "seg_preproc_ants_prior_91",
				"target": "nii_label-GM_mask_94"
			},
			{
				"origin": "seg_preproc_ants_prior_91",
				"target": "nii_label-WM_mask_95"
			},
			{
				"origin": "func_deoblique_2",
				"target": "func_reorient_2"
			},
			{
				"origin": "func_reorient_2",
				"target": "edit_func_96"
			},
			{
				"origin": "edit_func_96",
				"target": "func_despiked_98"
			},
			{
				"origin": "func_despiked_98",
				"target": "func_slice_timing_correction_100"
			},
			{
				"origin": "func_slice_timing_correction_100",
				"target": "func_mean_103"
			},
			{
				"origin": "func_slice_timing_correction_100",
				"target": "func_get_mean_RPI_106"
			},
			{
				"origin": "func_slice_timing_correction_100",
				"target": "out_split_func_109"
			},
			{
				"origin": "func_mean_103",
				"target": "func_mean_n4_corrected_105"
			},
			{
				"origin": "func_mean_103",
				"target": "nii_desc-mean_bold_105"
			},
			{
				"origin": "func_get_mean_RPI_106",
				"target": "func_motion_correct_3dvolreg_109"
			},
			{
				"origin": "out_split_func_109",
				"target": "func_generate_ref_109"
			},
			{
				"origin": "out_split_func_109",
				"target": "func_motion_correct_3dvolreg_109"
			},
			{
				"origin": "func_generate_ref_109",
				"target": "out_motion_109"
			},
			{
				"origin": "func_motion_correct_3dvolreg_109",
				"target": "out_motion_A_109"
			},
			{
				"origin": "func_motion_correct_3dvolreg_109",
				"target": "out_md1d_109"
			},
			{
				"origin": "func_motion_correct_3dvolreg_109",
				"target": "out_oned_109"
			},
			{
				"origin": "func_motion_correct_3dvolreg_109",
				"target": "out_oned_matrix_109"
			},
			{
				"origin": "out_motion_A_109",
				"target": "refined_bold_mask_117"
			},
			{
				"origin": "out_motion_A_109",
				"target": "func_extract_brain_122"
			},
			{
				"origin": "out_md1d_109",
				"target": "gen_motion_stats_126"
			},
			{
				"origin": "out_oned_109",
				"target": "gen_motion_stats_126"
			},
			{
				"origin": "out_oned_109",
				"target": "nuisance_regressors_Regressor_1_160"
			},
			{
				"origin": "out_oned_109",
				"target": "qc_motion_114"
			},
			{
				"origin": "out_oned_109",
				"target": "nii_desc-movementParameters_motion_114"
			},
			{
				"origin": "out_oned_matrix_109",
				"target": "gen_motion_stats_126"
			},
			{
				"origin": "anat_brain_mask_bin_117",
				"target": "anat_brain_mask_filled_117"
			},
			{
				"origin": "anat_brain_mask_filled_117",
				"target": "init_bold_mask_117"
			},
			{
				"origin": "anat_brain_mask_filled_117",
				"target": "refined_bold_mask_117"
			},
			{
				"origin": "raw_func_deoblique_117",
				"target": "raw_func_reorient_117"
			},
			{
				"origin": "raw_func_reorient_117",
				"target": "init_bold_mask_117"
			},
			{
				"origin": "init_bold_mask_117",
				"target": "func_tmp_brain_mask_dil_117"
			},
			{
				"origin": "func_tmp_brain_mask_dil_117",
				"target": "refined_bold_mask_117"
			},
			{
				"origin": "func_tmp_brain_mask_dil_117",
				"target": "func_mask_final_117"
			},
			{
				"origin": "refined_bold_mask_117",
				"target": "func_mask_final_117"
			},
			{
				"origin": "func_mask_final_117",
				"target": "func_extract_brain_122"
			},
			{
				"origin": "func_mask_final_117",
				"target": "gen_motion_stats_126"
			},
			{
				"origin": "func_mask_final_117",
				"target": "nuisance_regressors_Regressor_1_160"
			},
			{
				"origin": "func_mask_final_117",
				"target": "nuisance_regression_space-native_reg-Regressor_1_177"
			},
			{
				"origin": "func_mask_final_117",
				"target": "filtering_bold_and_regressors_space-native_reg-Regressor_1_177"
			},
			{
				"origin": "func_mask_final_117",
				"target": "warp_funcreg-mask_to_T1wtemplate_209"
			},
			{
				"origin": "func_mask_final_117",
				"target": "warp_deriv-mask_to_T1wtemplate_213"
			},
			{
				"origin": "func_mask_final_117",
				"target": "qc_snr_217"
			},
			{
				"origin": "func_mask_final_117",
				"target": "nii_space-bold_desc-brain_mask_121"
			},
			{
				"origin": "func_extract_brain_122",
				"target": "gen_motion_stats_126"
			},
			{
				"origin": "func_extract_brain_122",
				"target": "func_normalize_124"
			},
			{
				"origin": "gen_motion_stats_126",
				"target": "nuisance_regressors_Regressor_1_160"
			},
			{
				"origin": "gen_motion_stats_126",
				"target": "nuisance_regression_space-native_reg-Regressor_1_177"
			},
			{
				"origin": "gen_motion_stats_126",
				"target": "qc_fd_135"
			},
			{
				"origin": "gen_motion_stats_126",
				"target": "nii_motion_139"
			},
			{
				"origin": "gen_motion_stats_126",
				"target": "nii_desc-summary_motion_140"
			},
			{
				"origin": "func_normalize_124",
				"target": "nuisance_regressors_Regressor_1_160"
			},
			{
				"origin": "func_normalize_124",
				"target": "nuisance_regression_space-native_reg-Regressor_1_177"
			},
			{
				"origin": "func_mean_n4_corrected_105",
				"target": "func_to_anat_FLIRT_143"
			},
			{
				"origin": "func_mean_n4_corrected_105",
				"target": "create_func_to_T1wtemplate_xfm_152"
			},
			{
				"origin": "func_mean_n4_corrected_105",
				"target": "warp_funcreg-sbref_to_T1wtemplate_205"
			},
			{
				"origin": "func_mean_n4_corrected_105",
				"target": "nii_sbref_142"
			},
			{
				"origin": "func_to_anat_FLIRT_143",
				"target": "create_func_to_T1wtemplate_xfm_152"
			},
			{
				"origin": "func_to_anat_FLIRT_143",
				"target": "nuisance_regressors_Regressor_1_160"
			},
			{
				"origin": "func_to_anat_FLIRT_143",
				"target": "anat_to_func_linear_xfm_Regressor_1_160"
			},
			{
				"origin": "func_to_anat_FLIRT_143",
				"target": "qc_snr_217"
			},
			{
				"origin": "func_to_anat_FLIRT_143",
				"target": "montage_anat_226"
			},
			{
				"origin": "func_to_anat_FLIRT_143",
				"target": "nii_space-T1w_sbref_150"
			},
			{
				"origin": "func_to_anat_FLIRT_143",
				"target": "nii_from-bold_to-T1w_mode-image_desc-linear_xfm_151"
			},
			{
				"origin": "resampled_T1w-brain-template-funcreg",
				"target": "create_func_to_T1wtemplate_xfm_152"
			},
			{
				"origin": "resampled_T1w-brain-template-funcreg",
				"target": "warp_ts_to_T1template_201"
			},
			{
				"origin": "resampled_T1w-brain-template-funcreg",
				"target": "warp_funcreg-sbref_to_T1wtemplate_205"
			},
			{
				"origin": "resampled_T1w-brain-template-funcreg",
				"target": "warp_funcreg-mask_to_T1wtemplate_209"
			},
			{
				"origin": "resampled_T1w-brain-template-funcreg",
				"target": "func_template_edge_247"
			},
			{
				"origin": "write_composite_inv_xfm",
				"target": "create_func_to_T1wtemplate_xfm_152"
			},
			{
				"origin": "write_composite_inv_xfm",
				"target": "nii_from-template_to-T1w_mode-image_xfm_78"
			},
			{
				"origin": "nuisance_regressors_Regressor_1_160",
				"target": "nuisance_regression_space-native_reg-Regressor_1_177"
			},
			{
				"origin": "nuisance_regressors_Regressor_1_160",
				"target": "filtering_bold_and_regressors_space-native_reg-Regressor_1_177"
			},
			{
				"origin": "anat_to_func_linear_xfm_Regressor_1_160",
				"target": "nuisance_regressors_Regressor_1_160"
			},
			{
				"origin": "write_composite_invlinear_xfm",
				"target": "nuisance_regressors_Regressor_1_160"
			},
			{
				"origin": "write_composite_invlinear_xfm",
				"target": "nii_from-template_to-T1w_mode-image_desc-linear_xfm_80"
			},
			{
				"origin": "write_composite_linear_xfm",
				"target": "nuisance_regressors_Regressor_1_160"
			},
			{
				"origin": "write_composite_linear_xfm",
				"target": "nii_from-T1w_to-template_mode-image_desc-linear_xfm_79"
			},
			{
				"origin": "nuisance_regression_space-native_reg-Regressor_1_177",
				"target": "filtering_bold_and_regressors_space-native_reg-Regressor_1_177"
			},
			{
				"origin": "filtering_bold_and_regressors_space-native_reg-Regressor_1_177",
				"target": "warp_ts_to_T1template_201"
			},
			{
				"origin": "filtering_bold_and_regressors_space-native_reg-Regressor_1_177",
				"target": "qc_snr_217"
			},
			{
				"origin": "filtering_bold_and_regressors_space-native_reg-Regressor_1_177",
				"target": "nii_desc-preproc_bold_200"
			},
			{
				"origin": "filtering_bold_and_regressors_space-native_reg-Regressor_1_177",
				"target": "nii_desc-confounds_timeseries_187"
			},
			{
				"origin": "warp_ts_to_T1template_201",
				"target": "carpet_seg_241"
			},
			{
				"origin": "warp_ts_to_T1template_201",
				"target": "nii_space-template_desc-preproc_bold_204"
			},
			{
				"origin": "write_composite_xfm",
				"target": "warp_ts_to_T1template_201"
			},
			{
				"origin": "write_composite_xfm",
				"target": "warp_funcreg-sbref_to_T1wtemplate_205"
			},
			{
				"origin": "write_composite_xfm",
				"target": "warp_funcreg-mask_to_T1wtemplate_209"
			},
			{
				"origin": "write_composite_xfm",
				"target": "warp_deriv-mask_to_T1wtemplate_213"
			},
			{
				"origin": "write_composite_xfm",
				"target": "nii_from-bold_to-template_mode-image_xfm_158"
			},
			{
				"origin": "warp_funcreg-sbref_to_T1wtemplate_205",
				"target": "carpet_seg_241"
			},
			{
				"origin": "warp_funcreg-sbref_to_T1wtemplate_205",
				"target": "montage_mfi_247"
			},
			{
				"origin": "warp_funcreg-sbref_to_T1wtemplate_205",
				"target": "nii_space-template_sbref_208"
			},
			{
				"origin": "warp_funcreg-mask_to_T1wtemplate_209",
				"target": "nii_space-template_desc-bold_mask_212"
			},
			{
				"origin": "warp_deriv-mask_to_T1wtemplate_213",
				"target": "nii_space-template_res-derivative_desc-bold_mask_216"
			},
			{
				"origin": "resampled_T1w-brain-template-deriv",
				"target": "warp_deriv-mask_to_T1wtemplate_213"
			},
			{
				"origin": "qc_snr_217",
				"target": "nii_desc-boldSnrAxial_quality_222"
			},
			{
				"origin": "qc_snr_217",
				"target": "nii_desc-boldSnrSagittal_quality_223"
			},
			{
				"origin": "qc_snr_217",
				"target": "nii_desc-boldSnrHist_quality_224"
			},
			{
				"origin": "qc_snr_217",
				"target": "nii_desc-boldSnr_quality_225"
			},
			{
				"origin": "anat_edge_226",
				"target": "montage_anat_226"
			},
			{
				"origin": "qc_motion_114",
				"target": "nii_desc-movementParametersTrans_quality_230"
			},
			{
				"origin": "qc_motion_114",
				"target": "nii_desc-movementParametersRot_quality_231"
			},
			{
				"origin": "qc_fd_135",
				"target": "nii_desc-framewiseDisplacementJenkinsonPlot_quality_232"
			},
			{
				"origin": "anat_mni_ants_register",
				"target": "montage_mni_anat_237"
			},
			{
				"origin": "anat_mni_ants_register",
				"target": "nii_space-template_desc-preproc_T1w_76"
			},
			{
				"origin": "anat_mni_ants_register",
				"target": "nii_from-T1w_to-template_mode-image_desc-nonlinear_xfm_81"
			},
			{
				"origin": "anat_mni_ants_register",
				"target": "nii_from-template_to-T1w_mode-image_desc-nonlinear_xfm_82"
			},
			{
				"origin": "anat_template_edge_237",
				"target": "montage_mni_anat_237"
			},
			{
				"origin": "gather_GM-path",
				"target": "carpet_seg_241"
			},
			{
				"origin": "gather_WM-path",
				"target": "carpet_seg_241"
			},
			{
				"origin": "gather_CSF-path",
				"target": "carpet_seg_241"
			},
			{
				"origin": "func_template_edge_247",
				"target": "montage_mfi_247"
			},
			{
				"origin": "id_string_desc-preproc_T1w_67",
				"target": "nii_desc-preproc_T1w_67"
			},
			{
				"origin": "id_string_desc-preproc_T1w_67",
				"target": "json_desc-preproc_T1w_67"
			},
			{
				"origin": "nii_desc-preproc_T1w_67",
				"target": "sinker_desc-preproc_T1w_67"
			},
			{
				"origin": "json_desc-preproc_T1w_67",
				"target": "sinker_desc-preproc_T1w_67"
			},
			{
				"origin": "id_string_desc-head_T1w_69",
				"target": "nii_desc-head_T1w_69"
			},
			{
				"origin": "id_string_desc-head_T1w_69",
				"target": "json_desc-head_T1w_69"
			},
			{
				"origin": "nii_desc-head_T1w_69",
				"target": "sinker_desc-head_T1w_69"
			},
			{
				"origin": "json_desc-head_T1w_69",
				"target": "sinker_desc-head_T1w_69"
			},
			{
				"origin": "id_string_space-T1w_desc-brain_mask_63",
				"target": "nii_space-T1w_desc-brain_mask_63"
			},
			{
				"origin": "id_string_space-T1w_desc-brain_mask_63",
				"target": "json_space-T1w_desc-brain_mask_63"
			},
			{
				"origin": "nii_space-T1w_desc-brain_mask_63",
				"target": "sinker_space-T1w_desc-brain_mask_63"
			},
			{
				"origin": "json_space-T1w_desc-brain_mask_63",
				"target": "sinker_space-T1w_desc-brain_mask_63"
			},
			{
				"origin": "id_string_space-template_desc-preproc_T1w_76",
				"target": "nii_space-template_desc-preproc_T1w_76"
			},
			{
				"origin": "id_string_space-template_desc-preproc_T1w_76",
				"target": "json_space-template_desc-preproc_T1w_76"
			},
			{
				"origin": "nii_space-template_desc-preproc_T1w_76",
				"target": "sinker_space-template_desc-preproc_T1w_76"
			},
			{
				"origin": "json_space-template_desc-preproc_T1w_76",
				"target": "sinker_space-template_desc-preproc_T1w_76"
			},
			{
				"origin": "id_string_from-T1w_to-template_mode-image_xfm_77",
				"target": "nii_from-T1w_to-template_mode-image_xfm_77"
			},
			{
				"origin": "id_string_from-T1w_to-template_mode-image_xfm_77",
				"target": "json_from-T1w_to-template_mode-image_xfm_77"
			},
			{
				"origin": "nii_from-T1w_to-template_mode-image_xfm_77",
				"target": "sinker_from-T1w_to-template_mode-image_xfm_77"
			},
			{
				"origin": "json_from-T1w_to-template_mode-image_xfm_77",
				"target": "sinker_from-T1w_to-template_mode-image_xfm_77"
			},
			{
				"origin": "id_string_from-template_to-T1w_mode-image_xfm_78",
				"target": "nii_from-template_to-T1w_mode-image_xfm_78"
			},
			{
				"origin": "id_string_from-template_to-T1w_mode-image_xfm_78",
				"target": "json_from-template_to-T1w_mode-image_xfm_78"
			},
			{
				"origin": "nii_from-template_to-T1w_mode-image_xfm_78",
				"target": "sinker_from-template_to-T1w_mode-image_xfm_78"
			},
			{
				"origin": "json_from-template_to-T1w_mode-image_xfm_78",
				"target": "sinker_from-template_to-T1w_mode-image_xfm_78"
			},
			{
				"origin": "id_string_from-T1w_to-template_mode-image_desc-linear_xfm_79",
				"target": "nii_from-T1w_to-template_mode-image_desc-linear_xfm_79"
			},
			{
				"origin": "id_string_from-T1w_to-template_mode-image_desc-linear_xfm_79",
				"target": "json_from-T1w_to-template_mode-image_desc-linear_xfm_79"
			},
			{
				"origin": "nii_from-T1w_to-template_mode-image_desc-linear_xfm_79",
				"target": "sinker_from-T1w_to-template_mode-image_desc-linear_xfm_79"
			},
			{
				"origin": "json_from-T1w_to-template_mode-image_desc-linear_xfm_79",
				"target": "sinker_from-T1w_to-template_mode-image_desc-linear_xfm_79"
			},
			{
				"origin": "id_string_from-template_to-T1w_mode-image_desc-linear_xfm_80",
				"target": "nii_from-template_to-T1w_mode-image_desc-linear_xfm_80"
			},
			{
				"origin": "id_string_from-template_to-T1w_mode-image_desc-linear_xfm_80",
				"target": "json_from-template_to-T1w_mode-image_desc-linear_xfm_80"
			},
			{
				"origin": "nii_from-template_to-T1w_mode-image_desc-linear_xfm_80",
				"target": "sinker_from-template_to-T1w_mode-image_desc-linear_xfm_80"
			},
			{
				"origin": "json_from-template_to-T1w_mode-image_desc-linear_xfm_80",
				"target": "sinker_from-template_to-T1w_mode-image_desc-linear_xfm_80"
			},
			{
				"origin": "id_string_from-T1w_to-template_mode-image_desc-nonlinear_xfm_81",
				"target": "nii_from-T1w_to-template_mode-image_desc-nonlinear_xfm_81"
			},
			{
				"origin": "id_string_from-T1w_to-template_mode-image_desc-nonlinear_xfm_81",
				"target": "json_from-T1w_to-template_mode-image_desc-nonlinear_xfm_81"
			},
			{
				"origin": "nii_from-T1w_to-template_mode-image_desc-nonlinear_xfm_81",
				"target": "sinker_from-T1w_to-template_mode-image_desc-nonlinear_xfm_81"
			},
			{
				"origin": "json_from-T1w_to-template_mode-image_desc-nonlinear_xfm_81",
				"target": "sinker_from-T1w_to-template_mode-image_desc-nonlinear_xfm_81"
			},
			{
				"origin": "id_string_from-template_to-T1w_mode-image_desc-nonlinear_xfm_82",
				"target": "nii_from-template_to-T1w_mode-image_desc-nonlinear_xfm_82"
			},
			{
				"origin": "id_string_from-template_to-T1w_mode-image_desc-nonlinear_xfm_82",
				"target": "json_from-template_to-T1w_mode-image_desc-nonlinear_xfm_82"
			},
			{
				"origin": "nii_from-template_to-T1w_mode-image_desc-nonlinear_xfm_82",
				"target": "sinker_from-template_to-T1w_mode-image_desc-nonlinear_xfm_82"
			},
			{
				"origin": "json_from-template_to-T1w_mode-image_desc-nonlinear_xfm_82",
				"target": "sinker_from-template_to-T1w_mode-image_desc-nonlinear_xfm_82"
			},
			{
				"origin": "id_string_space-template_desc-head_T1w_86",
				"target": "nii_space-template_desc-head_T1w_86"
			},
			{
				"origin": "id_string_space-template_desc-head_T1w_86",
				"target": "json_space-template_desc-head_T1w_86"
			},
			{
				"origin": "nii_space-template_desc-head_T1w_86",
				"target": "sinker_space-template_desc-head_T1w_86"
			},
			{
				"origin": "json_space-template_desc-head_T1w_86",
				"target": "sinker_space-template_desc-head_T1w_86"
			},
			{
				"origin": "id_string_space-template_desc-brain_mask_90",
				"target": "nii_space-template_desc-brain_mask_90"
			},
			{
				"origin": "id_string_space-template_desc-brain_mask_90",
				"target": "json_space-template_desc-brain_mask_90"
			},
			{
				"origin": "nii_space-template_desc-brain_mask_90",
				"target": "sinker_space-template_desc-brain_mask_90"
			},
			{
				"origin": "json_space-template_desc-brain_mask_90",
				"target": "sinker_space-template_desc-brain_mask_90"
			},
			{
				"origin": "id_string_label-CSF_mask_93",
				"target": "nii_label-CSF_mask_93"
			},
			{
				"origin": "id_string_label-CSF_mask_93",
				"target": "json_label-CSF_mask_93"
			},
			{
				"origin": "nii_label-CSF_mask_93",
				"target": "sinker_label-CSF_mask_93"
			},
			{
				"origin": "json_label-CSF_mask_93",
				"target": "sinker_label-CSF_mask_93"
			},
			{
				"origin": "id_string_label-GM_mask_94",
				"target": "nii_label-GM_mask_94"
			},
			{
				"origin": "id_string_label-GM_mask_94",
				"target": "json_label-GM_mask_94"
			},
			{
				"origin": "nii_label-GM_mask_94",
				"target": "sinker_label-GM_mask_94"
			},
			{
				"origin": "json_label-GM_mask_94",
				"target": "sinker_label-GM_mask_94"
			},
			{
				"origin": "id_string_label-WM_mask_95",
				"target": "nii_label-WM_mask_95"
			},
			{
				"origin": "id_string_label-WM_mask_95",
				"target": "json_label-WM_mask_95"
			},
			{
				"origin": "nii_label-WM_mask_95",
				"target": "sinker_label-WM_mask_95"
			},
			{
				"origin": "json_label-WM_mask_95",
				"target": "sinker_label-WM_mask_95"
			},
			{
				"origin": "id_string_desc-preproc_bold_200",
				"target": "nii_desc-preproc_bold_200"
			},
			{
				"origin": "id_string_desc-preproc_bold_200",
				"target": "json_desc-preproc_bold_200"
			},
			{
				"origin": "nii_desc-preproc_bold_200",
				"target": "sinker_desc-preproc_bold_200"
			},
			{
				"origin": "json_desc-preproc_bold_200",
				"target": "sinker_desc-preproc_bold_200"
			},
			{
				"origin": "id_string_desc-mean_bold_105",
				"target": "nii_desc-mean_bold_105"
			},
			{
				"origin": "id_string_desc-mean_bold_105",
				"target": "json_desc-mean_bold_105"
			},
			{
				"origin": "nii_desc-mean_bold_105",
				"target": "sinker_desc-mean_bold_105"
			},
			{
				"origin": "json_desc-mean_bold_105",
				"target": "sinker_desc-mean_bold_105"
			},
			{
				"origin": "id_string_desc-movementParameters_motion_114",
				"target": "nii_desc-movementParameters_motion_114"
			},
			{
				"origin": "id_string_desc-movementParameters_motion_114",
				"target": "json_desc-movementParameters_motion_114"
			},
			{
				"origin": "nii_desc-movementParameters_motion_114",
				"target": "sinker_desc-movementParameters_motion_114"
			},
			{
				"origin": "json_desc-movementParameters_motion_114",
				"target": "sinker_desc-movementParameters_motion_114"
			},
			{
				"origin": "id_string_space-bold_desc-brain_mask_121",
				"target": "nii_space-bold_desc-brain_mask_121"
			},
			{
				"origin": "id_string_space-bold_desc-brain_mask_121",
				"target": "json_space-bold_desc-brain_mask_121"
			},
			{
				"origin": "nii_space-bold_desc-brain_mask_121",
				"target": "sinker_space-bold_desc-brain_mask_121"
			},
			{
				"origin": "json_space-bold_desc-brain_mask_121",
				"target": "sinker_space-bold_desc-brain_mask_121"
			},
			{
				"origin": "id_string_motion_139",
				"target": "nii_motion_139"
			},
			{
				"origin": "id_string_motion_139",
				"target": "json_motion_139"
			},
			{
				"origin": "nii_motion_139",
				"target": "sinker_motion_139"
			},
			{
				"origin": "json_motion_139",
				"target": "sinker_motion_139"
			},
			{
				"origin": "id_string_desc-summary_motion_140",
				"target": "nii_desc-summary_motion_140"
			},
			{
				"origin": "id_string_desc-summary_motion_140",
				"target": "json_desc-summary_motion_140"
			},
			{
				"origin": "nii_desc-summary_motion_140",
				"target": "sinker_desc-summary_motion_140"
			},
			{
				"origin": "json_desc-summary_motion_140",
				"target": "sinker_desc-summary_motion_140"
			},
			{
				"origin": "id_string_sbref_142",
				"target": "nii_sbref_142"
			},
			{
				"origin": "id_string_sbref_142",
				"target": "json_sbref_142"
			},
			{
				"origin": "nii_sbref_142",
				"target": "sinker_sbref_142"
			},
			{
				"origin": "json_sbref_142",
				"target": "sinker_sbref_142"
			},
			{
				"origin": "id_string_space-T1w_sbref_150",
				"target": "nii_space-T1w_sbref_150"
			},
			{
				"origin": "id_string_space-T1w_sbref_150",
				"target": "json_space-T1w_sbref_150"
			},
			{
				"origin": "nii_space-T1w_sbref_150",
				"target": "sinker_space-T1w_sbref_150"
			},
			{
				"origin": "json_space-T1w_sbref_150",
				"target": "sinker_space-T1w_sbref_150"
			},
			{
				"origin": "id_string_from-bold_to-T1w_mode-image_desc-linear_xfm_151",
				"target": "nii_from-bold_to-T1w_mode-image_desc-linear_xfm_151"
			},
			{
				"origin": "id_string_from-bold_to-T1w_mode-image_desc-linear_xfm_151",
				"target": "json_from-bold_to-T1w_mode-image_desc-linear_xfm_151"
			},
			{
				"origin": "nii_from-bold_to-T1w_mode-image_desc-linear_xfm_151",
				"target": "sinker_from-bold_to-T1w_mode-image_desc-linear_xfm_151"
			},
			{
				"origin": "json_from-bold_to-T1w_mode-image_desc-linear_xfm_151",
				"target": "sinker_from-bold_to-T1w_mode-image_desc-linear_xfm_151"
			},
			{
				"origin": "id_string_from-bold_to-template_mode-image_xfm_158",
				"target": "nii_from-bold_to-template_mode-image_xfm_158"
			},
			{
				"origin": "id_string_from-bold_to-template_mode-image_xfm_158",
				"target": "json_from-bold_to-template_mode-image_xfm_158"
			},
			{
				"origin": "nii_from-bold_to-template_mode-image_xfm_158",
				"target": "sinker_from-bold_to-template_mode-image_xfm_158"
			},
			{
				"origin": "json_from-bold_to-template_mode-image_xfm_158",
				"target": "sinker_from-bold_to-template_mode-image_xfm_158"
			},
			{
				"origin": "id_string_from-template_to-bold_mode-image_xfm_159",
				"target": "nii_from-template_to-bold_mode-image_xfm_159"
			},
			{
				"origin": "id_string_from-template_to-bold_mode-image_xfm_159",
				"target": "json_from-template_to-bold_mode-image_xfm_159"
			},
			{
				"origin": "nii_from-template_to-bold_mode-image_xfm_159",
				"target": "sinker_from-template_to-bold_mode-image_xfm_159"
			},
			{
				"origin": "write_composite_inv_xfm",
				"target": "nii_from-template_to-bold_mode-image_xfm_159"
			},
			{
				"origin": "json_from-template_to-bold_mode-image_xfm_159",
				"target": "sinker_from-template_to-bold_mode-image_xfm_159"
			},
			{
				"origin": "id_string_desc-confounds_timeseries_187",
				"target": "nii_desc-confounds_timeseries_187"
			},
			{
				"origin": "id_string_desc-confounds_timeseries_187",
				"target": "json_desc-confounds_timeseries_187"
			},
			{
				"origin": "nii_desc-confounds_timeseries_187",
				"target": "sinker_desc-confounds_timeseries_187"
			},
			{
				"origin": "json_desc-confounds_timeseries_187",
				"target": "sinker_desc-confounds_timeseries_187"
			},
			{
				"origin": "id_string_space-template_desc-preproc_bold_204",
				"target": "nii_space-template_desc-preproc_bold_204"
			},
			{
				"origin": "id_string_space-template_desc-preproc_bold_204",
				"target": "json_space-template_desc-preproc_bold_204"
			},
			{
				"origin": "nii_space-template_desc-preproc_bold_204",
				"target": "sinker_space-template_desc-preproc_bold_204"
			},
			{
				"origin": "json_space-template_desc-preproc_bold_204",
				"target": "sinker_space-template_desc-preproc_bold_204"
			},
			{
				"origin": "id_string_space-template_sbref_208",
				"target": "nii_space-template_sbref_208"
			},
			{
				"origin": "id_string_space-template_sbref_208",
				"target": "json_space-template_sbref_208"
			},
			{
				"origin": "nii_space-template_sbref_208",
				"target": "sinker_space-template_sbref_208"
			},
			{
				"origin": "json_space-template_sbref_208",
				"target": "sinker_space-template_sbref_208"
			},
			{
				"origin": "id_string_space-template_desc-bold_mask_212",
				"target": "nii_space-template_desc-bold_mask_212"
			},
			{
				"origin": "id_string_space-template_desc-bold_mask_212",
				"target": "json_space-template_desc-bold_mask_212"
			},
			{
				"origin": "nii_space-template_desc-bold_mask_212",
				"target": "sinker_space-template_desc-bold_mask_212"
			},
			{
				"origin": "json_space-template_desc-bold_mask_212",
				"target": "sinker_space-template_desc-bold_mask_212"
			},
			{
				"origin": "id_string_space-template_res-derivative_desc-bold_mask_216",
				"target": "nii_space-template_res-derivative_desc-bold_mask_216"
			},
			{
				"origin": "id_string_space-template_res-derivative_desc-bold_mask_216",
				"target": "json_space-template_res-derivative_desc-bold_mask_216"
			},
			{
				"origin": "nii_space-template_res-derivative_desc-bold_mask_216",
				"target": "sinker_space-template_res-derivative_desc-bold_mask_216"
			},
			{
				"origin": "json_space-template_res-derivative_desc-bold_mask_216",
				"target": "sinker_space-template_res-derivative_desc-bold_mask_216"
			},
			{
				"origin": "id_string_desc-boldSnrAxial_quality_222",
				"target": "nii_desc-boldSnrAxial_quality_222"
			},
			{
				"origin": "id_string_desc-boldSnrAxial_quality_222",
				"target": "json_desc-boldSnrAxial_quality_222"
			},
			{
				"origin": "nii_desc-boldSnrAxial_quality_222",
				"target": "sinker_desc-boldSnrAxial_quality_222"
			},
			{
				"origin": "json_desc-boldSnrAxial_quality_222",
				"target": "sinker_desc-boldSnrAxial_quality_222"
			},
			{
				"origin": "id_string_desc-boldSnrSagittal_quality_223",
				"target": "nii_desc-boldSnrSagittal_quality_223"
			},
			{
				"origin": "id_string_desc-boldSnrSagittal_quality_223",
				"target": "json_desc-boldSnrSagittal_quality_223"
			},
			{
				"origin": "nii_desc-boldSnrSagittal_quality_223",
				"target": "sinker_desc-boldSnrSagittal_quality_223"
			},
			{
				"origin": "json_desc-boldSnrSagittal_quality_223",
				"target": "sinker_desc-boldSnrSagittal_quality_223"
			},
			{
				"origin": "id_string_desc-boldSnrHist_quality_224",
				"target": "nii_desc-boldSnrHist_quality_224"
			},
			{
				"origin": "id_string_desc-boldSnrHist_quality_224",
				"target": "json_desc-boldSnrHist_quality_224"
			},
			{
				"origin": "nii_desc-boldSnrHist_quality_224",
				"target": "sinker_desc-boldSnrHist_quality_224"
			},
			{
				"origin": "json_desc-boldSnrHist_quality_224",
				"target": "sinker_desc-boldSnrHist_quality_224"
			},
			{
				"origin": "id_string_desc-boldSnr_quality_225",
				"target": "nii_desc-boldSnr_quality_225"
			},
			{
				"origin": "id_string_desc-boldSnr_quality_225",
				"target": "json_desc-boldSnr_quality_225"
			},
			{
				"origin": "nii_desc-boldSnr_quality_225",
				"target": "sinker_desc-boldSnr_quality_225"
			},
			{
				"origin": "json_desc-boldSnr_quality_225",
				"target": "sinker_desc-boldSnr_quality_225"
			},
			{
				"origin": "id_string_desc-movementParametersTrans_quality_230",
				"target": "nii_desc-movementParametersTrans_quality_230"
			},
			{
				"origin": "id_string_desc-movementParametersTrans_quality_230",
				"target": "json_desc-movementParametersTrans_quality_230"
			},
			{
				"origin": "nii_desc-movementParametersTrans_quality_230",
				"target": "sinker_desc-movementParametersTrans_quality_230"
			},
			{
				"origin": "json_desc-movementParametersTrans_quality_230",
				"target": "sinker_desc-movementParametersTrans_quality_230"
			},
			{
				"origin": "id_string_desc-movementParametersRot_quality_231",
				"target": "nii_desc-movementParametersRot_quality_231"
			},
			{
				"origin": "id_string_desc-movementParametersRot_quality_231",
				"target": "json_desc-movementParametersRot_quality_231"
			},
			{
				"origin": "nii_desc-movementParametersRot_quality_231",
				"target": "sinker_desc-movementParametersRot_quality_231"
			},
			{
				"origin": "json_desc-movementParametersRot_quality_231",
				"target": "sinker_desc-movementParametersRot_quality_231"
			},
			{
				"origin": "id_string_desc-framewiseDisplacementJenkinsonPlot_quality_232",
				"target": "nii_desc-framewiseDisplacementJenkinsonPlot_quality_232"
			},
			{
				"origin": "id_string_desc-framewiseDisplacementJenkinsonPlot_quality_232",
				"target": "json_desc-framewiseDisplacementJenkinsonPlot_quality_232"
			},
			{
				"origin": "nii_desc-framewiseDisplacementJenkinsonPlot_quality_232",
				"target": "sinker_desc-framewiseDisplacementJenkinsonPlot_quality_232"
			},
			{
				"origin": "json_desc-framewiseDisplacementJenkinsonPlot_quality_232",
				"target": "sinker_desc-framewiseDisplacementJenkinsonPlot_quality_232"
			}
		]
	}
}
