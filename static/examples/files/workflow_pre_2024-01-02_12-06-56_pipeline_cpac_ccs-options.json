{
  "version": {
    "workflow": 1,
    "nipype": "1.8.6"
  },
  "meta": {
    "pipeline_name": "pipeline_cpac_ccs-options",
    "stage": "pre",
    "time": "2024-01-02T12:06:56.368099-05:00"
  },
  "workflow": {
    "name": "cpac_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
    "type": "workflow",
    "inputs": {
      "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1": "{'inputnode': {'creds_path': None, 'dl_dir': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working/pipeline_cpac_ccs-options', 'scan': '[Undefined]', 'subject': 'sub-NDARINV2VY7YYNW'}, 'check_func_scan': {'func_scan_dct': {'rest_run-01': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-01_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-02': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-02_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-03': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-03_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-04': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-04_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}}, 'function_str': 'CPAC.utils.datasource.check_func_scan'}, 'selectrest': {'function_str': 'CPAC.utils.datasource.get_rest', 'resource': 'scan', 'rest_dict': {'rest_run-01': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-01_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-02': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-02_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-03': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-03_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-04': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-04_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}}}, 'check_for_s3': {'function_str': 'CPAC.utils.datasource.check_for_s3', 'img_type': 'func'}, 'outputspec': {'magnitude': '[Undefined]', 'phase_diff': '[Undefined]'}, 'select_scan_params': {'function_str': 'CPAC.utils.datasource.get_rest', 'resource': 'scan_parameters', 'rest_dict': {'rest_run-01': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-01_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-02': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-02_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-03': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-03_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-04': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-04_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}}}, 's3_scan_params': {'function_str': 'CPAC.utils.datasource.check_for_s3', 'img_type': '[Undefined]'}}",
      "bold_scan_params_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1": "{'function_str': 'def get_scan_params(subject_id, scan, pipeconfig_start_indx,\\n                    pipeconfig_stop_indx, data_config_scan_params=None):\\n    \"\"\"\\n    Method to extract slice timing correction parameters\\n    and scan parameters.\\n\\n    Parameters\\n    ----------\\n    subject_id : str\\n        subject id\\n    scan : str\\n        scan id\\n    pipeconfig_start_indx : int\\n        starting volume index as provided in the pipeline config yaml file\\n    pipeconfig_stop_indx : int\\n        ending volume index as provided in the pipeline config yaml file\\n    data_config_scan_params : str\\n        file path to scan parameter JSON file listed in data config yaml file\\n\\n    Returns\\n    -------\\n    TR : a string\\n        TR value\\n    pattern : a string\\n        slice aquisition pattern string or file path\\n    ref_slice : an integer\\n        reference slice which is used to allign all other slices\\n    first_tr : an integer\\n        starting TR or starting volume index\\n    last_tr : an integer\\n        ending TR or ending volume index\\n    pe_direction : str\\n    effective_echo_spacing : float\\n    \"\"\"\\n\\n    import os\\n    import json\\n    import warnings\\n\\n    check2 = lambda val: val if val == None or val == \\'\\' or \\\\\\n                                isinstance(val, str) else int(val)\\n\\n    # initialize vars to empty\\n    TR = \\'\\'\\n    TE = None\\n    pattern = \\'\\'\\n    ref_slice = \\'\\'\\n    first_tr = \\'\\'\\n    last_tr = \\'\\'\\n    unit = \\'s\\'\\n    pe_direction = \\'\\'\\n    effective_echo_spacing = None\\n    template = None\\n\\n    if isinstance(pipeconfig_stop_indx, str):\\n        if \"End\" in pipeconfig_stop_indx or \"end\" in pipeconfig_stop_indx:\\n            pipeconfig_stop_indx = None\\n    if data_config_scan_params:\\n        if \".json\" in data_config_scan_params:\\n            if not os.path.exists(data_config_scan_params):\\n                err = \"\\\\n[!] WARNING: Scan parameters JSON file listed in \" \\\\\\n                      \"your data configuration file does not exist:\\\\n{0}\" \\\\\\n                      \"\\\\n\\\\n\".format(data_config_scan_params)\\n                raise Exception(err)\\n\\n            with open(data_config_scan_params, \"r\") as f:\\n                params_dct = json.load(f)\\n\\n            # get details from the configuration\\n            # if this is a JSON file, the key values are the BIDS format\\n            # standard\\n            # TODO: better handling of errant key values!!!\\n            if \"RepetitionTime\" in params_dct.keys():\\n                TR = float(check(params_dct, subject_id, scan,\\n                                 \"RepetitionTime\", False))\\n            if \"SliceTiming\" in params_dct.keys():\\n                pattern = str(check(params_dct, subject_id, scan,\\n                                    \"SliceTiming\", False))\\n            elif \"SliceAcquisitionOrder\" in params_dct.keys():\\n                pattern = str(check(params_dct, subject_id, scan,\\n                                    \"SliceAcquisitionOrder\", False))\\n            if \"PhaseEncodingDirection\" in params_dct.keys():\\n                pe_direction = str(check(params_dct, subject_id, scan,\\n                                         \"PhaseEncodingDirection\", False))\\n            try:\\n                \"EffectiveEchoSpacing\" in params_dct.keys()\\n                effective_echo_spacing = float(\\n                        check(params_dct, subject_id, scan,\\n                            \"EffectiveEchoSpacing\", False))\\n            except TypeError:\\n                pass\\n\\n        elif len(data_config_scan_params) > 0 and \\\\\\n                isinstance(data_config_scan_params, dict):\\n\\n            params_dct = data_config_scan_params\\n\\n            # TODO: better handling of errant key values!!!\\n            # TODO: use schema validator to deal with it\\n            # get details from the configuration\\n            try: \\n                TR = float(\\n                    try_fetch_parameter(\\n                        params_dct,\\n                        subject_id,\\n                        scan,\\n                        [\\'TR\\', \\'RepetitionTime\\']\\n                    )\\n                )\\n            except TypeError:\\n                TR = None\\n\\n            try: \\n                template = str(\\n                    try_fetch_parameter(\\n                        params_dct,\\n                        subject_id,\\n                        scan,\\n                        [\\'Template\\', \\'template\\']\\n                    )\\n                )\\n            except TypeError:\\n                template = None\\n\\n            pattern = str(\\n                try_fetch_parameter(\\n                    params_dct,\\n                    subject_id,\\n                    scan,\\n                    [\\'acquisition\\', \\'SliceTiming\\', \\'SliceAcquisitionOrder\\']\\n                )\\n            )\\n\\n            ref_slice = check(params_dct, subject_id, scan, \\'reference\\',\\n                              False)\\n            if ref_slice:\\n                ref_slice = int(ref_slice)\\n\\n            first_tr = check(params_dct, subject_id, scan, \\'first_TR\\', False)\\n            if first_tr:\\n                first_tr = check2(first_tr)\\n\\n            last_tr = check(params_dct, subject_id, scan, \\'last_TR\\', False)\\n            if last_tr:\\n                last_tr = check2(last_tr)\\n\\n            pe_direction = check(params_dct, subject_id, scan,\\n                                 \\'PhaseEncodingDirection\\', False)\\n            try:\\n                effective_echo_spacing = float(\\n                try_fetch_parameter(params_dct, subject_id, scan,\\n                                    [\"EffectiveEchoSpacing\"]))\\n            except TypeError:\\n                pass\\n\\n        else:\\n            err = \"\\\\n\\\\n[!] Could not read the format of the scan parameters \" \\\\\\n                  \"information included in the data configuration file for \" \\\\\\n                  f\"the participant {subject_id}.\\\\n\\\\n\"\\n            raise Exception(err)\\n    if first_tr == \\'\\' or first_tr is None:\\n        first_tr = pipeconfig_start_indx\\n\\n    if last_tr == \\'\\' or last_tr is None:\\n        last_tr = pipeconfig_stop_indx\\n\\n    unit = \\'s\\'\\n\\n    if \\'None\\' in pattern or \\'none\\' in pattern:\\n        pattern = None\\n\\n    \\'\\'\\'\\n    if not pattern:\\n        if pipeconfig_tpattern:\\n            if \"Use NIFTI Header\" in pipeconfig_tpattern:\\n                pattern = \\'\\'\\n            else:\\n                pattern = pipeconfig_tpattern\\n    \\'\\'\\'\\n\\n    # pattern can be one of a few keywords, a filename, or blank which\\n    # indicates that the images header information should be used\\n    tpattern_file = None\\n\\n    valid_patterns = [\\'alt+z\\', \\'altplus\\', \\'alt+z2\\', \\'alt-z\\', \\'altminus\\',\\n                      \\'alt-z2\\', \\'seq+z\\', \\'seqplus\\', \\'seq-z\\', \\'seqminus\\']\\n    if pattern and pattern != \\'\\' and pattern not in valid_patterns:\\n\\n        if isinstance(pattern, list) or \\\\\\n                (\"[\" in pattern and \"]\" in pattern and \",\" in pattern):\\n            # if we got the slice timing as a list, from a BIDS-format scan\\n            # parameters JSON file\\n\\n            if not isinstance(pattern, list):\\n                pattern = pattern.replace(\"[\", \"\").replace(\"]\", \"\").split(\",\")\\n\\n            slice_timings = [float(x) for x in pattern]\\n\\n            # write out a tpattern file for AFNI 3dTShift\\n            tpattern_file = os.path.join(os.getcwd(), \"tpattern.txt\")\\n            try:\\n                with open(tpattern_file, \"wt\") as f:\\n                    for time in slice_timings:\\n                        f.write(\"{0}\\\\n\".format(time).replace(\" \", \"\"))\\n            except:\\n                err = \"\\\\n[!] Could not write the slice timing file meant as \" \\\\\\n                      \"an input for AFNI 3dTshift (slice timing correction):\" \\\\\\n                      \"\\\\n{0}\\\\n\\\\n\".format(tpattern_file)\\n                raise Exception(err)\\n\\n        elif \".txt\" in pattern and not os.path.exists(pattern):\\n            # if the user provided an acquisition pattern text file for\\n            # 3dTshift\\n            raise Exception(\"Invalid Pattern file path {0}, Please provide \"\\n                            \"the correct path\".format(pattern))\\n        elif \".txt\" in pattern:\\n            with open(pattern, \"r\") as f:\\n                lines = f.readlines()\\n            if len(lines) < 2:\\n                raise Exception(\\'Invalid slice timing file format. The file \\'\\n                                \\'should contain only one value per row. Use \\'\\n                                \\'new line char as delimiter\\')\\n            tpattern_file = pattern\\n            slice_timings = [float(l.rstrip(\\'\\\\r\\\\n\\')) for l in lines]\\n        else:\\n            # this only happens if there is a non-path string set in the data\\n            # config dictionary for acquisition pattern (like \"alt+z\"), except\\n            # the pattern is not listed in that list\\n            err = \"\\\\n[!] The slice timing acquisition pattern provided is \" \\\\\\n                  \"not supported by AFNI 3dTshift:\\\\n\" \\\\\\n                  \"{0}\\\\n\".format(str(pattern))\\n            raise Exception(err)\\n\\n        pattern = tpattern_file\\n\\n        slice_timings.sort()\\n        max_slice_offset = slice_timings[-1]\\n\\n        # checking if the unit of TR and slice timing match or not\\n        # if slice timing in ms convert TR to ms as well\\n        if TR and max_slice_offset > TR:\\n            warnings.warn(\"TR is in seconds and slice timings are in \"\\n                          \"milliseconds. Converting TR into milliseconds\")\\n            TR = TR * 1000\\n            print(\"New TR value {0} ms\".format(TR))\\n            unit = \\'ms\\'\\n\\n    else:\\n        # check to see, if TR is in milliseconds, convert it into seconds\\n        if TR and TR > 10:\\n            warnings.warn(\\'TR is in milliseconds, Converting it into seconds\\')\\n            TR = TR / 1000.0\\n            print(\"New TR value {0} s\".format(TR))\\n            unit = \\'s\\'\\n\\n    # swap back in\\n    if TR:\\n        tr = \"{0}{1}\".format(str(TR), unit)\\n    else:\\n        tr = \"\"\\n\\n    tpattern = pattern\\n    start_indx = first_tr\\n    stop_indx = last_tr\\n\\n    return (tr if tr else None,\\n            tpattern if tpattern else None,\\n            template if template else None,\\n            ref_slice,\\n            start_indx,\\n            stop_indx,\\n            pe_direction,\\n            effective_echo_spacing)\\n', 'pipeconfig_start_indx': 0, 'pipeconfig_stop_indx': None, 'pipeconfig_tpattern': '[Undefined]', 'pipeconfig_tr': '[Undefined]', 'subject_id': 'sub-NDARINV2VY7YYNW'}",
      "anat_T1w_gather_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1": "{'inputnode': {'anat': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/anat/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_run-01_T1w.nii', 'creds_path': None, 'dl_dir': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working/pipeline_cpac_ccs-options', 'img_type': 'anat', 'subject': 'sub-NDARINV2VY7YYNW'}, 'check_for_s3': {'function_str': 'CPAC.utils.datasource.check_for_s3'}, 'outputspec': {}}",
      "anat_deoblique_0": "{'args': '[Undefined]', 'atrcopy': '[Undefined]', 'atrfloat': '[Undefined]', 'atrint': '[Undefined]', 'atrstring': '[Undefined]', 'deoblique': True, 'duporigin_file': '[Undefined]', 'environ': {}, 'nosaveatr': '[Undefined]', 'saveatr': '[Undefined]', 'space': '[Undefined]', 'xdel': '[Undefined]', 'xorigin': '[Undefined]', 'xyzscale': '[Undefined]', 'ydel': '[Undefined]', 'yorigin': '[Undefined]', 'zdel': '[Undefined]', 'zorigin': '[Undefined]'}",
      "anat_reorient_0": "{'args': '[Undefined]', 'environ': {}, 'master': '[Undefined]', 'num_threads': 1, 'orientation': 'RPI', 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'resample_mode': '[Undefined]', 'voxel_size': '[Undefined]'}",
      "anat_freesurfer_46": "{'FLAIR_file': '[Undefined]', 'T2_file': '[Undefined]', 'args': '-clean-bm -gcut', 'big_ventricles': '[Undefined]', 'brainstem': '[Undefined]', 'directive': 'all', 'environ': {}, 'expert': '[Undefined]', 'flags': '[Undefined]', 'hemi': '[Undefined]', 'hippocampal_subfields_T1': '[Undefined]', 'hippocampal_subfields_T2': '[Undefined]', 'hires': '[Undefined]', 'mprage': '[Undefined]', 'mri_aparc2aseg': '[Undefined]', 'mri_ca_label': '[Undefined]', 'mri_ca_normalize': '[Undefined]', 'mri_ca_register': '[Undefined]', 'mri_edit_wm_with_aseg': '[Undefined]', 'mri_em_register': '[Undefined]', 'mri_fill': '[Undefined]', 'mri_mask': '[Undefined]', 'mri_normalize': '[Undefined]', 'mri_pretess': '[Undefined]', 'mri_remove_neck': '[Undefined]', 'mri_segment': '[Undefined]', 'mri_segstats': '[Undefined]', 'mri_tessellate': '[Undefined]', 'mri_watershed': '[Undefined]', 'mris_anatomical_stats': '[Undefined]', 'mris_ca_label': '[Undefined]', 'mris_fix_topology': '[Undefined]', 'mris_inflate': '[Undefined]', 'mris_make_surfaces': '[Undefined]', 'mris_register': '[Undefined]', 'mris_smooth': '[Undefined]', 'mris_sphere': '[Undefined]', 'mris_surf2vol': '[Undefined]', 'mrisp_paint': '[Undefined]', 'openmp': 1, 'parallel': '[Undefined]', 'subject_id': 'recon_all', 'subjects_dir': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working/pipeline_cpac_ccs-options/cpac_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1/anat_preproc_freesurfer_46/anat_freesurfer', 'talairach': '[Undefined]', 'use_FLAIR': '[Undefined]', 'use_T2': '[Undefined]', 'xopts': '[Undefined]'}",
      "split_curv_46": "{'function_str': \"def split_hemi(multi_file):\\n    # pylint: disable=invalid-name\\n    lh = None\\n    rh = None\\n    for filepath in multi_file:\\n        if 'lh.' in filepath:\\n            lh = filepath\\n        if 'rh.' in filepath:\\n            rh = filepath\\n    return (lh, rh)\\n\"}",
      "split_pial_46": "{'function_str': \"def split_hemi(multi_file):\\n    # pylint: disable=invalid-name\\n    lh = None\\n    rh = None\\n    for filepath in multi_file:\\n        if 'lh.' in filepath:\\n            lh = filepath\\n        if 'rh.' in filepath:\\n            rh = filepath\\n    return (lh, rh)\\n\"}",
      "split_smoothwm_46": "{'function_str': \"def split_hemi(multi_file):\\n    # pylint: disable=invalid-name\\n    lh = None\\n    rh = None\\n    for filepath in multi_file:\\n        if 'lh.' in filepath:\\n            lh = filepath\\n        if 'rh.' in filepath:\\n            rh = filepath\\n    return (lh, rh)\\n\"}",
      "split_sphere_46": "{'function_str': \"def split_hemi(multi_file):\\n    # pylint: disable=invalid-name\\n    lh = None\\n    rh = None\\n    for filepath in multi_file:\\n        if 'lh.' in filepath:\\n            lh = filepath\\n        if 'rh.' in filepath:\\n            rh = filepath\\n    return (lh, rh)\\n\"}",
      "split_sulc_46": "{'function_str': \"def split_hemi(multi_file):\\n    # pylint: disable=invalid-name\\n    lh = None\\n    rh = None\\n    for filepath in multi_file:\\n        if 'lh.' in filepath:\\n            lh = filepath\\n        if 'rh.' in filepath:\\n            rh = filepath\\n    return (lh, rh)\\n\"}",
      "split_thickness_46": "{'function_str': \"def split_hemi(multi_file):\\n    # pylint: disable=invalid-name\\n    lh = None\\n    rh = None\\n    for filepath in multi_file:\\n        if 'lh.' in filepath:\\n            lh = filepath\\n        if 'rh.' in filepath:\\n            rh = filepath\\n    return (lh, rh)\\n\"}",
      "split_volume_46": "{'function_str': \"def split_hemi(multi_file):\\n    # pylint: disable=invalid-name\\n    lh = None\\n    rh = None\\n    for filepath in multi_file:\\n        if 'lh.' in filepath:\\n            lh = filepath\\n        if 'rh.' in filepath:\\n            rh = filepath\\n    return (lh, rh)\\n\"}",
      "split_white_46": "{'function_str': \"def split_hemi(multi_file):\\n    # pylint: disable=invalid-name\\n    lh = None\\n    rh = None\\n    for filepath in multi_file:\\n        if 'lh.' in filepath:\\n            lh = filepath\\n        if 'rh.' in filepath:\\n            rh = filepath\\n    return (lh, rh)\\n\"}",
      "anat_denoise_46": "{'args': '[Undefined]', 'dimension': '[Undefined]', 'environ': {'NSLOTS': '1'}, 'noise_image': '[Undefined]', 'noise_model': 'Gaussian', 'num_threads': 1, 'output_image': '[Undefined]', 'save_noise': False, 'shrink_factor': 1, 'verbose': '[Undefined]'}",
      "fs_brain_mask_to_native": "{'args': '[Undefined]', 'environ': {'SUBJECTS_DIR': '/usr/lib/freesurfer/subjects'}, 'fs_target': '[Undefined]', 'fsl_reg_file': '[Undefined]', 'interp': '[Undefined]', 'inverse': '[Undefined]', 'invert_morph': '[Undefined]', 'lta_file': '[Undefined]', 'lta_inv_file': '[Undefined]', 'm3z_file': '[Undefined]', 'mni_152_reg': '[Undefined]', 'no_ded_m3z_path': '[Undefined]', 'no_resample': '[Undefined]', 'reg_file': '[Undefined]', 'reg_header': True, 'subject': '[Undefined]', 'tal': '[Undefined]', 'tal_resolution': '[Undefined]', 'transformed_file': '[Undefined]', 'xfm_reg_file': '[Undefined]'}",
      "fs_brainmask_to_nifti_72": "{'function_str': 'def mri_convert(in_file, reslice_like=None, out_file=None, args=None):\\n    \"\"\"\\n    Method to convert files from mgz to nifti format\\n\\n    Parameters\\n    ----------\\n    in_file : string\\n        A path of mgz input file\\n    args : string\\n        Arguments of mri_convert\\n    Returns\\n    -------\\n    out_file : string\\n        A path of nifti output file\\n    \"\"\"\\n\\n    import os\\n\\n    if out_file is None:\\n        out_file = in_file.replace(\\'.mgz\\',\\'.nii.gz\\')\\n\\n    cmd = \\'mri_convert %s %s\\' % (in_file, out_file)\\n\\n    if reslice_like is not None:\\n        cmd = cmd + \\' -rl \\' + reslice_like\\n\\n    if args is not None:\\n        cmd = cmd + \\' \\' +args\\n\\n    os.system(cmd)\\n\\n    return out_file\\n'}",
      "binarize_fs_brainmask_72": "{'args': '-bin', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'internal_datatype': '[Undefined]', 'nan2zeros': '[Undefined]', 'out_file': '[Undefined]', 'output_datatype': '[Undefined]', 'output_type': 'NIFTI_GZ'}",
      "fill_fs_brainmask_72": "{'args': '[Undefined]', 'count': '[Undefined]', 'datum': '[Undefined]', 'dilate_inputs': '[Undefined]', 'dilate_results': '[Undefined]', 'environ': {}, 'fill_dirs': '[Undefined]', 'fill_holes': True, 'frac': '[Undefined]', 'inter': '[Undefined]', 'num_threads': 1, 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'union': '[Undefined]', 'verbose': '[Undefined]'}",
      "convert_fs_brainmask_to_nifti_freesurfer-bet-tight_76": "{'function_str': 'def mri_convert(in_file, reslice_like=None, out_file=None, args=None):\\n    \"\"\"\\n    Method to convert files from mgz to nifti format\\n\\n    Parameters\\n    ----------\\n    in_file : string\\n        A path of mgz input file\\n    args : string\\n        Arguments of mri_convert\\n    Returns\\n    -------\\n    out_file : string\\n        A path of nifti output file\\n    \"\"\"\\n\\n    import os\\n\\n    if out_file is None:\\n        out_file = in_file.replace(\\'.mgz\\',\\'.nii.gz\\')\\n\\n    cmd = \\'mri_convert %s %s\\' % (in_file, out_file)\\n\\n    if reslice_like is not None:\\n        cmd = cmd + \\' -rl \\' + reslice_like\\n\\n    if args is not None:\\n        cmd = cmd + \\' \\' +args\\n\\n    os.system(cmd)\\n\\n    return out_file\\n'}",
      "convert_fs_T1_to_nifti_freesurfer-bet-tight_76": "{'function_str': 'def mri_convert(in_file, reslice_like=None, out_file=None, args=None):\\n    \"\"\"\\n    Method to convert files from mgz to nifti format\\n\\n    Parameters\\n    ----------\\n    in_file : string\\n        A path of mgz input file\\n    args : string\\n        Arguments of mri_convert\\n    Returns\\n    -------\\n    out_file : string\\n        A path of nifti output file\\n    \"\"\"\\n\\n    import os\\n\\n    if out_file is None:\\n        out_file = in_file.replace(\\'.mgz\\',\\'.nii.gz\\')\\n\\n    cmd = \\'mri_convert %s %s\\' % (in_file, out_file)\\n\\n    if reslice_like is not None:\\n        cmd = cmd + \\' -rl \\' + reslice_like\\n\\n    if args is not None:\\n        cmd = cmd + \\' \\' +args\\n\\n    os.system(cmd)\\n\\n    return out_file\\n'}",
      "reorient_fs_brainmask_freesurfer-bet-tight_76": "{'args': '[Undefined]', 'environ': {}, 'master': '[Undefined]', 'num_threads': 1, 'orientation': 'RPI', 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'resample_mode': '[Undefined]', 'voxel_size': '[Undefined]'}",
      "binarize_fs_brain_freesurfer-bet-tight_76": "{'args': '-abs -bin', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'internal_datatype': '[Undefined]', 'nan2zeros': '[Undefined]', 'out_file': '[Undefined]', 'output_datatype': '[Undefined]', 'output_type': 'NIFTI_GZ'}",
      "reorient_fs_T1_freesurfer-bet-tight_76": "{'args': '[Undefined]', 'environ': {}, 'master': '[Undefined]', 'num_threads': 1, 'orientation': 'RPI', 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'resample_mode': '[Undefined]', 'voxel_size': '[Undefined]'}",
      "convert_head_to_template_freesurfer-bet-tight_76": "{'angle_rep': '[Undefined]', 'apply_isoxfm': '[Undefined]', 'apply_xfm': '[Undefined]', 'args': '[Undefined]', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': 256, 'coarse_search': '[Undefined]', 'cost': 'corratio', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'dof': 12, 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_matrix_file': '[Undefined]', 'in_weight': '[Undefined]', 'interp': 'trilinear', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': '[Undefined]', 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'schedule': '[Undefined]', 'searchr_x': [-90, 90], 'searchr_y': [-90, 90], 'searchr_z': [-90, 90], 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}",
      "gather_T1w-ACPC-template": "{'inputnode': {'creds_path': None, 'data': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz', 'dl_dir': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working/pipeline_cpac_ccs-options', 'scan': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}, 'check_for_s3': {'function_str': 'CPAC.utils.datasource.check_for_s3', 'img_type': 'other'}, 'outputspec': {}}",
      "convert_xfm_freesurfer-bet-tight_76": "{'args': '[Undefined]', 'concat_xfm': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fix_scale_skew': '[Undefined]', 'in_file2': '[Undefined]', 'invert_xfm': True, 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ'}",
      "anat_BET_skullstrip_freesurfer-bet-tight_76": "{'args': '[Undefined]', 'center': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'frac': 0.3, 'functional': '[Undefined]', 'mask': True, 'mesh': '[Undefined]', 'no_output': '[Undefined]', 'out_file': '[Undefined]', 'outline': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding': '[Undefined]', 'radius': '[Undefined]', 'reduce_bias': '[Undefined]', 'remove_eyes': '[Undefined]', 'robust': '[Undefined]', 'skull': '[Undefined]', 'surfaces': '[Undefined]', 't2_guided': '[Undefined]', 'threshold': '[Undefined]', 'vertical_gradient': '[Undefined]'}",
      "apply_mask_freesurfer-bet-tight_76": "{'args': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'internal_datatype': '[Undefined]', 'nan2zeros': '[Undefined]', 'out_file': '[Undefined]', 'output_datatype': '[Undefined]', 'output_type': 'NIFTI_GZ'}",
      "gather_T1w-brain-template-mask-ccs": "{'inputnode': {'creds_path': None, 'data': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz', 'dl_dir': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working/pipeline_cpac_ccs-options', 'scan': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}, 'check_for_s3': {'function_str': 'CPAC.utils.datasource.check_for_s3', 'img_type': 'other'}, 'outputspec': {}}",
      "convert_template_mask_to_native_freesurfer-bet-tight_76": "{'angle_rep': '[Undefined]', 'apply_isoxfm': '[Undefined]', 'apply_xfm': True, 'args': '[Undefined]', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': '[Undefined]', 'coarse_search': '[Undefined]', 'cost': '[Undefined]', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'dof': '[Undefined]', 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_weight': '[Undefined]', 'interp': 'nearestneighbour', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': 0, 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'schedule': '[Undefined]', 'searchr_x': '[Undefined]', 'searchr_y': '[Undefined]', 'searchr_z': '[Undefined]', 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}",
      "combine_mask_freesurfer-bet-tight_76": "{'args': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'internal_datatype': '[Undefined]', 'nan2zeros': '[Undefined]', 'operand_value': '[Undefined]', 'operation': 'add', 'out_file': '[Undefined]', 'output_datatype': '[Undefined]', 'output_type': 'NIFTI_GZ'}",
      "binarize_combined_mask_freesurfer-bet-tight_76": "{'args': '-bin', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'internal_datatype': '[Undefined]', 'nan2zeros': '[Undefined]', 'out_file': '[Undefined]', 'output_datatype': '[Undefined]', 'output_type': 'NIFTI_GZ'}",
      "fs_fsl_brain_mask_to_native_freesurfer-bet-tight_76": "{'args': '[Undefined]', 'environ': {'SUBJECTS_DIR': '/usr/lib/freesurfer/subjects'}, 'fs_target': '[Undefined]', 'fsl_reg_file': '[Undefined]', 'interp': 'nearest', 'inverse': '[Undefined]', 'invert_morph': '[Undefined]', 'lta_file': '[Undefined]', 'lta_inv_file': '[Undefined]', 'm3z_file': '[Undefined]', 'mni_152_reg': '[Undefined]', 'no_ded_m3z_path': '[Undefined]', 'no_resample': '[Undefined]', 'reg_file': '[Undefined]', 'reg_header': True, 'subject': '[Undefined]', 'tal': '[Undefined]', 'tal_resolution': '[Undefined]', 'transformed_file': '[Undefined]', 'xfm_reg_file': '[Undefined]'}",
      "convert_fs_brainmask_to_nifti_freesurfer-bet-loose_76": "{'function_str': 'def mri_convert(in_file, reslice_like=None, out_file=None, args=None):\\n    \"\"\"\\n    Method to convert files from mgz to nifti format\\n\\n    Parameters\\n    ----------\\n    in_file : string\\n        A path of mgz input file\\n    args : string\\n        Arguments of mri_convert\\n    Returns\\n    -------\\n    out_file : string\\n        A path of nifti output file\\n    \"\"\"\\n\\n    import os\\n\\n    if out_file is None:\\n        out_file = in_file.replace(\\'.mgz\\',\\'.nii.gz\\')\\n\\n    cmd = \\'mri_convert %s %s\\' % (in_file, out_file)\\n\\n    if reslice_like is not None:\\n        cmd = cmd + \\' -rl \\' + reslice_like\\n\\n    if args is not None:\\n        cmd = cmd + \\' \\' +args\\n\\n    os.system(cmd)\\n\\n    return out_file\\n'}",
      "convert_fs_T1_to_nifti_freesurfer-bet-loose_76": "{'function_str': 'def mri_convert(in_file, reslice_like=None, out_file=None, args=None):\\n    \"\"\"\\n    Method to convert files from mgz to nifti format\\n\\n    Parameters\\n    ----------\\n    in_file : string\\n        A path of mgz input file\\n    args : string\\n        Arguments of mri_convert\\n    Returns\\n    -------\\n    out_file : string\\n        A path of nifti output file\\n    \"\"\"\\n\\n    import os\\n\\n    if out_file is None:\\n        out_file = in_file.replace(\\'.mgz\\',\\'.nii.gz\\')\\n\\n    cmd = \\'mri_convert %s %s\\' % (in_file, out_file)\\n\\n    if reslice_like is not None:\\n        cmd = cmd + \\' -rl \\' + reslice_like\\n\\n    if args is not None:\\n        cmd = cmd + \\' \\' +args\\n\\n    os.system(cmd)\\n\\n    return out_file\\n'}",
      "reorient_fs_brainmask_freesurfer-bet-loose_76": "{'args': '[Undefined]', 'environ': {}, 'master': '[Undefined]', 'num_threads': 1, 'orientation': 'RPI', 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'resample_mode': '[Undefined]', 'voxel_size': '[Undefined]'}",
      "binarize_fs_brain_freesurfer-bet-loose_76": "{'args': '-abs -bin', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'internal_datatype': '[Undefined]', 'nan2zeros': '[Undefined]', 'out_file': '[Undefined]', 'output_datatype': '[Undefined]', 'output_type': 'NIFTI_GZ'}",
      "reorient_fs_T1_freesurfer-bet-loose_76": "{'args': '[Undefined]', 'environ': {}, 'master': '[Undefined]', 'num_threads': 1, 'orientation': 'RPI', 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'resample_mode': '[Undefined]', 'voxel_size': '[Undefined]'}",
      "convert_head_to_template_freesurfer-bet-loose_76": "{'angle_rep': '[Undefined]', 'apply_isoxfm': '[Undefined]', 'apply_xfm': '[Undefined]', 'args': '[Undefined]', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': 256, 'coarse_search': '[Undefined]', 'cost': 'corratio', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'dof': 12, 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_matrix_file': '[Undefined]', 'in_weight': '[Undefined]', 'interp': 'trilinear', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': '[Undefined]', 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'schedule': '[Undefined]', 'searchr_x': [-90, 90], 'searchr_y': [-90, 90], 'searchr_z': [-90, 90], 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}",
      "convert_xfm_freesurfer-bet-loose_76": "{'args': '[Undefined]', 'concat_xfm': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fix_scale_skew': '[Undefined]', 'in_file2': '[Undefined]', 'invert_xfm': True, 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ'}",
      "anat_BET_skullstrip_freesurfer-bet-loose_76": "{'args': '[Undefined]', 'center': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'frac': 0.1, 'functional': '[Undefined]', 'mask': True, 'mesh': '[Undefined]', 'no_output': '[Undefined]', 'out_file': '[Undefined]', 'outline': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding': '[Undefined]', 'radius': '[Undefined]', 'reduce_bias': '[Undefined]', 'remove_eyes': '[Undefined]', 'robust': '[Undefined]', 'skull': '[Undefined]', 'surfaces': '[Undefined]', 't2_guided': '[Undefined]', 'threshold': '[Undefined]', 'vertical_gradient': '[Undefined]'}",
      "apply_mask_freesurfer-bet-loose_76": "{'args': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'internal_datatype': '[Undefined]', 'nan2zeros': '[Undefined]', 'out_file': '[Undefined]', 'output_datatype': '[Undefined]', 'output_type': 'NIFTI_GZ'}",
      "convert_template_mask_to_native_freesurfer-bet-loose_76": "{'angle_rep': '[Undefined]', 'apply_isoxfm': '[Undefined]', 'apply_xfm': True, 'args': '[Undefined]', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': '[Undefined]', 'coarse_search': '[Undefined]', 'cost': '[Undefined]', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'dof': '[Undefined]', 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_weight': '[Undefined]', 'interp': 'nearestneighbour', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': 0, 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'schedule': '[Undefined]', 'searchr_x': '[Undefined]', 'searchr_y': '[Undefined]', 'searchr_z': '[Undefined]', 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}",
      "combine_mask_freesurfer-bet-loose_76": "{'args': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'internal_datatype': '[Undefined]', 'nan2zeros': '[Undefined]', 'operand_value': '[Undefined]', 'operation': 'mul', 'out_file': '[Undefined]', 'output_datatype': '[Undefined]', 'output_type': 'NIFTI_GZ'}",
      "binarize_combined_mask_freesurfer-bet-loose_76": "{'args': '-bin', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'internal_datatype': '[Undefined]', 'nan2zeros': '[Undefined]', 'out_file': '[Undefined]', 'output_datatype': '[Undefined]', 'output_type': 'NIFTI_GZ'}",
      "fs_fsl_brain_mask_to_native_freesurfer-bet-loose_76": "{'args': '[Undefined]', 'environ': {'SUBJECTS_DIR': '/usr/lib/freesurfer/subjects'}, 'fs_target': '[Undefined]', 'fsl_reg_file': '[Undefined]', 'interp': 'nearest', 'inverse': '[Undefined]', 'invert_morph': '[Undefined]', 'lta_file': '[Undefined]', 'lta_inv_file': '[Undefined]', 'm3z_file': '[Undefined]', 'mni_152_reg': '[Undefined]', 'no_ded_m3z_path': '[Undefined]', 'no_resample': '[Undefined]', 'reg_file': '[Undefined]', 'reg_header': True, 'subject': '[Undefined]', 'tal': '[Undefined]', 'tal_resolution': '[Undefined]', 'transformed_file': '[Undefined]', 'xfm_reg_file': '[Undefined]'}",
      "brain_extraction_90": "{'args': '[Undefined]', 'environ': {}, 'expr': 'a*step(b)', 'in_file_c': '[Undefined]', 'num_threads': 1, 'other': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'overwrite': '[Undefined]', 'single_idx': '[Undefined]', 'start_idx': '[Undefined]', 'stop_idx': '[Undefined]'}",
      "register_FSL_anat_to_template_96": "{'inputspec': {'fnirt_config': 'T1_2_MNI152_2mm', 'input_brain': '[Undefined]', 'input_head': '[Undefined]', 'input_mask': '[Undefined]', 'interpolation': 'trilinear', 'reference_brain': '[Undefined]', 'reference_head': '[Undefined]', 'reference_mask': '[Undefined]', 'transform': '[Undefined]'}, 'anat_mni_flirt_register': {'inputspec': {'input_brain': '[Undefined]', 'interp': '[Undefined]', 'ref_mask': '[Undefined]', 'reference_brain': '[Undefined]'}, 'linear_reg_0': {'angle_rep': '[Undefined]', 'apply_isoxfm': '[Undefined]', 'apply_xfm': '[Undefined]', 'args': '[Undefined]', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': '[Undefined]', 'coarse_search': '[Undefined]', 'cost': 'corratio', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'dof': '[Undefined]', 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_matrix_file': '[Undefined]', 'in_weight': '[Undefined]', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': '[Undefined]', 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'schedule': '[Undefined]', 'searchr_x': '[Undefined]', 'searchr_y': '[Undefined]', 'searchr_z': '[Undefined]', 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}, 'outputspec': {}, 'inv_linear_reg0_xfm': {'args': '[Undefined]', 'concat_xfm': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fix_scale_skew': '[Undefined]', 'in_file2': '[Undefined]', 'invert_xfm': True, 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ'}}, 'fsl_lin-warp_to_nii': {'abswarp': '[Undefined]', 'args': '[Undefined]', 'cons_jacobian': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'jacobian_max': '[Undefined]', 'jacobian_min': '[Undefined]', 'midmat': '[Undefined]', 'out_abswarp': '[Undefined]', 'out_file': '[Undefined]', 'out_relwarp': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'relwarp': '[Undefined]', 'shift_direction': '[Undefined]', 'shift_in_file': '[Undefined]', 'warp1': '[Undefined]', 'warp2': '[Undefined]'}, 'fsl_invlin-warp_to_nii': {'abswarp': '[Undefined]', 'args': '[Undefined]', 'cons_jacobian': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'jacobian_max': '[Undefined]', 'jacobian_min': '[Undefined]', 'midmat': '[Undefined]', 'out_abswarp': '[Undefined]', 'out_file': '[Undefined]', 'out_relwarp': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'relwarp': '[Undefined]', 'shift_direction': '[Undefined]', 'shift_in_file': '[Undefined]', 'warp1': '[Undefined]', 'warp2': '[Undefined]'}, 'anat_mni_fnirt_register': {'inputspec': {'fnirt_config': '[Undefined]', 'input_brain': '[Undefined]', 'input_skull': '[Undefined]', 'interp': '[Undefined]', 'linear_aff': '[Undefined]', 'ref_mask': '[Undefined]', 'reference_brain': '[Undefined]', 'reference_skull': '[Undefined]'}, 'nonlinear_reg_1': {'apply_inmask': '[Undefined]', 'apply_intensity_mapping': '[Undefined]', 'apply_refmask': '[Undefined]', 'args': '[Undefined]', 'bias_regularization_lambda': '[Undefined]', 'biasfield_resolution': '[Undefined]', 'derive_from_ref': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'field_file': '[Undefined]', 'fieldcoeff_file': True, 'hessian_precision': '[Undefined]', 'in_fwhm': '[Undefined]', 'in_intensitymap_file': '[Undefined]', 'inmask_file': '[Undefined]', 'inmask_val': '[Undefined]', 'intensity_mapping_model': '[Undefined]', 'intensity_mapping_order': '[Undefined]', 'inwarp_file': '[Undefined]', 'jacobian_file': True, 'jacobian_range': '[Undefined]', 'log_file': '[Undefined]', 'max_nonlin_iter': '[Undefined]', 'modulatedref_file': '[Undefined]', 'out_intensitymap_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'ref_fwhm': '[Undefined]', 'refmask_val': '[Undefined]', 'regularization_lambda': '[Undefined]', 'regularization_model': '[Undefined]', 'skip_implicit_in_masking': '[Undefined]', 'skip_implicit_ref_masking': '[Undefined]', 'skip_inmask': '[Undefined]', 'skip_intensity_mapping': '[Undefined]', 'skip_lambda_ssq': '[Undefined]', 'skip_refmask': '[Undefined]', 'spline_order': '[Undefined]', 'subsampling_scheme': '[Undefined]', 'warp_resolution': '[Undefined]', 'warped_file': '[Undefined]'}, 'brain_warp': {'abswarp': '[Undefined]', 'args': '[Undefined]', 'datatype': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'mask_file': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'premat': '[Undefined]', 'relwarp': '[Undefined]', 'superlevel': '[Undefined]', 'supersample': '[Undefined]'}, 'outputspec': {}}}",
      "resampled_T1w-brain-template": "{'function_str': 'CPAC.utils.datasource.resolve_resolution', 'resolution': '2mm', 'tag': 'resolution_for_anat', 'template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain.nii.gz', 'template_name': 'T1w-brain-template'}",
      "resampled_T1w-template": "{'function_str': 'CPAC.utils.datasource.resolve_resolution', 'resolution': '2mm', 'tag': 'resolution_for_anat', 'template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'template_name': 'T1w-template'}",
      "resampled_template-ref-mask": "{'function_str': 'CPAC.utils.datasource.resolve_resolution', 'resolution': '2mm', 'tag': 'resolution_for_anat', 'template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'template_name': 'template-ref-mask'}",
      "warp_wholehead_T1w_to_T1template_105": "{'inputspec': {'input_image': '[Undefined]', 'interpolation': 'trilinear', 'reference': '[Undefined]', 'transform': '[Undefined]'}, 'interp_string': {'function_str': \"def interpolation_string(interpolation, reg_tool):\\n    if reg_tool == 'ants':\\n        pass\\n    elif reg_tool == 'fsl':\\n        # translate to FSL\\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\\n        #          in C-PAC are now converted to .nii.gz\\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\\n    return interpolation\\n\", 'reg_tool': 'fsl'}, 'fsl_apply_warp': {'abswarp': '[Undefined]', 'args': '[Undefined]', 'datatype': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'mask_file': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'premat': '[Undefined]', 'relwarp': '[Undefined]', 'superlevel': '[Undefined]', 'supersample': '[Undefined]'}, 'outputspec': {}}",
      "anat_mni_fnirt_register": "{'inputspec': {'fnirt_config': '[Undefined]', 'input_brain': '[Undefined]', 'input_skull': '[Undefined]', 'interp': '[Undefined]', 'linear_aff': '[Undefined]', 'ref_mask': '[Undefined]', 'reference_brain': '[Undefined]', 'reference_skull': '[Undefined]'}, 'nonlinear_reg_1': {'apply_inmask': '[Undefined]', 'apply_intensity_mapping': '[Undefined]', 'apply_refmask': '[Undefined]', 'args': '[Undefined]', 'bias_regularization_lambda': '[Undefined]', 'biasfield_resolution': '[Undefined]', 'derive_from_ref': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'field_file': '[Undefined]', 'fieldcoeff_file': True, 'hessian_precision': '[Undefined]', 'in_fwhm': '[Undefined]', 'in_intensitymap_file': '[Undefined]', 'inmask_file': '[Undefined]', 'inmask_val': '[Undefined]', 'intensity_mapping_model': '[Undefined]', 'intensity_mapping_order': '[Undefined]', 'inwarp_file': '[Undefined]', 'jacobian_file': True, 'jacobian_range': '[Undefined]', 'log_file': '[Undefined]', 'max_nonlin_iter': '[Undefined]', 'modulatedref_file': '[Undefined]', 'out_intensitymap_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'ref_fwhm': '[Undefined]', 'refmask_val': '[Undefined]', 'regularization_lambda': '[Undefined]', 'regularization_model': '[Undefined]', 'skip_implicit_in_masking': '[Undefined]', 'skip_implicit_ref_masking': '[Undefined]', 'skip_inmask': '[Undefined]', 'skip_intensity_mapping': '[Undefined]', 'skip_lambda_ssq': '[Undefined]', 'skip_refmask': '[Undefined]', 'spline_order': '[Undefined]', 'subsampling_scheme': '[Undefined]', 'warp_resolution': '[Undefined]', 'warped_file': '[Undefined]'}, 'brain_warp': {'abswarp': '[Undefined]', 'args': '[Undefined]', 'datatype': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'mask_file': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'premat': '[Undefined]', 'relwarp': '[Undefined]', 'superlevel': '[Undefined]', 'supersample': '[Undefined]'}, 'outputspec': {}}",
      "warp_T1mask_to_T1template_109": "{'inputspec': {'input_image': '[Undefined]', 'interpolation': 'NearestNeighbor', 'reference': '[Undefined]', 'transform': '[Undefined]'}, 'interp_string': {'function_str': \"def interpolation_string(interpolation, reg_tool):\\n    if reg_tool == 'ants':\\n        pass\\n    elif reg_tool == 'fsl':\\n        # translate to FSL\\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\\n        #          in C-PAC are now converted to .nii.gz\\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\\n    return interpolation\\n\", 'reg_tool': 'fsl'}, 'fsl_apply_warp': {'abswarp': '[Undefined]', 'args': '[Undefined]', 'datatype': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'mask_file': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'premat': '[Undefined]', 'relwarp': '[Undefined]', 'superlevel': '[Undefined]', 'supersample': '[Undefined]'}, 'outputspec': {}}",
      "segment_113": "{'args': '[Undefined]', 'bias_iters': '[Undefined]', 'bias_lowpass': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'hyper': '[Undefined]', 'img_type': 1, 'init_seg_smooth': '[Undefined]', 'init_transform': '[Undefined]', 'iters_afterbias': '[Undefined]', 'manual_seg': '[Undefined]', 'mixel_smooth': '[Undefined]', 'no_bias': '[Undefined]', 'no_pve': '[Undefined]', 'number_classes': '[Undefined]', 'other_priors': '[Undefined]', 'out_basename': 'segment', 'output_biascorrected': '[Undefined]', 'output_biasfield': '[Undefined]', 'output_type': 'NIFTI_GZ', 'probability_maps': True, 'segment_iters': '[Undefined]', 'segments': True, 'use_priors': '[Undefined]', 'verbose': '[Undefined]'}",
      "get_pve_csf_113": "{'args': '-thr 0.5 -uthr 1.5 -bin', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'internal_datatype': '[Undefined]', 'nan2zeros': '[Undefined]', 'out_file': '[Undefined]', 'output_datatype': '[Undefined]', 'output_type': 'NIFTI_GZ'}",
      "get_pve_gm_113": "{'args': '-thr 1.5 -uthr 2.5 -bin', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'internal_datatype': '[Undefined]', 'nan2zeros': '[Undefined]', 'out_file': '[Undefined]', 'output_datatype': '[Undefined]', 'output_type': 'NIFTI_GZ'}",
      "get_pve_wm_113": "{'args': '-thr 2.5 -uthr 3.5 -bin', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'internal_datatype': '[Undefined]', 'nan2zeros': '[Undefined]', 'out_file': '[Undefined]', 'output_datatype': '[Undefined]', 'output_type': 'NIFTI_GZ'}",
      "gather_CSF-path": "{'inputnode': {'creds_path': None, 'data': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz', 'dl_dir': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working/pipeline_cpac_ccs-options', 'scan': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}, 'check_for_s3': {'function_str': 'CPAC.utils.datasource.check_for_s3', 'img_type': 'other'}, 'outputspec': {}}",
      "CSF_113": "{'inputspec': {'brain': '[Undefined]', 'brain_mask': '[Undefined]', 'erosion_mm': '[Undefined]', 'erosion_prop': '[Undefined]', 'mask_erosion_mm': '[Undefined]', 'probability_tissue_map': '[Undefined]', 'template_to_T1_xfm': '[Undefined]', 'threshold': 0.95, 'tissue_class_file': '[Undefined]', 'tissue_prior': '[Undefined]'}, 'seg_tissue_priors_template_to_T1': {'inputspec': {'input_image': '[Undefined]', 'interpolation': 'NearestNeighbor', 'reference': '[Undefined]', 'transform': '[Undefined]'}, 'interp_string': {'function_str': \"def interpolation_string(interpolation, reg_tool):\\n    if reg_tool == 'ants':\\n        pass\\n    elif reg_tool == 'fsl':\\n        # translate to FSL\\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\\n        #          in C-PAC are now converted to .nii.gz\\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\\n    return interpolation\\n\", 'reg_tool': 'fsl'}, 'fsl_apply_warp': {'abswarp': '[Undefined]', 'args': '[Undefined]', 'datatype': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'mask_file': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'premat': '[Undefined]', 'relwarp': '[Undefined]', 'superlevel': '[Undefined]', 'supersample': '[Undefined]'}, 'outputspec': {}}, 'overlap_CSF_113_map_with_prior': {'args': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'internal_datatype': '[Undefined]', 'nan2zeros': '[Undefined]', 'op_string': '-mas %s ', 'out_file': '[Undefined]', 'output_datatype': '[Undefined]', 'output_type': 'NIFTI_GZ'}, 'outputspec': {'probability_tissue_map': '[Undefined]'}}",
      "gather_GM-path": "{'inputnode': {'creds_path': None, 'data': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'dl_dir': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working/pipeline_cpac_ccs-options', 'scan': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}, 'check_for_s3': {'function_str': 'CPAC.utils.datasource.check_for_s3', 'img_type': 'other'}, 'outputspec': {}}",
      "GM_113": "{'inputspec': {'brain': '[Undefined]', 'brain_mask': '[Undefined]', 'erosion_mm': '[Undefined]', 'erosion_prop': '[Undefined]', 'mask_erosion_mm': '[Undefined]', 'probability_tissue_map': '[Undefined]', 'template_to_T1_xfm': '[Undefined]', 'threshold': 0.95, 'tissue_class_file': '[Undefined]', 'tissue_prior': '[Undefined]'}, 'seg_tissue_priors_template_to_T1': {'inputspec': {'input_image': '[Undefined]', 'interpolation': 'NearestNeighbor', 'reference': '[Undefined]', 'transform': '[Undefined]'}, 'interp_string': {'function_str': \"def interpolation_string(interpolation, reg_tool):\\n    if reg_tool == 'ants':\\n        pass\\n    elif reg_tool == 'fsl':\\n        # translate to FSL\\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\\n        #          in C-PAC are now converted to .nii.gz\\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\\n    return interpolation\\n\", 'reg_tool': 'fsl'}, 'fsl_apply_warp': {'abswarp': '[Undefined]', 'args': '[Undefined]', 'datatype': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'mask_file': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'premat': '[Undefined]', 'relwarp': '[Undefined]', 'superlevel': '[Undefined]', 'supersample': '[Undefined]'}, 'outputspec': {}}, 'overlap_GM_113_map_with_prior': {'args': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'internal_datatype': '[Undefined]', 'nan2zeros': '[Undefined]', 'op_string': '-mas %s ', 'out_file': '[Undefined]', 'output_datatype': '[Undefined]', 'output_type': 'NIFTI_GZ'}, 'outputspec': {'probability_tissue_map': '[Undefined]'}}",
      "gather_WM-path": "{'inputnode': {'creds_path': None, 'data': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'dl_dir': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working/pipeline_cpac_ccs-options', 'scan': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}, 'check_for_s3': {'function_str': 'CPAC.utils.datasource.check_for_s3', 'img_type': 'other'}, 'outputspec': {}}",
      "WM_113": "{'inputspec': {'brain': '[Undefined]', 'brain_mask': '[Undefined]', 'erosion_mm': '[Undefined]', 'erosion_prop': '[Undefined]', 'mask_erosion_mm': '[Undefined]', 'probability_tissue_map': '[Undefined]', 'template_to_T1_xfm': '[Undefined]', 'threshold': 0.95, 'tissue_class_file': '[Undefined]', 'tissue_prior': '[Undefined]'}, 'seg_tissue_priors_template_to_T1': {'inputspec': {'input_image': '[Undefined]', 'interpolation': 'NearestNeighbor', 'reference': '[Undefined]', 'transform': '[Undefined]'}, 'interp_string': {'function_str': \"def interpolation_string(interpolation, reg_tool):\\n    if reg_tool == 'ants':\\n        pass\\n    elif reg_tool == 'fsl':\\n        # translate to FSL\\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\\n        #          in C-PAC are now converted to .nii.gz\\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\\n    return interpolation\\n\", 'reg_tool': 'fsl'}, 'fsl_apply_warp': {'abswarp': '[Undefined]', 'args': '[Undefined]', 'datatype': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'mask_file': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'premat': '[Undefined]', 'relwarp': '[Undefined]', 'superlevel': '[Undefined]', 'supersample': '[Undefined]'}, 'outputspec': {}}, 'overlap_WM_113_map_with_prior': {'args': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'internal_datatype': '[Undefined]', 'nan2zeros': '[Undefined]', 'op_string': '-mas %s ', 'out_file': '[Undefined]', 'output_datatype': '[Undefined]', 'output_type': 'NIFTI_GZ'}, 'outputspec': {'probability_tissue_map': '[Undefined]'}}",
      "fsl_invlin-warp_to_nii": "{'abswarp': '[Undefined]', 'args': '[Undefined]', 'cons_jacobian': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'jacobian_max': '[Undefined]', 'jacobian_min': '[Undefined]', 'midmat': '[Undefined]', 'out_abswarp': '[Undefined]', 'out_file': '[Undefined]', 'out_relwarp': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'premat': '[Undefined]', 'reference': '[Undefined]', 'relwarp': '[Undefined]', 'shift_direction': '[Undefined]', 'shift_in_file': '[Undefined]', 'warp1': '[Undefined]', 'warp2': '[Undefined]'}",
      "get_csf_113": "{'function_str': 'def pick_wm_prob_0(probability_maps):\\n    \"\"\"Returns the csf probability map from the list of segmented\\n    probability maps\\n\\n    Parameters\\n    ----------\\n\\n    probability_maps : list (string)\\n        List of Probability Maps\\n\\n    Returns\\n    -------\\n\\n    file : string\\n        Path to segment_prob_0.nii.gz is returned\\n    \"\"\"\\n    if isinstance(probability_maps, list):\\n        if len(probability_maps) == 1:\\n            probability_maps = probability_maps[0]\\n        for filename in probability_maps:\\n            if filename.endswith(\"prob_0.nii.gz\"):\\n                return filename\\n    return None\\n'}",
      "warp_label-CSF_mask_to_T1wtemplate_131": "{'inputspec': {'input_image': '[Undefined]', 'interpolation': 'nn', 'reference': '[Undefined]', 'transform': '[Undefined]'}, 'interp_string': {'function_str': \"def interpolation_string(interpolation, reg_tool):\\n    if reg_tool == 'ants':\\n        pass\\n    elif reg_tool == 'fsl':\\n        # translate to FSL\\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\\n        #          in C-PAC are now converted to .nii.gz\\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\\n    return interpolation\\n\", 'reg_tool': 'fsl'}, 'fsl_apply_warp': {'abswarp': '[Undefined]', 'args': '[Undefined]', 'datatype': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'mask_file': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'premat': '[Undefined]', 'relwarp': '[Undefined]', 'superlevel': '[Undefined]', 'supersample': '[Undefined]'}, 'outputspec': {}}",
      "warp_label-WM_mask_to_T1wtemplate_131": "{'inputspec': {'input_image': '[Undefined]', 'interpolation': 'nn', 'reference': '[Undefined]', 'transform': '[Undefined]'}, 'interp_string': {'function_str': \"def interpolation_string(interpolation, reg_tool):\\n    if reg_tool == 'ants':\\n        pass\\n    elif reg_tool == 'fsl':\\n        # translate to FSL\\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\\n        #          in C-PAC are now converted to .nii.gz\\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\\n    return interpolation\\n\", 'reg_tool': 'fsl'}, 'fsl_apply_warp': {'abswarp': '[Undefined]', 'args': '[Undefined]', 'datatype': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'mask_file': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'premat': '[Undefined]', 'relwarp': '[Undefined]', 'superlevel': '[Undefined]', 'supersample': '[Undefined]'}, 'outputspec': {}}",
      "warp_label-GM_mask_to_T1wtemplate_131": "{'inputspec': {'input_image': '[Undefined]', 'interpolation': 'nn', 'reference': '[Undefined]', 'transform': '[Undefined]'}, 'interp_string': {'function_str': \"def interpolation_string(interpolation, reg_tool):\\n    if reg_tool == 'ants':\\n        pass\\n    elif reg_tool == 'fsl':\\n        # translate to FSL\\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\\n        #          in C-PAC are now converted to .nii.gz\\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\\n    return interpolation\\n\", 'reg_tool': 'fsl'}, 'fsl_apply_warp': {'abswarp': '[Undefined]', 'args': '[Undefined]', 'datatype': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'mask_file': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'premat': '[Undefined]', 'relwarp': '[Undefined]', 'superlevel': '[Undefined]', 'supersample': '[Undefined]'}, 'outputspec': {}}",
      "func_deoblique_2": "{'args': '[Undefined]', 'atrcopy': '[Undefined]', 'atrfloat': '[Undefined]', 'atrint': '[Undefined]', 'atrstring': '[Undefined]', 'deoblique': True, 'duporigin_file': '[Undefined]', 'environ': {}, 'nosaveatr': '[Undefined]', 'saveatr': '[Undefined]', 'space': '[Undefined]', 'xdel': '[Undefined]', 'xorigin': '[Undefined]', 'xyzscale': '[Undefined]', 'ydel': '[Undefined]', 'yorigin': '[Undefined]', 'zdel': '[Undefined]', 'zorigin': '[Undefined]'}",
      "func_reorient_2": "{'args': '[Undefined]', 'environ': {}, 'master': '[Undefined]', 'num_threads': 1, 'orientation': 'RPI', 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'resample_mode': '[Undefined]', 'voxel_size': '[Undefined]'}",
      "edit_func_139": "{'inputspec': {'func': '[Undefined]', 'start_idx': 0, 'stop_idx': None}, 'func_get_idx': {'function_str': 'def get_idx(in_files, stop_idx=None, start_idx=None):\\n    \"\"\"\\n    Method to get the first and the last slice for\\n    the functional run. It verifies the user specified\\n    first and last slice. If the values are not valid, it\\n    calculates and returns the very first and the last slice\\n\\n    Parameters\\n    ----------\\n    in_file : str (nifti file)\\n       Path to input functional run\\n\\n    stop_idx : int\\n        Last volume to be considered, specified by user\\n        in the configuration file\\n\\n    stop_idx : int\\n        First volume to be considered, specified by user\\n        in the configuration file\\n\\n    Returns\\n    -------\\n    stop_idx :  int\\n        Value of first slice to consider for the functional run\\n\\n    start_idx : int\\n        Value of last slice to consider for the functional run\\n\\n    \"\"\"\\n\\n    # Import packages\\n    from nibabel import load\\n\\n    # Init variables\\n    img = load(in_files)\\n    hdr = img.header\\n    shape = hdr.get_data_shape()\\n\\n    # Check to make sure the input file is 4-dimensional\\n    if len(shape) != 4:\\n        raise TypeError(\\'Input nifti file: %s is not a 4D file\\' % in_files)\\n    # Grab the number of volumes\\n    nvols = int(hdr.get_data_shape()[3])\\n\\n    if (start_idx == None) or (int(start_idx) < 0) or (\\n        int(start_idx) > (nvols - 1)):\\n        startidx = 0\\n    else:\\n        startidx = int(start_idx)\\n\\n    if (stop_idx in [None, \"End\"]) or (int(stop_idx) > (nvols - 1)):\\n        stopidx = nvols - 1\\n    else:\\n        stopidx = int(stop_idx)\\n\\n    return stopidx, startidx\\n'}, 'func_drop_trs': {'args': '[Undefined]', 'environ': {}, 'expr': 'a', 'in_file_b': '[Undefined]', 'in_file_c': '[Undefined]', 'num_threads': 1, 'other': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'overwrite': '[Undefined]', 'single_idx': '[Undefined]'}, 'outputspec': {}}",
      "func_despiked_141": "{'args': '[Undefined]', 'environ': {}, 'num_threads': 1, 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ'}",
      "func_slice_timing_correction_143": "{'inputspec': {'func_ts': '[Undefined]', 'tpattern': '[Undefined]', 'tr': '[Undefined]'}, 'slice_timing': {'args': '[Undefined]', 'environ': {}, 'ignore': '[Undefined]', 'interp': '[Undefined]', 'num_threads': 1, 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'rlt': '[Undefined]', 'rltplus': '[Undefined]', 'slice_encoding_direction': 'k', 'slice_timing': '[Undefined]', 'tpattern': 'alt+z', 'tslice': '[Undefined]', 'tzero': 0.0}, 'outputspec': {}}",
      "func_mean_146": "{'args': '[Undefined]', 'environ': {}, 'mask': '[Undefined]', 'num_threads': 1, 'options': '-mean', 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ'}",
      "func_get_mean_RPI_149": "{'args': '[Undefined]', 'environ': {}, 'mask': '[Undefined]', 'num_threads': 1, 'options': '-mean', 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ'}",
      "chunk_152": "{'chunk_size': 10, 'function_str': 'def chunk_ts(func_file, n_chunks=None, chunk_size=None):\\n    func_img = nb.load(func_file)\\n    trs = func_img.shape[3]\\n    TR_ranges = []\\n\\n    if n_chunks:\\n        chunk_size = trs/n_chunks\\n    elif chunk_size:\\n        n_chunks = int(trs/chunk_size)\\n    else:\\n        raise Exception(\"\\\\n[!] Dev error: Either \\'n_chunks\\' or \\'chunk_size\\' \"\\n                        \"arguments must be passed to \\'chunk_ts\\' function.\\\\n\")\\n\\n    for chunk_idx in range(0, n_chunks):\\n        if chunk_idx == n_chunks - 1:\\n            TR_ranges.append((int(chunk_idx*chunk_size), int(trs - 1)))\\n        else:\\n            TR_ranges.append((int(chunk_idx*chunk_size), int((chunk_idx+1)*chunk_size - 1)))\\n    return TR_ranges\\n', 'n_chunks': '[Undefined]'}",
      "split_152": "{'function_str': 'def split_ts_chunks(func_file, tr_ranges):\\n    if \\'.nii\\' in func_file:\\n        ext = \\'.nii\\'\\n    if \\'.nii.gz\\' in func_file:\\n        ext = \\'.nii.gz\\'\\n\\n    split_funcs = []\\n    for chunk_idx, tr_range in enumerate(tr_ranges):\\n        out_file = os.path.join(os.getcwd(), os.path.basename(func_file).replace(ext, \"_{0}{1}\".format(chunk_idx, ext)))\\n        in_file = \"{0}[{1}..{2}]\".format(func_file, tr_range[0], tr_range[1])\\n\\n        cmd = [\"3dcalc\", \"-a\", in_file, \"-expr\", \"a\", \"-prefix\", out_file]\\n\\n        retcode = subprocess.check_output(cmd)\\n\\n        split_funcs.append(out_file)\\n\\n    return split_funcs\\n'}",
      "out_split_func_152": "{}",
      "func_generate_ref_152_": "{'args': '-twopass -Fourier', 'basefile': '[Undefined]', 'copyorigin': '[Undefined]', 'environ': {}, 'in_weight_volume': '[Undefined]', 'interp': '[Undefined]', 'md1d_file': '[Undefined]', 'num_threads': 1, 'oned_file': '[Undefined]', 'oned_matrix_save': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'timeshift': '[Undefined]', 'verbose': '[Undefined]', 'zpad': 4}",
      "func_concat_152": "{'args': '[Undefined]', 'environ': {}, 'num_threads': 1, 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'rlt': '[Undefined]', 'verbose': '[Undefined]'}",
      "out_motion_152": "{}",
      "func_motion_correct_3dvolreg_152": "{'args': '-twopass -Fourier', 'copyorigin': '[Undefined]', 'environ': {}, 'in_weight_volume': '[Undefined]', 'interp': '[Undefined]', 'md1d_file': 'max_displacement.1D', 'num_threads': 1, 'oned_file': '[Undefined]', 'oned_matrix_save': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'timeshift': '[Undefined]', 'verbose': '[Undefined]', 'zpad': 4}",
      "motion_concat_152": "{'args': '[Undefined]', 'environ': {}, 'num_threads': 1, 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'rlt': '[Undefined]', 'verbose': '[Undefined]'}",
      "out_motion_A_152": "{}",
      "md1d_concat_152": "{'function_str': 'def oned_text_concat(in_files):\\n    out_file = os.path.join(os.getcwd(), os.path.basename(in_files[0].replace(\"_0\", \"\")))\\n\\n    out_txt = []\\n    for txt in in_files:\\n        with open(txt, \\'r\\') as f:\\n            txt_lines = f.readlines()\\n        if not out_txt:\\n            out_txt = [x for x in txt_lines]\\n        else:\\n            for line in txt_lines:\\n                if \"#\" in line:\\n                    continue\\n                out_txt.append(line)\\n\\n    with open(out_file, \\'wt\\') as f:\\n        for line in out_txt:\\n            f.write(line)\\n\\n    return out_file\\n'}",
      "oned_concat_152": "{'function_str': 'def oned_text_concat(in_files):\\n    out_file = os.path.join(os.getcwd(), os.path.basename(in_files[0].replace(\"_0\", \"\")))\\n\\n    out_txt = []\\n    for txt in in_files:\\n        with open(txt, \\'r\\') as f:\\n            txt_lines = f.readlines()\\n        if not out_txt:\\n            out_txt = [x for x in txt_lines]\\n        else:\\n            for line in txt_lines:\\n                if \"#\" in line:\\n                    continue\\n                out_txt.append(line)\\n\\n    with open(out_file, \\'wt\\') as f:\\n        for line in out_txt:\\n            f.write(line)\\n\\n    return out_file\\n'}",
      "oned_matrix_concat_152": "{'function_str': 'def oned_text_concat(in_files):\\n    out_file = os.path.join(os.getcwd(), os.path.basename(in_files[0].replace(\"_0\", \"\")))\\n\\n    out_txt = []\\n    for txt in in_files:\\n        with open(txt, \\'r\\') as f:\\n            txt_lines = f.readlines()\\n        if not out_txt:\\n            out_txt = [x for x in txt_lines]\\n        else:\\n            for line in txt_lines:\\n                if \"#\" in line:\\n                    continue\\n                out_txt.append(line)\\n\\n    with open(out_file, \\'wt\\') as f:\\n        for line in out_txt:\\n            f.write(line)\\n\\n    return out_file\\n'}",
      "out_md1d_152": "{}",
      "out_oned_152": "{}",
      "out_oned_matrix_152": "{}",
      "func_tmp_brain_mask_AFNI_160": "{'args': '[Undefined]', 'brain_file': '[Undefined]', 'clfrac': '[Undefined]', 'dilate': 1, 'environ': {}, 'erode': '[Undefined]', 'num_threads': 1, 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ'}",
      "extract_func_roi_160": "{'args': '[Undefined]', 'crop_list': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'output_type': 'NIFTI_GZ', 'roi_file': '[Undefined]', 't_min': 7, 't_size': 1, 'x_min': '[Undefined]', 'x_size': '[Undefined]', 'y_min': '[Undefined]', 'y_size': '[Undefined]', 'z_min': '[Undefined]', 'z_size': '[Undefined]'}",
      "get_func_tmp_brain_160": "{'args': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'internal_datatype': '[Undefined]', 'nan2zeros': '[Undefined]', 'out_file': '[Undefined]', 'output_datatype': '[Undefined]', 'output_type': 'NIFTI_GZ'}",
      "func_to_anat_linear_reg_160": "{'angle_rep': '[Undefined]', 'apply_isoxfm': '[Undefined]', 'apply_xfm': '[Undefined]', 'args': '[Undefined]', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': '[Undefined]', 'coarse_search': '[Undefined]', 'cost': 'corratio', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'dof': 6, 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_matrix_file': '[Undefined]', 'in_weight': '[Undefined]', 'interp': 'trilinear', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': '[Undefined]', 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'schedule': '[Undefined]', 'searchr_x': '[Undefined]', 'searchr_y': '[Undefined]', 'searchr_z': '[Undefined]', 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}",
      "inv_func2anat_affine_160": "{'args': '[Undefined]', 'concat_xfm': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fix_scale_skew': '[Undefined]', 'in_file2': '[Undefined]', 'invert_xfm': True, 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ'}",
      "reg_anat_brain_to_func_160": "{'angle_rep': '[Undefined]', 'apply_isoxfm': '[Undefined]', 'apply_xfm': True, 'args': '[Undefined]', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': '[Undefined]', 'coarse_search': '[Undefined]', 'cost': '[Undefined]', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'dof': '[Undefined]', 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_weight': '[Undefined]', 'interp': 'trilinear', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': '[Undefined]', 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'schedule': '[Undefined]', 'searchr_x': '[Undefined]', 'searchr_y': '[Undefined]', 'searchr_z': '[Undefined]', 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}",
      "bin_anat_brain_in_func_160": "{'args': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'in_file2': '[Undefined]', 'mask_file': '[Undefined]', 'op_string': '-bin -dilM', 'out_data_type': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'suffix': '[Undefined]'}",
      "bin_func_160": "{'args': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'in_file2': '[Undefined]', 'mask_file': '[Undefined]', 'op_string': '-Tstd -bin', 'out_data_type': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'suffix': '[Undefined]'}",
      "merge_func_mask_160": "{'axis': 'vstack', 'no_flatten': False, 'ravel_inputs': False}",
      "intersect_mask_160": "{'args': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'internal_datatype': '[Undefined]', 'nan2zeros': '[Undefined]', 'op_string': '-mul %s -mul %s', 'out_file': '[Undefined]', 'output_datatype': 'char', 'output_type': 'NIFTI_GZ'}",
      "get_example_func_brain_160": "{'args': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'internal_datatype': '[Undefined]', 'nan2zeros': '[Undefined]', 'out_file': '[Undefined]', 'output_datatype': '[Undefined]', 'output_type': 'NIFTI_GZ'}",
      "func_extract_brain_165": "{'args': '[Undefined]', 'environ': {}, 'expr': 'a*b', 'in_file_c': '[Undefined]', 'num_threads': 1, 'other': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'overwrite': '[Undefined]', 'single_idx': '[Undefined]', 'start_idx': '[Undefined]', 'stop_idx': '[Undefined]'}",
      "gen_motion_stats_169": "{'inputspec': {'mask': '[Undefined]', 'max_displacement': '[Undefined]', 'motion_correct': '[Undefined]', 'movement_parameters': '[Undefined]', 'rels_displacement': '[Undefined]', 'transformations': '[Undefined]'}, 'cal_DVARS': {'args': '[Undefined]', 'environ': {}, 'method': 'dvars', 'num_threads': 1, 'out_file': '[Undefined]', 'outputtype': 'AFNI'}, 'cal_DVARS_strip': {'function_str': 'CPAC.generate_motion_statistics.generate_motion_statistics.DVARS_strip_t0'}, 'outputspec': {}, 'calculate_FD': {'function_str': 'CPAC.generate_motion_statistics.generate_motion_statistics.calculate_FD_P'}, 'calculate_FDJ': {'calc_from': 'affine', 'center': '[Undefined]', 'function_str': 'CPAC.generate_motion_statistics.generate_motion_statistics.calculate_FD_J'}, 'get_all_motion_parameters': {'function_str': 'CPAC.generate_motion_statistics.generate_motion_statistics.get_allmotion'}, 'calc_motion_parameters': {'function_str': 'CPAC.generate_motion_statistics.generate_motion_statistics.gen_motion_parameters', 'motion_correct_tool': '3dvolreg'}, 'calc_power_parameters': {'function_str': 'CPAC.generate_motion_statistics.generate_motion_statistics.gen_power_parameters', 'motion_correct_tool': '3dvolreg'}}",
      "func_normalize_167": "{'args': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'in_file2': '[Undefined]', 'mask_file': '[Undefined]', 'op_string': '-ing 10000', 'out_data_type': 'float', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'suffix': '[Undefined]'}",
      "get_func_volume_185": "{'args': '[Undefined]', 'environ': {}, 'expr': 'a', 'in_file_b': '[Undefined]', 'in_file_c': '[Undefined]', 'num_threads': 1, 'other': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'overwrite': '[Undefined]', 'single_idx': 7, 'start_idx': '[Undefined]', 'stop_idx': '[Undefined]'}",
      "func_to_anat_FLIRT_188": "{'inputspec': {'anat': '[Undefined]', 'dof': 6, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'func': '[Undefined]', 'interp': 'trilinear'}, 'linear_func_to_anat': {'angle_rep': '[Undefined]', 'apply_isoxfm': '[Undefined]', 'apply_xfm': '[Undefined]', 'args': '[Undefined]', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': '[Undefined]', 'coarse_search': '[Undefined]', 'cost': 'corratio', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_matrix_file': '[Undefined]', 'in_weight': '[Undefined]', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': '[Undefined]', 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'schedule': '[Undefined]', 'searchr_x': '[Undefined]', 'searchr_y': '[Undefined]', 'searchr_z': '[Undefined]', 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}, 'outputspec': {}}",
      "func_to_anat_bbreg_188": "{'inputspec': {'anat': '[Undefined]', 'anat_wm_segmentation': '[Undefined]', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'func': '[Undefined]', 'linear_reg_matrix': '[Undefined]'}, 'wm_bb_mask': {'args': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'in_file2': '[Undefined]', 'mask_file': '[Undefined]', 'out_data_type': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'suffix': '[Undefined]'}, 'bbreg_func_to_anat': {'angle_rep': '[Undefined]', 'apply_isoxfm': '[Undefined]', 'apply_xfm': '[Undefined]', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': '[Undefined]', 'coarse_search': '[Undefined]', 'cost': '[Undefined]', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'dof': 6, 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_weight': '[Undefined]', 'interp': '[Undefined]', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': '[Undefined]', 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'searchr_x': '[Undefined]', 'searchr_y': '[Undefined]', 'searchr_z': '[Undefined]', 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}, 'outputspec': {}}",
      "create_func_to_T1wtemplate_xfm_197": "{'inputspec': {'T1w-brain-template_funcreg': '[Undefined]', 'T1w_to_template_xfm': '[Undefined]', 'blip_warp': '[Undefined]', 'coreg_xfm': '[Undefined]', 'input_brain': '[Undefined]', 'mean_bold': '[Undefined]', 'template_to_T1w_xfm': '[Undefined]'}, 'combine_fsl_warps': {'abswarp': '[Undefined]', 'args': '[Undefined]', 'cons_jacobian': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'jacobian_max': '[Undefined]', 'jacobian_min': '[Undefined]', 'midmat': '[Undefined]', 'out_abswarp': '[Undefined]', 'out_file': '[Undefined]', 'out_relwarp': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'relwarp': '[Undefined]', 'shift_direction': '[Undefined]', 'shift_in_file': '[Undefined]', 'warp2': '[Undefined]'}}",
      "resampled_T1w-brain-template-funcreg": "{'function_str': 'CPAC.utils.datasource.resolve_resolution', 'resolution': '3mm', 'tag': 'func_preproc_outputs', 'template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_3mm_brain.nii.gz', 'template_name': 'T1w-brain-template-funcreg'}",
      "nuisance_regressors_Regressor_1_203": "{'inputspec': {'anat_to_func_linear_xfm_file_path': '[Undefined]', 'anat_to_mni_linear_xfm_file_path': '[Undefined]', 'anatomical_eroded_brain_mask_file_path': '[Undefined]', 'anatomical_file_path': '[Undefined]', 'creds_path': '[Undefined]', 'csf_mask_file_path': '[Undefined]', 'dl_dir': '[Undefined]', 'dvars_file_path': '[Undefined]', 'fd_j_file_path': '[Undefined]', 'fd_p_file_path': '[Undefined]', 'func_to_anat_linear_xfm_file_path': '[Undefined]', 'functional_brain_mask_file_path': '[Undefined]', 'functional_file_path': '[Undefined]', 'gm_mask_file_path': '[Undefined]', 'lat_ventricles_mask_file_path': '[Undefined]', 'mni_to_anat_linear_xfm_file_path': '[Undefined]', 'motion_parameters_file_path': '[Undefined]', 'selector': '[Undefined]', 'tr': '[Undefined]', 'wm_mask_file_path': '[Undefined]'}, 'functional_mean': {'args': '[Undefined]', 'environ': {}, 'mask': '[Undefined]', 'num_threads': 1, 'options': '-mean', 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ'}, 'Anatomical_2mm_flirt': {'angle_rep': '[Undefined]', 'apply_isoxfm': 2.0, 'apply_xfm': '[Undefined]', 'args': '[Undefined]', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': '[Undefined]', 'coarse_search': '[Undefined]', 'cost': '[Undefined]', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'dof': '[Undefined]', 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_matrix_file': '[Undefined]', 'in_weight': '[Undefined]', 'interp': '[Undefined]', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': '[Undefined]', 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'schedule': '[Undefined]', 'searchr_x': '[Undefined]', 'searchr_y': '[Undefined]', 'searchr_z': '[Undefined]', 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}, 'Functional_2mm_flirt': {'angle_rep': '[Undefined]', 'apply_isoxfm': '[Undefined]', 'apply_xfm': True, 'args': '[Undefined]', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': '[Undefined]', 'coarse_search': '[Undefined]', 'cost': '[Undefined]', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'dof': '[Undefined]', 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_weight': '[Undefined]', 'interp': '[Undefined]', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': '[Undefined]', 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'schedule': '[Undefined]', 'searchr_x': '[Undefined]', 'searchr_y': '[Undefined]', 'searchr_z': '[Undefined]', 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}, 'WhiteMatter_2mm_flirt': {'angle_rep': '[Undefined]', 'apply_isoxfm': 2.0, 'apply_xfm': '[Undefined]', 'args': '[Undefined]', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': '[Undefined]', 'coarse_search': '[Undefined]', 'cost': '[Undefined]', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'dof': '[Undefined]', 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_matrix_file': '[Undefined]', 'in_weight': '[Undefined]', 'interp': 'nearestneighbour', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': '[Undefined]', 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'schedule': '[Undefined]', 'searchr_x': '[Undefined]', 'searchr_y': '[Undefined]', 'searchr_z': '[Undefined]', 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}, 'WhiteMatter_merge_masks': {'axis': 'vstack', 'no_flatten': False, 'ravel_inputs': False}, 'WhiteMatter_union_masks': {'args': '[Undefined]', 'count': '[Undefined]', 'datum': '[Undefined]', 'dilate_inputs': '[Undefined]', 'dilate_results': '[Undefined]', 'environ': {}, 'fill_dirs': '[Undefined]', 'fill_holes': '[Undefined]', 'frac': '[Undefined]', 'inter': '[Undefined]', 'num_threads': 1, 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'union': '[Undefined]', 'verbose': '[Undefined]'}, 'WhiteMatter_mean': {'args': '-1Dformat', 'debug': '[Undefined]', 'environ': {}, 'format1D': '[Undefined]', 'format1DR': '[Undefined]', 'mask': '[Undefined]', 'mask_f2short': '[Undefined]', 'nobriklab': '[Undefined]', 'nomeanout': '[Undefined]', 'num_roi': '[Undefined]', 'out_file': '[Undefined]', 'quiet': False, 'roisel': '[Undefined]', 'stat': '[Undefined]', 'zerofill': '[Undefined]'}, 'CerebrospinalFluid_2mm_flirt': {'angle_rep': '[Undefined]', 'apply_isoxfm': 2.0, 'apply_xfm': '[Undefined]', 'args': '[Undefined]', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': '[Undefined]', 'coarse_search': '[Undefined]', 'cost': '[Undefined]', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'dof': '[Undefined]', 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_matrix_file': '[Undefined]', 'in_weight': '[Undefined]', 'interp': 'nearestneighbour', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': '[Undefined]', 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'schedule': '[Undefined]', 'searchr_x': '[Undefined]', 'searchr_y': '[Undefined]', 'searchr_z': '[Undefined]', 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}, 'VentriclesToAnat_2mm_fsl_applywarp': {'abswarp': '[Undefined]', 'args': '[Undefined]', 'datatype': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'interp': 'nn', 'mask_file': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'premat': '[Undefined]', 'relwarp': '[Undefined]', 'superlevel': '[Undefined]', 'supersample': '[Undefined]'}, 'CerebrospinalFluid_2mm_Ventricles': {'args': '[Undefined]', 'environ': {}, 'expr': 'a*b', 'in_file_c': '[Undefined]', 'num_threads': 1, 'other': '[Undefined]', 'out_file': 'csf_lat_ven_mask.nii.gz', 'outputtype': 'NIFTI_GZ', 'overwrite': '[Undefined]', 'single_idx': '[Undefined]', 'start_idx': '[Undefined]', 'stop_idx': '[Undefined]'}, 'CerebrospinalFluid_merge_masks': {'axis': 'vstack', 'no_flatten': False, 'ravel_inputs': False}, 'CerebrospinalFluid_union_masks': {'args': '[Undefined]', 'count': '[Undefined]', 'datum': '[Undefined]', 'dilate_inputs': '[Undefined]', 'dilate_results': '[Undefined]', 'environ': {}, 'fill_dirs': '[Undefined]', 'fill_holes': '[Undefined]', 'frac': '[Undefined]', 'inter': '[Undefined]', 'num_threads': 1, 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'union': '[Undefined]', 'verbose': '[Undefined]'}, 'CerebrospinalFluid_mean': {'args': '-1Dformat', 'debug': '[Undefined]', 'environ': {}, 'format1D': '[Undefined]', 'format1DR': '[Undefined]', 'mask': '[Undefined]', 'mask_f2short': '[Undefined]', 'nobriklab': '[Undefined]', 'nomeanout': '[Undefined]', 'num_roi': '[Undefined]', 'out_file': '[Undefined]', 'quiet': False, 'roisel': '[Undefined]', 'stat': '[Undefined]', 'zerofill': '[Undefined]'}, 'GlobalSignal_merge_masks': {'axis': 'vstack', 'no_flatten': False, 'ravel_inputs': False}, 'GlobalSignal_union_masks': {'args': '[Undefined]', 'count': '[Undefined]', 'datum': '[Undefined]', 'dilate_inputs': '[Undefined]', 'dilate_results': '[Undefined]', 'environ': {}, 'fill_dirs': '[Undefined]', 'fill_holes': '[Undefined]', 'frac': '[Undefined]', 'inter': '[Undefined]', 'num_threads': 1, 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'union': '[Undefined]', 'verbose': '[Undefined]'}, 'GlobalSignal_mean': {'args': '-1Dformat', 'debug': '[Undefined]', 'environ': {}, 'format1D': '[Undefined]', 'format1DR': '[Undefined]', 'mask': '[Undefined]', 'mask_f2short': '[Undefined]', 'nobriklab': '[Undefined]', 'nomeanout': '[Undefined]', 'num_roi': '[Undefined]', 'out_file': '[Undefined]', 'quiet': False, 'roisel': '[Undefined]', 'stat': '[Undefined]', 'zerofill': '[Undefined]'}, 'build_nuisance_regressors': {'acompcor_file_path': '[Undefined]', 'censor_file_path': '[Undefined]', 'custom_file_paths': '[Undefined]', 'function_str': 'CPAC.nuisance.nuisance.gather_nuisance', 'grey_matter_summary_file_path': '[Undefined]', 'selector': {'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': {'filter': 'Mean', 'method': 'Mean'}}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': {'filter': 'Mean', 'method': 'Mean'}}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': {'filter': 'Mean', 'method': 'Mean'}}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, 'tcompcor_file_path': '[Undefined]'}, 'outputspec': {}}",
      "gather_lateral-ventricles-mask": "{'inputnode': {'creds_path': None, 'data': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'dl_dir': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working/pipeline_cpac_ccs-options', 'scan': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}, 'check_for_s3': {'function_str': 'CPAC.utils.datasource.check_for_s3', 'img_type': 'other'}, 'outputspec': {}}",
      "anat_to_func_linear_xfm_Regressor_1_203": "{'args': '[Undefined]', 'concat_xfm': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fix_scale_skew': '[Undefined]', 'in_file2': '[Undefined]', 'invert_xfm': True, 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ'}",
      "fsl_lin-warp_to_nii": "{'abswarp': '[Undefined]', 'args': '[Undefined]', 'cons_jacobian': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'jacobian_max': '[Undefined]', 'jacobian_min': '[Undefined]', 'midmat': '[Undefined]', 'out_abswarp': '[Undefined]', 'out_file': '[Undefined]', 'out_relwarp': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'premat': '[Undefined]', 'reference': '[Undefined]', 'relwarp': '[Undefined]', 'shift_direction': '[Undefined]', 'shift_in_file': '[Undefined]', 'warp1': '[Undefined]', 'warp2': '[Undefined]'}",
      "nuisance_regressors_Regressor_2_203": "{'inputspec': {'anat_to_func_linear_xfm_file_path': '[Undefined]', 'anat_to_mni_linear_xfm_file_path': '[Undefined]', 'anatomical_eroded_brain_mask_file_path': '[Undefined]', 'anatomical_file_path': '[Undefined]', 'creds_path': '[Undefined]', 'csf_mask_file_path': '[Undefined]', 'dl_dir': '[Undefined]', 'dvars_file_path': '[Undefined]', 'fd_j_file_path': '[Undefined]', 'fd_p_file_path': '[Undefined]', 'func_to_anat_linear_xfm_file_path': '[Undefined]', 'functional_brain_mask_file_path': '[Undefined]', 'functional_file_path': '[Undefined]', 'gm_mask_file_path': '[Undefined]', 'lat_ventricles_mask_file_path': '[Undefined]', 'mni_to_anat_linear_xfm_file_path': '[Undefined]', 'motion_parameters_file_path': '[Undefined]', 'selector': '[Undefined]', 'tr': '[Undefined]', 'wm_mask_file_path': '[Undefined]'}, 'functional_mean': {'args': '[Undefined]', 'environ': {}, 'mask': '[Undefined]', 'num_threads': 1, 'options': '-mean', 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ'}, 'Anatomical_2mm_flirt': {'angle_rep': '[Undefined]', 'apply_isoxfm': 2.0, 'apply_xfm': '[Undefined]', 'args': '[Undefined]', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': '[Undefined]', 'coarse_search': '[Undefined]', 'cost': '[Undefined]', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'dof': '[Undefined]', 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_matrix_file': '[Undefined]', 'in_weight': '[Undefined]', 'interp': '[Undefined]', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': '[Undefined]', 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'schedule': '[Undefined]', 'searchr_x': '[Undefined]', 'searchr_y': '[Undefined]', 'searchr_z': '[Undefined]', 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}, 'Functional_2mm_flirt': {'angle_rep': '[Undefined]', 'apply_isoxfm': '[Undefined]', 'apply_xfm': True, 'args': '[Undefined]', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': '[Undefined]', 'coarse_search': '[Undefined]', 'cost': '[Undefined]', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'dof': '[Undefined]', 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_weight': '[Undefined]', 'interp': '[Undefined]', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': '[Undefined]', 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'schedule': '[Undefined]', 'searchr_x': '[Undefined]', 'searchr_y': '[Undefined]', 'searchr_z': '[Undefined]', 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}, 'WhiteMatter_2mm_flirt': {'angle_rep': '[Undefined]', 'apply_isoxfm': 2.0, 'apply_xfm': '[Undefined]', 'args': '[Undefined]', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': '[Undefined]', 'coarse_search': '[Undefined]', 'cost': '[Undefined]', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'dof': '[Undefined]', 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_matrix_file': '[Undefined]', 'in_weight': '[Undefined]', 'interp': 'nearestneighbour', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': '[Undefined]', 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'schedule': '[Undefined]', 'searchr_x': '[Undefined]', 'searchr_y': '[Undefined]', 'searchr_z': '[Undefined]', 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}, 'WhiteMatter_merge_masks': {'axis': 'vstack', 'no_flatten': False, 'ravel_inputs': False}, 'WhiteMatter_union_masks': {'args': '[Undefined]', 'count': '[Undefined]', 'datum': '[Undefined]', 'dilate_inputs': '[Undefined]', 'dilate_results': '[Undefined]', 'environ': {}, 'fill_dirs': '[Undefined]', 'fill_holes': '[Undefined]', 'frac': '[Undefined]', 'inter': '[Undefined]', 'num_threads': 1, 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'union': '[Undefined]', 'verbose': '[Undefined]'}, 'WhiteMatter_mean': {'args': '-1Dformat', 'debug': '[Undefined]', 'environ': {}, 'format1D': '[Undefined]', 'format1DR': '[Undefined]', 'mask': '[Undefined]', 'mask_f2short': '[Undefined]', 'nobriklab': '[Undefined]', 'nomeanout': '[Undefined]', 'num_roi': '[Undefined]', 'out_file': '[Undefined]', 'quiet': False, 'roisel': '[Undefined]', 'stat': '[Undefined]', 'zerofill': '[Undefined]'}, 'CerebrospinalFluid_2mm_flirt': {'angle_rep': '[Undefined]', 'apply_isoxfm': 2.0, 'apply_xfm': '[Undefined]', 'args': '[Undefined]', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': '[Undefined]', 'coarse_search': '[Undefined]', 'cost': '[Undefined]', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'dof': '[Undefined]', 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_matrix_file': '[Undefined]', 'in_weight': '[Undefined]', 'interp': 'nearestneighbour', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': '[Undefined]', 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'schedule': '[Undefined]', 'searchr_x': '[Undefined]', 'searchr_y': '[Undefined]', 'searchr_z': '[Undefined]', 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}, 'VentriclesToAnat_2mm_fsl_applywarp': {'abswarp': '[Undefined]', 'args': '[Undefined]', 'datatype': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'interp': 'nn', 'mask_file': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'premat': '[Undefined]', 'relwarp': '[Undefined]', 'superlevel': '[Undefined]', 'supersample': '[Undefined]'}, 'CerebrospinalFluid_2mm_Ventricles': {'args': '[Undefined]', 'environ': {}, 'expr': 'a*b', 'in_file_c': '[Undefined]', 'num_threads': 1, 'other': '[Undefined]', 'out_file': 'csf_lat_ven_mask.nii.gz', 'outputtype': 'NIFTI_GZ', 'overwrite': '[Undefined]', 'single_idx': '[Undefined]', 'start_idx': '[Undefined]', 'stop_idx': '[Undefined]'}, 'CerebrospinalFluid_merge_masks': {'axis': 'vstack', 'no_flatten': False, 'ravel_inputs': False}, 'CerebrospinalFluid_union_masks': {'args': '[Undefined]', 'count': '[Undefined]', 'datum': '[Undefined]', 'dilate_inputs': '[Undefined]', 'dilate_results': '[Undefined]', 'environ': {}, 'fill_dirs': '[Undefined]', 'fill_holes': '[Undefined]', 'frac': '[Undefined]', 'inter': '[Undefined]', 'num_threads': 1, 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'union': '[Undefined]', 'verbose': '[Undefined]'}, 'CerebrospinalFluid_mean': {'args': '-1Dformat', 'debug': '[Undefined]', 'environ': {}, 'format1D': '[Undefined]', 'format1DR': '[Undefined]', 'mask': '[Undefined]', 'mask_f2short': '[Undefined]', 'nobriklab': '[Undefined]', 'nomeanout': '[Undefined]', 'num_roi': '[Undefined]', 'out_file': '[Undefined]', 'quiet': False, 'roisel': '[Undefined]', 'stat': '[Undefined]', 'zerofill': '[Undefined]'}, 'build_nuisance_regressors': {'acompcor_file_path': '[Undefined]', 'censor_file_path': '[Undefined]', 'custom_file_paths': '[Undefined]', 'function_str': 'CPAC.nuisance.nuisance.gather_nuisance', 'global_summary_file_path': '[Undefined]', 'grey_matter_summary_file_path': '[Undefined]', 'selector': {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': {'filter': 'Mean', 'method': 'Mean'}}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': {'filter': 'Mean', 'method': 'Mean'}}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, 'tcompcor_file_path': '[Undefined]'}, 'outputspec': {}}",
      "anat_to_func_linear_xfm_Regressor_2_203": "{'args': '[Undefined]', 'concat_xfm': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fix_scale_skew': '[Undefined]', 'in_file2': '[Undefined]', 'invert_xfm': True, 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ'}",
      "warp_ts_to_T1template_236": "{'inputspec': {'input_image': '[Undefined]', 'interpolation': 'trilinear', 'reference': '[Undefined]', 'transform': '[Undefined]'}, 'interp_string': {'function_str': \"def interpolation_string(interpolation, reg_tool):\\n    if reg_tool == 'ants':\\n        pass\\n    elif reg_tool == 'fsl':\\n        # translate to FSL\\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\\n        #          in C-PAC are now converted to .nii.gz\\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\\n    return interpolation\\n\", 'reg_tool': 'fsl'}, 'fsl_apply_warp_': {'abswarp': '[Undefined]', 'args': '[Undefined]', 'datatype': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'mask_file': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'premat': '[Undefined]', 'relwarp': '[Undefined]', 'superlevel': '[Undefined]', 'supersample': '[Undefined]'}, 'chunk_warp_ts_to_T1template_236': {'chunk_size': 10, 'function_str': 'def chunk_ts(func_file, n_chunks=None, chunk_size=None):\\n    func_img = nb.load(func_file)\\n    trs = func_img.shape[3]\\n    TR_ranges = []\\n\\n    if n_chunks:\\n        chunk_size = trs/n_chunks\\n    elif chunk_size:\\n        n_chunks = int(trs/chunk_size)\\n    else:\\n        raise Exception(\"\\\\n[!] Dev error: Either \\'n_chunks\\' or \\'chunk_size\\' \"\\n                        \"arguments must be passed to \\'chunk_ts\\' function.\\\\n\")\\n\\n    for chunk_idx in range(0, n_chunks):\\n        if chunk_idx == n_chunks - 1:\\n            TR_ranges.append((int(chunk_idx*chunk_size), int(trs - 1)))\\n        else:\\n            TR_ranges.append((int(chunk_idx*chunk_size), int((chunk_idx+1)*chunk_size - 1)))\\n    return TR_ranges\\n', 'n_chunks': '[Undefined]'}, 'split_warp_ts_to_T1template_236': {'function_str': 'def split_ts_chunks(func_file, tr_ranges):\\n    if \\'.nii\\' in func_file:\\n        ext = \\'.nii\\'\\n    if \\'.nii.gz\\' in func_file:\\n        ext = \\'.nii.gz\\'\\n\\n    split_funcs = []\\n    for chunk_idx, tr_range in enumerate(tr_ranges):\\n        out_file = os.path.join(os.getcwd(), os.path.basename(func_file).replace(ext, \"_{0}{1}\".format(chunk_idx, ext)))\\n        in_file = \"{0}[{1}..{2}]\".format(func_file, tr_range[0], tr_range[1])\\n\\n        cmd = [\"3dcalc\", \"-a\", in_file, \"-expr\", \"a\", \"-prefix\", out_file]\\n\\n        retcode = subprocess.check_output(cmd)\\n\\n        split_funcs.append(out_file)\\n\\n    return split_funcs\\n'}, 'func_concatwarp_ts_to_T1template_236': {'args': '[Undefined]', 'environ': {}, 'num_threads': 1, 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'rlt': '[Undefined]', 'verbose': '[Undefined]'}, 'outputspec': {}}",
      "combine_fsl_warps": "{'abswarp': '[Undefined]', 'args': '[Undefined]', 'cons_jacobian': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'jacobian_max': '[Undefined]', 'jacobian_min': '[Undefined]', 'midmat': '[Undefined]', 'out_abswarp': '[Undefined]', 'out_file': '[Undefined]', 'out_relwarp': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'premat': '[Undefined]', 'reference': '[Undefined]', 'relwarp': '[Undefined]', 'shift_direction': '[Undefined]', 'shift_in_file': '[Undefined]', 'warp1': '[Undefined]', 'warp2': '[Undefined]'}",
      "warp_funcreg-sbref_to_T1wtemplate_240": "{'inputspec': {'input_image': '[Undefined]', 'interpolation': 'nn', 'reference': '[Undefined]', 'transform': '[Undefined]'}, 'interp_string': {'function_str': \"def interpolation_string(interpolation, reg_tool):\\n    if reg_tool == 'ants':\\n        pass\\n    elif reg_tool == 'fsl':\\n        # translate to FSL\\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\\n        #          in C-PAC are now converted to .nii.gz\\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\\n    return interpolation\\n\", 'reg_tool': 'fsl'}, 'fsl_apply_warp': {'abswarp': '[Undefined]', 'args': '[Undefined]', 'datatype': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'mask_file': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'premat': '[Undefined]', 'relwarp': '[Undefined]', 'superlevel': '[Undefined]', 'supersample': '[Undefined]'}, 'outputspec': {}}",
      "warp_funcreg-mask_to_T1wtemplate_244": "{'inputspec': {'input_image': '[Undefined]', 'interpolation': 'nn', 'reference': '[Undefined]', 'transform': '[Undefined]'}, 'interp_string': {'function_str': \"def interpolation_string(interpolation, reg_tool):\\n    if reg_tool == 'ants':\\n        pass\\n    elif reg_tool == 'fsl':\\n        # translate to FSL\\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\\n        #          in C-PAC are now converted to .nii.gz\\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\\n    return interpolation\\n\", 'reg_tool': 'fsl'}, 'fsl_apply_warp': {'abswarp': '[Undefined]', 'args': '[Undefined]', 'datatype': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'mask_file': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'premat': '[Undefined]', 'relwarp': '[Undefined]', 'superlevel': '[Undefined]', 'supersample': '[Undefined]'}, 'outputspec': {}}",
      "warp_deriv-mask_to_T1wtemplate_248": "{'inputspec': {'input_image': '[Undefined]', 'interpolation': 'nn', 'reference': '[Undefined]', 'transform': '[Undefined]'}, 'interp_string': {'function_str': \"def interpolation_string(interpolation, reg_tool):\\n    if reg_tool == 'ants':\\n        pass\\n    elif reg_tool == 'fsl':\\n        # translate to FSL\\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\\n        #          in C-PAC are now converted to .nii.gz\\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\\n    return interpolation\\n\", 'reg_tool': 'fsl'}, 'fsl_apply_warp': {'abswarp': '[Undefined]', 'args': '[Undefined]', 'datatype': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'mask_file': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'premat': '[Undefined]', 'relwarp': '[Undefined]', 'superlevel': '[Undefined]', 'supersample': '[Undefined]'}, 'outputspec': {}}",
      "resampled_T1w-brain-template-deriv": "{'function_str': 'CPAC.utils.datasource.resolve_resolution', 'resolution': '3mm', 'tag': 'func_derivative_outputs', 'template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_3mm_brain.nii.gz', 'template_name': 'T1w-brain-template-deriv'}",
      "qc_snr_252": "{'inputspec': {'anatomical_brain': '[Undefined]', 'functional_brain_mask': '[Undefined]', 'functional_preprocessed': '[Undefined]', 'functional_to_anat_linear_xfm': '[Undefined]', 'mean_functional_in_anat': '[Undefined]'}, 'std_dev': {'args': '-stdev', 'environ': {}, 'num_threads': 1, 'options': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ'}, 'std_dev_anat': {'abswarp': '[Undefined]', 'args': '[Undefined]', 'datatype': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'field_file': '[Undefined]', 'interp': 'trilinear', 'mask_file': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'relwarp': '[Undefined]', 'superlevel': '[Undefined]', 'supersample': '[Undefined]'}, 'snr': {'args': '[Undefined]', 'environ': {}, 'expr': 'b/a', 'in_file_c': '[Undefined]', 'num_threads': 1, 'other': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'overwrite': '[Undefined]', 'single_idx': '[Undefined]', 'start_idx': '[Undefined]', 'stop_idx': '[Undefined]'}, 'snr_val': {'function_str': 'CPAC.qc.utils.cal_snr_val'}, 'hist_snr': {'function_str': 'CPAC.qc.utils.gen_histogram', 'measure': 'snr'}, 'dp_snr': {'function_str': 'CPAC.qc.utils.drop_percent', 'percent': 99}, 'montage_snr': {'inputspec': {'overlay': '[Undefined]', 'underlay': '[Undefined]'}, 'resample_u': {'function_str': 'CPAC.qc.utils.resample_1mm'}, 'outputspec': {}, 'resample_o': {'function_str': 'CPAC.qc.utils.resample_1mm'}, 'montage_a': {'cbar_name': 'red_to_blue', 'function_str': 'CPAC.qc.utils.montage_axial', 'png_name': 'snr_a.png'}, 'montage_s': {'cbar_name': 'red_to_blue', 'function_str': 'CPAC.qc.utils.montage_sagittal', 'png_name': 'snr_s.png'}}, 'outputspec': {}}",
      "anat_edge_261": "{'function_str': 'CPAC.qc.qc.afni_Edge3'}",
      "montage_anat_261": "{'inputspec': {'overlay': '[Undefined]', 'underlay': '[Undefined]'}, 'resample_u': {'function_str': 'CPAC.qc.utils.resample_1mm'}, 'outputspec': {}, 'resample_o': {'function_str': 'CPAC.qc.utils.resample_1mm'}, 'montage_a': {'cbar_name': 'red', 'function_str': 'CPAC.qc.utils.montage_axial', 'png_name': 't1_edge_on_mean_func_in_t1_a.png'}, 'montage_s': {'cbar_name': 'red', 'function_str': 'CPAC.qc.utils.montage_sagittal', 'png_name': 't1_edge_on_mean_func_in_t1_s.png'}}",
      "qc_motion_157": "{'inputspec': {'motion_parameters': '[Undefined]'}, 'motion_plot': {'function_str': 'CPAC.qc.utils.gen_motion_plt'}, 'outputspec': {}}",
      "qc_fd_178": "{'inputspec': {'excluded_volumes': '[Undefined]', 'fd': '[Undefined]'}, 'fd_plot': {'function_str': 'CPAC.qc.utils.gen_plot_png', 'measure': 'FD'}, 'outputspec': {}}",
      "qc_skullstrip_268": "{'inputspec': {'anatomical_brain': '[Undefined]', 'anatomical_reorient': '[Undefined]'}, 'skull_edge': {'function_str': 'CPAC.qc.qc.afni_Edge3'}, 'montage_skull': {'inputspec': {'overlay': '[Undefined]', 'underlay': '[Undefined]'}, 'resample_u': {'function_str': 'CPAC.qc.utils.resample_1mm'}, 'outputspec': {}, 'resample_o': {'function_str': 'CPAC.qc.utils.resample_1mm'}, 'montage_a': {'cbar_name': 'red', 'function_str': 'CPAC.qc.utils.montage_axial', 'png_name': 'skull_vis_a.png'}, 'montage_s': {'cbar_name': 'red', 'function_str': 'CPAC.qc.utils.montage_sagittal', 'png_name': 'skull_vis_s.png'}}, 'outputspec': {}}",
      "montage_mni_anat_272": "{'inputspec': {'overlay': '[Undefined]', 'underlay': '[Undefined]'}, 'resample_u': {'function_str': 'CPAC.qc.utils.resample_1mm'}, 'outputspec': {}, 'resample_o': {'function_str': 'CPAC.qc.utils.resample_1mm'}, 'montage_a': {'cbar_name': 'red', 'function_str': 'CPAC.qc.utils.montage_axial', 'png_name': 'mni_anat_a.png'}, 'montage_s': {'cbar_name': 'red', 'function_str': 'CPAC.qc.utils.montage_sagittal', 'png_name': 'mni_anat_s.png'}}",
      "anat_template_edge_272": "{'function_str': 'CPAC.qc.qc.afni_Edge3'}",
      "montage_csf_gm_wm_276": "{'inputspec': {'overlay_csf': '[Undefined]', 'overlay_gm': '[Undefined]', 'overlay_wm': '[Undefined]', 'underlay': '[Undefined]'}, 'resample_u': {'function_str': 'CPAC.qc.utils.resample_1mm'}, 'resample_o_csf': {'function_str': 'CPAC.qc.utils.resample_1mm'}, 'resample_o_gm': {'function_str': 'CPAC.qc.utils.resample_1mm'}, 'resample_o_wm': {'function_str': 'CPAC.qc.utils.resample_1mm'}, 'montage_a': {'function_str': 'CPAC.qc.utils.montage_gm_wm_csf_axial', 'png_name': 'montage_csf_gm_wm_a.png'}, 'montage_s': {'function_str': 'CPAC.qc.utils.montage_gm_wm_csf_sagittal', 'png_name': 'montage_csf_gm_wm_s.png'}, 'outputspec': {}}",
      "carpet_seg_282": "{'inputspec': {'anatomical_csf_mask': '[Undefined]', 'anatomical_gm_mask': '[Undefined]', 'anatomical_wm_mask': '[Undefined]', 'functional_to_standard': '[Undefined]', 'mean_functional_to_standard': '[Undefined]'}, 'gm_resample': {'args': '[Undefined]', 'environ': {}, 'num_threads': 1, 'orientation': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI', 'resample_mode': '[Undefined]', 'voxel_size': '[Undefined]'}, 'gm_mask': {'args': '[Undefined]', 'environ': {}, 'expr': 'astep(a, 0.5)', 'in_file_b': '[Undefined]', 'in_file_c': '[Undefined]', 'num_threads': 1, 'other': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI', 'overwrite': '[Undefined]', 'single_idx': '[Undefined]', 'start_idx': '[Undefined]', 'stop_idx': '[Undefined]'}, 'wm_resample': {'args': '[Undefined]', 'environ': {}, 'num_threads': 1, 'orientation': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI', 'resample_mode': '[Undefined]', 'voxel_size': '[Undefined]'}, 'wm_mask': {'args': '[Undefined]', 'environ': {}, 'expr': 'astep(a, 0.5)', 'in_file_b': '[Undefined]', 'in_file_c': '[Undefined]', 'num_threads': 1, 'other': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI', 'overwrite': '[Undefined]', 'single_idx': '[Undefined]', 'start_idx': '[Undefined]', 'stop_idx': '[Undefined]'}, 'csf_resample': {'args': '[Undefined]', 'environ': {}, 'num_threads': 1, 'orientation': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI', 'resample_mode': '[Undefined]', 'voxel_size': '[Undefined]'}, 'csf_mask': {'args': '[Undefined]', 'environ': {}, 'expr': 'astep(a, 0.5)', 'in_file_b': '[Undefined]', 'in_file_c': '[Undefined]', 'num_threads': 1, 'other': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI', 'overwrite': '[Undefined]', 'single_idx': '[Undefined]', 'start_idx': '[Undefined]', 'stop_idx': '[Undefined]'}, 'carpet_plot': {'function_str': 'CPAC.qc.utils.gen_carpet_plt', 'output': 'carpet_seg'}, 'outputspec': {}}",
      "montage_mfi_288": "{'inputspec': {'overlay': '[Undefined]', 'underlay': '[Undefined]'}, 'resample_u': {'function_str': 'CPAC.qc.utils.resample_1mm'}, 'outputspec': {}, 'resample_o': {'function_str': 'CPAC.qc.utils.resample_1mm'}, 'montage_a': {'cbar_name': 'red', 'function_str': 'CPAC.qc.utils.montage_axial', 'png_name': 'MNI_edge_on_mean_func_mni_a.png'}, 'montage_s': {'cbar_name': 'red', 'function_str': 'CPAC.qc.utils.montage_sagittal', 'png_name': 'MNI_edge_on_mean_func_mni_s.png'}}",
      "func_template_edge_288": "{'function_str': 'CPAC.qc.qc.afni_Edge3'}",
      "id_string_desc-preproc_T1w_93": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_ccs-options')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'desc-preproc_T1w', 'scan_id': '[Undefined]', 'subdir': 'anat', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
      "nii_desc-preproc_T1w_93": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
      "json_desc-preproc_T1w_93": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['desc-head_T1w', 'desc-preproc_T1w', 'space-T1w_desc-brain_mask'], 'SkullStripped': 'True', 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
      "sinker_desc-preproc_T1w_93": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': False, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
      "id_string_desc-head_T1w_95": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_ccs-options')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'desc-head_T1w', 'scan_id': '[Undefined]', 'subdir': 'anat', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
      "nii_desc-head_T1w_95": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
      "json_desc-head_T1w_95": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['desc-head_T1w', 'desc-preproc_T1w', 'space-T1w_desc-brain_mask'], 'SkullStripped': 'False', 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
      "sinker_desc-head_T1w_95": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': False, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
      "id_string_space-T1w_desc-brain_mask_75": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_ccs-options')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'space-T1w_desc-brain_mask', 'scan_id': '[Undefined]', 'subdir': 'anat', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
      "nii_space-T1w_desc-brain_mask_75": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
      "json_space-T1w_desc-brain_mask_75": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'Sources': ['pipeline-fs_raw-average', 'pipeline-fs_brainmask', 'freesurfer-subject-dir'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}, 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}}}",
      "sinker_space-T1w_desc-brain_mask_75": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': False, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
      "id_string_space-template_desc-preproc_T1w_101": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_ccs-options')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'space-template_desc-preproc_T1w', 'scan_id': '[Undefined]', 'subdir': 'anat', 'template_desc': 'MNI152NLin6ASym - T1w-based skull-stripped template - /usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain.nii.gz', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
      "nii_space-template_desc-preproc_T1w_101": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
      "json_space-template_desc-preproc_T1w_101": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'space-template_desc-preproc_T1w:register_FSL_anat_to_template_FSL'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'SkullStripped': 'True', 'Sources': ['desc-preproc_T1w', 'desc-brain_T1w', 'T1w-template', 'T1w-brain-template', 'template-ref-mask'], 'Template': 'MNI152NLin6ASym - T1w-based skull-stripped template - /usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain.nii.gz', 'Resolution': '2mm', 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
      "sinker_space-template_desc-preproc_T1w_101": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': False, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
      "id_string_from-T1w_to-template_mode-image_desc-linear_xfm_102": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_ccs-options')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'from-T1w_to-template_mode-image_desc-linear_xfm', 'scan_id': '[Undefined]', 'subdir': 'anat', 'template_desc': 'MNI152NLin6ASym - T1w-based whole-head template - /usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
      "nii_from-T1w_to-template_mode-image_desc-linear_xfm_102": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
      "json_from-T1w_to-template_mode-image_desc-linear_xfm_102": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-T1w_to-template_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['desc-preproc_T1w', 'desc-brain_T1w', 'T1w-template', 'T1w-brain-template', 'template-ref-mask'], 'Template': 'MNI152NLin6ASym - T1w-based whole-head template - /usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'Resolution': '2mm', 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
      "sinker_from-T1w_to-template_mode-image_desc-linear_xfm_102": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': False, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
      "id_string_from-template_to-T1w_mode-image_desc-linear_xfm_103": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_ccs-options')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'from-template_to-T1w_mode-image_desc-linear_xfm', 'scan_id': '[Undefined]', 'subdir': 'anat', 'template_desc': 'MNI152NLin6ASym - T1w-based whole-head template - /usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
      "nii_from-template_to-T1w_mode-image_desc-linear_xfm_103": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
      "json_from-template_to-T1w_mode-image_desc-linear_xfm_103": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['desc-preproc_T1w', 'desc-brain_T1w', 'T1w-template', 'T1w-brain-template', 'template-ref-mask'], 'Template': 'MNI152NLin6ASym - T1w-based whole-head template - /usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'Resolution': '2mm', 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
      "sinker_from-template_to-T1w_mode-image_desc-linear_xfm_103": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': False, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
      "id_string_from-T1w_to-template_mode-image_xfm_104": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_ccs-options')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'from-T1w_to-template_mode-image_xfm', 'scan_id': '[Undefined]', 'subdir': 'anat', 'template_desc': 'MNI152NLin6ASym - T1w-based whole-head template - /usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
      "nii_from-T1w_to-template_mode-image_xfm_104": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
      "json_from-T1w_to-template_mode-image_xfm_104": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_FSL_anat_to_template_FSL'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['desc-preproc_T1w', 'desc-brain_T1w', 'T1w-template', 'T1w-brain-template', 'template-ref-mask'], 'Template': 'MNI152NLin6ASym - T1w-based whole-head template - /usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'Resolution': '2mm', 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
      "sinker_from-T1w_to-template_mode-image_xfm_104": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': False, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
      "id_string_space-template_desc-head_T1w_108": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_ccs-options')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'space-template_desc-head_T1w', 'scan_id': '[Undefined]', 'subdir': 'anat', 'template_desc': 'MNI152NLin6ASym - T1w-based whole-head template - /usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
      "nii_space-template_desc-head_T1w_108": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
      "json_space-template_desc-head_T1w_108": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_FSL_anat_to_template_FSL'], ['T1w-template:template_resample'], 'space-template_desc-head_T1w:transform_whole_head_T1w_to_T1template'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'SkullStripped': 'False', 'Sources': ['desc-head_T1w', 'from-T1w_to-template_mode-image_xfm', 'T1w-template'], 'Template': 'MNI152NLin6ASym - T1w-based whole-head template - /usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'Resolution': '2mm', 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
      "sinker_space-template_desc-head_T1w_108": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': False, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
      "id_string_space-template_desc-brain_mask_112": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_ccs-options')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'space-template_desc-brain_mask', 'scan_id': '[Undefined]', 'subdir': 'anat', 'template_desc': 'MNI152NLin6ASym - T1w-based whole-head template - /usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
      "nii_space-template_desc-brain_mask_112": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
      "json_space-template_desc-brain_mask_112": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_FSL_anat_to_template_FSL'], ['T1w-template:template_resample'], 'space-template_desc-brain_mask:transform_T1mask_to_T1template'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['space-T1w_desc-brain_mask', 'from-T1w_to-template_mode-image_xfm', 'T1w-template'], 'Template': 'MNI152NLin6ASym - T1w-based whole-head template - /usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'Resolution': '2mm', 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
      "sinker_space-template_desc-brain_mask_112": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': False, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
      "id_string_label-CSF_probseg_119": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_ccs-options')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'label-CSF_probseg', 'scan_id': '[Undefined]', 'subdir': 'anat', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
      "nii_label-CSF_probseg_119": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
      "json_label-CSF_probseg_119": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-CSF_probseg:tissue_seg_fsl_fast'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['desc-brain_T1w', 'space-T1w_desc-brain_mask', 'from-template_to-T1w_mode-image_desc-linear_xfm', 'CSF-path', 'GM-path', 'WM-path'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
      "sinker_label-CSF_probseg_119": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': False, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
      "id_string_label-GM_probseg_120": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_ccs-options')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'label-GM_probseg', 'scan_id': '[Undefined]', 'subdir': 'anat', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
      "nii_label-GM_probseg_120": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
      "json_label-GM_probseg_120": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-GM_probseg:tissue_seg_fsl_fast'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['desc-brain_T1w', 'space-T1w_desc-brain_mask', 'from-template_to-T1w_mode-image_desc-linear_xfm', 'CSF-path', 'GM-path', 'WM-path'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
      "sinker_label-GM_probseg_120": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': False, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
      "id_string_label-WM_probseg_121": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_ccs-options')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'label-WM_probseg', 'scan_id': '[Undefined]', 'subdir': 'anat', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
      "nii_label-WM_probseg_121": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
      "json_label-WM_probseg_121": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['desc-brain_T1w', 'space-T1w_desc-brain_mask', 'from-template_to-T1w_mode-image_desc-linear_xfm', 'CSF-path', 'GM-path', 'WM-path'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
      "sinker_label-WM_probseg_121": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': False, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
      "id_string_label-CSF_mask_122": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_ccs-options')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'label-CSF_mask', 'scan_id': '[Undefined]', 'subdir': 'anat', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
      "nii_label-CSF_mask_122": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
      "json_label-CSF_mask_122": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-CSF_mask:tissue_seg_fsl_fast'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['desc-brain_T1w', 'space-T1w_desc-brain_mask', 'from-template_to-T1w_mode-image_desc-linear_xfm', 'CSF-path', 'GM-path', 'WM-path'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
      "sinker_label-CSF_mask_122": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': False, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
      "id_string_label-GM_mask_123": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_ccs-options')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'label-GM_mask', 'scan_id': '[Undefined]', 'subdir': 'anat', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
      "nii_label-GM_mask_123": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
      "json_label-GM_mask_123": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-GM_mask:tissue_seg_fsl_fast'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['desc-brain_T1w', 'space-T1w_desc-brain_mask', 'from-template_to-T1w_mode-image_desc-linear_xfm', 'CSF-path', 'GM-path', 'WM-path'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
      "sinker_label-GM_mask_123": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': False, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
      "id_string_label-WM_mask_124": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_ccs-options')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'label-WM_mask', 'scan_id': '[Undefined]', 'subdir': 'anat', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
      "nii_label-WM_mask_124": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
      "json_label-WM_mask_124": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_mask:tissue_seg_fsl_fast'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['desc-brain_T1w', 'space-T1w_desc-brain_mask', 'from-template_to-T1w_mode-image_desc-linear_xfm', 'CSF-path', 'GM-path', 'WM-path'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
      "sinker_label-WM_mask_124": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': False, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
      "id_string_label-CSF_desc-preproc_mask_125": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_ccs-options')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'label-CSF_desc-preproc_mask', 'scan_id': '[Undefined]', 'subdir': 'anat', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
      "nii_label-CSF_desc-preproc_mask_125": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
      "json_label-CSF_desc-preproc_mask_125": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-CSF_desc-preproc_mask:tissue_seg_fsl_fast'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['desc-brain_T1w', 'space-T1w_desc-brain_mask', 'from-template_to-T1w_mode-image_desc-linear_xfm', 'CSF-path', 'GM-path', 'WM-path'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
      "sinker_label-CSF_desc-preproc_mask_125": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': False, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
      "id_string_label-GM_desc-preproc_mask_126": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_ccs-options')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'label-GM_desc-preproc_mask', 'scan_id': '[Undefined]', 'subdir': 'anat', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
      "nii_label-GM_desc-preproc_mask_126": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
      "json_label-GM_desc-preproc_mask_126": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-GM_desc-preproc_mask:tissue_seg_fsl_fast'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['desc-brain_T1w', 'space-T1w_desc-brain_mask', 'from-template_to-T1w_mode-image_desc-linear_xfm', 'CSF-path', 'GM-path', 'WM-path'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
      "sinker_label-GM_desc-preproc_mask_126": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': False, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
      "id_string_label-WM_desc-preproc_mask_127": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_ccs-options')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'label-WM_desc-preproc_mask', 'scan_id': '[Undefined]', 'subdir': 'anat', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
      "nii_label-WM_desc-preproc_mask_127": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
      "json_label-WM_desc-preproc_mask_127": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_desc-preproc_mask:tissue_seg_fsl_fast'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['desc-brain_T1w', 'space-T1w_desc-brain_mask', 'from-template_to-T1w_mode-image_desc-linear_xfm', 'CSF-path', 'GM-path', 'WM-path'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
      "sinker_label-WM_desc-preproc_mask_127": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': False, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
      "id_string_space-template_label-CSF_mask_136": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_ccs-options')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'space-template_label-CSF_mask', 'scan_id': '[Undefined]', 'subdir': 'anat', 'template_desc': 'MNI152NLin6ASym - T1w-based whole-head template - /usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
      "nii_space-template_label-CSF_mask_136": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
      "json_space-template_label-CSF_mask_136": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-CSF_mask:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_mask:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-GM_mask:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_FSL_anat_to_template_FSL'], ['T1w-template:template_resample'], 'space-template_label-CSF_mask:warp_tissuemask_to_T1template'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['label-CSF_mask', 'label-WM_mask', 'label-GM_mask', 'from-T1w_to-template_mode-image_xfm', 'T1w-template'], 'Template': 'MNI152NLin6ASym - T1w-based whole-head template - /usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'Resolution': '2mm', 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
      "sinker_space-template_label-CSF_mask_136": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': False, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
      "id_string_space-template_label-WM_mask_137": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_ccs-options')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'space-template_label-WM_mask', 'scan_id': '[Undefined]', 'subdir': 'anat', 'template_desc': 'MNI152NLin6ASym - T1w-based whole-head template - /usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
      "nii_space-template_label-WM_mask_137": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
      "json_space-template_label-WM_mask_137": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-CSF_mask:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_mask:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-GM_mask:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_FSL_anat_to_template_FSL'], ['T1w-template:template_resample'], 'space-template_label-WM_mask:warp_tissuemask_to_T1template'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['label-CSF_mask', 'label-WM_mask', 'label-GM_mask', 'from-T1w_to-template_mode-image_xfm', 'T1w-template'], 'Template': 'MNI152NLin6ASym - T1w-based whole-head template - /usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'Resolution': '2mm', 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
      "sinker_space-template_label-WM_mask_137": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': False, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
      "id_string_space-template_label-GM_mask_138": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_ccs-options')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'space-template_label-GM_mask', 'scan_id': '[Undefined]', 'subdir': 'anat', 'template_desc': 'MNI152NLin6ASym - T1w-based whole-head template - /usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
      "nii_space-template_label-GM_mask_138": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
      "json_space-template_label-GM_mask_138": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-CSF_mask:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_mask:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-GM_mask:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_FSL_anat_to_template_FSL'], ['T1w-template:template_resample'], 'space-template_label-GM_mask:warp_tissuemask_to_T1template'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['label-CSF_mask', 'label-WM_mask', 'label-GM_mask', 'from-T1w_to-template_mode-image_xfm', 'T1w-template'], 'Template': 'MNI152NLin6ASym - T1w-based whole-head template - /usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'Resolution': '2mm', 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
      "sinker_space-template_label-GM_mask_138": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': False, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
      "id_string_desc-preproc_bold_235": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_ccs-options')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'desc-preproc_bold', 'subdir': 'func', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
      "nii_desc-preproc_bold_235": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
      "json_desc-preproc_bold_235": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-preproc_bold:bold_masking', 'desc-preproc_bold:func_normalize'], [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-stc_bold:func_slice_time'], ['bold:func_ingress'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], ['pe-direction:func_metadata_ingress'], 'desc-preproc_bold:apply_phasediff_to_timeseries_separately_default'], [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-stc_bold:func_slice_time'], ['bold:func_ingress'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_FSL_anat_to_template_FSL'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-brain-template-funcreg:template_resample'], 'from-bold_to-template_mode-image_xfm:create_func_to_T1template_xfm'], 'desc-preproc_bold:apply_blip_to_timeseries_separately_default'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer'], 'bold': ['apply_phasediff_to_timeseries_separately_default', 'apply_blip_to_timeseries_separately_default']}, 'SkullStripped': True, 'Sources': ['sbref', 'desc-preproc_bold', 'desc-stc_bold', 'bold', 'from-bold_to-template_mode-image_xfm'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
      "sinker_desc-preproc_bold_235": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': False, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
      "id_string_desc-mean_bold_148": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_ccs-options')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'desc-mean_bold', 'subdir': 'func', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
      "nii_desc-mean_bold_148": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
      "json_desc-mean_bold_148": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean'], 'Sources': ['desc-preproc_bold'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
      "sinker_desc-mean_bold_148": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': False, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
      "id_string_desc-movementParameters_motion_157": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_ccs-options')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'desc-movementParameters_motion', 'subdir': 'func', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
      "nii_desc-movementParameters_motion_157": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
      "json_desc-movementParameters_motion_157": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], 'Sources': ['desc-preproc_bold', 'motion-basefile'], 'Description': \"Each line contains for one timepoint a 6-DOF rigid transform parameters in the format defined by AFNI's 3dvolreg: [roll, pitch, yaw, superior displacement, left displacement, posterior displacement]. Rotation parameters are in degrees counterclockwise, and translation parameters are in millimeters.\", 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
      "sinker_desc-movementParameters_motion_157": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': False, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
      "id_string_space-bold_desc-brain_mask_163": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_ccs-options')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'space-bold_desc-brain_mask', 'subdir': 'func', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
      "nii_space-bold_desc-brain_mask_163": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
      "json_space-bold_desc-brain_mask_163": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['desc-motion_bold', 'desc-brain_T1w', 'desc-preproc_T1w'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
      "sinker_space-bold_desc-brain_mask_163": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': False, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
      "id_string_motion_182": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_ccs-options')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'motion', 'subdir': 'func', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
      "nii_motion_182": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
      "json_motion_182": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-preproc_bold:bold_masking'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'motion:calc_motion_stats'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['desc-preproc_bold', 'space-bold_desc-brain_mask', 'desc-movementParameters_motion', 'max-displacement', 'filtered-coordinate-transformation', 'coordinate-transformation', 'subject', 'scan'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
      "sinker_motion_182": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': False, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
      "id_string_desc-summary_motion_183": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_ccs-options')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'desc-summary_motion', 'subdir': 'func', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
      "nii_desc-summary_motion_183": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
      "json_desc-summary_motion_183": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-preproc_bold:bold_masking'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'desc-summary_motion:calc_motion_stats'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['desc-preproc_bold', 'space-bold_desc-brain_mask', 'desc-movementParameters_motion', 'max-displacement', 'filtered-coordinate-transformation', 'coordinate-transformation', 'subject', 'scan'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
      "sinker_desc-summary_motion_183": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': False, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
      "id_string_sbref_187": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_ccs-options')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'sbref', 'subdir': 'func', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
      "nii_sbref_187": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
      "json_sbref_187": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['desc-brain_bold', 'desc-motion_bold'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
      "sinker_sbref_187": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': False, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
      "id_string_space-T1w_sbref_195": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_ccs-options')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'space-T1w_sbref', 'subdir': 'func', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
      "nii_space-T1w_sbref_195": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
      "json_space-T1w_sbref_195": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'space-T1w_sbref:coregistration'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['sbref', 'desc-motion_bold', 'pe-direction', 'desc-preproc_T1w', 'label-WM_probseg', 'label-WM_pveseg', 'desc-head_T1w'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
      "sinker_space-T1w_sbref_195": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': False, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
      "id_string_from-bold_to-T1w_mode-image_desc-linear_xfm_196": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_ccs-options')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'from-bold_to-T1w_mode-image_desc-linear_xfm', 'subdir': 'func', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
      "nii_from-bold_to-T1w_mode-image_desc-linear_xfm_196": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
      "json_from-bold_to-T1w_mode-image_desc-linear_xfm_196": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['sbref', 'desc-motion_bold', 'pe-direction', 'desc-preproc_T1w', 'label-WM_probseg', 'label-WM_pveseg', 'desc-head_T1w'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
      "sinker_from-bold_to-T1w_mode-image_desc-linear_xfm_196": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': False, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
      "id_string_from-bold_to-template_mode-image_xfm_202": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_ccs-options')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'from-bold_to-template_mode-image_xfm', 'subdir': 'func', 'template_desc': 'MNI152NLin6ASym - T1w-based skull-stripped template resampled to the desired preprocessed-functional resolution - /usr/share/fsl/6.0/data/standard/MNI152_T1_3mm_brain.nii.gz', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
      "nii_from-bold_to-template_mode-image_xfm_202": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
      "json_from-bold_to-template_mode-image_xfm_202": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_FSL_anat_to_template_FSL'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-brain-template-funcreg:template_resample'], 'from-bold_to-template_mode-image_xfm:create_func_to_T1template_xfm'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['sbref', 'from-bold_to-T1w_mode-image_desc-linear_xfm', 'from-T1w_to-template_mode-image_xfm', 'desc-brain_T1w', 'T1w-brain-template-funcreg'], 'Template': 'MNI152NLin6ASym - T1w-based skull-stripped template resampled to the desired preprocessed-functional resolution - /usr/share/fsl/6.0/data/standard/MNI152_T1_3mm_brain.nii.gz', 'Resolution': '3mm', 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
      "sinker_from-bold_to-template_mode-image_xfm_202": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': False, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
      "id_string_desc-confounds-1_timeseries_219": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_ccs-options')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'desc-confounds-1_timeseries', 'subdir': 'func', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
      "nii_desc-confounds-1_timeseries_219": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
      "json_desc-confounds-1_timeseries_219": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [['lateral-ventricles-mask:lateral-ventricles-mask_config_ingress'], ['TR:func_metadata_ingress'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-preproc_bold:bold_masking'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-jenkinson:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-preproc_bold:bold_masking'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-power:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-preproc_bold:bold_masking'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'dvars:calc_motion_stats'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-CSF_desc-preproc_mask:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_desc-preproc_mask:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-GM_desc-preproc_mask:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-T1w_to-template_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-preproc_bold:bold_masking', 'desc-preproc_bold:func_normalize'], 'desc-confounds_timeseries:nuisance_regressors_generation_T1w_Regressor_1'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer'], 'timeseries': ['nuisance_regressors_generation_T1w_Regressor_1']}, 'Sources': ['lateral-ventricles-mask', 'TR', 'space-bold_desc-brain_mask', 'from-bold_to-T1w_mode-image_desc-linear_xfm', 'desc-movementParameters_motion', 'framewise-displacement-jenkinson', 'framewise-displacement-power', 'dvars', 'desc-brain_T1w', 'space-T1w_desc-brain_mask', 'label-CSF_desc-preproc_mask', 'label-WM_desc-preproc_mask', 'label-GM_desc-preproc_mask', 'from-template_to-T1w_mode-image_desc-linear_xfm', 'from-T1w_to-template_mode-image_desc-linear_xfm'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
      "sinker_desc-confounds-1_timeseries_219": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': False, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
      "id_string_desc-confounds-2_timeseries_221": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_ccs-options')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'desc-confounds-2_timeseries', 'subdir': 'func', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
      "nii_desc-confounds-2_timeseries_221": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
      "json_desc-confounds-2_timeseries_221": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [['lateral-ventricles-mask:lateral-ventricles-mask_config_ingress'], ['TR:func_metadata_ingress'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-preproc_bold:bold_masking'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-jenkinson:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-preproc_bold:bold_masking'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-power:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-preproc_bold:bold_masking'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'dvars:calc_motion_stats'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-CSF_desc-preproc_mask:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_desc-preproc_mask:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-GM_desc-preproc_mask:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-T1w_to-template_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-preproc_bold:bold_masking', 'desc-preproc_bold:func_normalize'], 'desc-confounds_timeseries:nuisance_regressors_generation_T1w_Regressor_2'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer'], 'timeseries': ['nuisance_regressors_generation_T1w_Regressor_2']}, 'Sources': ['lateral-ventricles-mask', 'TR', 'space-bold_desc-brain_mask', 'from-bold_to-T1w_mode-image_desc-linear_xfm', 'desc-movementParameters_motion', 'framewise-displacement-jenkinson', 'framewise-displacement-power', 'dvars', 'desc-brain_T1w', 'space-T1w_desc-brain_mask', 'label-CSF_desc-preproc_mask', 'label-WM_desc-preproc_mask', 'label-GM_desc-preproc_mask', 'from-template_to-T1w_mode-image_desc-linear_xfm', 'from-T1w_to-template_mode-image_desc-linear_xfm'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
      "sinker_desc-confounds-2_timeseries_221": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': False, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
      "id_string_space-template_desc-preproc_bold_239": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_ccs-options')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'space-template_desc-preproc_bold', 'subdir': 'func', 'template_desc': 'MNI152NLin6ASym - T1w-based skull-stripped template resampled to the desired preprocessed-functional resolution - /usr/share/fsl/6.0/data/standard/MNI152_T1_3mm_brain.nii.gz', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
      "nii_space-template_desc-preproc_bold_239": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
      "json_space-template_desc-preproc_bold_239": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-preproc_bold:bold_masking', 'desc-preproc_bold:func_normalize'], [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-stc_bold:func_slice_time'], ['bold:func_ingress'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], ['pe-direction:func_metadata_ingress'], 'desc-preproc_bold:apply_phasediff_to_timeseries_separately_default'], [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-stc_bold:func_slice_time'], ['bold:func_ingress'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_FSL_anat_to_template_FSL'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-brain-template-funcreg:template_resample'], 'from-bold_to-template_mode-image_xfm:create_func_to_T1template_xfm'], 'desc-preproc_bold:apply_blip_to_timeseries_separately_default'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_FSL_anat_to_template_FSL'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-brain-template-funcreg:template_resample'], 'from-bold_to-template_mode-image_xfm:create_func_to_T1template_xfm'], ['T1w-brain-template-funcreg:template_resample'], 'space-template_desc-preproc_bold:transform_timeseries_to_T1template'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer'], 'bold': ['apply_phasediff_to_timeseries_separately_default', 'apply_blip_to_timeseries_separately_default'], 'space-template_bold': ['transform_timeseries_to_T1template']}, 'SkullStripped': True, 'Sources': ['desc-preproc_bold', 'from-bold_to-template_mode-image_xfm', 'T1w-brain-template-funcreg'], 'Template': 'MNI152NLin6ASym - T1w-based skull-stripped template resampled to the desired preprocessed-functional resolution - /usr/share/fsl/6.0/data/standard/MNI152_T1_3mm_brain.nii.gz', 'Resolution': '3mm', 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
      "sinker_space-template_desc-preproc_bold_239": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': False, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
      "id_string_space-template_sbref_243": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_ccs-options')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'space-template_sbref', 'subdir': 'func', 'template_desc': 'MNI152NLin6ASym - T1w-based skull-stripped template resampled to the desired preprocessed-functional resolution - /usr/share/fsl/6.0/data/standard/MNI152_T1_3mm_brain.nii.gz', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
      "nii_space-template_sbref_243": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
      "json_space-template_sbref_243": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_FSL_anat_to_template_FSL'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-brain-template-funcreg:template_resample'], 'from-bold_to-template_mode-image_xfm:create_func_to_T1template_xfm'], ['T1w-brain-template-funcreg:template_resample'], 'space-template_sbref:transform_sbref_to_T1template'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['sbref', 'from-bold_to-template_mode-image_xfm', 'T1w-brain-template-funcreg'], 'Description': 'Single-volume sbref of the BOLD time-series transformed to template space.', 'Template': 'MNI152NLin6ASym - T1w-based skull-stripped template resampled to the desired preprocessed-functional resolution - /usr/share/fsl/6.0/data/standard/MNI152_T1_3mm_brain.nii.gz', 'Resolution': '3mm', 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
      "sinker_space-template_sbref_243": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': False, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
      "id_string_space-template_desc-bold_mask_247": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_ccs-options')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'space-template_desc-bold_mask', 'subdir': 'func', 'template_desc': 'MNI152NLin6ASym - T1w-based skull-stripped template resampled to the desired preprocessed-functional resolution - /usr/share/fsl/6.0/data/standard/MNI152_T1_3mm_brain.nii.gz', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
      "nii_space-template_desc-bold_mask_247": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
      "json_space-template_desc-bold_mask_247": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_FSL_anat_to_template_FSL'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-brain-template-funcreg:template_resample'], 'from-bold_to-template_mode-image_xfm:create_func_to_T1template_xfm'], ['T1w-brain-template-funcreg:template_resample'], 'space-template_desc-bold_mask:transform_bold_mask_to_T1template_default'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['space-bold_desc-brain_mask', 'from-bold_to-template_mode-image_xfm', 'T1w-brain-template-funcreg'], 'Template': 'MNI152NLin6ASym - T1w-based skull-stripped template resampled to the desired preprocessed-functional resolution - /usr/share/fsl/6.0/data/standard/MNI152_T1_3mm_brain.nii.gz', 'Resolution': '3mm', 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
      "sinker_space-template_desc-bold_mask_247": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': False, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
      "id_string_space-template_res-derivative_desc-bold_mask_251": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_ccs-options')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'space-template_res-derivative_desc-bold_mask', 'subdir': 'func', 'template_desc': 'MNI152NLin6ASym - T1w-based skull-stripped template resampled to the desired functional derivative resolution - /usr/share/fsl/6.0/data/standard/MNI152_T1_3mm_brain.nii.gz', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
      "nii_space-template_res-derivative_desc-bold_mask_251": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
      "json_space-template_res-derivative_desc-bold_mask_251": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_FSL_anat_to_template_FSL'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-brain-template-funcreg:template_resample'], 'from-bold_to-template_mode-image_xfm:create_func_to_T1template_xfm'], ['T1w-brain-template-deriv:template_resample'], 'space-template_res-derivative_desc-bold_mask:transform_deriv_mask_to_T1template_default'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['space-bold_desc-brain_mask', 'from-bold_to-template_mode-image_xfm', 'T1w-brain-template-deriv'], 'Template': 'MNI152NLin6ASym - T1w-based skull-stripped template resampled to the desired functional derivative resolution - /usr/share/fsl/6.0/data/standard/MNI152_T1_3mm_brain.nii.gz', 'Resolution': '3mm', 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
      "sinker_space-template_res-derivative_desc-bold_mask_251": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': False, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
      "id_string_desc-boldSnrAxial_quality_257": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_ccs-options')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'desc-boldSnrAxial_quality', 'subdir': 'func', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
      "nii_desc-boldSnrAxial_quality_257": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
      "json_desc-boldSnrAxial_quality_257": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-preproc_bold:bold_masking', 'desc-preproc_bold:func_normalize'], [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-stc_bold:func_slice_time'], ['bold:func_ingress'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], ['pe-direction:func_metadata_ingress'], 'desc-preproc_bold:apply_phasediff_to_timeseries_separately_default'], [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-stc_bold:func_slice_time'], ['bold:func_ingress'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_FSL_anat_to_template_FSL'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-brain-template-funcreg:template_resample'], 'from-bold_to-template_mode-image_xfm:create_func_to_T1template_xfm'], 'desc-preproc_bold:apply_blip_to_timeseries_separately_default'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'space-T1w_sbref:coregistration'], 'desc-boldSnrAxial_quality:qc_snr_plot'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer'], 'bold': ['apply_phasediff_to_timeseries_separately_default', 'apply_blip_to_timeseries_separately_default']}, 'Sources': ['desc-preproc_bold', 'space-bold_desc-brain_mask', 'from-bold_to-T1w_mode-image_desc-linear_xfm', 'desc-preproc_T1w', 'space-T1w_sbref'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
      "sinker_desc-boldSnrAxial_quality_257": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': False, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
      "id_string_desc-boldSnrSagittal_quality_258": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_ccs-options')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'desc-boldSnrSagittal_quality', 'subdir': 'func', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
      "nii_desc-boldSnrSagittal_quality_258": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
      "json_desc-boldSnrSagittal_quality_258": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-preproc_bold:bold_masking', 'desc-preproc_bold:func_normalize'], [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-stc_bold:func_slice_time'], ['bold:func_ingress'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], ['pe-direction:func_metadata_ingress'], 'desc-preproc_bold:apply_phasediff_to_timeseries_separately_default'], [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-stc_bold:func_slice_time'], ['bold:func_ingress'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_FSL_anat_to_template_FSL'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-brain-template-funcreg:template_resample'], 'from-bold_to-template_mode-image_xfm:create_func_to_T1template_xfm'], 'desc-preproc_bold:apply_blip_to_timeseries_separately_default'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'space-T1w_sbref:coregistration'], 'desc-boldSnrSagittal_quality:qc_snr_plot'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer'], 'bold': ['apply_phasediff_to_timeseries_separately_default', 'apply_blip_to_timeseries_separately_default']}, 'Sources': ['desc-preproc_bold', 'space-bold_desc-brain_mask', 'from-bold_to-T1w_mode-image_desc-linear_xfm', 'desc-preproc_T1w', 'space-T1w_sbref'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
      "sinker_desc-boldSnrSagittal_quality_258": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': False, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
      "id_string_desc-boldSnrHist_quality_259": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_ccs-options')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'desc-boldSnrHist_quality', 'subdir': 'func', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
      "nii_desc-boldSnrHist_quality_259": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
      "json_desc-boldSnrHist_quality_259": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-preproc_bold:bold_masking', 'desc-preproc_bold:func_normalize'], [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-stc_bold:func_slice_time'], ['bold:func_ingress'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], ['pe-direction:func_metadata_ingress'], 'desc-preproc_bold:apply_phasediff_to_timeseries_separately_default'], [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-stc_bold:func_slice_time'], ['bold:func_ingress'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_FSL_anat_to_template_FSL'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-brain-template-funcreg:template_resample'], 'from-bold_to-template_mode-image_xfm:create_func_to_T1template_xfm'], 'desc-preproc_bold:apply_blip_to_timeseries_separately_default'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'space-T1w_sbref:coregistration'], 'desc-boldSnrHist_quality:qc_snr_plot'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer'], 'bold': ['apply_phasediff_to_timeseries_separately_default', 'apply_blip_to_timeseries_separately_default']}, 'Sources': ['desc-preproc_bold', 'space-bold_desc-brain_mask', 'from-bold_to-T1w_mode-image_desc-linear_xfm', 'desc-preproc_T1w', 'space-T1w_sbref'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
      "sinker_desc-boldSnrHist_quality_259": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': False, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
      "id_string_desc-boldSnr_quality_260": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_ccs-options')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'desc-boldSnr_quality', 'subdir': 'func', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
      "nii_desc-boldSnr_quality_260": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
      "json_desc-boldSnr_quality_260": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-preproc_bold:bold_masking', 'desc-preproc_bold:func_normalize'], [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-stc_bold:func_slice_time'], ['bold:func_ingress'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], ['pe-direction:func_metadata_ingress'], 'desc-preproc_bold:apply_phasediff_to_timeseries_separately_default'], [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-stc_bold:func_slice_time'], ['bold:func_ingress'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_FSL_anat_to_template_FSL'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-brain-template-funcreg:template_resample'], 'from-bold_to-template_mode-image_xfm:create_func_to_T1template_xfm'], 'desc-preproc_bold:apply_blip_to_timeseries_separately_default'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'space-T1w_sbref:coregistration'], 'desc-boldSnr_quality:qc_snr_plot'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer'], 'bold': ['apply_phasediff_to_timeseries_separately_default', 'apply_blip_to_timeseries_separately_default']}, 'Sources': ['desc-preproc_bold', 'space-bold_desc-brain_mask', 'from-bold_to-T1w_mode-image_desc-linear_xfm', 'desc-preproc_T1w', 'space-T1w_sbref'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
      "sinker_desc-boldSnr_quality_260": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': False, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
      "id_string_desc-movementParametersTrans_quality_265": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_ccs-options')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'desc-movementParametersTrans_quality', 'subdir': 'func', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
      "nii_desc-movementParametersTrans_quality_265": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
      "json_desc-movementParametersTrans_quality_265": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg', 'desc-movementParametersTrans_quality:qc_motion_plot'], 'Sources': ['desc-movementParameters_motion'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
      "sinker_desc-movementParametersTrans_quality_265": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': False, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
      "id_string_desc-movementParametersRot_quality_266": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_ccs-options')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'desc-movementParametersRot_quality', 'subdir': 'func', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
      "nii_desc-movementParametersRot_quality_266": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
      "json_desc-movementParametersRot_quality_266": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg', 'desc-movementParametersRot_quality:qc_motion_plot'], 'Sources': ['desc-movementParameters_motion'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
      "sinker_desc-movementParametersRot_quality_266": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': False, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
      "id_string_desc-framewiseDisplacementJenkinsonPlot_quality_267": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_ccs-options')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'desc-framewiseDisplacementJenkinsonPlot_quality', 'subdir': 'func', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
      "nii_desc-framewiseDisplacementJenkinsonPlot_quality_267": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
      "json_desc-framewiseDisplacementJenkinsonPlot_quality_267": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-preproc_bold:bold_masking'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-jenkinson:calc_motion_stats', 'desc-framewiseDisplacementJenkinsonPlot_quality:qc_fd_plot'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['framewise-displacement-jenkinson'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
      "sinker_desc-framewiseDisplacementJenkinsonPlot_quality_267": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': False, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
      "id_string_desc-dsegAxial_quality_280": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_ccs-options')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'desc-dsegAxial_quality', 'scan_id': '[Undefined]', 'subdir': 'anat', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
      "nii_desc-dsegAxial_quality_280": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
      "json_desc-dsegAxial_quality_280": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-CSF_desc-preproc_mask:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_desc-preproc_mask:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-GM_desc-preproc_mask:tissue_seg_fsl_fast'], 'desc-dsegAxial_quality:qc_segmentation'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['desc-preproc_T1w', 'label-CSF_desc-preproc_mask', 'label-WM_desc-preproc_mask', 'label-GM_desc-preproc_mask'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
      "sinker_desc-dsegAxial_quality_280": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': False, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}",
      "id_string_desc-dsegSagittal_quality_281": "{'atlas_id': '[Undefined]', 'cfg': \"C-PAC Configuration ('cpac_ccs-options')\", 'function_str': 'def create_id_string(cfg, unique_id, resource, scan_id=None,\\n                     template_desc=None, atlas_id=None, fwhm=None,\\n                     subdir=None):\\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\\n    compliant file names.\\n\\n    This is used in the file renaming performed during the Datasink\\n    connections.\\n\\n    Example\\n    -------\\n    >>> from CPAC.utils.configuration import Configuration\\n    >>> create_id_string(Configuration(), \\'sub-1_ses-1\\',\\n    ...                  \\'res-derivative_desc-Mean-1_timeseries\\',\\n    ...                  scan_id=\\'rest\\', atlas_id=\\'Yeo_desc-7\\')\\n    \\'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries\\'\\n    \"\"\"\\n    import re\\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\\\\n                                      res_in_filename\\n    if atlas_id:\\n        if \\'_desc-\\' in atlas_id:\\n            atlas, desc = atlas_id.split(\\'_desc-\\')\\n            if not re.match(r\\'.*[0-9]$\\', atlas) and re.match(r\\'[a-z].*\\', desc):\\n                atlas_id = f\\'{atlas}{desc[0].upper()}{desc[1:]}\\'\\n            else:\\n                atlas_id = atlas_id.replace(\\'_desc-\\', \\'\\')\\n        resource = f\\'atlas-{atlas_id}_{resource}\\'\\n\\n    part_id = unique_id.split(\\'_\\')[0]\\n    ses_id = unique_id.split(\\'_\\')[1]\\n    if \\'sub-\\' not in part_id:\\n        part_id = f\\'sub-{part_id}\\'\\n    if \\'ses-\\' not in ses_id:\\n        ses_id = f\\'ses-{ses_id}\\'\\n    if scan_id:\\n        out_filename = f\\'{part_id}_{ses_id}_task-{scan_id}_{resource}\\'\\n    else:\\n        out_filename = f\\'{part_id}_{ses_id}_{resource}\\'\\n\\n    template_tag = template_desc.split(\\' -\\')[0] if template_desc else \\'*\\'\\n    for prefix in [\\'space-\\', \\'from-\\', \\'to-\\']:\\n        for bidstag in out_filename.split(\\'_\\'):\\n            if prefix in bidstag and \\'template\\' in bidstag:\\n                out_filename = out_filename.replace(\\n                    bidstag, f\\'{prefix}{template_tag}\\')\\n\\n    if fwhm:\\n        for tag in resource.split(\\'_\\'):\\n            if \\'desc-\\' in tag and \\'-sm\\' in tag:\\n                newtag = tag.replace(\\'-sm\\', f\\'-sm{fwhm}\\')\\n                out_filename = out_filename.replace(tag, newtag)\\n                break\\n        else:\\n            raise Exception(\\'\\\\n[!] FWHM provided but no desc-sm?\\\\n\\')\\n\\n    # drop space- entities from from native-space filenames\\n    if subdir == \\'anat\\':\\n        out_filename = out_filename.replace(\\'_space-T1w_\\', \\'_\\')\\n    if subdir == \\'func\\':\\n        out_filename = out_filename.replace(\\'_space-bold_\\', \\'_\\')\\n    return combine_multiple_entity_instances(\\n        res_in_filename(cfg, out_filename))\\n', 'fwhm': '[Undefined]', 'resource': 'desc-dsegSagittal_quality', 'scan_id': '[Undefined]', 'subdir': 'anat', 'template_desc': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
      "nii_desc-dsegSagittal_quality_281": "{'keep_ext': True, 'parse_string': '[Undefined]', 'use_fullpath': False}",
      "json_desc-dsegSagittal_quality_281": "{'function_str': \"def write_output_json(json_data, filename, indent=3, basedir=None):\\n    if not basedir:\\n        basedir = os.getcwd()\\n    if '.json' not in filename:\\n        filename = f'{filename}.json'\\n    json_file = os.path.join(basedir, filename)\\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\\n    with open(json_file, 'wt') as f:\\n        f.write(json_data)\\n    return json_file\\n\", 'json_data': {'CpacProvenance': [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-CSF_desc-preproc_mask:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_desc-preproc_mask:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-GM_desc-preproc_mask:tissue_seg_fsl_fast'], 'desc-dsegSagittal_quality:qc_segmentation'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['desc-preproc_T1w', 'label-CSF_desc-preproc_mask', 'label-WM_desc-preproc_mask', 'label-GM_desc-preproc_mask'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}}",
      "sinker_desc-dsegSagittal_quality_281": "{'_outputs': {}, 'base_directory': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'bucket': '[Undefined]', 'container': 'pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1', 'creds_path': '[Undefined]', 'encrypt_bucket_keys': False, 'local_copy': '[Undefined]', 'parameterization': False, 'regexp_substitutions': '[Undefined]', 'remove_dest_dir': False, 'strip_dir': '[Undefined]', 'substitutions': '[Undefined]'}"
    },
    "outputs": {
      "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1": "{'inputnode': {'creds_path': None, 'dl_dir': None, 'scan': None, 'subject': None}, 'check_func_scan': {}, 'selectrest': {'file_path': None}, 'check_for_s3': {'local_path': None}, 'outputspec': {'magnitude': None, 'phase_diff': None, 'rest': None, 'scan': None, 'scan_params': None, 'subject': None}, 'select_scan_params': {'file_path': None}, 's3_scan_params': {'local_path': None}}",
      "bold_scan_params_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1": "{'effective_echo_spacing': None, 'pe_direction': None, 'ref_slice': None, 'start_indx': None, 'stop_indx': None, 'template': None, 'tpattern': None, 'tr': None}",
      "anat_T1w_gather_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1": "{'inputnode': {'anat': None, 'creds_path': None, 'dl_dir': None, 'img_type': None, 'subject': None}, 'check_for_s3': {'local_path': None}, 'outputspec': {'anat': None, 'subject': None}}",
      "anat_deoblique_0": "{'out_file': None}",
      "anat_reorient_0": "{'out_file': None}",
      "anat_freesurfer_46": "{'BA_stats': None, 'T1': None, 'annot': None, 'aparc_a2009s_stats': None, 'aparc_aseg': None, 'aparc_stats': None, 'area_pial': None, 'aseg': None, 'aseg_stats': None, 'avg_curv': None, 'brain': None, 'brainmask': None, 'curv': None, 'curv_pial': None, 'curv_stats': None, 'entorhinal_exvivo_stats': None, 'filled': None, 'graymid': None, 'inflated': None, 'jacobian_white': None, 'label': None, 'norm': None, 'nu': None, 'orig': None, 'pial': None, 'rawavg': None, 'ribbon': None, 'smoothwm': None, 'sphere': None, 'sphere_reg': None, 'subject_id': None, 'subjects_dir': None, 'sulc': None, 'thickness': None, 'volume': None, 'white': None, 'wm': None, 'wmparc': None, 'wmparc_stats': None}",
      "split_curv_46": "{'lh': None, 'rh': None}",
      "split_pial_46": "{'lh': None, 'rh': None}",
      "split_smoothwm_46": "{'lh': None, 'rh': None}",
      "split_sphere_46": "{'lh': None, 'rh': None}",
      "split_sulc_46": "{'lh': None, 'rh': None}",
      "split_thickness_46": "{'lh': None, 'rh': None}",
      "split_volume_46": "{'lh': None, 'rh': None}",
      "split_white_46": "{'lh': None, 'rh': None}",
      "anat_denoise_46": "{'noise_image': None, 'output_image': None}",
      "fs_brain_mask_to_native": "{'transformed_file': None}",
      "fs_brainmask_to_nifti_72": "{'out_file': None}",
      "binarize_fs_brainmask_72": "{'out_file': None}",
      "fill_fs_brainmask_72": "{'out_file': None}",
      "convert_fs_brainmask_to_nifti_freesurfer-bet-tight_76": "{'out_file': None}",
      "convert_fs_T1_to_nifti_freesurfer-bet-tight_76": "{'out_file': None}",
      "reorient_fs_brainmask_freesurfer-bet-tight_76": "{'out_file': None}",
      "binarize_fs_brain_freesurfer-bet-tight_76": "{'out_file': None}",
      "reorient_fs_T1_freesurfer-bet-tight_76": "{'out_file': None}",
      "convert_head_to_template_freesurfer-bet-tight_76": "{'out_file': None, 'out_log': None, 'out_matrix_file': None}",
      "gather_T1w-ACPC-template": "{'inputnode': {'creds_path': None, 'data': None, 'dl_dir': None, 'scan': None, 'unique_id': None}, 'check_for_s3': {'local_path': None}, 'outputspec': {'data': None, 'scan': None, 'unique_id': None}}",
      "convert_xfm_freesurfer-bet-tight_76": "{'out_file': None}",
      "anat_BET_skullstrip_freesurfer-bet-tight_76": "{'inskull_mask_file': None, 'inskull_mesh_file': None, 'mask_file': None, 'meshfile': None, 'out_file': None, 'outline_file': None, 'outskin_mask_file': None, 'outskin_mesh_file': None, 'outskull_mask_file': None, 'outskull_mesh_file': None, 'skull_file': None, 'skull_mask_file': None}",
      "apply_mask_freesurfer-bet-tight_76": "{'out_file': None}",
      "gather_T1w-brain-template-mask-ccs": "{'inputnode': {'creds_path': None, 'data': None, 'dl_dir': None, 'scan': None, 'unique_id': None}, 'check_for_s3': {'local_path': None}, 'outputspec': {'data': None, 'scan': None, 'unique_id': None}}",
      "convert_template_mask_to_native_freesurfer-bet-tight_76": "{'out_file': None, 'out_log': None, 'out_matrix_file': None}",
      "combine_mask_freesurfer-bet-tight_76": "{'out_file': None}",
      "binarize_combined_mask_freesurfer-bet-tight_76": "{'out_file': None}",
      "fs_fsl_brain_mask_to_native_freesurfer-bet-tight_76": "{'transformed_file': None}",
      "convert_fs_brainmask_to_nifti_freesurfer-bet-loose_76": "{'out_file': None}",
      "convert_fs_T1_to_nifti_freesurfer-bet-loose_76": "{'out_file': None}",
      "reorient_fs_brainmask_freesurfer-bet-loose_76": "{'out_file': None}",
      "binarize_fs_brain_freesurfer-bet-loose_76": "{'out_file': None}",
      "reorient_fs_T1_freesurfer-bet-loose_76": "{'out_file': None}",
      "convert_head_to_template_freesurfer-bet-loose_76": "{'out_file': None, 'out_log': None, 'out_matrix_file': None}",
      "convert_xfm_freesurfer-bet-loose_76": "{'out_file': None}",
      "anat_BET_skullstrip_freesurfer-bet-loose_76": "{'inskull_mask_file': None, 'inskull_mesh_file': None, 'mask_file': None, 'meshfile': None, 'out_file': None, 'outline_file': None, 'outskin_mask_file': None, 'outskin_mesh_file': None, 'outskull_mask_file': None, 'outskull_mesh_file': None, 'skull_file': None, 'skull_mask_file': None}",
      "apply_mask_freesurfer-bet-loose_76": "{'out_file': None}",
      "convert_template_mask_to_native_freesurfer-bet-loose_76": "{'out_file': None, 'out_log': None, 'out_matrix_file': None}",
      "combine_mask_freesurfer-bet-loose_76": "{'out_file': None}",
      "binarize_combined_mask_freesurfer-bet-loose_76": "{'out_file': None}",
      "fs_fsl_brain_mask_to_native_freesurfer-bet-loose_76": "{'transformed_file': None}",
      "brain_extraction_90": "{'out_file': None}",
      "register_FSL_anat_to_template_96": "{'inputspec': {'fnirt_config': None, 'input_brain': None, 'input_head': None, 'input_mask': None, 'interpolation': None, 'reference_brain': None, 'reference_head': None, 'reference_mask': None, 'transform': None}, 'anat_mni_flirt_register': {'inputspec': {'input_brain': None, 'interp': None, 'ref_mask': None, 'reference_brain': None}, 'linear_reg_0': {'out_file': None, 'out_log': None, 'out_matrix_file': None}, 'outputspec': {'invlinear_xfm': None, 'linear_xfm': None, 'output_brain': None}, 'inv_linear_reg0_xfm': {'out_file': None}}, 'fsl_lin-warp_to_nii': {'out_file': None}, 'fsl_invlin-warp_to_nii': {'out_file': None}, 'anat_mni_fnirt_register': {'inputspec': {'fnirt_config': None, 'input_brain': None, 'input_skull': None, 'interp': None, 'linear_aff': None, 'ref_mask': None, 'reference_brain': None, 'reference_skull': None}, 'nonlinear_reg_1': {'field_file': None, 'fieldcoeff_file': None, 'jacobian_file': None, 'log_file': None, 'modulatedref_file': None, 'out_intensitymap_file': None, 'warped_file': None}, 'brain_warp': {'out_file': None}, 'outputspec': {'nonlinear_xfm': None, 'output_brain': None}}}",
      "resampled_T1w-brain-template": "{'resampled_template': None}",
      "resampled_T1w-template": "{'resampled_template': None}",
      "resampled_template-ref-mask": "{'resampled_template': None}",
      "warp_wholehead_T1w_to_T1template_105": "{'inputspec': {'input_image': None, 'interpolation': None, 'reference': None, 'transform': None}, 'interp_string': {'interpolation': None}, 'fsl_apply_warp': {'out_file': None}, 'outputspec': {'output_image': None}}",
      "anat_mni_fnirt_register": "{'inputspec': {'fnirt_config': None, 'input_brain': None, 'input_skull': None, 'interp': None, 'linear_aff': None, 'ref_mask': None, 'reference_brain': None, 'reference_skull': None}, 'nonlinear_reg_1': {'field_file': None, 'fieldcoeff_file': None, 'jacobian_file': None, 'log_file': None, 'modulatedref_file': None, 'out_intensitymap_file': None, 'warped_file': None}, 'brain_warp': {'out_file': None}, 'outputspec': {'nonlinear_xfm': None, 'output_brain': None}}",
      "warp_T1mask_to_T1template_109": "{'inputspec': {'input_image': None, 'interpolation': None, 'reference': None, 'transform': None}, 'interp_string': {'interpolation': None}, 'fsl_apply_warp': {'out_file': None}, 'outputspec': {'output_image': None}}",
      "segment_113": "{'bias_field': None, 'mixeltype': None, 'partial_volume_files': None, 'partial_volume_map': None, 'probability_maps': None, 'restored_image': None, 'tissue_class_files': None, 'tissue_class_map': None}",
      "get_pve_csf_113": "{'out_file': None}",
      "get_pve_gm_113": "{'out_file': None}",
      "get_pve_wm_113": "{'out_file': None}",
      "gather_CSF-path": "{'inputnode': {'creds_path': None, 'data': None, 'dl_dir': None, 'scan': None, 'unique_id': None}, 'check_for_s3': {'local_path': None}, 'outputspec': {'data': None, 'scan': None, 'unique_id': None}}",
      "CSF_113": "{'inputspec': {'brain': None, 'brain_mask': None, 'erosion_mm': None, 'erosion_prop': None, 'mask_erosion_mm': None, 'probability_tissue_map': None, 'template_to_T1_xfm': None, 'threshold': None, 'tissue_class_file': None, 'tissue_prior': None}, 'seg_tissue_priors_template_to_T1': {'inputspec': {'input_image': None, 'interpolation': None, 'reference': None, 'transform': None}, 'interp_string': {'interpolation': None}, 'fsl_apply_warp': {'out_file': None}, 'outputspec': {'output_image': None}}, 'overlap_CSF_113_map_with_prior': {'out_file': None}, 'outputspec': {'probability_tissue_map': None, 'segment_mask': None}}",
      "gather_GM-path": "{'inputnode': {'creds_path': None, 'data': None, 'dl_dir': None, 'scan': None, 'unique_id': None}, 'check_for_s3': {'local_path': None}, 'outputspec': {'data': None, 'scan': None, 'unique_id': None}}",
      "GM_113": "{'inputspec': {'brain': None, 'brain_mask': None, 'erosion_mm': None, 'erosion_prop': None, 'mask_erosion_mm': None, 'probability_tissue_map': None, 'template_to_T1_xfm': None, 'threshold': None, 'tissue_class_file': None, 'tissue_prior': None}, 'seg_tissue_priors_template_to_T1': {'inputspec': {'input_image': None, 'interpolation': None, 'reference': None, 'transform': None}, 'interp_string': {'interpolation': None}, 'fsl_apply_warp': {'out_file': None}, 'outputspec': {'output_image': None}}, 'overlap_GM_113_map_with_prior': {'out_file': None}, 'outputspec': {'probability_tissue_map': None, 'segment_mask': None}}",
      "gather_WM-path": "{'inputnode': {'creds_path': None, 'data': None, 'dl_dir': None, 'scan': None, 'unique_id': None}, 'check_for_s3': {'local_path': None}, 'outputspec': {'data': None, 'scan': None, 'unique_id': None}}",
      "WM_113": "{'inputspec': {'brain': None, 'brain_mask': None, 'erosion_mm': None, 'erosion_prop': None, 'mask_erosion_mm': None, 'probability_tissue_map': None, 'template_to_T1_xfm': None, 'threshold': None, 'tissue_class_file': None, 'tissue_prior': None}, 'seg_tissue_priors_template_to_T1': {'inputspec': {'input_image': None, 'interpolation': None, 'reference': None, 'transform': None}, 'interp_string': {'interpolation': None}, 'fsl_apply_warp': {'out_file': None}, 'outputspec': {'output_image': None}}, 'overlap_WM_113_map_with_prior': {'out_file': None}, 'outputspec': {'probability_tissue_map': None, 'segment_mask': None}}",
      "fsl_invlin-warp_to_nii": "{'out_file': None}",
      "get_csf_113": "{'filename': None}",
      "warp_label-CSF_mask_to_T1wtemplate_131": "{'inputspec': {'input_image': None, 'interpolation': None, 'reference': None, 'transform': None}, 'interp_string': {'interpolation': None}, 'fsl_apply_warp': {'out_file': None}, 'outputspec': {'output_image': None}}",
      "warp_label-WM_mask_to_T1wtemplate_131": "{'inputspec': {'input_image': None, 'interpolation': None, 'reference': None, 'transform': None}, 'interp_string': {'interpolation': None}, 'fsl_apply_warp': {'out_file': None}, 'outputspec': {'output_image': None}}",
      "warp_label-GM_mask_to_T1wtemplate_131": "{'inputspec': {'input_image': None, 'interpolation': None, 'reference': None, 'transform': None}, 'interp_string': {'interpolation': None}, 'fsl_apply_warp': {'out_file': None}, 'outputspec': {'output_image': None}}",
      "func_deoblique_2": "{'out_file': None}",
      "func_reorient_2": "{'out_file': None}",
      "edit_func_139": "{'inputspec': {'func': None, 'start_idx': None, 'stop_idx': None}, 'func_get_idx': {'startidx': None, 'stopidx': None}, 'func_drop_trs': {'out_file': None}, 'outputspec': {'edited_func': None}}",
      "func_despiked_141": "{'out_file': None}",
      "func_slice_timing_correction_143": "{'inputspec': {'func_ts': None, 'tpattern': None, 'tr': None}, 'slice_timing': {'out_file': None, 'timing_file': None}, 'outputspec': {'slice_time_corrected': None}}",
      "func_mean_146": "{'out_file': None}",
      "func_get_mean_RPI_149": "{'out_file': None}",
      "chunk_152": "{'TR_ranges': None}",
      "split_152": "{'split_funcs': None}",
      "out_split_func_152": "{'out_file': None}",
      "func_generate_ref_152_": "{'out_file': None, 'md1d_file': None, 'oned_file': None, 'oned_matrix_save': None}",
      "func_concat_152": "{'out_file': None}",
      "out_motion_152": "{'out_file': None}",
      "func_motion_correct_3dvolreg_152": "{'out_file': None, 'md1d_file': None, 'oned_file': None, 'oned_matrix_save': None}",
      "motion_concat_152": "{'out_file': None}",
      "out_motion_A_152": "{'out_file': None}",
      "md1d_concat_152": "{'out_file': None}",
      "oned_concat_152": "{'out_file': None}",
      "oned_matrix_concat_152": "{'out_file': None}",
      "out_md1d_152": "{'out_file': None}",
      "out_oned_152": "{'out_file': None}",
      "out_oned_matrix_152": "{'out_file': None}",
      "func_tmp_brain_mask_AFNI_160": "{'brain_file': None, 'out_file': None}",
      "extract_func_roi_160": "{'roi_file': None}",
      "get_func_tmp_brain_160": "{'out_file': None}",
      "func_to_anat_linear_reg_160": "{'out_file': None, 'out_log': None, 'out_matrix_file': None}",
      "inv_func2anat_affine_160": "{'out_file': None}",
      "reg_anat_brain_to_func_160": "{'out_file': None, 'out_log': None, 'out_matrix_file': None}",
      "bin_anat_brain_in_func_160": "{'out_file': None}",
      "bin_func_160": "{'out_file': None}",
      "merge_func_mask_160": "{'out': None}",
      "intersect_mask_160": "{'out_file': None}",
      "get_example_func_brain_160": "{'out_file': None}",
      "func_extract_brain_165": "{'out_file': None}",
      "gen_motion_stats_169": "{'inputspec': {'mask': None, 'max_displacement': None, 'motion_correct': None, 'movement_parameters': None, 'rels_displacement': None, 'transformations': None}, 'cal_DVARS': {'out_file': None}, 'cal_DVARS_strip': {'DVARS_val': None, 'out_file': None}, 'outputspec': {'DVARS_1D': None, 'FDJ_1D': None, 'FDP_1D': None, 'desc-summary_motion': None, 'motion': None, 'motion_params': None, 'power_params': None}, 'calculate_FD': {'fd': None, 'out_file': None}, 'calculate_FDJ': {'fd': None, 'out_file': None}, 'get_all_motion_parameters': {'all_motion_val': None, 'summary_motion_power': None}, 'calc_motion_parameters': {'info': None, 'maxdisp': None, 'out_file': None, 'relsdisp': None}, 'calc_power_parameters': {'info': None, 'out_file': None}}",
      "func_normalize_167": "{'out_file': None}",
      "get_func_volume_185": "{'out_file': None}",
      "func_to_anat_FLIRT_188": "{'inputspec': {'anat': None, 'dof': None, 'fieldmap': None, 'fieldmapmask': None, 'func': None, 'interp': None}, 'linear_func_to_anat': {'out_file': None, 'out_log': None, 'out_matrix_file': None}, 'outputspec': {'anat_func_nobbreg': None, 'func_to_anat_linear_xfm_nobbreg': None}}",
      "func_to_anat_bbreg_188": "{'inputspec': {'anat': None, 'anat_wm_segmentation': None, 'bbr_schedule': None, 'bbr_wm_mask_args': None, 'fieldmap': None, 'fieldmapmask': None, 'func': None, 'linear_reg_matrix': None}, 'wm_bb_mask': {'out_file': None}, 'bbreg_func_to_anat': {'out_file': None, 'out_log': None, 'out_matrix_file': None}, 'outputspec': {'anat_func': None, 'func_to_anat_linear_xfm': None}}",
      "create_func_to_T1wtemplate_xfm_197": "{'inputspec': {'T1w-brain-template_funcreg': None, 'T1w_to_template_xfm': None, 'blip_warp': None, 'coreg_xfm': None, 'input_brain': None, 'mean_bold': None, 'template_to_T1w_xfm': None}, 'combine_fsl_warps': {'out_file': None}}",
      "resampled_T1w-brain-template-funcreg": "{'resampled_template': None}",
      "nuisance_regressors_Regressor_1_203": "{'inputspec': {'anat_to_func_linear_xfm_file_path': None, 'anat_to_mni_linear_xfm_file_path': None, 'anatomical_eroded_brain_mask_file_path': None, 'anatomical_file_path': None, 'creds_path': None, 'csf_mask_file_path': None, 'dl_dir': None, 'dvars_file_path': None, 'fd_j_file_path': None, 'fd_p_file_path': None, 'func_to_anat_linear_xfm_file_path': None, 'functional_brain_mask_file_path': None, 'functional_file_path': None, 'gm_mask_file_path': None, 'lat_ventricles_mask_file_path': None, 'mni_to_anat_linear_xfm_file_path': None, 'motion_parameters_file_path': None, 'selector': None, 'tr': None, 'wm_mask_file_path': None}, 'functional_mean': {'out_file': None}, 'Anatomical_2mm_flirt': {'out_file': None, 'out_log': None, 'out_matrix_file': None}, 'Functional_2mm_flirt': {'out_file': None, 'out_log': None, 'out_matrix_file': None}, 'WhiteMatter_2mm_flirt': {'out_file': None, 'out_log': None, 'out_matrix_file': None}, 'WhiteMatter_merge_masks': {'out': None}, 'WhiteMatter_union_masks': {'out_file': None}, 'WhiteMatter_mean': {'out_file': None}, 'CerebrospinalFluid_2mm_flirt': {'out_file': None, 'out_log': None, 'out_matrix_file': None}, 'VentriclesToAnat_2mm_fsl_applywarp': {'out_file': None}, 'CerebrospinalFluid_2mm_Ventricles': {'out_file': None}, 'CerebrospinalFluid_merge_masks': {'out': None}, 'CerebrospinalFluid_union_masks': {'out_file': None}, 'CerebrospinalFluid_mean': {'out_file': None}, 'GlobalSignal_merge_masks': {'out': None}, 'GlobalSignal_union_masks': {'out_file': None}, 'GlobalSignal_mean': {'out_file': None}, 'build_nuisance_regressors': {'censor_indices': None, 'out_file': None}, 'outputspec': {'censor_indices': None, 'regressors_file_path': None}}",
      "gather_lateral-ventricles-mask": "{'inputnode': {'creds_path': None, 'data': None, 'dl_dir': None, 'scan': None, 'unique_id': None}, 'check_for_s3': {'local_path': None}, 'outputspec': {'data': None, 'scan': None, 'unique_id': None}}",
      "anat_to_func_linear_xfm_Regressor_1_203": "{'out_file': None}",
      "fsl_lin-warp_to_nii": "{'out_file': None}",
      "nuisance_regressors_Regressor_2_203": "{'inputspec': {'anat_to_func_linear_xfm_file_path': None, 'anat_to_mni_linear_xfm_file_path': None, 'anatomical_eroded_brain_mask_file_path': None, 'anatomical_file_path': None, 'creds_path': None, 'csf_mask_file_path': None, 'dl_dir': None, 'dvars_file_path': None, 'fd_j_file_path': None, 'fd_p_file_path': None, 'func_to_anat_linear_xfm_file_path': None, 'functional_brain_mask_file_path': None, 'functional_file_path': None, 'gm_mask_file_path': None, 'lat_ventricles_mask_file_path': None, 'mni_to_anat_linear_xfm_file_path': None, 'motion_parameters_file_path': None, 'selector': None, 'tr': None, 'wm_mask_file_path': None}, 'functional_mean': {'out_file': None}, 'Anatomical_2mm_flirt': {'out_file': None, 'out_log': None, 'out_matrix_file': None}, 'Functional_2mm_flirt': {'out_file': None, 'out_log': None, 'out_matrix_file': None}, 'WhiteMatter_2mm_flirt': {'out_file': None, 'out_log': None, 'out_matrix_file': None}, 'WhiteMatter_merge_masks': {'out': None}, 'WhiteMatter_union_masks': {'out_file': None}, 'WhiteMatter_mean': {'out_file': None}, 'CerebrospinalFluid_2mm_flirt': {'out_file': None, 'out_log': None, 'out_matrix_file': None}, 'VentriclesToAnat_2mm_fsl_applywarp': {'out_file': None}, 'CerebrospinalFluid_2mm_Ventricles': {'out_file': None}, 'CerebrospinalFluid_merge_masks': {'out': None}, 'CerebrospinalFluid_union_masks': {'out_file': None}, 'CerebrospinalFluid_mean': {'out_file': None}, 'build_nuisance_regressors': {'censor_indices': None, 'out_file': None}, 'outputspec': {'censor_indices': None, 'regressors_file_path': None}}",
      "anat_to_func_linear_xfm_Regressor_2_203": "{'out_file': None}",
      "warp_ts_to_T1template_236": "{'inputspec': {'input_image': None, 'interpolation': None, 'reference': None, 'transform': None}, 'interp_string': {'interpolation': None}, 'fsl_apply_warp_': {'out_file': None}, 'chunk_warp_ts_to_T1template_236': {'TR_ranges': None}, 'split_warp_ts_to_T1template_236': {'split_funcs': None}, 'func_concatwarp_ts_to_T1template_236': {'out_file': None}, 'outputspec': {'output_image': None}}",
      "combine_fsl_warps": "{'out_file': None}",
      "warp_funcreg-sbref_to_T1wtemplate_240": "{'inputspec': {'input_image': None, 'interpolation': None, 'reference': None, 'transform': None}, 'interp_string': {'interpolation': None}, 'fsl_apply_warp': {'out_file': None}, 'outputspec': {'output_image': None}}",
      "warp_funcreg-mask_to_T1wtemplate_244": "{'inputspec': {'input_image': None, 'interpolation': None, 'reference': None, 'transform': None}, 'interp_string': {'interpolation': None}, 'fsl_apply_warp': {'out_file': None}, 'outputspec': {'output_image': None}}",
      "warp_deriv-mask_to_T1wtemplate_248": "{'inputspec': {'input_image': None, 'interpolation': None, 'reference': None, 'transform': None}, 'interp_string': {'interpolation': None}, 'fsl_apply_warp': {'out_file': None}, 'outputspec': {'output_image': None}}",
      "resampled_T1w-brain-template-deriv": "{'resampled_template': None}",
      "qc_snr_252": "{'inputspec': {'anatomical_brain': None, 'functional_brain_mask': None, 'functional_preprocessed': None, 'functional_to_anat_linear_xfm': None, 'mean_functional_in_anat': None}, 'std_dev': {'out_file': None}, 'std_dev_anat': {'out_file': None}, 'snr': {'out_file': None}, 'snr_val': {'snr_storefl': None}, 'hist_snr': {'hist_path': None}, 'dp_snr': {'modified_measure_file': None}, 'montage_snr': {'inputspec': {'overlay': None, 'underlay': None}, 'resample_u': {'new_fname': None}, 'outputspec': {'axial_png': None, 'resampled_overlay': None, 'resampled_underlay': None, 'sagittal_png': None}, 'resample_o': {'new_fname': None}, 'montage_a': {'png_name': None}, 'montage_s': {'png_name': None}}, 'outputspec': {'snr_axial_image': None, 'snr_histogram_image': None, 'snr_mean': None, 'snr_sagittal_image': None}}",
      "anat_edge_261": "{'out_file': None}",
      "montage_anat_261": "{'inputspec': {'overlay': None, 'underlay': None}, 'resample_u': {'new_fname': None}, 'outputspec': {'axial_png': None, 'resampled_overlay': None, 'resampled_underlay': None, 'sagittal_png': None}, 'resample_o': {'new_fname': None}, 'montage_a': {'png_name': None}, 'montage_s': {'png_name': None}}",
      "qc_motion_157": "{'inputspec': {'motion_parameters': None}, 'motion_plot': {'rotation_plot': None, 'translation_plot': None}, 'outputspec': {'motion_rotation_plot': None, 'motion_translation_plot': None}}",
      "qc_fd_178": "{'inputspec': {'excluded_volumes': None, 'fd': None}, 'fd_plot': {'hist_path': None}, 'outputspec': {'fd_histogram_plot': None}}",
      "qc_skullstrip_268": "{'inputspec': {'anatomical_brain': None, 'anatomical_reorient': None}, 'skull_edge': {'out_file': None}, 'montage_skull': {'inputspec': {'overlay': None, 'underlay': None}, 'resample_u': {'new_fname': None}, 'outputspec': {'axial_png': None, 'resampled_overlay': None, 'resampled_underlay': None, 'sagittal_png': None}, 'resample_o': {'new_fname': None}, 'montage_a': {'png_name': None}, 'montage_s': {'png_name': None}}, 'outputspec': {'axial_image': None, 'sagittal_image': None}}",
      "montage_mni_anat_272": "{'inputspec': {'overlay': None, 'underlay': None}, 'resample_u': {'new_fname': None}, 'outputspec': {'axial_png': None, 'resampled_overlay': None, 'resampled_underlay': None, 'sagittal_png': None}, 'resample_o': {'new_fname': None}, 'montage_a': {'png_name': None}, 'montage_s': {'png_name': None}}",
      "anat_template_edge_272": "{'out_file': None}",
      "montage_csf_gm_wm_276": "{'inputspec': {'overlay_csf': None, 'overlay_gm': None, 'overlay_wm': None, 'underlay': None}, 'resample_u': {'new_fname': None}, 'resample_o_csf': {'new_fname': None}, 'resample_o_gm': {'new_fname': None}, 'resample_o_wm': {'new_fname': None}, 'montage_a': {'png_name': None}, 'montage_s': {'png_name': None}, 'outputspec': {'axial_png': None, 'resampled_overlay_csf': None, 'resampled_overlay_gm': None, 'resampled_overlay_wm': None, 'resampled_underlay': None, 'sagittal_png': None}}",
      "carpet_seg_282": "{'inputspec': {'anatomical_csf_mask': None, 'anatomical_gm_mask': None, 'anatomical_wm_mask': None, 'functional_to_standard': None, 'mean_functional_to_standard': None}, 'gm_resample': {'out_file': None}, 'gm_mask': {'out_file': None}, 'wm_resample': {'out_file': None}, 'wm_mask': {'out_file': None}, 'csf_resample': {'out_file': None}, 'csf_mask': {'out_file': None}, 'carpet_plot': {'carpet_plot': None}, 'outputspec': {'carpet_plot': None}}",
      "montage_mfi_288": "{'inputspec': {'overlay': None, 'underlay': None}, 'resample_u': {'new_fname': None}, 'outputspec': {'axial_png': None, 'resampled_overlay': None, 'resampled_underlay': None, 'sagittal_png': None}, 'resample_o': {'new_fname': None}, 'montage_a': {'png_name': None}, 'montage_s': {'png_name': None}}",
      "func_template_edge_288": "{'out_file': None}",
      "id_string_desc-preproc_T1w_93": "{'out_filename': None}",
      "nii_desc-preproc_T1w_93": "{'out_file': None}",
      "json_desc-preproc_T1w_93": "{'json_file': None}",
      "sinker_desc-preproc_T1w_93": "{'out_file': None}",
      "id_string_desc-head_T1w_95": "{'out_filename': None}",
      "nii_desc-head_T1w_95": "{'out_file': None}",
      "json_desc-head_T1w_95": "{'json_file': None}",
      "sinker_desc-head_T1w_95": "{'out_file': None}",
      "id_string_space-T1w_desc-brain_mask_75": "{'out_filename': None}",
      "nii_space-T1w_desc-brain_mask_75": "{'out_file': None}",
      "json_space-T1w_desc-brain_mask_75": "{'json_file': None}",
      "sinker_space-T1w_desc-brain_mask_75": "{'out_file': None}",
      "id_string_space-template_desc-preproc_T1w_101": "{'out_filename': None}",
      "nii_space-template_desc-preproc_T1w_101": "{'out_file': None}",
      "json_space-template_desc-preproc_T1w_101": "{'json_file': None}",
      "sinker_space-template_desc-preproc_T1w_101": "{'out_file': None}",
      "id_string_from-T1w_to-template_mode-image_desc-linear_xfm_102": "{'out_filename': None}",
      "nii_from-T1w_to-template_mode-image_desc-linear_xfm_102": "{'out_file': None}",
      "json_from-T1w_to-template_mode-image_desc-linear_xfm_102": "{'json_file': None}",
      "sinker_from-T1w_to-template_mode-image_desc-linear_xfm_102": "{'out_file': None}",
      "id_string_from-template_to-T1w_mode-image_desc-linear_xfm_103": "{'out_filename': None}",
      "nii_from-template_to-T1w_mode-image_desc-linear_xfm_103": "{'out_file': None}",
      "json_from-template_to-T1w_mode-image_desc-linear_xfm_103": "{'json_file': None}",
      "sinker_from-template_to-T1w_mode-image_desc-linear_xfm_103": "{'out_file': None}",
      "id_string_from-T1w_to-template_mode-image_xfm_104": "{'out_filename': None}",
      "nii_from-T1w_to-template_mode-image_xfm_104": "{'out_file': None}",
      "json_from-T1w_to-template_mode-image_xfm_104": "{'json_file': None}",
      "sinker_from-T1w_to-template_mode-image_xfm_104": "{'out_file': None}",
      "id_string_space-template_desc-head_T1w_108": "{'out_filename': None}",
      "nii_space-template_desc-head_T1w_108": "{'out_file': None}",
      "json_space-template_desc-head_T1w_108": "{'json_file': None}",
      "sinker_space-template_desc-head_T1w_108": "{'out_file': None}",
      "id_string_space-template_desc-brain_mask_112": "{'out_filename': None}",
      "nii_space-template_desc-brain_mask_112": "{'out_file': None}",
      "json_space-template_desc-brain_mask_112": "{'json_file': None}",
      "sinker_space-template_desc-brain_mask_112": "{'out_file': None}",
      "id_string_label-CSF_probseg_119": "{'out_filename': None}",
      "nii_label-CSF_probseg_119": "{'out_file': None}",
      "json_label-CSF_probseg_119": "{'json_file': None}",
      "sinker_label-CSF_probseg_119": "{'out_file': None}",
      "id_string_label-GM_probseg_120": "{'out_filename': None}",
      "nii_label-GM_probseg_120": "{'out_file': None}",
      "json_label-GM_probseg_120": "{'json_file': None}",
      "sinker_label-GM_probseg_120": "{'out_file': None}",
      "id_string_label-WM_probseg_121": "{'out_filename': None}",
      "nii_label-WM_probseg_121": "{'out_file': None}",
      "json_label-WM_probseg_121": "{'json_file': None}",
      "sinker_label-WM_probseg_121": "{'out_file': None}",
      "id_string_label-CSF_mask_122": "{'out_filename': None}",
      "nii_label-CSF_mask_122": "{'out_file': None}",
      "json_label-CSF_mask_122": "{'json_file': None}",
      "sinker_label-CSF_mask_122": "{'out_file': None}",
      "id_string_label-GM_mask_123": "{'out_filename': None}",
      "nii_label-GM_mask_123": "{'out_file': None}",
      "json_label-GM_mask_123": "{'json_file': None}",
      "sinker_label-GM_mask_123": "{'out_file': None}",
      "id_string_label-WM_mask_124": "{'out_filename': None}",
      "nii_label-WM_mask_124": "{'out_file': None}",
      "json_label-WM_mask_124": "{'json_file': None}",
      "sinker_label-WM_mask_124": "{'out_file': None}",
      "id_string_label-CSF_desc-preproc_mask_125": "{'out_filename': None}",
      "nii_label-CSF_desc-preproc_mask_125": "{'out_file': None}",
      "json_label-CSF_desc-preproc_mask_125": "{'json_file': None}",
      "sinker_label-CSF_desc-preproc_mask_125": "{'out_file': None}",
      "id_string_label-GM_desc-preproc_mask_126": "{'out_filename': None}",
      "nii_label-GM_desc-preproc_mask_126": "{'out_file': None}",
      "json_label-GM_desc-preproc_mask_126": "{'json_file': None}",
      "sinker_label-GM_desc-preproc_mask_126": "{'out_file': None}",
      "id_string_label-WM_desc-preproc_mask_127": "{'out_filename': None}",
      "nii_label-WM_desc-preproc_mask_127": "{'out_file': None}",
      "json_label-WM_desc-preproc_mask_127": "{'json_file': None}",
      "sinker_label-WM_desc-preproc_mask_127": "{'out_file': None}",
      "id_string_space-template_label-CSF_mask_136": "{'out_filename': None}",
      "nii_space-template_label-CSF_mask_136": "{'out_file': None}",
      "json_space-template_label-CSF_mask_136": "{'json_file': None}",
      "sinker_space-template_label-CSF_mask_136": "{'out_file': None}",
      "id_string_space-template_label-WM_mask_137": "{'out_filename': None}",
      "nii_space-template_label-WM_mask_137": "{'out_file': None}",
      "json_space-template_label-WM_mask_137": "{'json_file': None}",
      "sinker_space-template_label-WM_mask_137": "{'out_file': None}",
      "id_string_space-template_label-GM_mask_138": "{'out_filename': None}",
      "nii_space-template_label-GM_mask_138": "{'out_file': None}",
      "json_space-template_label-GM_mask_138": "{'json_file': None}",
      "sinker_space-template_label-GM_mask_138": "{'out_file': None}",
      "id_string_desc-preproc_bold_235": "{'out_filename': None}",
      "nii_desc-preproc_bold_235": "{'out_file': None}",
      "json_desc-preproc_bold_235": "{'json_file': None}",
      "sinker_desc-preproc_bold_235": "{'out_file': None}",
      "id_string_desc-mean_bold_148": "{'out_filename': None}",
      "nii_desc-mean_bold_148": "{'out_file': None}",
      "json_desc-mean_bold_148": "{'json_file': None}",
      "sinker_desc-mean_bold_148": "{'out_file': None}",
      "id_string_desc-movementParameters_motion_157": "{'out_filename': None}",
      "nii_desc-movementParameters_motion_157": "{'out_file': None}",
      "json_desc-movementParameters_motion_157": "{'json_file': None}",
      "sinker_desc-movementParameters_motion_157": "{'out_file': None}",
      "id_string_space-bold_desc-brain_mask_163": "{'out_filename': None}",
      "nii_space-bold_desc-brain_mask_163": "{'out_file': None}",
      "json_space-bold_desc-brain_mask_163": "{'json_file': None}",
      "sinker_space-bold_desc-brain_mask_163": "{'out_file': None}",
      "id_string_motion_182": "{'out_filename': None}",
      "nii_motion_182": "{'out_file': None}",
      "json_motion_182": "{'json_file': None}",
      "sinker_motion_182": "{'out_file': None}",
      "id_string_desc-summary_motion_183": "{'out_filename': None}",
      "nii_desc-summary_motion_183": "{'out_file': None}",
      "json_desc-summary_motion_183": "{'json_file': None}",
      "sinker_desc-summary_motion_183": "{'out_file': None}",
      "id_string_sbref_187": "{'out_filename': None}",
      "nii_sbref_187": "{'out_file': None}",
      "json_sbref_187": "{'json_file': None}",
      "sinker_sbref_187": "{'out_file': None}",
      "id_string_space-T1w_sbref_195": "{'out_filename': None}",
      "nii_space-T1w_sbref_195": "{'out_file': None}",
      "json_space-T1w_sbref_195": "{'json_file': None}",
      "sinker_space-T1w_sbref_195": "{'out_file': None}",
      "id_string_from-bold_to-T1w_mode-image_desc-linear_xfm_196": "{'out_filename': None}",
      "nii_from-bold_to-T1w_mode-image_desc-linear_xfm_196": "{'out_file': None}",
      "json_from-bold_to-T1w_mode-image_desc-linear_xfm_196": "{'json_file': None}",
      "sinker_from-bold_to-T1w_mode-image_desc-linear_xfm_196": "{'out_file': None}",
      "id_string_from-bold_to-template_mode-image_xfm_202": "{'out_filename': None}",
      "nii_from-bold_to-template_mode-image_xfm_202": "{'out_file': None}",
      "json_from-bold_to-template_mode-image_xfm_202": "{'json_file': None}",
      "sinker_from-bold_to-template_mode-image_xfm_202": "{'out_file': None}",
      "id_string_desc-confounds-1_timeseries_219": "{'out_filename': None}",
      "nii_desc-confounds-1_timeseries_219": "{'out_file': None}",
      "json_desc-confounds-1_timeseries_219": "{'json_file': None}",
      "sinker_desc-confounds-1_timeseries_219": "{'out_file': None}",
      "id_string_desc-confounds-2_timeseries_221": "{'out_filename': None}",
      "nii_desc-confounds-2_timeseries_221": "{'out_file': None}",
      "json_desc-confounds-2_timeseries_221": "{'json_file': None}",
      "sinker_desc-confounds-2_timeseries_221": "{'out_file': None}",
      "id_string_space-template_desc-preproc_bold_239": "{'out_filename': None}",
      "nii_space-template_desc-preproc_bold_239": "{'out_file': None}",
      "json_space-template_desc-preproc_bold_239": "{'json_file': None}",
      "sinker_space-template_desc-preproc_bold_239": "{'out_file': None}",
      "id_string_space-template_sbref_243": "{'out_filename': None}",
      "nii_space-template_sbref_243": "{'out_file': None}",
      "json_space-template_sbref_243": "{'json_file': None}",
      "sinker_space-template_sbref_243": "{'out_file': None}",
      "id_string_space-template_desc-bold_mask_247": "{'out_filename': None}",
      "nii_space-template_desc-bold_mask_247": "{'out_file': None}",
      "json_space-template_desc-bold_mask_247": "{'json_file': None}",
      "sinker_space-template_desc-bold_mask_247": "{'out_file': None}",
      "id_string_space-template_res-derivative_desc-bold_mask_251": "{'out_filename': None}",
      "nii_space-template_res-derivative_desc-bold_mask_251": "{'out_file': None}",
      "json_space-template_res-derivative_desc-bold_mask_251": "{'json_file': None}",
      "sinker_space-template_res-derivative_desc-bold_mask_251": "{'out_file': None}",
      "id_string_desc-boldSnrAxial_quality_257": "{'out_filename': None}",
      "nii_desc-boldSnrAxial_quality_257": "{'out_file': None}",
      "json_desc-boldSnrAxial_quality_257": "{'json_file': None}",
      "sinker_desc-boldSnrAxial_quality_257": "{'out_file': None}",
      "id_string_desc-boldSnrSagittal_quality_258": "{'out_filename': None}",
      "nii_desc-boldSnrSagittal_quality_258": "{'out_file': None}",
      "json_desc-boldSnrSagittal_quality_258": "{'json_file': None}",
      "sinker_desc-boldSnrSagittal_quality_258": "{'out_file': None}",
      "id_string_desc-boldSnrHist_quality_259": "{'out_filename': None}",
      "nii_desc-boldSnrHist_quality_259": "{'out_file': None}",
      "json_desc-boldSnrHist_quality_259": "{'json_file': None}",
      "sinker_desc-boldSnrHist_quality_259": "{'out_file': None}",
      "id_string_desc-boldSnr_quality_260": "{'out_filename': None}",
      "nii_desc-boldSnr_quality_260": "{'out_file': None}",
      "json_desc-boldSnr_quality_260": "{'json_file': None}",
      "sinker_desc-boldSnr_quality_260": "{'out_file': None}",
      "id_string_desc-movementParametersTrans_quality_265": "{'out_filename': None}",
      "nii_desc-movementParametersTrans_quality_265": "{'out_file': None}",
      "json_desc-movementParametersTrans_quality_265": "{'json_file': None}",
      "sinker_desc-movementParametersTrans_quality_265": "{'out_file': None}",
      "id_string_desc-movementParametersRot_quality_266": "{'out_filename': None}",
      "nii_desc-movementParametersRot_quality_266": "{'out_file': None}",
      "json_desc-movementParametersRot_quality_266": "{'json_file': None}",
      "sinker_desc-movementParametersRot_quality_266": "{'out_file': None}",
      "id_string_desc-framewiseDisplacementJenkinsonPlot_quality_267": "{'out_filename': None}",
      "nii_desc-framewiseDisplacementJenkinsonPlot_quality_267": "{'out_file': None}",
      "json_desc-framewiseDisplacementJenkinsonPlot_quality_267": "{'json_file': None}",
      "sinker_desc-framewiseDisplacementJenkinsonPlot_quality_267": "{'out_file': None}",
      "id_string_desc-dsegAxial_quality_280": "{'out_filename': None}",
      "nii_desc-dsegAxial_quality_280": "{'out_file': None}",
      "json_desc-dsegAxial_quality_280": "{'json_file': None}",
      "sinker_desc-dsegAxial_quality_280": "{'out_file': None}",
      "id_string_desc-dsegSagittal_quality_281": "{'out_filename': None}",
      "nii_desc-dsegSagittal_quality_281": "{'out_file': None}",
      "json_desc-dsegSagittal_quality_281": "{'json_file': None}",
      "sinker_desc-dsegSagittal_quality_281": "{'out_file': None}"
    },
    "result": null,
    "nodes": [
      {
        "name": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
        "type": "workflow",
        "inputs": {
          "inputnode": "{'creds_path': None, 'dl_dir': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working/pipeline_cpac_ccs-options', 'scan': '[Undefined]', 'subject': 'sub-NDARINV2VY7YYNW'}",
          "check_func_scan": "{'func_scan_dct': {'rest_run-01': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-01_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-02': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-02_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-03': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-03_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-04': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-04_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}}, 'function_str': 'CPAC.utils.datasource.check_func_scan'}",
          "selectrest": "{'function_str': 'CPAC.utils.datasource.get_rest', 'resource': 'scan', 'rest_dict': {'rest_run-01': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-01_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-02': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-02_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-03': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-03_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-04': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-04_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}}}",
          "check_for_s3": "{'function_str': 'CPAC.utils.datasource.check_for_s3', 'img_type': 'func'}",
          "outputspec": "{'magnitude': '[Undefined]', 'phase_diff': '[Undefined]'}",
          "select_scan_params": "{'function_str': 'CPAC.utils.datasource.get_rest', 'resource': 'scan_parameters', 'rest_dict': {'rest_run-01': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-01_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-02': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-02_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-03': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-03_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-04': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-04_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}}}",
          "s3_scan_params": "{'function_str': 'CPAC.utils.datasource.check_for_s3', 'img_type': '[Undefined]'}"
        },
        "outputs": {
          "inputnode": "{'creds_path': None, 'dl_dir': None, 'scan': None, 'subject': None}",
          "check_func_scan": "{}",
          "selectrest": "{'file_path': None}",
          "check_for_s3": "{'local_path': None}",
          "outputspec": "{'magnitude': None, 'phase_diff': None, 'rest': None, 'scan': None, 'scan_params': None, 'subject': None}",
          "select_scan_params": "{'file_path': None}",
          "s3_scan_params": "{'local_path': None}"
        },
        "result": null,
        "nodes": [
          {
            "name": "inputnode",
            "type": "node",
            "inputs": {
              "subject": "sub-NDARINV2VY7YYNW",
              "scan": "[Undefined]",
              "creds_path": "None",
              "dl_dir": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working/pipeline_cpac_ccs-options"
            },
            "outputs": {
              "subject": "[Undefined]",
              "scan": "[Undefined]",
              "creds_path": "[Undefined]",
              "dl_dir": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "check_func_scan",
            "type": "node",
            "inputs": {
              "function_str": "CPAC.utils.datasource.check_func_scan",
              "func_scan_dct": "{'rest_run-01': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-01_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-02': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-02_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-03': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-03_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-04': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-04_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}}",
              "scan": "[Undefined]"
            },
            "outputs": {},
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "selectrest",
            "type": "node",
            "inputs": {
              "function_str": "CPAC.utils.datasource.get_rest",
              "scan": "[Undefined]",
              "rest_dict": "{'rest_run-01': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-01_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-02': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-02_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-03': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-03_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-04': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-04_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}}",
              "resource": "scan"
            },
            "outputs": {
              "file_path": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "check_for_s3",
            "type": "node",
            "inputs": {
              "function_str": "CPAC.utils.datasource.check_for_s3",
              "file_path": "[Undefined]",
              "creds_path": "[Undefined]",
              "dl_dir": "[Undefined]",
              "img_type": "func"
            },
            "outputs": {
              "local_path": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "outputspec",
            "type": "node",
            "inputs": {
              "subject": "[Undefined]",
              "rest": "[Undefined]",
              "scan": "[Undefined]",
              "scan_params": "[Undefined]",
              "phase_diff": "[Undefined]",
              "magnitude": "[Undefined]"
            },
            "outputs": {
              "subject": "[Undefined]",
              "rest": "[Undefined]",
              "scan": "[Undefined]",
              "scan_params": "[Undefined]",
              "phase_diff": "[Undefined]",
              "magnitude": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "select_scan_params",
            "type": "node",
            "inputs": {
              "function_str": "CPAC.utils.datasource.get_rest",
              "scan": "[Undefined]",
              "rest_dict": "{'rest_run-01': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-01_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-02': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-02_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-03': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-03_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}, 'rest_run-04': {'scan': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/func/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_task-rest_run-04_bold.nii', 'scan_parameters': {'EchoTime': 0.03, 'FlipAngle': 52.0, 'RepetitionTime': 0.8, 'TaskName': \"b'rest'\", 'registration_matrix_T1': [[0.9975787311026656, -0.00039385853349085584, -0.06954388950109636, 2.5427616230733006], [-0.005554781604944987, 0.9963377512970775, -0.08532388155944741, -17.617207609820525], [0.0693228069207997, 0.08550358112452774, 0.9939233286777647, 9.429133818673339], [0.0, 0.0, 0.0, 1.0]]}}}",
              "resource": "scan_parameters"
            },
            "outputs": {
              "file_path": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "s3_scan_params",
            "type": "node",
            "inputs": {
              "function_str": "CPAC.utils.datasource.check_for_s3",
              "file_path": "[Undefined]",
              "creds_path": "[Undefined]",
              "dl_dir": "[Undefined]",
              "img_type": "[Undefined]"
            },
            "outputs": {
              "local_path": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          }
        ],
        "edges": [
          {
            "origin": "inputnode",
            "target": "check_func_scan"
          },
          {
            "origin": "inputnode",
            "target": "selectrest"
          },
          {
            "origin": "inputnode",
            "target": "check_for_s3"
          },
          {
            "origin": "inputnode",
            "target": "outputspec"
          },
          {
            "origin": "inputnode",
            "target": "select_scan_params"
          },
          {
            "origin": "inputnode",
            "target": "s3_scan_params"
          },
          {
            "origin": "selectrest",
            "target": "check_for_s3"
          },
          {
            "origin": "check_for_s3",
            "target": "outputspec"
          },
          {
            "origin": "select_scan_params",
            "target": "s3_scan_params"
          },
          {
            "origin": "s3_scan_params",
            "target": "outputspec"
          }
        ]
      },
      {
        "name": "bold_scan_params_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
        "type": "node",
        "inputs": {
          "function_str": "def get_scan_params(subject_id, scan, pipeconfig_start_indx,\n                    pipeconfig_stop_indx, data_config_scan_params=None):\n    \"\"\"\n    Method to extract slice timing correction parameters\n    and scan parameters.\n\n    Parameters\n    ----------\n    subject_id : str\n        subject id\n    scan : str\n        scan id\n    pipeconfig_start_indx : int\n        starting volume index as provided in the pipeline config yaml file\n    pipeconfig_stop_indx : int\n        ending volume index as provided in the pipeline config yaml file\n    data_config_scan_params : str\n        file path to scan parameter JSON file listed in data config yaml file\n\n    Returns\n    -------\n    TR : a string\n        TR value\n    pattern : a string\n        slice aquisition pattern string or file path\n    ref_slice : an integer\n        reference slice which is used to allign all other slices\n    first_tr : an integer\n        starting TR or starting volume index\n    last_tr : an integer\n        ending TR or ending volume index\n    pe_direction : str\n    effective_echo_spacing : float\n    \"\"\"\n\n    import os\n    import json\n    import warnings\n\n    check2 = lambda val: val if val == None or val == '' or \\\n                                isinstance(val, str) else int(val)\n\n    # initialize vars to empty\n    TR = ''\n    TE = None\n    pattern = ''\n    ref_slice = ''\n    first_tr = ''\n    last_tr = ''\n    unit = 's'\n    pe_direction = ''\n    effective_echo_spacing = None\n    template = None\n\n    if isinstance(pipeconfig_stop_indx, str):\n        if \"End\" in pipeconfig_stop_indx or \"end\" in pipeconfig_stop_indx:\n            pipeconfig_stop_indx = None\n    if data_config_scan_params:\n        if \".json\" in data_config_scan_params:\n            if not os.path.exists(data_config_scan_params):\n                err = \"\\n[!] WARNING: Scan parameters JSON file listed in \" \\\n                      \"your data configuration file does not exist:\\n{0}\" \\\n                      \"\\n\\n\".format(data_config_scan_params)\n                raise Exception(err)\n\n            with open(data_config_scan_params, \"r\") as f:\n                params_dct = json.load(f)\n\n            # get details from the configuration\n            # if this is a JSON file, the key values are the BIDS format\n            # standard\n            # TODO: better handling of errant key values!!!\n            if \"RepetitionTime\" in params_dct.keys():\n                TR = float(check(params_dct, subject_id, scan,\n                                 \"RepetitionTime\", False))\n            if \"SliceTiming\" in params_dct.keys():\n                pattern = str(check(params_dct, subject_id, scan,\n                                    \"SliceTiming\", False))\n            elif \"SliceAcquisitionOrder\" in params_dct.keys():\n                pattern = str(check(params_dct, subject_id, scan,\n                                    \"SliceAcquisitionOrder\", False))\n            if \"PhaseEncodingDirection\" in params_dct.keys():\n                pe_direction = str(check(params_dct, subject_id, scan,\n                                         \"PhaseEncodingDirection\", False))\n            try:\n                \"EffectiveEchoSpacing\" in params_dct.keys()\n                effective_echo_spacing = float(\n                        check(params_dct, subject_id, scan,\n                            \"EffectiveEchoSpacing\", False))\n            except TypeError:\n                pass\n\n        elif len(data_config_scan_params) > 0 and \\\n                isinstance(data_config_scan_params, dict):\n\n            params_dct = data_config_scan_params\n\n            # TODO: better handling of errant key values!!!\n            # TODO: use schema validator to deal with it\n            # get details from the configuration\n            try: \n                TR = float(\n                    try_fetch_parameter(\n                        params_dct,\n                        subject_id,\n                        scan,\n                        ['TR', 'RepetitionTime']\n                    )\n                )\n            except TypeError:\n                TR = None\n\n            try: \n                template = str(\n                    try_fetch_parameter(\n                        params_dct,\n                        subject_id,\n                        scan,\n                        ['Template', 'template']\n                    )\n                )\n            except TypeError:\n                template = None\n\n            pattern = str(\n                try_fetch_parameter(\n                    params_dct,\n                    subject_id,\n                    scan,\n                    ['acquisition', 'SliceTiming', 'SliceAcquisitionOrder']\n                )\n            )\n\n            ref_slice = check(params_dct, subject_id, scan, 'reference',\n                              False)\n            if ref_slice:\n                ref_slice = int(ref_slice)\n\n            first_tr = check(params_dct, subject_id, scan, 'first_TR', False)\n            if first_tr:\n                first_tr = check2(first_tr)\n\n            last_tr = check(params_dct, subject_id, scan, 'last_TR', False)\n            if last_tr:\n                last_tr = check2(last_tr)\n\n            pe_direction = check(params_dct, subject_id, scan,\n                                 'PhaseEncodingDirection', False)\n            try:\n                effective_echo_spacing = float(\n                try_fetch_parameter(params_dct, subject_id, scan,\n                                    [\"EffectiveEchoSpacing\"]))\n            except TypeError:\n                pass\n\n        else:\n            err = \"\\n\\n[!] Could not read the format of the scan parameters \" \\\n                  \"information included in the data configuration file for \" \\\n                  f\"the participant {subject_id}.\\n\\n\"\n            raise Exception(err)\n    if first_tr == '' or first_tr is None:\n        first_tr = pipeconfig_start_indx\n\n    if last_tr == '' or last_tr is None:\n        last_tr = pipeconfig_stop_indx\n\n    unit = 's'\n\n    if 'None' in pattern or 'none' in pattern:\n        pattern = None\n\n    '''\n    if not pattern:\n        if pipeconfig_tpattern:\n            if \"Use NIFTI Header\" in pipeconfig_tpattern:\n                pattern = ''\n            else:\n                pattern = pipeconfig_tpattern\n    '''\n\n    # pattern can be one of a few keywords, a filename, or blank which\n    # indicates that the images header information should be used\n    tpattern_file = None\n\n    valid_patterns = ['alt+z', 'altplus', 'alt+z2', 'alt-z', 'altminus',\n                      'alt-z2', 'seq+z', 'seqplus', 'seq-z', 'seqminus']\n    if pattern and pattern != '' and pattern not in valid_patterns:\n\n        if isinstance(pattern, list) or \\\n                (\"[\" in pattern and \"]\" in pattern and \",\" in pattern):\n            # if we got the slice timing as a list, from a BIDS-format scan\n            # parameters JSON file\n\n            if not isinstance(pattern, list):\n                pattern = pattern.replace(\"[\", \"\").replace(\"]\", \"\").split(\",\")\n\n            slice_timings = [float(x) for x in pattern]\n\n            # write out a tpattern file for AFNI 3dTShift\n            tpattern_file = os.path.join(os.getcwd(), \"tpattern.txt\")\n            try:\n                with open(tpattern_file, \"wt\") as f:\n                    for time in slice_timings:\n                        f.write(\"{0}\\n\".format(time).replace(\" \", \"\"))\n            except:\n                err = \"\\n[!] Could not write the slice timing file meant as \" \\\n                      \"an input for AFNI 3dTshift (slice timing correction):\" \\\n                      \"\\n{0}\\n\\n\".format(tpattern_file)\n                raise Exception(err)\n\n        elif \".txt\" in pattern and not os.path.exists(pattern):\n            # if the user provided an acquisition pattern text file for\n            # 3dTshift\n            raise Exception(\"Invalid Pattern file path {0}, Please provide \"\n                            \"the correct path\".format(pattern))\n        elif \".txt\" in pattern:\n            with open(pattern, \"r\") as f:\n                lines = f.readlines()\n            if len(lines) < 2:\n                raise Exception('Invalid slice timing file format. The file '\n                                'should contain only one value per row. Use '\n                                'new line char as delimiter')\n            tpattern_file = pattern\n            slice_timings = [float(l.rstrip('\\r\\n')) for l in lines]\n        else:\n            # this only happens if there is a non-path string set in the data\n            # config dictionary for acquisition pattern (like \"alt+z\"), except\n            # the pattern is not listed in that list\n            err = \"\\n[!] The slice timing acquisition pattern provided is \" \\\n                  \"not supported by AFNI 3dTshift:\\n\" \\\n                  \"{0}\\n\".format(str(pattern))\n            raise Exception(err)\n\n        pattern = tpattern_file\n\n        slice_timings.sort()\n        max_slice_offset = slice_timings[-1]\n\n        # checking if the unit of TR and slice timing match or not\n        # if slice timing in ms convert TR to ms as well\n        if TR and max_slice_offset > TR:\n            warnings.warn(\"TR is in seconds and slice timings are in \"\n                          \"milliseconds. Converting TR into milliseconds\")\n            TR = TR * 1000\n            print(\"New TR value {0} ms\".format(TR))\n            unit = 'ms'\n\n    else:\n        # check to see, if TR is in milliseconds, convert it into seconds\n        if TR and TR > 10:\n            warnings.warn('TR is in milliseconds, Converting it into seconds')\n            TR = TR / 1000.0\n            print(\"New TR value {0} s\".format(TR))\n            unit = 's'\n\n    # swap back in\n    if TR:\n        tr = \"{0}{1}\".format(str(TR), unit)\n    else:\n        tr = \"\"\n\n    tpattern = pattern\n    start_indx = first_tr\n    stop_indx = last_tr\n\n    return (tr if tr else None,\n            tpattern if tpattern else None,\n            template if template else None,\n            ref_slice,\n            start_indx,\n            stop_indx,\n            pe_direction,\n            effective_echo_spacing)\n",
          "data_config_scan_params": "[Undefined]",
          "subject_id": "sub-NDARINV2VY7YYNW",
          "scan": "[Undefined]",
          "pipeconfig_tr": "[Undefined]",
          "pipeconfig_tpattern": "[Undefined]",
          "pipeconfig_start_indx": "0",
          "pipeconfig_stop_indx": "None"
        },
        "outputs": {
          "tr": "[Undefined]",
          "tpattern": "[Undefined]",
          "template": "[Undefined]",
          "ref_slice": "[Undefined]",
          "start_indx": "[Undefined]",
          "stop_indx": "[Undefined]",
          "pe_direction": "[Undefined]",
          "effective_echo_spacing": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "anat_T1w_gather_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
        "type": "workflow",
        "inputs": {
          "inputnode": "{'anat': '/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/anat/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_run-01_T1w.nii', 'creds_path': None, 'dl_dir': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working/pipeline_cpac_ccs-options', 'img_type': 'anat', 'subject': 'sub-NDARINV2VY7YYNW'}",
          "check_for_s3": "{'function_str': 'CPAC.utils.datasource.check_for_s3'}",
          "outputspec": "{}"
        },
        "outputs": {
          "inputnode": "{'anat': None, 'creds_path': None, 'dl_dir': None, 'img_type': None, 'subject': None}",
          "check_for_s3": "{'local_path': None}",
          "outputspec": "{'anat': None, 'subject': None}"
        },
        "result": null,
        "nodes": [
          {
            "name": "inputnode",
            "type": "node",
            "inputs": {
              "subject": "sub-NDARINV2VY7YYNW",
              "anat": "/ocean/projects/med220004p/rupprech/abcd-onesubject/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1/anat/sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1_run-01_T1w.nii",
              "creds_path": "None",
              "dl_dir": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working/pipeline_cpac_ccs-options",
              "img_type": "anat"
            },
            "outputs": {
              "subject": "[Undefined]",
              "anat": "[Undefined]",
              "creds_path": "[Undefined]",
              "dl_dir": "[Undefined]",
              "img_type": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "check_for_s3",
            "type": "node",
            "inputs": {
              "function_str": "CPAC.utils.datasource.check_for_s3",
              "file_path": "[Undefined]",
              "creds_path": "[Undefined]",
              "dl_dir": "[Undefined]",
              "img_type": "[Undefined]"
            },
            "outputs": {
              "local_path": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "outputspec",
            "type": "node",
            "inputs": {
              "subject": "[Undefined]",
              "anat": "[Undefined]"
            },
            "outputs": {
              "subject": "[Undefined]",
              "anat": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          }
        ],
        "edges": [
          {
            "origin": "inputnode",
            "target": "check_for_s3"
          },
          {
            "origin": "inputnode",
            "target": "outputspec"
          },
          {
            "origin": "check_for_s3",
            "target": "outputspec"
          }
        ]
      },
      {
        "name": "anat_deoblique_0",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "deoblique": "True",
          "xorigin": "[Undefined]",
          "yorigin": "[Undefined]",
          "zorigin": "[Undefined]",
          "duporigin_file": "[Undefined]",
          "xdel": "[Undefined]",
          "ydel": "[Undefined]",
          "zdel": "[Undefined]",
          "xyzscale": "[Undefined]",
          "space": "[Undefined]",
          "atrcopy": "[Undefined]",
          "atrstring": "[Undefined]",
          "atrfloat": "[Undefined]",
          "atrint": "[Undefined]",
          "saveatr": "[Undefined]",
          "nosaveatr": "[Undefined]",
          "args": "[Undefined]",
          "environ": "{}"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "anat_reorient_0",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "out_file": "[Undefined]",
          "orientation": "RPI",
          "resample_mode": "[Undefined]",
          "voxel_size": "[Undefined]",
          "master": "[Undefined]",
          "num_threads": "1",
          "outputtype": "NIFTI_GZ",
          "args": "[Undefined]",
          "environ": "{}"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "anat_freesurfer_46",
        "type": "node",
        "inputs": {
          "subject_id": "recon_all",
          "directive": "all",
          "hemi": "[Undefined]",
          "T1_files": "[Undefined]",
          "T2_file": "[Undefined]",
          "FLAIR_file": "[Undefined]",
          "use_T2": "[Undefined]",
          "use_FLAIR": "[Undefined]",
          "openmp": "1",
          "parallel": "[Undefined]",
          "hires": "[Undefined]",
          "mprage": "[Undefined]",
          "big_ventricles": "[Undefined]",
          "brainstem": "[Undefined]",
          "hippocampal_subfields_T1": "[Undefined]",
          "hippocampal_subfields_T2": "[Undefined]",
          "expert": "[Undefined]",
          "xopts": "[Undefined]",
          "subjects_dir": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working/pipeline_cpac_ccs-options/cpac_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1/anat_preproc_freesurfer_46/anat_freesurfer",
          "flags": "[Undefined]",
          "talairach": "[Undefined]",
          "mri_normalize": "[Undefined]",
          "mri_watershed": "[Undefined]",
          "mri_em_register": "[Undefined]",
          "mri_ca_normalize": "[Undefined]",
          "mri_ca_register": "[Undefined]",
          "mri_remove_neck": "[Undefined]",
          "mri_ca_label": "[Undefined]",
          "mri_segstats": "[Undefined]",
          "mri_mask": "[Undefined]",
          "mri_segment": "[Undefined]",
          "mri_edit_wm_with_aseg": "[Undefined]",
          "mri_pretess": "[Undefined]",
          "mri_fill": "[Undefined]",
          "mri_tessellate": "[Undefined]",
          "mris_smooth": "[Undefined]",
          "mris_inflate": "[Undefined]",
          "mris_sphere": "[Undefined]",
          "mris_fix_topology": "[Undefined]",
          "mris_make_surfaces": "[Undefined]",
          "mris_surf2vol": "[Undefined]",
          "mris_register": "[Undefined]",
          "mrisp_paint": "[Undefined]",
          "mris_ca_label": "[Undefined]",
          "mris_anatomical_stats": "[Undefined]",
          "mri_aparc2aseg": "[Undefined]",
          "args": "-clean-bm -gcut",
          "environ": "{}"
        },
        "outputs": {
          "subjects_dir": "[Undefined]",
          "subject_id": "[Undefined]",
          "T1": "[Undefined]",
          "aseg": "[Undefined]",
          "brain": "[Undefined]",
          "brainmask": "[Undefined]",
          "filled": "[Undefined]",
          "norm": "[Undefined]",
          "nu": "[Undefined]",
          "orig": "[Undefined]",
          "rawavg": "[Undefined]",
          "ribbon": "[Undefined]",
          "wm": "[Undefined]",
          "wmparc": "[Undefined]",
          "curv": "[Undefined]",
          "avg_curv": "[Undefined]",
          "inflated": "[Undefined]",
          "pial": "[Undefined]",
          "area_pial": "[Undefined]",
          "curv_pial": "[Undefined]",
          "smoothwm": "[Undefined]",
          "sphere": "[Undefined]",
          "sulc": "[Undefined]",
          "thickness": "[Undefined]",
          "volume": "[Undefined]",
          "white": "[Undefined]",
          "jacobian_white": "[Undefined]",
          "graymid": "[Undefined]",
          "label": "[Undefined]",
          "annot": "[Undefined]",
          "aparc_aseg": "[Undefined]",
          "sphere_reg": "[Undefined]",
          "aseg_stats": "[Undefined]",
          "wmparc_stats": "[Undefined]",
          "aparc_stats": "[Undefined]",
          "BA_stats": "[Undefined]",
          "aparc_a2009s_stats": "[Undefined]",
          "curv_stats": "[Undefined]",
          "entorhinal_exvivo_stats": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "split_curv_46",
        "type": "node",
        "inputs": {
          "function_str": "def split_hemi(multi_file):\n    # pylint: disable=invalid-name\n    lh = None\n    rh = None\n    for filepath in multi_file:\n        if 'lh.' in filepath:\n            lh = filepath\n        if 'rh.' in filepath:\n            rh = filepath\n    return (lh, rh)\n",
          "multi_file": "[Undefined]"
        },
        "outputs": {
          "lh": "[Undefined]",
          "rh": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "split_pial_46",
        "type": "node",
        "inputs": {
          "function_str": "def split_hemi(multi_file):\n    # pylint: disable=invalid-name\n    lh = None\n    rh = None\n    for filepath in multi_file:\n        if 'lh.' in filepath:\n            lh = filepath\n        if 'rh.' in filepath:\n            rh = filepath\n    return (lh, rh)\n",
          "multi_file": "[Undefined]"
        },
        "outputs": {
          "lh": "[Undefined]",
          "rh": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "split_smoothwm_46",
        "type": "node",
        "inputs": {
          "function_str": "def split_hemi(multi_file):\n    # pylint: disable=invalid-name\n    lh = None\n    rh = None\n    for filepath in multi_file:\n        if 'lh.' in filepath:\n            lh = filepath\n        if 'rh.' in filepath:\n            rh = filepath\n    return (lh, rh)\n",
          "multi_file": "[Undefined]"
        },
        "outputs": {
          "lh": "[Undefined]",
          "rh": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "split_sphere_46",
        "type": "node",
        "inputs": {
          "function_str": "def split_hemi(multi_file):\n    # pylint: disable=invalid-name\n    lh = None\n    rh = None\n    for filepath in multi_file:\n        if 'lh.' in filepath:\n            lh = filepath\n        if 'rh.' in filepath:\n            rh = filepath\n    return (lh, rh)\n",
          "multi_file": "[Undefined]"
        },
        "outputs": {
          "lh": "[Undefined]",
          "rh": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "split_sulc_46",
        "type": "node",
        "inputs": {
          "function_str": "def split_hemi(multi_file):\n    # pylint: disable=invalid-name\n    lh = None\n    rh = None\n    for filepath in multi_file:\n        if 'lh.' in filepath:\n            lh = filepath\n        if 'rh.' in filepath:\n            rh = filepath\n    return (lh, rh)\n",
          "multi_file": "[Undefined]"
        },
        "outputs": {
          "lh": "[Undefined]",
          "rh": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "split_thickness_46",
        "type": "node",
        "inputs": {
          "function_str": "def split_hemi(multi_file):\n    # pylint: disable=invalid-name\n    lh = None\n    rh = None\n    for filepath in multi_file:\n        if 'lh.' in filepath:\n            lh = filepath\n        if 'rh.' in filepath:\n            rh = filepath\n    return (lh, rh)\n",
          "multi_file": "[Undefined]"
        },
        "outputs": {
          "lh": "[Undefined]",
          "rh": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "split_volume_46",
        "type": "node",
        "inputs": {
          "function_str": "def split_hemi(multi_file):\n    # pylint: disable=invalid-name\n    lh = None\n    rh = None\n    for filepath in multi_file:\n        if 'lh.' in filepath:\n            lh = filepath\n        if 'rh.' in filepath:\n            rh = filepath\n    return (lh, rh)\n",
          "multi_file": "[Undefined]"
        },
        "outputs": {
          "lh": "[Undefined]",
          "rh": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "split_white_46",
        "type": "node",
        "inputs": {
          "function_str": "def split_hemi(multi_file):\n    # pylint: disable=invalid-name\n    lh = None\n    rh = None\n    for filepath in multi_file:\n        if 'lh.' in filepath:\n            lh = filepath\n        if 'rh.' in filepath:\n            rh = filepath\n    return (lh, rh)\n",
          "multi_file": "[Undefined]"
        },
        "outputs": {
          "lh": "[Undefined]",
          "rh": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "anat_denoise_46",
        "type": "node",
        "inputs": {
          "dimension": "[Undefined]",
          "input_image": "[Undefined]",
          "noise_model": "Gaussian",
          "shrink_factor": "1",
          "output_image": "[Undefined]",
          "save_noise": "False",
          "noise_image": "[Undefined]",
          "verbose": "[Undefined]",
          "num_threads": "1",
          "args": "[Undefined]",
          "environ": "{'NSLOTS': '1'}"
        },
        "outputs": {
          "output_image": "[Undefined]",
          "noise_image": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "fs_brain_mask_to_native",
        "type": "node",
        "inputs": {
          "source_file": "[Undefined]",
          "transformed_file": "[Undefined]",
          "target_file": "[Undefined]",
          "tal": "[Undefined]",
          "tal_resolution": "[Undefined]",
          "fs_target": "[Undefined]",
          "reg_file": "[Undefined]",
          "lta_file": "[Undefined]",
          "lta_inv_file": "[Undefined]",
          "fsl_reg_file": "[Undefined]",
          "xfm_reg_file": "[Undefined]",
          "reg_header": "True",
          "mni_152_reg": "[Undefined]",
          "subject": "[Undefined]",
          "inverse": "[Undefined]",
          "interp": "[Undefined]",
          "no_resample": "[Undefined]",
          "m3z_file": "[Undefined]",
          "no_ded_m3z_path": "[Undefined]",
          "invert_morph": "[Undefined]",
          "subjects_dir": "/usr/lib/freesurfer/subjects",
          "args": "[Undefined]",
          "environ": "{'SUBJECTS_DIR': '/usr/lib/freesurfer/subjects'}"
        },
        "outputs": {
          "transformed_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "fs_brainmask_to_nifti_72",
        "type": "node",
        "inputs": {
          "function_str": "def mri_convert(in_file, reslice_like=None, out_file=None, args=None):\n    \"\"\"\n    Method to convert files from mgz to nifti format\n\n    Parameters\n    ----------\n    in_file : string\n        A path of mgz input file\n    args : string\n        Arguments of mri_convert\n    Returns\n    -------\n    out_file : string\n        A path of nifti output file\n    \"\"\"\n\n    import os\n\n    if out_file is None:\n        out_file = in_file.replace('.mgz','.nii.gz')\n\n    cmd = 'mri_convert %s %s' % (in_file, out_file)\n\n    if reslice_like is not None:\n        cmd = cmd + ' -rl ' + reslice_like\n\n    if args is not None:\n        cmd = cmd + ' ' +args\n\n    os.system(cmd)\n\n    return out_file\n",
          "in_file": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "binarize_fs_brainmask_72",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "out_file": "[Undefined]",
          "internal_datatype": "[Undefined]",
          "output_datatype": "[Undefined]",
          "nan2zeros": "[Undefined]",
          "output_type": "NIFTI_GZ",
          "args": "-bin",
          "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "fill_fs_brainmask_72",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "out_file": "[Undefined]",
          "count": "[Undefined]",
          "datum": "[Undefined]",
          "dilate_inputs": "[Undefined]",
          "dilate_results": "[Undefined]",
          "frac": "[Undefined]",
          "inter": "[Undefined]",
          "union": "[Undefined]",
          "fill_holes": "True",
          "fill_dirs": "[Undefined]",
          "verbose": "[Undefined]",
          "num_threads": "1",
          "outputtype": "NIFTI_GZ",
          "args": "[Undefined]",
          "environ": "{}"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "convert_fs_brainmask_to_nifti_freesurfer-bet-tight_76",
        "type": "node",
        "inputs": {
          "function_str": "def mri_convert(in_file, reslice_like=None, out_file=None, args=None):\n    \"\"\"\n    Method to convert files from mgz to nifti format\n\n    Parameters\n    ----------\n    in_file : string\n        A path of mgz input file\n    args : string\n        Arguments of mri_convert\n    Returns\n    -------\n    out_file : string\n        A path of nifti output file\n    \"\"\"\n\n    import os\n\n    if out_file is None:\n        out_file = in_file.replace('.mgz','.nii.gz')\n\n    cmd = 'mri_convert %s %s' % (in_file, out_file)\n\n    if reslice_like is not None:\n        cmd = cmd + ' -rl ' + reslice_like\n\n    if args is not None:\n        cmd = cmd + ' ' +args\n\n    os.system(cmd)\n\n    return out_file\n",
          "in_file": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "convert_fs_T1_to_nifti_freesurfer-bet-tight_76",
        "type": "node",
        "inputs": {
          "function_str": "def mri_convert(in_file, reslice_like=None, out_file=None, args=None):\n    \"\"\"\n    Method to convert files from mgz to nifti format\n\n    Parameters\n    ----------\n    in_file : string\n        A path of mgz input file\n    args : string\n        Arguments of mri_convert\n    Returns\n    -------\n    out_file : string\n        A path of nifti output file\n    \"\"\"\n\n    import os\n\n    if out_file is None:\n        out_file = in_file.replace('.mgz','.nii.gz')\n\n    cmd = 'mri_convert %s %s' % (in_file, out_file)\n\n    if reslice_like is not None:\n        cmd = cmd + ' -rl ' + reslice_like\n\n    if args is not None:\n        cmd = cmd + ' ' +args\n\n    os.system(cmd)\n\n    return out_file\n",
          "in_file": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "reorient_fs_brainmask_freesurfer-bet-tight_76",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "out_file": "[Undefined]",
          "orientation": "RPI",
          "resample_mode": "[Undefined]",
          "voxel_size": "[Undefined]",
          "master": "[Undefined]",
          "num_threads": "1",
          "outputtype": "NIFTI_GZ",
          "args": "[Undefined]",
          "environ": "{}"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "binarize_fs_brain_freesurfer-bet-tight_76",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "out_file": "[Undefined]",
          "internal_datatype": "[Undefined]",
          "output_datatype": "[Undefined]",
          "nan2zeros": "[Undefined]",
          "output_type": "NIFTI_GZ",
          "args": "-abs -bin",
          "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "reorient_fs_T1_freesurfer-bet-tight_76",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "out_file": "[Undefined]",
          "orientation": "RPI",
          "resample_mode": "[Undefined]",
          "voxel_size": "[Undefined]",
          "master": "[Undefined]",
          "num_threads": "1",
          "outputtype": "NIFTI_GZ",
          "args": "[Undefined]",
          "environ": "{}"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "convert_head_to_template_freesurfer-bet-tight_76",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "reference": "[Undefined]",
          "out_file": "[Undefined]",
          "out_matrix_file": "[Undefined]",
          "out_log": "[Undefined]",
          "in_matrix_file": "[Undefined]",
          "apply_xfm": "[Undefined]",
          "apply_isoxfm": "[Undefined]",
          "datatype": "[Undefined]",
          "cost": "corratio",
          "cost_func": "[Undefined]",
          "uses_qform": "[Undefined]",
          "display_init": "[Undefined]",
          "angle_rep": "[Undefined]",
          "interp": "trilinear",
          "sinc_width": "[Undefined]",
          "sinc_window": "[Undefined]",
          "bins": "256",
          "dof": "12",
          "no_resample": "[Undefined]",
          "force_scaling": "[Undefined]",
          "min_sampling": "[Undefined]",
          "padding_size": "[Undefined]",
          "searchr_x": "[-90, 90]",
          "searchr_y": "[-90, 90]",
          "searchr_z": "[-90, 90]",
          "no_search": "[Undefined]",
          "coarse_search": "[Undefined]",
          "fine_search": "[Undefined]",
          "schedule": "[Undefined]",
          "ref_weight": "[Undefined]",
          "in_weight": "[Undefined]",
          "no_clamp": "[Undefined]",
          "no_resample_blur": "[Undefined]",
          "rigid2D": "[Undefined]",
          "save_log": "[Undefined]",
          "verbose": "[Undefined]",
          "bgvalue": "[Undefined]",
          "wm_seg": "[Undefined]",
          "wmcoords": "[Undefined]",
          "wmnorms": "[Undefined]",
          "fieldmap": "[Undefined]",
          "fieldmapmask": "[Undefined]",
          "pedir": "[Undefined]",
          "echospacing": "[Undefined]",
          "bbrtype": "[Undefined]",
          "bbrslope": "[Undefined]",
          "output_type": "NIFTI_GZ",
          "args": "[Undefined]",
          "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
        },
        "outputs": {
          "out_file": "[Undefined]",
          "out_matrix_file": "[Undefined]",
          "out_log": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "gather_T1w-ACPC-template",
        "type": "workflow",
        "inputs": {
          "inputnode": "{'creds_path': None, 'data': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz', 'dl_dir': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working/pipeline_cpac_ccs-options', 'scan': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
          "check_for_s3": "{'function_str': 'CPAC.utils.datasource.check_for_s3', 'img_type': 'other'}",
          "outputspec": "{}"
        },
        "outputs": {
          "inputnode": "{'creds_path': None, 'data': None, 'dl_dir': None, 'scan': None, 'unique_id': None}",
          "check_for_s3": "{'local_path': None}",
          "outputspec": "{'data': None, 'scan': None, 'unique_id': None}"
        },
        "result": null,
        "nodes": [
          {
            "name": "inputnode",
            "type": "node",
            "inputs": {
              "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
              "data": "/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz",
              "scan": "[Undefined]",
              "creds_path": "None",
              "dl_dir": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working/pipeline_cpac_ccs-options"
            },
            "outputs": {
              "unique_id": "[Undefined]",
              "data": "[Undefined]",
              "scan": "[Undefined]",
              "creds_path": "[Undefined]",
              "dl_dir": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "check_for_s3",
            "type": "node",
            "inputs": {
              "function_str": "CPAC.utils.datasource.check_for_s3",
              "file_path": "[Undefined]",
              "creds_path": "[Undefined]",
              "dl_dir": "[Undefined]",
              "img_type": "other"
            },
            "outputs": {
              "local_path": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "outputspec",
            "type": "node",
            "inputs": {
              "unique_id": "[Undefined]",
              "data": "[Undefined]",
              "scan": "[Undefined]"
            },
            "outputs": {
              "unique_id": "[Undefined]",
              "data": "[Undefined]",
              "scan": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          }
        ],
        "edges": [
          {
            "origin": "inputnode",
            "target": "check_for_s3"
          },
          {
            "origin": "inputnode",
            "target": "outputspec"
          },
          {
            "origin": "check_for_s3",
            "target": "outputspec"
          }
        ]
      },
      {
        "name": "convert_xfm_freesurfer-bet-tight_76",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "in_file2": "[Undefined]",
          "invert_xfm": "True",
          "concat_xfm": "[Undefined]",
          "fix_scale_skew": "[Undefined]",
          "out_file": "[Undefined]",
          "output_type": "NIFTI_GZ",
          "args": "[Undefined]",
          "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "anat_BET_skullstrip_freesurfer-bet-tight_76",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "out_file": "[Undefined]",
          "outline": "[Undefined]",
          "mask": "True",
          "skull": "[Undefined]",
          "no_output": "[Undefined]",
          "frac": "0.3",
          "vertical_gradient": "[Undefined]",
          "radius": "[Undefined]",
          "center": "[Undefined]",
          "threshold": "[Undefined]",
          "mesh": "[Undefined]",
          "robust": "[Undefined]",
          "padding": "[Undefined]",
          "remove_eyes": "[Undefined]",
          "surfaces": "[Undefined]",
          "t2_guided": "[Undefined]",
          "functional": "[Undefined]",
          "reduce_bias": "[Undefined]",
          "output_type": "NIFTI_GZ",
          "args": "[Undefined]",
          "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
        },
        "outputs": {
          "out_file": "[Undefined]",
          "mask_file": "[Undefined]",
          "outline_file": "[Undefined]",
          "meshfile": "[Undefined]",
          "inskull_mask_file": "[Undefined]",
          "inskull_mesh_file": "[Undefined]",
          "outskull_mask_file": "[Undefined]",
          "outskull_mesh_file": "[Undefined]",
          "outskin_mask_file": "[Undefined]",
          "outskin_mesh_file": "[Undefined]",
          "skull_mask_file": "[Undefined]",
          "skull_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "apply_mask_freesurfer-bet-tight_76",
        "type": "node",
        "inputs": {
          "mask_file": "[Undefined]",
          "in_file": "[Undefined]",
          "out_file": "[Undefined]",
          "internal_datatype": "[Undefined]",
          "output_datatype": "[Undefined]",
          "nan2zeros": "[Undefined]",
          "output_type": "NIFTI_GZ",
          "args": "[Undefined]",
          "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "gather_T1w-brain-template-mask-ccs",
        "type": "workflow",
        "inputs": {
          "inputnode": "{'creds_path': None, 'data': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz', 'dl_dir': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working/pipeline_cpac_ccs-options', 'scan': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
          "check_for_s3": "{'function_str': 'CPAC.utils.datasource.check_for_s3', 'img_type': 'other'}",
          "outputspec": "{}"
        },
        "outputs": {
          "inputnode": "{'creds_path': None, 'data': None, 'dl_dir': None, 'scan': None, 'unique_id': None}",
          "check_for_s3": "{'local_path': None}",
          "outputspec": "{'data': None, 'scan': None, 'unique_id': None}"
        },
        "result": null,
        "nodes": [
          {
            "name": "inputnode",
            "type": "node",
            "inputs": {
              "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
              "data": "/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz",
              "scan": "[Undefined]",
              "creds_path": "None",
              "dl_dir": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working/pipeline_cpac_ccs-options"
            },
            "outputs": {
              "unique_id": "[Undefined]",
              "data": "[Undefined]",
              "scan": "[Undefined]",
              "creds_path": "[Undefined]",
              "dl_dir": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "check_for_s3",
            "type": "node",
            "inputs": {
              "function_str": "CPAC.utils.datasource.check_for_s3",
              "file_path": "[Undefined]",
              "creds_path": "[Undefined]",
              "dl_dir": "[Undefined]",
              "img_type": "other"
            },
            "outputs": {
              "local_path": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "outputspec",
            "type": "node",
            "inputs": {
              "unique_id": "[Undefined]",
              "data": "[Undefined]",
              "scan": "[Undefined]"
            },
            "outputs": {
              "unique_id": "[Undefined]",
              "data": "[Undefined]",
              "scan": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          }
        ],
        "edges": [
          {
            "origin": "inputnode",
            "target": "check_for_s3"
          },
          {
            "origin": "inputnode",
            "target": "outputspec"
          },
          {
            "origin": "check_for_s3",
            "target": "outputspec"
          }
        ]
      },
      {
        "name": "convert_template_mask_to_native_freesurfer-bet-tight_76",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "reference": "[Undefined]",
          "out_file": "[Undefined]",
          "out_matrix_file": "[Undefined]",
          "out_log": "[Undefined]",
          "in_matrix_file": "[Undefined]",
          "apply_xfm": "True",
          "apply_isoxfm": "[Undefined]",
          "datatype": "[Undefined]",
          "cost": "[Undefined]",
          "cost_func": "[Undefined]",
          "uses_qform": "[Undefined]",
          "display_init": "[Undefined]",
          "angle_rep": "[Undefined]",
          "interp": "nearestneighbour",
          "sinc_width": "[Undefined]",
          "sinc_window": "[Undefined]",
          "bins": "[Undefined]",
          "dof": "[Undefined]",
          "no_resample": "[Undefined]",
          "force_scaling": "[Undefined]",
          "min_sampling": "[Undefined]",
          "padding_size": "0",
          "searchr_x": "[Undefined]",
          "searchr_y": "[Undefined]",
          "searchr_z": "[Undefined]",
          "no_search": "[Undefined]",
          "coarse_search": "[Undefined]",
          "fine_search": "[Undefined]",
          "schedule": "[Undefined]",
          "ref_weight": "[Undefined]",
          "in_weight": "[Undefined]",
          "no_clamp": "[Undefined]",
          "no_resample_blur": "[Undefined]",
          "rigid2D": "[Undefined]",
          "save_log": "[Undefined]",
          "verbose": "[Undefined]",
          "bgvalue": "[Undefined]",
          "wm_seg": "[Undefined]",
          "wmcoords": "[Undefined]",
          "wmnorms": "[Undefined]",
          "fieldmap": "[Undefined]",
          "fieldmapmask": "[Undefined]",
          "pedir": "[Undefined]",
          "echospacing": "[Undefined]",
          "bbrtype": "[Undefined]",
          "bbrslope": "[Undefined]",
          "output_type": "NIFTI_GZ",
          "args": "[Undefined]",
          "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
        },
        "outputs": {
          "out_file": "[Undefined]",
          "out_matrix_file": "[Undefined]",
          "out_log": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "combine_mask_freesurfer-bet-tight_76",
        "type": "node",
        "inputs": {
          "operation": "add",
          "operand_file": "[Undefined]",
          "operand_value": "[Undefined]",
          "in_file": "[Undefined]",
          "out_file": "[Undefined]",
          "internal_datatype": "[Undefined]",
          "output_datatype": "[Undefined]",
          "nan2zeros": "[Undefined]",
          "output_type": "NIFTI_GZ",
          "args": "[Undefined]",
          "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "binarize_combined_mask_freesurfer-bet-tight_76",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "out_file": "[Undefined]",
          "internal_datatype": "[Undefined]",
          "output_datatype": "[Undefined]",
          "nan2zeros": "[Undefined]",
          "output_type": "NIFTI_GZ",
          "args": "-bin",
          "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "fs_fsl_brain_mask_to_native_freesurfer-bet-tight_76",
        "type": "node",
        "inputs": {
          "source_file": "[Undefined]",
          "transformed_file": "[Undefined]",
          "target_file": "[Undefined]",
          "tal": "[Undefined]",
          "tal_resolution": "[Undefined]",
          "fs_target": "[Undefined]",
          "reg_file": "[Undefined]",
          "lta_file": "[Undefined]",
          "lta_inv_file": "[Undefined]",
          "fsl_reg_file": "[Undefined]",
          "xfm_reg_file": "[Undefined]",
          "reg_header": "True",
          "mni_152_reg": "[Undefined]",
          "subject": "[Undefined]",
          "inverse": "[Undefined]",
          "interp": "nearest",
          "no_resample": "[Undefined]",
          "m3z_file": "[Undefined]",
          "no_ded_m3z_path": "[Undefined]",
          "invert_morph": "[Undefined]",
          "subjects_dir": "/usr/lib/freesurfer/subjects",
          "args": "[Undefined]",
          "environ": "{'SUBJECTS_DIR': '/usr/lib/freesurfer/subjects'}"
        },
        "outputs": {
          "transformed_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "convert_fs_brainmask_to_nifti_freesurfer-bet-loose_76",
        "type": "node",
        "inputs": {
          "function_str": "def mri_convert(in_file, reslice_like=None, out_file=None, args=None):\n    \"\"\"\n    Method to convert files from mgz to nifti format\n\n    Parameters\n    ----------\n    in_file : string\n        A path of mgz input file\n    args : string\n        Arguments of mri_convert\n    Returns\n    -------\n    out_file : string\n        A path of nifti output file\n    \"\"\"\n\n    import os\n\n    if out_file is None:\n        out_file = in_file.replace('.mgz','.nii.gz')\n\n    cmd = 'mri_convert %s %s' % (in_file, out_file)\n\n    if reslice_like is not None:\n        cmd = cmd + ' -rl ' + reslice_like\n\n    if args is not None:\n        cmd = cmd + ' ' +args\n\n    os.system(cmd)\n\n    return out_file\n",
          "in_file": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "convert_fs_T1_to_nifti_freesurfer-bet-loose_76",
        "type": "node",
        "inputs": {
          "function_str": "def mri_convert(in_file, reslice_like=None, out_file=None, args=None):\n    \"\"\"\n    Method to convert files from mgz to nifti format\n\n    Parameters\n    ----------\n    in_file : string\n        A path of mgz input file\n    args : string\n        Arguments of mri_convert\n    Returns\n    -------\n    out_file : string\n        A path of nifti output file\n    \"\"\"\n\n    import os\n\n    if out_file is None:\n        out_file = in_file.replace('.mgz','.nii.gz')\n\n    cmd = 'mri_convert %s %s' % (in_file, out_file)\n\n    if reslice_like is not None:\n        cmd = cmd + ' -rl ' + reslice_like\n\n    if args is not None:\n        cmd = cmd + ' ' +args\n\n    os.system(cmd)\n\n    return out_file\n",
          "in_file": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "reorient_fs_brainmask_freesurfer-bet-loose_76",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "out_file": "[Undefined]",
          "orientation": "RPI",
          "resample_mode": "[Undefined]",
          "voxel_size": "[Undefined]",
          "master": "[Undefined]",
          "num_threads": "1",
          "outputtype": "NIFTI_GZ",
          "args": "[Undefined]",
          "environ": "{}"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "binarize_fs_brain_freesurfer-bet-loose_76",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "out_file": "[Undefined]",
          "internal_datatype": "[Undefined]",
          "output_datatype": "[Undefined]",
          "nan2zeros": "[Undefined]",
          "output_type": "NIFTI_GZ",
          "args": "-abs -bin",
          "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "reorient_fs_T1_freesurfer-bet-loose_76",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "out_file": "[Undefined]",
          "orientation": "RPI",
          "resample_mode": "[Undefined]",
          "voxel_size": "[Undefined]",
          "master": "[Undefined]",
          "num_threads": "1",
          "outputtype": "NIFTI_GZ",
          "args": "[Undefined]",
          "environ": "{}"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "convert_head_to_template_freesurfer-bet-loose_76",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "reference": "[Undefined]",
          "out_file": "[Undefined]",
          "out_matrix_file": "[Undefined]",
          "out_log": "[Undefined]",
          "in_matrix_file": "[Undefined]",
          "apply_xfm": "[Undefined]",
          "apply_isoxfm": "[Undefined]",
          "datatype": "[Undefined]",
          "cost": "corratio",
          "cost_func": "[Undefined]",
          "uses_qform": "[Undefined]",
          "display_init": "[Undefined]",
          "angle_rep": "[Undefined]",
          "interp": "trilinear",
          "sinc_width": "[Undefined]",
          "sinc_window": "[Undefined]",
          "bins": "256",
          "dof": "12",
          "no_resample": "[Undefined]",
          "force_scaling": "[Undefined]",
          "min_sampling": "[Undefined]",
          "padding_size": "[Undefined]",
          "searchr_x": "[-90, 90]",
          "searchr_y": "[-90, 90]",
          "searchr_z": "[-90, 90]",
          "no_search": "[Undefined]",
          "coarse_search": "[Undefined]",
          "fine_search": "[Undefined]",
          "schedule": "[Undefined]",
          "ref_weight": "[Undefined]",
          "in_weight": "[Undefined]",
          "no_clamp": "[Undefined]",
          "no_resample_blur": "[Undefined]",
          "rigid2D": "[Undefined]",
          "save_log": "[Undefined]",
          "verbose": "[Undefined]",
          "bgvalue": "[Undefined]",
          "wm_seg": "[Undefined]",
          "wmcoords": "[Undefined]",
          "wmnorms": "[Undefined]",
          "fieldmap": "[Undefined]",
          "fieldmapmask": "[Undefined]",
          "pedir": "[Undefined]",
          "echospacing": "[Undefined]",
          "bbrtype": "[Undefined]",
          "bbrslope": "[Undefined]",
          "output_type": "NIFTI_GZ",
          "args": "[Undefined]",
          "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
        },
        "outputs": {
          "out_file": "[Undefined]",
          "out_matrix_file": "[Undefined]",
          "out_log": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "convert_xfm_freesurfer-bet-loose_76",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "in_file2": "[Undefined]",
          "invert_xfm": "True",
          "concat_xfm": "[Undefined]",
          "fix_scale_skew": "[Undefined]",
          "out_file": "[Undefined]",
          "output_type": "NIFTI_GZ",
          "args": "[Undefined]",
          "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "anat_BET_skullstrip_freesurfer-bet-loose_76",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "out_file": "[Undefined]",
          "outline": "[Undefined]",
          "mask": "True",
          "skull": "[Undefined]",
          "no_output": "[Undefined]",
          "frac": "0.1",
          "vertical_gradient": "[Undefined]",
          "radius": "[Undefined]",
          "center": "[Undefined]",
          "threshold": "[Undefined]",
          "mesh": "[Undefined]",
          "robust": "[Undefined]",
          "padding": "[Undefined]",
          "remove_eyes": "[Undefined]",
          "surfaces": "[Undefined]",
          "t2_guided": "[Undefined]",
          "functional": "[Undefined]",
          "reduce_bias": "[Undefined]",
          "output_type": "NIFTI_GZ",
          "args": "[Undefined]",
          "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
        },
        "outputs": {
          "out_file": "[Undefined]",
          "mask_file": "[Undefined]",
          "outline_file": "[Undefined]",
          "meshfile": "[Undefined]",
          "inskull_mask_file": "[Undefined]",
          "inskull_mesh_file": "[Undefined]",
          "outskull_mask_file": "[Undefined]",
          "outskull_mesh_file": "[Undefined]",
          "outskin_mask_file": "[Undefined]",
          "outskin_mesh_file": "[Undefined]",
          "skull_mask_file": "[Undefined]",
          "skull_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "apply_mask_freesurfer-bet-loose_76",
        "type": "node",
        "inputs": {
          "mask_file": "[Undefined]",
          "in_file": "[Undefined]",
          "out_file": "[Undefined]",
          "internal_datatype": "[Undefined]",
          "output_datatype": "[Undefined]",
          "nan2zeros": "[Undefined]",
          "output_type": "NIFTI_GZ",
          "args": "[Undefined]",
          "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "convert_template_mask_to_native_freesurfer-bet-loose_76",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "reference": "[Undefined]",
          "out_file": "[Undefined]",
          "out_matrix_file": "[Undefined]",
          "out_log": "[Undefined]",
          "in_matrix_file": "[Undefined]",
          "apply_xfm": "True",
          "apply_isoxfm": "[Undefined]",
          "datatype": "[Undefined]",
          "cost": "[Undefined]",
          "cost_func": "[Undefined]",
          "uses_qform": "[Undefined]",
          "display_init": "[Undefined]",
          "angle_rep": "[Undefined]",
          "interp": "nearestneighbour",
          "sinc_width": "[Undefined]",
          "sinc_window": "[Undefined]",
          "bins": "[Undefined]",
          "dof": "[Undefined]",
          "no_resample": "[Undefined]",
          "force_scaling": "[Undefined]",
          "min_sampling": "[Undefined]",
          "padding_size": "0",
          "searchr_x": "[Undefined]",
          "searchr_y": "[Undefined]",
          "searchr_z": "[Undefined]",
          "no_search": "[Undefined]",
          "coarse_search": "[Undefined]",
          "fine_search": "[Undefined]",
          "schedule": "[Undefined]",
          "ref_weight": "[Undefined]",
          "in_weight": "[Undefined]",
          "no_clamp": "[Undefined]",
          "no_resample_blur": "[Undefined]",
          "rigid2D": "[Undefined]",
          "save_log": "[Undefined]",
          "verbose": "[Undefined]",
          "bgvalue": "[Undefined]",
          "wm_seg": "[Undefined]",
          "wmcoords": "[Undefined]",
          "wmnorms": "[Undefined]",
          "fieldmap": "[Undefined]",
          "fieldmapmask": "[Undefined]",
          "pedir": "[Undefined]",
          "echospacing": "[Undefined]",
          "bbrtype": "[Undefined]",
          "bbrslope": "[Undefined]",
          "output_type": "NIFTI_GZ",
          "args": "[Undefined]",
          "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
        },
        "outputs": {
          "out_file": "[Undefined]",
          "out_matrix_file": "[Undefined]",
          "out_log": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "combine_mask_freesurfer-bet-loose_76",
        "type": "node",
        "inputs": {
          "operation": "mul",
          "operand_file": "[Undefined]",
          "operand_value": "[Undefined]",
          "in_file": "[Undefined]",
          "out_file": "[Undefined]",
          "internal_datatype": "[Undefined]",
          "output_datatype": "[Undefined]",
          "nan2zeros": "[Undefined]",
          "output_type": "NIFTI_GZ",
          "args": "[Undefined]",
          "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "binarize_combined_mask_freesurfer-bet-loose_76",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "out_file": "[Undefined]",
          "internal_datatype": "[Undefined]",
          "output_datatype": "[Undefined]",
          "nan2zeros": "[Undefined]",
          "output_type": "NIFTI_GZ",
          "args": "-bin",
          "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "fs_fsl_brain_mask_to_native_freesurfer-bet-loose_76",
        "type": "node",
        "inputs": {
          "source_file": "[Undefined]",
          "transformed_file": "[Undefined]",
          "target_file": "[Undefined]",
          "tal": "[Undefined]",
          "tal_resolution": "[Undefined]",
          "fs_target": "[Undefined]",
          "reg_file": "[Undefined]",
          "lta_file": "[Undefined]",
          "lta_inv_file": "[Undefined]",
          "fsl_reg_file": "[Undefined]",
          "xfm_reg_file": "[Undefined]",
          "reg_header": "True",
          "mni_152_reg": "[Undefined]",
          "subject": "[Undefined]",
          "inverse": "[Undefined]",
          "interp": "nearest",
          "no_resample": "[Undefined]",
          "m3z_file": "[Undefined]",
          "no_ded_m3z_path": "[Undefined]",
          "invert_morph": "[Undefined]",
          "subjects_dir": "/usr/lib/freesurfer/subjects",
          "args": "[Undefined]",
          "environ": "{'SUBJECTS_DIR': '/usr/lib/freesurfer/subjects'}"
        },
        "outputs": {
          "transformed_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "brain_extraction_90",
        "type": "node",
        "inputs": {
          "in_file_a": "[Undefined]",
          "in_file_b": "[Undefined]",
          "in_file_c": "[Undefined]",
          "out_file": "[Undefined]",
          "expr": "a*step(b)",
          "start_idx": "[Undefined]",
          "stop_idx": "[Undefined]",
          "single_idx": "[Undefined]",
          "overwrite": "[Undefined]",
          "other": "[Undefined]",
          "num_threads": "1",
          "outputtype": "NIFTI_GZ",
          "args": "[Undefined]",
          "environ": "{}"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "register_FSL_anat_to_template_96",
        "type": "workflow",
        "inputs": {
          "inputspec": "{'fnirt_config': 'T1_2_MNI152_2mm', 'input_brain': '[Undefined]', 'input_head': '[Undefined]', 'input_mask': '[Undefined]', 'interpolation': 'trilinear', 'reference_brain': '[Undefined]', 'reference_head': '[Undefined]', 'reference_mask': '[Undefined]', 'transform': '[Undefined]'}",
          "anat_mni_flirt_register": "{'inputspec': {'input_brain': '[Undefined]', 'interp': '[Undefined]', 'ref_mask': '[Undefined]', 'reference_brain': '[Undefined]'}, 'linear_reg_0': {'angle_rep': '[Undefined]', 'apply_isoxfm': '[Undefined]', 'apply_xfm': '[Undefined]', 'args': '[Undefined]', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': '[Undefined]', 'coarse_search': '[Undefined]', 'cost': 'corratio', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'dof': '[Undefined]', 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_matrix_file': '[Undefined]', 'in_weight': '[Undefined]', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': '[Undefined]', 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'schedule': '[Undefined]', 'searchr_x': '[Undefined]', 'searchr_y': '[Undefined]', 'searchr_z': '[Undefined]', 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}, 'outputspec': {}, 'inv_linear_reg0_xfm': {'args': '[Undefined]', 'concat_xfm': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fix_scale_skew': '[Undefined]', 'in_file2': '[Undefined]', 'invert_xfm': True, 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ'}}",
          "fsl_lin-warp_to_nii": "{'abswarp': '[Undefined]', 'args': '[Undefined]', 'cons_jacobian': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'jacobian_max': '[Undefined]', 'jacobian_min': '[Undefined]', 'midmat': '[Undefined]', 'out_abswarp': '[Undefined]', 'out_file': '[Undefined]', 'out_relwarp': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'relwarp': '[Undefined]', 'shift_direction': '[Undefined]', 'shift_in_file': '[Undefined]', 'warp1': '[Undefined]', 'warp2': '[Undefined]'}",
          "fsl_invlin-warp_to_nii": "{'abswarp': '[Undefined]', 'args': '[Undefined]', 'cons_jacobian': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'jacobian_max': '[Undefined]', 'jacobian_min': '[Undefined]', 'midmat': '[Undefined]', 'out_abswarp': '[Undefined]', 'out_file': '[Undefined]', 'out_relwarp': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'relwarp': '[Undefined]', 'shift_direction': '[Undefined]', 'shift_in_file': '[Undefined]', 'warp1': '[Undefined]', 'warp2': '[Undefined]'}",
          "anat_mni_fnirt_register": "{'inputspec': {'fnirt_config': '[Undefined]', 'input_brain': '[Undefined]', 'input_skull': '[Undefined]', 'interp': '[Undefined]', 'linear_aff': '[Undefined]', 'ref_mask': '[Undefined]', 'reference_brain': '[Undefined]', 'reference_skull': '[Undefined]'}, 'nonlinear_reg_1': {'apply_inmask': '[Undefined]', 'apply_intensity_mapping': '[Undefined]', 'apply_refmask': '[Undefined]', 'args': '[Undefined]', 'bias_regularization_lambda': '[Undefined]', 'biasfield_resolution': '[Undefined]', 'derive_from_ref': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'field_file': '[Undefined]', 'fieldcoeff_file': True, 'hessian_precision': '[Undefined]', 'in_fwhm': '[Undefined]', 'in_intensitymap_file': '[Undefined]', 'inmask_file': '[Undefined]', 'inmask_val': '[Undefined]', 'intensity_mapping_model': '[Undefined]', 'intensity_mapping_order': '[Undefined]', 'inwarp_file': '[Undefined]', 'jacobian_file': True, 'jacobian_range': '[Undefined]', 'log_file': '[Undefined]', 'max_nonlin_iter': '[Undefined]', 'modulatedref_file': '[Undefined]', 'out_intensitymap_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'ref_fwhm': '[Undefined]', 'refmask_val': '[Undefined]', 'regularization_lambda': '[Undefined]', 'regularization_model': '[Undefined]', 'skip_implicit_in_masking': '[Undefined]', 'skip_implicit_ref_masking': '[Undefined]', 'skip_inmask': '[Undefined]', 'skip_intensity_mapping': '[Undefined]', 'skip_lambda_ssq': '[Undefined]', 'skip_refmask': '[Undefined]', 'spline_order': '[Undefined]', 'subsampling_scheme': '[Undefined]', 'warp_resolution': '[Undefined]', 'warped_file': '[Undefined]'}, 'brain_warp': {'abswarp': '[Undefined]', 'args': '[Undefined]', 'datatype': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'mask_file': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'premat': '[Undefined]', 'relwarp': '[Undefined]', 'superlevel': '[Undefined]', 'supersample': '[Undefined]'}, 'outputspec': {}}"
        },
        "outputs": {
          "inputspec": "{'fnirt_config': None, 'input_brain': None, 'input_head': None, 'input_mask': None, 'interpolation': None, 'reference_brain': None, 'reference_head': None, 'reference_mask': None, 'transform': None}",
          "anat_mni_flirt_register": "{'inputspec': {'input_brain': None, 'interp': None, 'ref_mask': None, 'reference_brain': None}, 'linear_reg_0': {'out_file': None, 'out_log': None, 'out_matrix_file': None}, 'outputspec': {'invlinear_xfm': None, 'linear_xfm': None, 'output_brain': None}, 'inv_linear_reg0_xfm': {'out_file': None}}",
          "fsl_lin-warp_to_nii": "{'out_file': None}",
          "fsl_invlin-warp_to_nii": "{'out_file': None}",
          "anat_mni_fnirt_register": "{'inputspec': {'fnirt_config': None, 'input_brain': None, 'input_skull': None, 'interp': None, 'linear_aff': None, 'ref_mask': None, 'reference_brain': None, 'reference_skull': None}, 'nonlinear_reg_1': {'field_file': None, 'fieldcoeff_file': None, 'jacobian_file': None, 'log_file': None, 'modulatedref_file': None, 'out_intensitymap_file': None, 'warped_file': None}, 'brain_warp': {'out_file': None}, 'outputspec': {'nonlinear_xfm': None, 'output_brain': None}}"
        },
        "result": null,
        "nodes": [
          {
            "name": "inputspec",
            "type": "node",
            "inputs": {
              "input_brain": "[Undefined]",
              "reference_brain": "[Undefined]",
              "input_head": "[Undefined]",
              "reference_head": "[Undefined]",
              "input_mask": "[Undefined]",
              "reference_mask": "[Undefined]",
              "transform": "[Undefined]",
              "interpolation": "trilinear",
              "fnirt_config": "T1_2_MNI152_2mm"
            },
            "outputs": {
              "input_brain": "[Undefined]",
              "reference_brain": "[Undefined]",
              "input_head": "[Undefined]",
              "reference_head": "[Undefined]",
              "input_mask": "[Undefined]",
              "reference_mask": "[Undefined]",
              "transform": "[Undefined]",
              "interpolation": "[Undefined]",
              "fnirt_config": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "anat_mni_flirt_register",
            "type": "workflow",
            "inputs": {
              "inputspec": "{'input_brain': '[Undefined]', 'interp': '[Undefined]', 'ref_mask': '[Undefined]', 'reference_brain': '[Undefined]'}",
              "linear_reg_0": "{'angle_rep': '[Undefined]', 'apply_isoxfm': '[Undefined]', 'apply_xfm': '[Undefined]', 'args': '[Undefined]', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': '[Undefined]', 'coarse_search': '[Undefined]', 'cost': 'corratio', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'dof': '[Undefined]', 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_matrix_file': '[Undefined]', 'in_weight': '[Undefined]', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': '[Undefined]', 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'schedule': '[Undefined]', 'searchr_x': '[Undefined]', 'searchr_y': '[Undefined]', 'searchr_z': '[Undefined]', 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}",
              "outputspec": "{}",
              "inv_linear_reg0_xfm": "{'args': '[Undefined]', 'concat_xfm': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fix_scale_skew': '[Undefined]', 'in_file2': '[Undefined]', 'invert_xfm': True, 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ'}"
            },
            "outputs": {
              "inputspec": "{'input_brain': None, 'interp': None, 'ref_mask': None, 'reference_brain': None}",
              "linear_reg_0": "{'out_file': None, 'out_log': None, 'out_matrix_file': None}",
              "outputspec": "{'invlinear_xfm': None, 'linear_xfm': None, 'output_brain': None}",
              "inv_linear_reg0_xfm": "{'out_file': None}"
            },
            "result": null,
            "nodes": [
              {
                "name": "inputspec",
                "type": "node",
                "inputs": {
                  "input_brain": "[Undefined]",
                  "reference_brain": "[Undefined]",
                  "interp": "[Undefined]",
                  "ref_mask": "[Undefined]"
                },
                "outputs": {
                  "input_brain": "[Undefined]",
                  "reference_brain": "[Undefined]",
                  "interp": "[Undefined]",
                  "ref_mask": "[Undefined]"
                },
                "result": null,
                "nodes": [],
                "edges": []
              },
              {
                "name": "linear_reg_0",
                "type": "node",
                "inputs": {
                  "in_file": "[Undefined]",
                  "reference": "[Undefined]",
                  "out_file": "[Undefined]",
                  "out_matrix_file": "[Undefined]",
                  "out_log": "[Undefined]",
                  "in_matrix_file": "[Undefined]",
                  "apply_xfm": "[Undefined]",
                  "apply_isoxfm": "[Undefined]",
                  "datatype": "[Undefined]",
                  "cost": "corratio",
                  "cost_func": "[Undefined]",
                  "uses_qform": "[Undefined]",
                  "display_init": "[Undefined]",
                  "angle_rep": "[Undefined]",
                  "interp": "[Undefined]",
                  "sinc_width": "[Undefined]",
                  "sinc_window": "[Undefined]",
                  "bins": "[Undefined]",
                  "dof": "[Undefined]",
                  "no_resample": "[Undefined]",
                  "force_scaling": "[Undefined]",
                  "min_sampling": "[Undefined]",
                  "padding_size": "[Undefined]",
                  "searchr_x": "[Undefined]",
                  "searchr_y": "[Undefined]",
                  "searchr_z": "[Undefined]",
                  "no_search": "[Undefined]",
                  "coarse_search": "[Undefined]",
                  "fine_search": "[Undefined]",
                  "schedule": "[Undefined]",
                  "ref_weight": "[Undefined]",
                  "in_weight": "[Undefined]",
                  "no_clamp": "[Undefined]",
                  "no_resample_blur": "[Undefined]",
                  "rigid2D": "[Undefined]",
                  "save_log": "[Undefined]",
                  "verbose": "[Undefined]",
                  "bgvalue": "[Undefined]",
                  "wm_seg": "[Undefined]",
                  "wmcoords": "[Undefined]",
                  "wmnorms": "[Undefined]",
                  "fieldmap": "[Undefined]",
                  "fieldmapmask": "[Undefined]",
                  "pedir": "[Undefined]",
                  "echospacing": "[Undefined]",
                  "bbrtype": "[Undefined]",
                  "bbrslope": "[Undefined]",
                  "output_type": "NIFTI_GZ",
                  "args": "[Undefined]",
                  "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
                },
                "outputs": {
                  "out_file": "[Undefined]",
                  "out_matrix_file": "[Undefined]",
                  "out_log": "[Undefined]"
                },
                "result": null,
                "nodes": [],
                "edges": []
              },
              {
                "name": "outputspec",
                "type": "node",
                "inputs": {
                  "output_brain": "[Undefined]",
                  "linear_xfm": "[Undefined]",
                  "invlinear_xfm": "[Undefined]"
                },
                "outputs": {
                  "output_brain": "[Undefined]",
                  "linear_xfm": "[Undefined]",
                  "invlinear_xfm": "[Undefined]"
                },
                "result": null,
                "nodes": [],
                "edges": []
              },
              {
                "name": "inv_linear_reg0_xfm",
                "type": "node",
                "inputs": {
                  "in_file": "[Undefined]",
                  "in_file2": "[Undefined]",
                  "invert_xfm": "True",
                  "concat_xfm": "[Undefined]",
                  "fix_scale_skew": "[Undefined]",
                  "out_file": "[Undefined]",
                  "output_type": "NIFTI_GZ",
                  "args": "[Undefined]",
                  "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
                },
                "outputs": {
                  "out_file": "[Undefined]"
                },
                "result": null,
                "nodes": [],
                "edges": []
              }
            ],
            "edges": [
              {
                "origin": "inputspec",
                "target": "linear_reg_0"
              },
              {
                "origin": "linear_reg_0",
                "target": "outputspec"
              },
              {
                "origin": "linear_reg_0",
                "target": "inv_linear_reg0_xfm"
              },
              {
                "origin": "inv_linear_reg0_xfm",
                "target": "outputspec"
              }
            ]
          },
          {
            "name": "fsl_lin-warp_to_nii",
            "type": "node",
            "inputs": {
              "reference": "[Undefined]",
              "out_file": "[Undefined]",
              "premat": "[Undefined]",
              "warp1": "[Undefined]",
              "midmat": "[Undefined]",
              "warp2": "[Undefined]",
              "postmat": "[Undefined]",
              "shift_in_file": "[Undefined]",
              "shift_direction": "[Undefined]",
              "cons_jacobian": "[Undefined]",
              "jacobian_min": "[Undefined]",
              "jacobian_max": "[Undefined]",
              "abswarp": "[Undefined]",
              "relwarp": "[Undefined]",
              "out_abswarp": "[Undefined]",
              "out_relwarp": "[Undefined]",
              "output_type": "NIFTI_GZ",
              "args": "[Undefined]",
              "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
            },
            "outputs": {
              "out_file": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "fsl_invlin-warp_to_nii",
            "type": "node",
            "inputs": {
              "reference": "[Undefined]",
              "out_file": "[Undefined]",
              "premat": "[Undefined]",
              "warp1": "[Undefined]",
              "midmat": "[Undefined]",
              "warp2": "[Undefined]",
              "postmat": "[Undefined]",
              "shift_in_file": "[Undefined]",
              "shift_direction": "[Undefined]",
              "cons_jacobian": "[Undefined]",
              "jacobian_min": "[Undefined]",
              "jacobian_max": "[Undefined]",
              "abswarp": "[Undefined]",
              "relwarp": "[Undefined]",
              "out_abswarp": "[Undefined]",
              "out_relwarp": "[Undefined]",
              "output_type": "NIFTI_GZ",
              "args": "[Undefined]",
              "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
            },
            "outputs": {
              "out_file": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "anat_mni_fnirt_register",
            "type": "workflow",
            "inputs": {
              "inputspec": "{'fnirt_config': '[Undefined]', 'input_brain': '[Undefined]', 'input_skull': '[Undefined]', 'interp': '[Undefined]', 'linear_aff': '[Undefined]', 'ref_mask': '[Undefined]', 'reference_brain': '[Undefined]', 'reference_skull': '[Undefined]'}",
              "nonlinear_reg_1": "{'apply_inmask': '[Undefined]', 'apply_intensity_mapping': '[Undefined]', 'apply_refmask': '[Undefined]', 'args': '[Undefined]', 'bias_regularization_lambda': '[Undefined]', 'biasfield_resolution': '[Undefined]', 'derive_from_ref': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'field_file': '[Undefined]', 'fieldcoeff_file': True, 'hessian_precision': '[Undefined]', 'in_fwhm': '[Undefined]', 'in_intensitymap_file': '[Undefined]', 'inmask_file': '[Undefined]', 'inmask_val': '[Undefined]', 'intensity_mapping_model': '[Undefined]', 'intensity_mapping_order': '[Undefined]', 'inwarp_file': '[Undefined]', 'jacobian_file': True, 'jacobian_range': '[Undefined]', 'log_file': '[Undefined]', 'max_nonlin_iter': '[Undefined]', 'modulatedref_file': '[Undefined]', 'out_intensitymap_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'ref_fwhm': '[Undefined]', 'refmask_val': '[Undefined]', 'regularization_lambda': '[Undefined]', 'regularization_model': '[Undefined]', 'skip_implicit_in_masking': '[Undefined]', 'skip_implicit_ref_masking': '[Undefined]', 'skip_inmask': '[Undefined]', 'skip_intensity_mapping': '[Undefined]', 'skip_lambda_ssq': '[Undefined]', 'skip_refmask': '[Undefined]', 'spline_order': '[Undefined]', 'subsampling_scheme': '[Undefined]', 'warp_resolution': '[Undefined]', 'warped_file': '[Undefined]'}",
              "brain_warp": "{'abswarp': '[Undefined]', 'args': '[Undefined]', 'datatype': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'mask_file': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'premat': '[Undefined]', 'relwarp': '[Undefined]', 'superlevel': '[Undefined]', 'supersample': '[Undefined]'}",
              "outputspec": "{}"
            },
            "outputs": {
              "inputspec": "{'fnirt_config': None, 'input_brain': None, 'input_skull': None, 'interp': None, 'linear_aff': None, 'ref_mask': None, 'reference_brain': None, 'reference_skull': None}",
              "nonlinear_reg_1": "{'field_file': None, 'fieldcoeff_file': None, 'jacobian_file': None, 'log_file': None, 'modulatedref_file': None, 'out_intensitymap_file': None, 'warped_file': None}",
              "brain_warp": "{'out_file': None}",
              "outputspec": "{'nonlinear_xfm': None, 'output_brain': None}"
            },
            "result": null,
            "nodes": [
              {
                "name": "inputspec",
                "type": "node",
                "inputs": {
                  "input_brain": "[Undefined]",
                  "input_skull": "[Undefined]",
                  "reference_brain": "[Undefined]",
                  "reference_skull": "[Undefined]",
                  "interp": "[Undefined]",
                  "ref_mask": "[Undefined]",
                  "linear_aff": "[Undefined]",
                  "fnirt_config": "[Undefined]"
                },
                "outputs": {
                  "input_brain": "[Undefined]",
                  "input_skull": "[Undefined]",
                  "reference_brain": "[Undefined]",
                  "reference_skull": "[Undefined]",
                  "interp": "[Undefined]",
                  "ref_mask": "[Undefined]",
                  "linear_aff": "[Undefined]",
                  "fnirt_config": "[Undefined]"
                },
                "result": null,
                "nodes": [],
                "edges": []
              },
              {
                "name": "nonlinear_reg_1",
                "type": "node",
                "inputs": {
                  "ref_file": "[Undefined]",
                  "in_file": "[Undefined]",
                  "affine_file": "[Undefined]",
                  "inwarp_file": "[Undefined]",
                  "in_intensitymap_file": "[Undefined]",
                  "fieldcoeff_file": "True",
                  "warped_file": "[Undefined]",
                  "field_file": "[Undefined]",
                  "jacobian_file": "True",
                  "modulatedref_file": "[Undefined]",
                  "out_intensitymap_file": "[Undefined]",
                  "log_file": "[Undefined]",
                  "config_file": "[Undefined]",
                  "refmask_file": "[Undefined]",
                  "inmask_file": "[Undefined]",
                  "skip_refmask": "[Undefined]",
                  "skip_inmask": "[Undefined]",
                  "apply_refmask": "[Undefined]",
                  "apply_inmask": "[Undefined]",
                  "skip_implicit_ref_masking": "[Undefined]",
                  "skip_implicit_in_masking": "[Undefined]",
                  "refmask_val": "[Undefined]",
                  "inmask_val": "[Undefined]",
                  "max_nonlin_iter": "[Undefined]",
                  "subsampling_scheme": "[Undefined]",
                  "warp_resolution": "[Undefined]",
                  "spline_order": "[Undefined]",
                  "in_fwhm": "[Undefined]",
                  "ref_fwhm": "[Undefined]",
                  "regularization_model": "[Undefined]",
                  "regularization_lambda": "[Undefined]",
                  "skip_lambda_ssq": "[Undefined]",
                  "jacobian_range": "[Undefined]",
                  "derive_from_ref": "[Undefined]",
                  "intensity_mapping_model": "[Undefined]",
                  "intensity_mapping_order": "[Undefined]",
                  "biasfield_resolution": "[Undefined]",
                  "bias_regularization_lambda": "[Undefined]",
                  "skip_intensity_mapping": "[Undefined]",
                  "apply_intensity_mapping": "[Undefined]",
                  "hessian_precision": "[Undefined]",
                  "output_type": "NIFTI_GZ",
                  "args": "[Undefined]",
                  "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
                },
                "outputs": {
                  "fieldcoeff_file": "[Undefined]",
                  "warped_file": "[Undefined]",
                  "field_file": "[Undefined]",
                  "jacobian_file": "[Undefined]",
                  "modulatedref_file": "[Undefined]",
                  "out_intensitymap_file": "[Undefined]",
                  "log_file": "[Undefined]"
                },
                "result": null,
                "nodes": [],
                "edges": []
              },
              {
                "name": "brain_warp",
                "type": "node",
                "inputs": {
                  "in_file": "[Undefined]",
                  "out_file": "[Undefined]",
                  "ref_file": "[Undefined]",
                  "field_file": "[Undefined]",
                  "abswarp": "[Undefined]",
                  "relwarp": "[Undefined]",
                  "datatype": "[Undefined]",
                  "supersample": "[Undefined]",
                  "superlevel": "[Undefined]",
                  "premat": "[Undefined]",
                  "postmat": "[Undefined]",
                  "mask_file": "[Undefined]",
                  "interp": "[Undefined]",
                  "output_type": "NIFTI_GZ",
                  "args": "[Undefined]",
                  "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
                },
                "outputs": {
                  "out_file": "[Undefined]"
                },
                "result": null,
                "nodes": [],
                "edges": []
              },
              {
                "name": "outputspec",
                "type": "node",
                "inputs": {
                  "output_brain": "[Undefined]",
                  "nonlinear_xfm": "[Undefined]"
                },
                "outputs": {
                  "output_brain": "[Undefined]",
                  "nonlinear_xfm": "[Undefined]"
                },
                "result": null,
                "nodes": [],
                "edges": []
              }
            ],
            "edges": [
              {
                "origin": "inputspec",
                "target": "nonlinear_reg_1"
              },
              {
                "origin": "inputspec",
                "target": "brain_warp"
              },
              {
                "origin": "nonlinear_reg_1",
                "target": "outputspec"
              },
              {
                "origin": "nonlinear_reg_1",
                "target": "brain_warp"
              },
              {
                "origin": "brain_warp",
                "target": "outputspec"
              }
            ]
          }
        ],
        "edges": [
          {
            "origin": "inputspec",
            "target": "anat_mni_flirt_register"
          },
          {
            "origin": "inputspec",
            "target": "fsl_lin-warp_to_nii"
          },
          {
            "origin": "inputspec",
            "target": "fsl_invlin-warp_to_nii"
          },
          {
            "origin": "inputspec",
            "target": "anat_mni_fnirt_register"
          },
          {
            "origin": "anat_mni_flirt_register",
            "target": "fsl_lin-warp_to_nii"
          },
          {
            "origin": "anat_mni_flirt_register",
            "target": "fsl_invlin-warp_to_nii"
          },
          {
            "origin": "anat_mni_flirt_register",
            "target": "anat_mni_fnirt_register"
          }
        ]
      },
      {
        "name": "resampled_T1w-brain-template",
        "type": "node",
        "inputs": {
          "function_str": "CPAC.utils.datasource.resolve_resolution",
          "resolution": "2mm",
          "template": "/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain.nii.gz",
          "template_name": "T1w-brain-template",
          "tag": "resolution_for_anat"
        },
        "outputs": {
          "resampled_template": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "resampled_T1w-template",
        "type": "node",
        "inputs": {
          "function_str": "CPAC.utils.datasource.resolve_resolution",
          "resolution": "2mm",
          "template": "/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz",
          "template_name": "T1w-template",
          "tag": "resolution_for_anat"
        },
        "outputs": {
          "resampled_template": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "resampled_template-ref-mask",
        "type": "node",
        "inputs": {
          "function_str": "CPAC.utils.datasource.resolve_resolution",
          "resolution": "2mm",
          "template": "/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz",
          "template_name": "template-ref-mask",
          "tag": "resolution_for_anat"
        },
        "outputs": {
          "resampled_template": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "warp_wholehead_T1w_to_T1template_105",
        "type": "workflow",
        "inputs": {
          "inputspec": "{'input_image': '[Undefined]', 'interpolation': 'trilinear', 'reference': '[Undefined]', 'transform': '[Undefined]'}",
          "interp_string": "{'function_str': \"def interpolation_string(interpolation, reg_tool):\\n    if reg_tool == 'ants':\\n        pass\\n    elif reg_tool == 'fsl':\\n        # translate to FSL\\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\\n        #          in C-PAC are now converted to .nii.gz\\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\\n    return interpolation\\n\", 'reg_tool': 'fsl'}",
          "fsl_apply_warp": "{'abswarp': '[Undefined]', 'args': '[Undefined]', 'datatype': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'mask_file': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'premat': '[Undefined]', 'relwarp': '[Undefined]', 'superlevel': '[Undefined]', 'supersample': '[Undefined]'}",
          "outputspec": "{}"
        },
        "outputs": {
          "inputspec": "{'input_image': None, 'interpolation': None, 'reference': None, 'transform': None}",
          "interp_string": "{'interpolation': None}",
          "fsl_apply_warp": "{'out_file': None}",
          "outputspec": "{'output_image': None}"
        },
        "result": null,
        "nodes": [
          {
            "name": "inputspec",
            "type": "node",
            "inputs": {
              "input_image": "[Undefined]",
              "reference": "[Undefined]",
              "transform": "[Undefined]",
              "interpolation": "trilinear"
            },
            "outputs": {
              "input_image": "[Undefined]",
              "reference": "[Undefined]",
              "transform": "[Undefined]",
              "interpolation": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "interp_string",
            "type": "node",
            "inputs": {
              "function_str": "def interpolation_string(interpolation, reg_tool):\n    if reg_tool == 'ants':\n        pass\n    elif reg_tool == 'fsl':\n        # translate to FSL\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\n        #          in C-PAC are now converted to .nii.gz\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\n    return interpolation\n",
              "interpolation": "[Undefined]",
              "reg_tool": "fsl"
            },
            "outputs": {
              "interpolation": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "fsl_apply_warp",
            "type": "node",
            "inputs": {
              "in_file": "[Undefined]",
              "out_file": "[Undefined]",
              "ref_file": "[Undefined]",
              "field_file": "[Undefined]",
              "abswarp": "[Undefined]",
              "relwarp": "[Undefined]",
              "datatype": "[Undefined]",
              "supersample": "[Undefined]",
              "superlevel": "[Undefined]",
              "premat": "[Undefined]",
              "postmat": "[Undefined]",
              "mask_file": "[Undefined]",
              "interp": "[Undefined]",
              "output_type": "NIFTI_GZ",
              "args": "[Undefined]",
              "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
            },
            "outputs": {
              "out_file": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "outputspec",
            "type": "node",
            "inputs": {
              "output_image": "[Undefined]"
            },
            "outputs": {
              "output_image": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          }
        ],
        "edges": [
          {
            "origin": "inputspec",
            "target": "interp_string"
          },
          {
            "origin": "inputspec",
            "target": "fsl_apply_warp"
          },
          {
            "origin": "interp_string",
            "target": "fsl_apply_warp"
          },
          {
            "origin": "fsl_apply_warp",
            "target": "outputspec"
          }
        ]
      },
      {
        "name": "anat_mni_fnirt_register",
        "type": "workflow",
        "inputs": {
          "inputspec": "{'fnirt_config': '[Undefined]', 'input_brain': '[Undefined]', 'input_skull': '[Undefined]', 'interp': '[Undefined]', 'linear_aff': '[Undefined]', 'ref_mask': '[Undefined]', 'reference_brain': '[Undefined]', 'reference_skull': '[Undefined]'}",
          "nonlinear_reg_1": "{'apply_inmask': '[Undefined]', 'apply_intensity_mapping': '[Undefined]', 'apply_refmask': '[Undefined]', 'args': '[Undefined]', 'bias_regularization_lambda': '[Undefined]', 'biasfield_resolution': '[Undefined]', 'derive_from_ref': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'field_file': '[Undefined]', 'fieldcoeff_file': True, 'hessian_precision': '[Undefined]', 'in_fwhm': '[Undefined]', 'in_intensitymap_file': '[Undefined]', 'inmask_file': '[Undefined]', 'inmask_val': '[Undefined]', 'intensity_mapping_model': '[Undefined]', 'intensity_mapping_order': '[Undefined]', 'inwarp_file': '[Undefined]', 'jacobian_file': True, 'jacobian_range': '[Undefined]', 'log_file': '[Undefined]', 'max_nonlin_iter': '[Undefined]', 'modulatedref_file': '[Undefined]', 'out_intensitymap_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'ref_fwhm': '[Undefined]', 'refmask_val': '[Undefined]', 'regularization_lambda': '[Undefined]', 'regularization_model': '[Undefined]', 'skip_implicit_in_masking': '[Undefined]', 'skip_implicit_ref_masking': '[Undefined]', 'skip_inmask': '[Undefined]', 'skip_intensity_mapping': '[Undefined]', 'skip_lambda_ssq': '[Undefined]', 'skip_refmask': '[Undefined]', 'spline_order': '[Undefined]', 'subsampling_scheme': '[Undefined]', 'warp_resolution': '[Undefined]', 'warped_file': '[Undefined]'}",
          "brain_warp": "{'abswarp': '[Undefined]', 'args': '[Undefined]', 'datatype': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'mask_file': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'premat': '[Undefined]', 'relwarp': '[Undefined]', 'superlevel': '[Undefined]', 'supersample': '[Undefined]'}",
          "outputspec": "{}"
        },
        "outputs": {
          "inputspec": "{'fnirt_config': None, 'input_brain': None, 'input_skull': None, 'interp': None, 'linear_aff': None, 'ref_mask': None, 'reference_brain': None, 'reference_skull': None}",
          "nonlinear_reg_1": "{'field_file': None, 'fieldcoeff_file': None, 'jacobian_file': None, 'log_file': None, 'modulatedref_file': None, 'out_intensitymap_file': None, 'warped_file': None}",
          "brain_warp": "{'out_file': None}",
          "outputspec": "{'nonlinear_xfm': None, 'output_brain': None}"
        },
        "result": null,
        "nodes": [
          {
            "name": "inputspec",
            "type": "node",
            "inputs": {
              "input_brain": "[Undefined]",
              "input_skull": "[Undefined]",
              "reference_brain": "[Undefined]",
              "reference_skull": "[Undefined]",
              "interp": "[Undefined]",
              "ref_mask": "[Undefined]",
              "linear_aff": "[Undefined]",
              "fnirt_config": "[Undefined]"
            },
            "outputs": {
              "input_brain": "[Undefined]",
              "input_skull": "[Undefined]",
              "reference_brain": "[Undefined]",
              "reference_skull": "[Undefined]",
              "interp": "[Undefined]",
              "ref_mask": "[Undefined]",
              "linear_aff": "[Undefined]",
              "fnirt_config": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "nonlinear_reg_1",
            "type": "node",
            "inputs": {
              "ref_file": "[Undefined]",
              "in_file": "[Undefined]",
              "affine_file": "[Undefined]",
              "inwarp_file": "[Undefined]",
              "in_intensitymap_file": "[Undefined]",
              "fieldcoeff_file": "True",
              "warped_file": "[Undefined]",
              "field_file": "[Undefined]",
              "jacobian_file": "True",
              "modulatedref_file": "[Undefined]",
              "out_intensitymap_file": "[Undefined]",
              "log_file": "[Undefined]",
              "config_file": "[Undefined]",
              "refmask_file": "[Undefined]",
              "inmask_file": "[Undefined]",
              "skip_refmask": "[Undefined]",
              "skip_inmask": "[Undefined]",
              "apply_refmask": "[Undefined]",
              "apply_inmask": "[Undefined]",
              "skip_implicit_ref_masking": "[Undefined]",
              "skip_implicit_in_masking": "[Undefined]",
              "refmask_val": "[Undefined]",
              "inmask_val": "[Undefined]",
              "max_nonlin_iter": "[Undefined]",
              "subsampling_scheme": "[Undefined]",
              "warp_resolution": "[Undefined]",
              "spline_order": "[Undefined]",
              "in_fwhm": "[Undefined]",
              "ref_fwhm": "[Undefined]",
              "regularization_model": "[Undefined]",
              "regularization_lambda": "[Undefined]",
              "skip_lambda_ssq": "[Undefined]",
              "jacobian_range": "[Undefined]",
              "derive_from_ref": "[Undefined]",
              "intensity_mapping_model": "[Undefined]",
              "intensity_mapping_order": "[Undefined]",
              "biasfield_resolution": "[Undefined]",
              "bias_regularization_lambda": "[Undefined]",
              "skip_intensity_mapping": "[Undefined]",
              "apply_intensity_mapping": "[Undefined]",
              "hessian_precision": "[Undefined]",
              "output_type": "NIFTI_GZ",
              "args": "[Undefined]",
              "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
            },
            "outputs": {
              "fieldcoeff_file": "[Undefined]",
              "warped_file": "[Undefined]",
              "field_file": "[Undefined]",
              "jacobian_file": "[Undefined]",
              "modulatedref_file": "[Undefined]",
              "out_intensitymap_file": "[Undefined]",
              "log_file": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "brain_warp",
            "type": "node",
            "inputs": {
              "in_file": "[Undefined]",
              "out_file": "[Undefined]",
              "ref_file": "[Undefined]",
              "field_file": "[Undefined]",
              "abswarp": "[Undefined]",
              "relwarp": "[Undefined]",
              "datatype": "[Undefined]",
              "supersample": "[Undefined]",
              "superlevel": "[Undefined]",
              "premat": "[Undefined]",
              "postmat": "[Undefined]",
              "mask_file": "[Undefined]",
              "interp": "[Undefined]",
              "output_type": "NIFTI_GZ",
              "args": "[Undefined]",
              "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
            },
            "outputs": {
              "out_file": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "outputspec",
            "type": "node",
            "inputs": {
              "output_brain": "[Undefined]",
              "nonlinear_xfm": "[Undefined]"
            },
            "outputs": {
              "output_brain": "[Undefined]",
              "nonlinear_xfm": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          }
        ],
        "edges": [
          {
            "origin": "inputspec",
            "target": "nonlinear_reg_1"
          },
          {
            "origin": "inputspec",
            "target": "brain_warp"
          },
          {
            "origin": "nonlinear_reg_1",
            "target": "outputspec"
          },
          {
            "origin": "nonlinear_reg_1",
            "target": "brain_warp"
          },
          {
            "origin": "brain_warp",
            "target": "outputspec"
          }
        ]
      },
      {
        "name": "warp_T1mask_to_T1template_109",
        "type": "workflow",
        "inputs": {
          "inputspec": "{'input_image': '[Undefined]', 'interpolation': 'NearestNeighbor', 'reference': '[Undefined]', 'transform': '[Undefined]'}",
          "interp_string": "{'function_str': \"def interpolation_string(interpolation, reg_tool):\\n    if reg_tool == 'ants':\\n        pass\\n    elif reg_tool == 'fsl':\\n        # translate to FSL\\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\\n        #          in C-PAC are now converted to .nii.gz\\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\\n    return interpolation\\n\", 'reg_tool': 'fsl'}",
          "fsl_apply_warp": "{'abswarp': '[Undefined]', 'args': '[Undefined]', 'datatype': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'mask_file': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'premat': '[Undefined]', 'relwarp': '[Undefined]', 'superlevel': '[Undefined]', 'supersample': '[Undefined]'}",
          "outputspec": "{}"
        },
        "outputs": {
          "inputspec": "{'input_image': None, 'interpolation': None, 'reference': None, 'transform': None}",
          "interp_string": "{'interpolation': None}",
          "fsl_apply_warp": "{'out_file': None}",
          "outputspec": "{'output_image': None}"
        },
        "result": null,
        "nodes": [
          {
            "name": "inputspec",
            "type": "node",
            "inputs": {
              "input_image": "[Undefined]",
              "reference": "[Undefined]",
              "transform": "[Undefined]",
              "interpolation": "NearestNeighbor"
            },
            "outputs": {
              "input_image": "[Undefined]",
              "reference": "[Undefined]",
              "transform": "[Undefined]",
              "interpolation": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "interp_string",
            "type": "node",
            "inputs": {
              "function_str": "def interpolation_string(interpolation, reg_tool):\n    if reg_tool == 'ants':\n        pass\n    elif reg_tool == 'fsl':\n        # translate to FSL\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\n        #          in C-PAC are now converted to .nii.gz\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\n    return interpolation\n",
              "interpolation": "[Undefined]",
              "reg_tool": "fsl"
            },
            "outputs": {
              "interpolation": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "fsl_apply_warp",
            "type": "node",
            "inputs": {
              "in_file": "[Undefined]",
              "out_file": "[Undefined]",
              "ref_file": "[Undefined]",
              "field_file": "[Undefined]",
              "abswarp": "[Undefined]",
              "relwarp": "[Undefined]",
              "datatype": "[Undefined]",
              "supersample": "[Undefined]",
              "superlevel": "[Undefined]",
              "premat": "[Undefined]",
              "postmat": "[Undefined]",
              "mask_file": "[Undefined]",
              "interp": "[Undefined]",
              "output_type": "NIFTI_GZ",
              "args": "[Undefined]",
              "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
            },
            "outputs": {
              "out_file": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "outputspec",
            "type": "node",
            "inputs": {
              "output_image": "[Undefined]"
            },
            "outputs": {
              "output_image": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          }
        ],
        "edges": [
          {
            "origin": "inputspec",
            "target": "interp_string"
          },
          {
            "origin": "inputspec",
            "target": "fsl_apply_warp"
          },
          {
            "origin": "interp_string",
            "target": "fsl_apply_warp"
          },
          {
            "origin": "fsl_apply_warp",
            "target": "outputspec"
          }
        ]
      },
      {
        "name": "segment_113",
        "type": "node",
        "inputs": {
          "in_files": "[Undefined]",
          "out_basename": "segment",
          "number_classes": "[Undefined]",
          "output_biasfield": "[Undefined]",
          "output_biascorrected": "[Undefined]",
          "img_type": "1",
          "bias_iters": "[Undefined]",
          "bias_lowpass": "[Undefined]",
          "init_seg_smooth": "[Undefined]",
          "segments": "True",
          "init_transform": "[Undefined]",
          "other_priors": "[Undefined]",
          "no_pve": "[Undefined]",
          "no_bias": "[Undefined]",
          "use_priors": "[Undefined]",
          "segment_iters": "[Undefined]",
          "mixel_smooth": "[Undefined]",
          "iters_afterbias": "[Undefined]",
          "hyper": "[Undefined]",
          "verbose": "[Undefined]",
          "manual_seg": "[Undefined]",
          "probability_maps": "True",
          "output_type": "NIFTI_GZ",
          "args": "[Undefined]",
          "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
        },
        "outputs": {
          "tissue_class_map": "[Undefined]",
          "tissue_class_files": "[Undefined]",
          "restored_image": "[Undefined]",
          "mixeltype": "[Undefined]",
          "partial_volume_map": "[Undefined]",
          "partial_volume_files": "[Undefined]",
          "bias_field": "[Undefined]",
          "probability_maps": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "get_pve_csf_113",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "out_file": "[Undefined]",
          "internal_datatype": "[Undefined]",
          "output_datatype": "[Undefined]",
          "nan2zeros": "[Undefined]",
          "output_type": "NIFTI_GZ",
          "args": "-thr 0.5 -uthr 1.5 -bin",
          "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "get_pve_gm_113",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "out_file": "[Undefined]",
          "internal_datatype": "[Undefined]",
          "output_datatype": "[Undefined]",
          "nan2zeros": "[Undefined]",
          "output_type": "NIFTI_GZ",
          "args": "-thr 1.5 -uthr 2.5 -bin",
          "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "get_pve_wm_113",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "out_file": "[Undefined]",
          "internal_datatype": "[Undefined]",
          "output_datatype": "[Undefined]",
          "nan2zeros": "[Undefined]",
          "output_type": "NIFTI_GZ",
          "args": "-thr 2.5 -uthr 3.5 -bin",
          "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "gather_CSF-path",
        "type": "workflow",
        "inputs": {
          "inputnode": "{'creds_path': None, 'data': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz', 'dl_dir': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working/pipeline_cpac_ccs-options', 'scan': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
          "check_for_s3": "{'function_str': 'CPAC.utils.datasource.check_for_s3', 'img_type': 'other'}",
          "outputspec": "{}"
        },
        "outputs": {
          "inputnode": "{'creds_path': None, 'data': None, 'dl_dir': None, 'scan': None, 'unique_id': None}",
          "check_for_s3": "{'local_path': None}",
          "outputspec": "{'data': None, 'scan': None, 'unique_id': None}"
        },
        "result": null,
        "nodes": [
          {
            "name": "inputnode",
            "type": "node",
            "inputs": {
              "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
              "data": "/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz",
              "scan": "[Undefined]",
              "creds_path": "None",
              "dl_dir": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working/pipeline_cpac_ccs-options"
            },
            "outputs": {
              "unique_id": "[Undefined]",
              "data": "[Undefined]",
              "scan": "[Undefined]",
              "creds_path": "[Undefined]",
              "dl_dir": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "check_for_s3",
            "type": "node",
            "inputs": {
              "function_str": "CPAC.utils.datasource.check_for_s3",
              "file_path": "[Undefined]",
              "creds_path": "[Undefined]",
              "dl_dir": "[Undefined]",
              "img_type": "other"
            },
            "outputs": {
              "local_path": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "outputspec",
            "type": "node",
            "inputs": {
              "unique_id": "[Undefined]",
              "data": "[Undefined]",
              "scan": "[Undefined]"
            },
            "outputs": {
              "unique_id": "[Undefined]",
              "data": "[Undefined]",
              "scan": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          }
        ],
        "edges": [
          {
            "origin": "inputnode",
            "target": "check_for_s3"
          },
          {
            "origin": "inputnode",
            "target": "outputspec"
          },
          {
            "origin": "check_for_s3",
            "target": "outputspec"
          }
        ]
      },
      {
        "name": "CSF_113",
        "type": "workflow",
        "inputs": {
          "inputspec": "{'brain': '[Undefined]', 'brain_mask': '[Undefined]', 'erosion_mm': '[Undefined]', 'erosion_prop': '[Undefined]', 'mask_erosion_mm': '[Undefined]', 'probability_tissue_map': '[Undefined]', 'template_to_T1_xfm': '[Undefined]', 'threshold': 0.95, 'tissue_class_file': '[Undefined]', 'tissue_prior': '[Undefined]'}",
          "seg_tissue_priors_template_to_T1": "{'inputspec': {'input_image': '[Undefined]', 'interpolation': 'NearestNeighbor', 'reference': '[Undefined]', 'transform': '[Undefined]'}, 'interp_string': {'function_str': \"def interpolation_string(interpolation, reg_tool):\\n    if reg_tool == 'ants':\\n        pass\\n    elif reg_tool == 'fsl':\\n        # translate to FSL\\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\\n        #          in C-PAC are now converted to .nii.gz\\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\\n    return interpolation\\n\", 'reg_tool': 'fsl'}, 'fsl_apply_warp': {'abswarp': '[Undefined]', 'args': '[Undefined]', 'datatype': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'mask_file': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'premat': '[Undefined]', 'relwarp': '[Undefined]', 'superlevel': '[Undefined]', 'supersample': '[Undefined]'}, 'outputspec': {}}",
          "overlap_CSF_113_map_with_prior": "{'args': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'internal_datatype': '[Undefined]', 'nan2zeros': '[Undefined]', 'op_string': '-mas %s ', 'out_file': '[Undefined]', 'output_datatype': '[Undefined]', 'output_type': 'NIFTI_GZ'}",
          "outputspec": "{'probability_tissue_map': '[Undefined]'}"
        },
        "outputs": {
          "inputspec": "{'brain': None, 'brain_mask': None, 'erosion_mm': None, 'erosion_prop': None, 'mask_erosion_mm': None, 'probability_tissue_map': None, 'template_to_T1_xfm': None, 'threshold': None, 'tissue_class_file': None, 'tissue_prior': None}",
          "seg_tissue_priors_template_to_T1": "{'inputspec': {'input_image': None, 'interpolation': None, 'reference': None, 'transform': None}, 'interp_string': {'interpolation': None}, 'fsl_apply_warp': {'out_file': None}, 'outputspec': {'output_image': None}}",
          "overlap_CSF_113_map_with_prior": "{'out_file': None}",
          "outputspec": "{'probability_tissue_map': None, 'segment_mask': None}"
        },
        "result": null,
        "nodes": [
          {
            "name": "inputspec",
            "type": "node",
            "inputs": {
              "tissue_prior": "[Undefined]",
              "threshold": "0.95",
              "erosion_prop": "[Undefined]",
              "mask_erosion_mm": "[Undefined]",
              "erosion_mm": "[Undefined]",
              "brain": "[Undefined]",
              "brain_mask": "[Undefined]",
              "tissue_class_file": "[Undefined]",
              "probability_tissue_map": "[Undefined]",
              "template_to_T1_xfm": "[Undefined]"
            },
            "outputs": {
              "tissue_prior": "[Undefined]",
              "threshold": "[Undefined]",
              "erosion_prop": "[Undefined]",
              "mask_erosion_mm": "[Undefined]",
              "erosion_mm": "[Undefined]",
              "brain": "[Undefined]",
              "brain_mask": "[Undefined]",
              "tissue_class_file": "[Undefined]",
              "probability_tissue_map": "[Undefined]",
              "template_to_T1_xfm": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "seg_tissue_priors_template_to_T1",
            "type": "workflow",
            "inputs": {
              "inputspec": "{'input_image': '[Undefined]', 'interpolation': 'NearestNeighbor', 'reference': '[Undefined]', 'transform': '[Undefined]'}",
              "interp_string": "{'function_str': \"def interpolation_string(interpolation, reg_tool):\\n    if reg_tool == 'ants':\\n        pass\\n    elif reg_tool == 'fsl':\\n        # translate to FSL\\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\\n        #          in C-PAC are now converted to .nii.gz\\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\\n    return interpolation\\n\", 'reg_tool': 'fsl'}",
              "fsl_apply_warp": "{'abswarp': '[Undefined]', 'args': '[Undefined]', 'datatype': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'mask_file': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'premat': '[Undefined]', 'relwarp': '[Undefined]', 'superlevel': '[Undefined]', 'supersample': '[Undefined]'}",
              "outputspec": "{}"
            },
            "outputs": {
              "inputspec": "{'input_image': None, 'interpolation': None, 'reference': None, 'transform': None}",
              "interp_string": "{'interpolation': None}",
              "fsl_apply_warp": "{'out_file': None}",
              "outputspec": "{'output_image': None}"
            },
            "result": null,
            "nodes": [
              {
                "name": "inputspec",
                "type": "node",
                "inputs": {
                  "input_image": "[Undefined]",
                  "reference": "[Undefined]",
                  "transform": "[Undefined]",
                  "interpolation": "NearestNeighbor"
                },
                "outputs": {
                  "input_image": "[Undefined]",
                  "reference": "[Undefined]",
                  "transform": "[Undefined]",
                  "interpolation": "[Undefined]"
                },
                "result": null,
                "nodes": [],
                "edges": []
              },
              {
                "name": "interp_string",
                "type": "node",
                "inputs": {
                  "function_str": "def interpolation_string(interpolation, reg_tool):\n    if reg_tool == 'ants':\n        pass\n    elif reg_tool == 'fsl':\n        # translate to FSL\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\n        #          in C-PAC are now converted to .nii.gz\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\n    return interpolation\n",
                  "interpolation": "[Undefined]",
                  "reg_tool": "fsl"
                },
                "outputs": {
                  "interpolation": "[Undefined]"
                },
                "result": null,
                "nodes": [],
                "edges": []
              },
              {
                "name": "fsl_apply_warp",
                "type": "node",
                "inputs": {
                  "in_file": "[Undefined]",
                  "out_file": "[Undefined]",
                  "ref_file": "[Undefined]",
                  "field_file": "[Undefined]",
                  "abswarp": "[Undefined]",
                  "relwarp": "[Undefined]",
                  "datatype": "[Undefined]",
                  "supersample": "[Undefined]",
                  "superlevel": "[Undefined]",
                  "premat": "[Undefined]",
                  "postmat": "[Undefined]",
                  "mask_file": "[Undefined]",
                  "interp": "[Undefined]",
                  "output_type": "NIFTI_GZ",
                  "args": "[Undefined]",
                  "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
                },
                "outputs": {
                  "out_file": "[Undefined]"
                },
                "result": null,
                "nodes": [],
                "edges": []
              },
              {
                "name": "outputspec",
                "type": "node",
                "inputs": {
                  "output_image": "[Undefined]"
                },
                "outputs": {
                  "output_image": "[Undefined]"
                },
                "result": null,
                "nodes": [],
                "edges": []
              }
            ],
            "edges": [
              {
                "origin": "inputspec",
                "target": "interp_string"
              },
              {
                "origin": "inputspec",
                "target": "fsl_apply_warp"
              },
              {
                "origin": "interp_string",
                "target": "fsl_apply_warp"
              },
              {
                "origin": "fsl_apply_warp",
                "target": "outputspec"
              }
            ]
          },
          {
            "name": "overlap_CSF_113_map_with_prior",
            "type": "node",
            "inputs": {
              "op_string": "-mas %s ",
              "operand_files": "[Undefined]",
              "in_file": "[Undefined]",
              "out_file": "[Undefined]",
              "internal_datatype": "[Undefined]",
              "output_datatype": "[Undefined]",
              "nan2zeros": "[Undefined]",
              "output_type": "NIFTI_GZ",
              "args": "[Undefined]",
              "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
            },
            "outputs": {
              "out_file": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "outputspec",
            "type": "node",
            "inputs": {
              "segment_mask": "[Undefined]",
              "probability_tissue_map": "[Undefined]"
            },
            "outputs": {
              "segment_mask": "[Undefined]",
              "probability_tissue_map": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          }
        ],
        "edges": [
          {
            "origin": "inputspec",
            "target": "seg_tissue_priors_template_to_T1"
          },
          {
            "origin": "inputspec",
            "target": "overlap_CSF_113_map_with_prior"
          },
          {
            "origin": "seg_tissue_priors_template_to_T1",
            "target": "overlap_CSF_113_map_with_prior"
          },
          {
            "origin": "overlap_CSF_113_map_with_prior",
            "target": "outputspec"
          }
        ]
      },
      {
        "name": "gather_GM-path",
        "type": "workflow",
        "inputs": {
          "inputnode": "{'creds_path': None, 'data': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'dl_dir': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working/pipeline_cpac_ccs-options', 'scan': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
          "check_for_s3": "{'function_str': 'CPAC.utils.datasource.check_for_s3', 'img_type': 'other'}",
          "outputspec": "{}"
        },
        "outputs": {
          "inputnode": "{'creds_path': None, 'data': None, 'dl_dir': None, 'scan': None, 'unique_id': None}",
          "check_for_s3": "{'local_path': None}",
          "outputspec": "{'data': None, 'scan': None, 'unique_id': None}"
        },
        "result": null,
        "nodes": [
          {
            "name": "inputnode",
            "type": "node",
            "inputs": {
              "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
              "data": "/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz",
              "scan": "[Undefined]",
              "creds_path": "None",
              "dl_dir": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working/pipeline_cpac_ccs-options"
            },
            "outputs": {
              "unique_id": "[Undefined]",
              "data": "[Undefined]",
              "scan": "[Undefined]",
              "creds_path": "[Undefined]",
              "dl_dir": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "check_for_s3",
            "type": "node",
            "inputs": {
              "function_str": "CPAC.utils.datasource.check_for_s3",
              "file_path": "[Undefined]",
              "creds_path": "[Undefined]",
              "dl_dir": "[Undefined]",
              "img_type": "other"
            },
            "outputs": {
              "local_path": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "outputspec",
            "type": "node",
            "inputs": {
              "unique_id": "[Undefined]",
              "data": "[Undefined]",
              "scan": "[Undefined]"
            },
            "outputs": {
              "unique_id": "[Undefined]",
              "data": "[Undefined]",
              "scan": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          }
        ],
        "edges": [
          {
            "origin": "inputnode",
            "target": "check_for_s3"
          },
          {
            "origin": "inputnode",
            "target": "outputspec"
          },
          {
            "origin": "check_for_s3",
            "target": "outputspec"
          }
        ]
      },
      {
        "name": "GM_113",
        "type": "workflow",
        "inputs": {
          "inputspec": "{'brain': '[Undefined]', 'brain_mask': '[Undefined]', 'erosion_mm': '[Undefined]', 'erosion_prop': '[Undefined]', 'mask_erosion_mm': '[Undefined]', 'probability_tissue_map': '[Undefined]', 'template_to_T1_xfm': '[Undefined]', 'threshold': 0.95, 'tissue_class_file': '[Undefined]', 'tissue_prior': '[Undefined]'}",
          "seg_tissue_priors_template_to_T1": "{'inputspec': {'input_image': '[Undefined]', 'interpolation': 'NearestNeighbor', 'reference': '[Undefined]', 'transform': '[Undefined]'}, 'interp_string': {'function_str': \"def interpolation_string(interpolation, reg_tool):\\n    if reg_tool == 'ants':\\n        pass\\n    elif reg_tool == 'fsl':\\n        # translate to FSL\\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\\n        #          in C-PAC are now converted to .nii.gz\\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\\n    return interpolation\\n\", 'reg_tool': 'fsl'}, 'fsl_apply_warp': {'abswarp': '[Undefined]', 'args': '[Undefined]', 'datatype': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'mask_file': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'premat': '[Undefined]', 'relwarp': '[Undefined]', 'superlevel': '[Undefined]', 'supersample': '[Undefined]'}, 'outputspec': {}}",
          "overlap_GM_113_map_with_prior": "{'args': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'internal_datatype': '[Undefined]', 'nan2zeros': '[Undefined]', 'op_string': '-mas %s ', 'out_file': '[Undefined]', 'output_datatype': '[Undefined]', 'output_type': 'NIFTI_GZ'}",
          "outputspec": "{'probability_tissue_map': '[Undefined]'}"
        },
        "outputs": {
          "inputspec": "{'brain': None, 'brain_mask': None, 'erosion_mm': None, 'erosion_prop': None, 'mask_erosion_mm': None, 'probability_tissue_map': None, 'template_to_T1_xfm': None, 'threshold': None, 'tissue_class_file': None, 'tissue_prior': None}",
          "seg_tissue_priors_template_to_T1": "{'inputspec': {'input_image': None, 'interpolation': None, 'reference': None, 'transform': None}, 'interp_string': {'interpolation': None}, 'fsl_apply_warp': {'out_file': None}, 'outputspec': {'output_image': None}}",
          "overlap_GM_113_map_with_prior": "{'out_file': None}",
          "outputspec": "{'probability_tissue_map': None, 'segment_mask': None}"
        },
        "result": null,
        "nodes": [
          {
            "name": "inputspec",
            "type": "node",
            "inputs": {
              "tissue_prior": "[Undefined]",
              "threshold": "0.95",
              "erosion_prop": "[Undefined]",
              "mask_erosion_mm": "[Undefined]",
              "erosion_mm": "[Undefined]",
              "brain": "[Undefined]",
              "brain_mask": "[Undefined]",
              "tissue_class_file": "[Undefined]",
              "probability_tissue_map": "[Undefined]",
              "template_to_T1_xfm": "[Undefined]"
            },
            "outputs": {
              "tissue_prior": "[Undefined]",
              "threshold": "[Undefined]",
              "erosion_prop": "[Undefined]",
              "mask_erosion_mm": "[Undefined]",
              "erosion_mm": "[Undefined]",
              "brain": "[Undefined]",
              "brain_mask": "[Undefined]",
              "tissue_class_file": "[Undefined]",
              "probability_tissue_map": "[Undefined]",
              "template_to_T1_xfm": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "seg_tissue_priors_template_to_T1",
            "type": "workflow",
            "inputs": {
              "inputspec": "{'input_image': '[Undefined]', 'interpolation': 'NearestNeighbor', 'reference': '[Undefined]', 'transform': '[Undefined]'}",
              "interp_string": "{'function_str': \"def interpolation_string(interpolation, reg_tool):\\n    if reg_tool == 'ants':\\n        pass\\n    elif reg_tool == 'fsl':\\n        # translate to FSL\\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\\n        #          in C-PAC are now converted to .nii.gz\\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\\n    return interpolation\\n\", 'reg_tool': 'fsl'}",
              "fsl_apply_warp": "{'abswarp': '[Undefined]', 'args': '[Undefined]', 'datatype': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'mask_file': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'premat': '[Undefined]', 'relwarp': '[Undefined]', 'superlevel': '[Undefined]', 'supersample': '[Undefined]'}",
              "outputspec": "{}"
            },
            "outputs": {
              "inputspec": "{'input_image': None, 'interpolation': None, 'reference': None, 'transform': None}",
              "interp_string": "{'interpolation': None}",
              "fsl_apply_warp": "{'out_file': None}",
              "outputspec": "{'output_image': None}"
            },
            "result": null,
            "nodes": [
              {
                "name": "inputspec",
                "type": "node",
                "inputs": {
                  "input_image": "[Undefined]",
                  "reference": "[Undefined]",
                  "transform": "[Undefined]",
                  "interpolation": "NearestNeighbor"
                },
                "outputs": {
                  "input_image": "[Undefined]",
                  "reference": "[Undefined]",
                  "transform": "[Undefined]",
                  "interpolation": "[Undefined]"
                },
                "result": null,
                "nodes": [],
                "edges": []
              },
              {
                "name": "interp_string",
                "type": "node",
                "inputs": {
                  "function_str": "def interpolation_string(interpolation, reg_tool):\n    if reg_tool == 'ants':\n        pass\n    elif reg_tool == 'fsl':\n        # translate to FSL\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\n        #          in C-PAC are now converted to .nii.gz\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\n    return interpolation\n",
                  "interpolation": "[Undefined]",
                  "reg_tool": "fsl"
                },
                "outputs": {
                  "interpolation": "[Undefined]"
                },
                "result": null,
                "nodes": [],
                "edges": []
              },
              {
                "name": "fsl_apply_warp",
                "type": "node",
                "inputs": {
                  "in_file": "[Undefined]",
                  "out_file": "[Undefined]",
                  "ref_file": "[Undefined]",
                  "field_file": "[Undefined]",
                  "abswarp": "[Undefined]",
                  "relwarp": "[Undefined]",
                  "datatype": "[Undefined]",
                  "supersample": "[Undefined]",
                  "superlevel": "[Undefined]",
                  "premat": "[Undefined]",
                  "postmat": "[Undefined]",
                  "mask_file": "[Undefined]",
                  "interp": "[Undefined]",
                  "output_type": "NIFTI_GZ",
                  "args": "[Undefined]",
                  "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
                },
                "outputs": {
                  "out_file": "[Undefined]"
                },
                "result": null,
                "nodes": [],
                "edges": []
              },
              {
                "name": "outputspec",
                "type": "node",
                "inputs": {
                  "output_image": "[Undefined]"
                },
                "outputs": {
                  "output_image": "[Undefined]"
                },
                "result": null,
                "nodes": [],
                "edges": []
              }
            ],
            "edges": [
              {
                "origin": "inputspec",
                "target": "interp_string"
              },
              {
                "origin": "inputspec",
                "target": "fsl_apply_warp"
              },
              {
                "origin": "interp_string",
                "target": "fsl_apply_warp"
              },
              {
                "origin": "fsl_apply_warp",
                "target": "outputspec"
              }
            ]
          },
          {
            "name": "overlap_GM_113_map_with_prior",
            "type": "node",
            "inputs": {
              "op_string": "-mas %s ",
              "operand_files": "[Undefined]",
              "in_file": "[Undefined]",
              "out_file": "[Undefined]",
              "internal_datatype": "[Undefined]",
              "output_datatype": "[Undefined]",
              "nan2zeros": "[Undefined]",
              "output_type": "NIFTI_GZ",
              "args": "[Undefined]",
              "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
            },
            "outputs": {
              "out_file": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "outputspec",
            "type": "node",
            "inputs": {
              "segment_mask": "[Undefined]",
              "probability_tissue_map": "[Undefined]"
            },
            "outputs": {
              "segment_mask": "[Undefined]",
              "probability_tissue_map": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          }
        ],
        "edges": [
          {
            "origin": "inputspec",
            "target": "seg_tissue_priors_template_to_T1"
          },
          {
            "origin": "inputspec",
            "target": "overlap_GM_113_map_with_prior"
          },
          {
            "origin": "seg_tissue_priors_template_to_T1",
            "target": "overlap_GM_113_map_with_prior"
          },
          {
            "origin": "overlap_GM_113_map_with_prior",
            "target": "outputspec"
          }
        ]
      },
      {
        "name": "gather_WM-path",
        "type": "workflow",
        "inputs": {
          "inputnode": "{'creds_path': None, 'data': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'dl_dir': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working/pipeline_cpac_ccs-options', 'scan': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
          "check_for_s3": "{'function_str': 'CPAC.utils.datasource.check_for_s3', 'img_type': 'other'}",
          "outputspec": "{}"
        },
        "outputs": {
          "inputnode": "{'creds_path': None, 'data': None, 'dl_dir': None, 'scan': None, 'unique_id': None}",
          "check_for_s3": "{'local_path': None}",
          "outputspec": "{'data': None, 'scan': None, 'unique_id': None}"
        },
        "result": null,
        "nodes": [
          {
            "name": "inputnode",
            "type": "node",
            "inputs": {
              "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
              "data": "/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz",
              "scan": "[Undefined]",
              "creds_path": "None",
              "dl_dir": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working/pipeline_cpac_ccs-options"
            },
            "outputs": {
              "unique_id": "[Undefined]",
              "data": "[Undefined]",
              "scan": "[Undefined]",
              "creds_path": "[Undefined]",
              "dl_dir": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "check_for_s3",
            "type": "node",
            "inputs": {
              "function_str": "CPAC.utils.datasource.check_for_s3",
              "file_path": "[Undefined]",
              "creds_path": "[Undefined]",
              "dl_dir": "[Undefined]",
              "img_type": "other"
            },
            "outputs": {
              "local_path": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "outputspec",
            "type": "node",
            "inputs": {
              "unique_id": "[Undefined]",
              "data": "[Undefined]",
              "scan": "[Undefined]"
            },
            "outputs": {
              "unique_id": "[Undefined]",
              "data": "[Undefined]",
              "scan": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          }
        ],
        "edges": [
          {
            "origin": "inputnode",
            "target": "check_for_s3"
          },
          {
            "origin": "inputnode",
            "target": "outputspec"
          },
          {
            "origin": "check_for_s3",
            "target": "outputspec"
          }
        ]
      },
      {
        "name": "WM_113",
        "type": "workflow",
        "inputs": {
          "inputspec": "{'brain': '[Undefined]', 'brain_mask': '[Undefined]', 'erosion_mm': '[Undefined]', 'erosion_prop': '[Undefined]', 'mask_erosion_mm': '[Undefined]', 'probability_tissue_map': '[Undefined]', 'template_to_T1_xfm': '[Undefined]', 'threshold': 0.95, 'tissue_class_file': '[Undefined]', 'tissue_prior': '[Undefined]'}",
          "seg_tissue_priors_template_to_T1": "{'inputspec': {'input_image': '[Undefined]', 'interpolation': 'NearestNeighbor', 'reference': '[Undefined]', 'transform': '[Undefined]'}, 'interp_string': {'function_str': \"def interpolation_string(interpolation, reg_tool):\\n    if reg_tool == 'ants':\\n        pass\\n    elif reg_tool == 'fsl':\\n        # translate to FSL\\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\\n        #          in C-PAC are now converted to .nii.gz\\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\\n    return interpolation\\n\", 'reg_tool': 'fsl'}, 'fsl_apply_warp': {'abswarp': '[Undefined]', 'args': '[Undefined]', 'datatype': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'mask_file': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'premat': '[Undefined]', 'relwarp': '[Undefined]', 'superlevel': '[Undefined]', 'supersample': '[Undefined]'}, 'outputspec': {}}",
          "overlap_WM_113_map_with_prior": "{'args': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'internal_datatype': '[Undefined]', 'nan2zeros': '[Undefined]', 'op_string': '-mas %s ', 'out_file': '[Undefined]', 'output_datatype': '[Undefined]', 'output_type': 'NIFTI_GZ'}",
          "outputspec": "{'probability_tissue_map': '[Undefined]'}"
        },
        "outputs": {
          "inputspec": "{'brain': None, 'brain_mask': None, 'erosion_mm': None, 'erosion_prop': None, 'mask_erosion_mm': None, 'probability_tissue_map': None, 'template_to_T1_xfm': None, 'threshold': None, 'tissue_class_file': None, 'tissue_prior': None}",
          "seg_tissue_priors_template_to_T1": "{'inputspec': {'input_image': None, 'interpolation': None, 'reference': None, 'transform': None}, 'interp_string': {'interpolation': None}, 'fsl_apply_warp': {'out_file': None}, 'outputspec': {'output_image': None}}",
          "overlap_WM_113_map_with_prior": "{'out_file': None}",
          "outputspec": "{'probability_tissue_map': None, 'segment_mask': None}"
        },
        "result": null,
        "nodes": [
          {
            "name": "inputspec",
            "type": "node",
            "inputs": {
              "tissue_prior": "[Undefined]",
              "threshold": "0.95",
              "erosion_prop": "[Undefined]",
              "mask_erosion_mm": "[Undefined]",
              "erosion_mm": "[Undefined]",
              "brain": "[Undefined]",
              "brain_mask": "[Undefined]",
              "tissue_class_file": "[Undefined]",
              "probability_tissue_map": "[Undefined]",
              "template_to_T1_xfm": "[Undefined]"
            },
            "outputs": {
              "tissue_prior": "[Undefined]",
              "threshold": "[Undefined]",
              "erosion_prop": "[Undefined]",
              "mask_erosion_mm": "[Undefined]",
              "erosion_mm": "[Undefined]",
              "brain": "[Undefined]",
              "brain_mask": "[Undefined]",
              "tissue_class_file": "[Undefined]",
              "probability_tissue_map": "[Undefined]",
              "template_to_T1_xfm": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "seg_tissue_priors_template_to_T1",
            "type": "workflow",
            "inputs": {
              "inputspec": "{'input_image': '[Undefined]', 'interpolation': 'NearestNeighbor', 'reference': '[Undefined]', 'transform': '[Undefined]'}",
              "interp_string": "{'function_str': \"def interpolation_string(interpolation, reg_tool):\\n    if reg_tool == 'ants':\\n        pass\\n    elif reg_tool == 'fsl':\\n        # translate to FSL\\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\\n        #          in C-PAC are now converted to .nii.gz\\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\\n    return interpolation\\n\", 'reg_tool': 'fsl'}",
              "fsl_apply_warp": "{'abswarp': '[Undefined]', 'args': '[Undefined]', 'datatype': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'mask_file': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'premat': '[Undefined]', 'relwarp': '[Undefined]', 'superlevel': '[Undefined]', 'supersample': '[Undefined]'}",
              "outputspec": "{}"
            },
            "outputs": {
              "inputspec": "{'input_image': None, 'interpolation': None, 'reference': None, 'transform': None}",
              "interp_string": "{'interpolation': None}",
              "fsl_apply_warp": "{'out_file': None}",
              "outputspec": "{'output_image': None}"
            },
            "result": null,
            "nodes": [
              {
                "name": "inputspec",
                "type": "node",
                "inputs": {
                  "input_image": "[Undefined]",
                  "reference": "[Undefined]",
                  "transform": "[Undefined]",
                  "interpolation": "NearestNeighbor"
                },
                "outputs": {
                  "input_image": "[Undefined]",
                  "reference": "[Undefined]",
                  "transform": "[Undefined]",
                  "interpolation": "[Undefined]"
                },
                "result": null,
                "nodes": [],
                "edges": []
              },
              {
                "name": "interp_string",
                "type": "node",
                "inputs": {
                  "function_str": "def interpolation_string(interpolation, reg_tool):\n    if reg_tool == 'ants':\n        pass\n    elif reg_tool == 'fsl':\n        # translate to FSL\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\n        #          in C-PAC are now converted to .nii.gz\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\n    return interpolation\n",
                  "interpolation": "[Undefined]",
                  "reg_tool": "fsl"
                },
                "outputs": {
                  "interpolation": "[Undefined]"
                },
                "result": null,
                "nodes": [],
                "edges": []
              },
              {
                "name": "fsl_apply_warp",
                "type": "node",
                "inputs": {
                  "in_file": "[Undefined]",
                  "out_file": "[Undefined]",
                  "ref_file": "[Undefined]",
                  "field_file": "[Undefined]",
                  "abswarp": "[Undefined]",
                  "relwarp": "[Undefined]",
                  "datatype": "[Undefined]",
                  "supersample": "[Undefined]",
                  "superlevel": "[Undefined]",
                  "premat": "[Undefined]",
                  "postmat": "[Undefined]",
                  "mask_file": "[Undefined]",
                  "interp": "[Undefined]",
                  "output_type": "NIFTI_GZ",
                  "args": "[Undefined]",
                  "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
                },
                "outputs": {
                  "out_file": "[Undefined]"
                },
                "result": null,
                "nodes": [],
                "edges": []
              },
              {
                "name": "outputspec",
                "type": "node",
                "inputs": {
                  "output_image": "[Undefined]"
                },
                "outputs": {
                  "output_image": "[Undefined]"
                },
                "result": null,
                "nodes": [],
                "edges": []
              }
            ],
            "edges": [
              {
                "origin": "inputspec",
                "target": "interp_string"
              },
              {
                "origin": "inputspec",
                "target": "fsl_apply_warp"
              },
              {
                "origin": "interp_string",
                "target": "fsl_apply_warp"
              },
              {
                "origin": "fsl_apply_warp",
                "target": "outputspec"
              }
            ]
          },
          {
            "name": "overlap_WM_113_map_with_prior",
            "type": "node",
            "inputs": {
              "op_string": "-mas %s ",
              "operand_files": "[Undefined]",
              "in_file": "[Undefined]",
              "out_file": "[Undefined]",
              "internal_datatype": "[Undefined]",
              "output_datatype": "[Undefined]",
              "nan2zeros": "[Undefined]",
              "output_type": "NIFTI_GZ",
              "args": "[Undefined]",
              "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
            },
            "outputs": {
              "out_file": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "outputspec",
            "type": "node",
            "inputs": {
              "segment_mask": "[Undefined]",
              "probability_tissue_map": "[Undefined]"
            },
            "outputs": {
              "segment_mask": "[Undefined]",
              "probability_tissue_map": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          }
        ],
        "edges": [
          {
            "origin": "inputspec",
            "target": "seg_tissue_priors_template_to_T1"
          },
          {
            "origin": "inputspec",
            "target": "overlap_WM_113_map_with_prior"
          },
          {
            "origin": "seg_tissue_priors_template_to_T1",
            "target": "overlap_WM_113_map_with_prior"
          },
          {
            "origin": "overlap_WM_113_map_with_prior",
            "target": "outputspec"
          }
        ]
      },
      {
        "name": "fsl_invlin-warp_to_nii",
        "type": "node",
        "inputs": {
          "reference": "[Undefined]",
          "out_file": "[Undefined]",
          "premat": "[Undefined]",
          "warp1": "[Undefined]",
          "midmat": "[Undefined]",
          "warp2": "[Undefined]",
          "postmat": "[Undefined]",
          "shift_in_file": "[Undefined]",
          "shift_direction": "[Undefined]",
          "cons_jacobian": "[Undefined]",
          "jacobian_min": "[Undefined]",
          "jacobian_max": "[Undefined]",
          "abswarp": "[Undefined]",
          "relwarp": "[Undefined]",
          "out_abswarp": "[Undefined]",
          "out_relwarp": "[Undefined]",
          "output_type": "NIFTI_GZ",
          "args": "[Undefined]",
          "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "get_csf_113",
        "type": "node",
        "inputs": {
          "function_str": "def pick_wm_prob_0(probability_maps):\n    \"\"\"Returns the csf probability map from the list of segmented\n    probability maps\n\n    Parameters\n    ----------\n\n    probability_maps : list (string)\n        List of Probability Maps\n\n    Returns\n    -------\n\n    file : string\n        Path to segment_prob_0.nii.gz is returned\n    \"\"\"\n    if isinstance(probability_maps, list):\n        if len(probability_maps) == 1:\n            probability_maps = probability_maps[0]\n        for filename in probability_maps:\n            if filename.endswith(\"prob_0.nii.gz\"):\n                return filename\n    return None\n",
          "probability_maps": "[Undefined]"
        },
        "outputs": {
          "filename": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "warp_label-CSF_mask_to_T1wtemplate_131",
        "type": "workflow",
        "inputs": {
          "inputspec": "{'input_image': '[Undefined]', 'interpolation': 'nn', 'reference': '[Undefined]', 'transform': '[Undefined]'}",
          "interp_string": "{'function_str': \"def interpolation_string(interpolation, reg_tool):\\n    if reg_tool == 'ants':\\n        pass\\n    elif reg_tool == 'fsl':\\n        # translate to FSL\\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\\n        #          in C-PAC are now converted to .nii.gz\\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\\n    return interpolation\\n\", 'reg_tool': 'fsl'}",
          "fsl_apply_warp": "{'abswarp': '[Undefined]', 'args': '[Undefined]', 'datatype': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'mask_file': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'premat': '[Undefined]', 'relwarp': '[Undefined]', 'superlevel': '[Undefined]', 'supersample': '[Undefined]'}",
          "outputspec": "{}"
        },
        "outputs": {
          "inputspec": "{'input_image': None, 'interpolation': None, 'reference': None, 'transform': None}",
          "interp_string": "{'interpolation': None}",
          "fsl_apply_warp": "{'out_file': None}",
          "outputspec": "{'output_image': None}"
        },
        "result": null,
        "nodes": [
          {
            "name": "inputspec",
            "type": "node",
            "inputs": {
              "input_image": "[Undefined]",
              "reference": "[Undefined]",
              "transform": "[Undefined]",
              "interpolation": "nn"
            },
            "outputs": {
              "input_image": "[Undefined]",
              "reference": "[Undefined]",
              "transform": "[Undefined]",
              "interpolation": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "interp_string",
            "type": "node",
            "inputs": {
              "function_str": "def interpolation_string(interpolation, reg_tool):\n    if reg_tool == 'ants':\n        pass\n    elif reg_tool == 'fsl':\n        # translate to FSL\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\n        #          in C-PAC are now converted to .nii.gz\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\n    return interpolation\n",
              "interpolation": "[Undefined]",
              "reg_tool": "fsl"
            },
            "outputs": {
              "interpolation": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "fsl_apply_warp",
            "type": "node",
            "inputs": {
              "in_file": "[Undefined]",
              "out_file": "[Undefined]",
              "ref_file": "[Undefined]",
              "field_file": "[Undefined]",
              "abswarp": "[Undefined]",
              "relwarp": "[Undefined]",
              "datatype": "[Undefined]",
              "supersample": "[Undefined]",
              "superlevel": "[Undefined]",
              "premat": "[Undefined]",
              "postmat": "[Undefined]",
              "mask_file": "[Undefined]",
              "interp": "[Undefined]",
              "output_type": "NIFTI_GZ",
              "args": "[Undefined]",
              "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
            },
            "outputs": {
              "out_file": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "outputspec",
            "type": "node",
            "inputs": {
              "output_image": "[Undefined]"
            },
            "outputs": {
              "output_image": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          }
        ],
        "edges": [
          {
            "origin": "inputspec",
            "target": "interp_string"
          },
          {
            "origin": "inputspec",
            "target": "fsl_apply_warp"
          },
          {
            "origin": "interp_string",
            "target": "fsl_apply_warp"
          },
          {
            "origin": "fsl_apply_warp",
            "target": "outputspec"
          }
        ]
      },
      {
        "name": "warp_label-WM_mask_to_T1wtemplate_131",
        "type": "workflow",
        "inputs": {
          "inputspec": "{'input_image': '[Undefined]', 'interpolation': 'nn', 'reference': '[Undefined]', 'transform': '[Undefined]'}",
          "interp_string": "{'function_str': \"def interpolation_string(interpolation, reg_tool):\\n    if reg_tool == 'ants':\\n        pass\\n    elif reg_tool == 'fsl':\\n        # translate to FSL\\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\\n        #          in C-PAC are now converted to .nii.gz\\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\\n    return interpolation\\n\", 'reg_tool': 'fsl'}",
          "fsl_apply_warp": "{'abswarp': '[Undefined]', 'args': '[Undefined]', 'datatype': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'mask_file': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'premat': '[Undefined]', 'relwarp': '[Undefined]', 'superlevel': '[Undefined]', 'supersample': '[Undefined]'}",
          "outputspec": "{}"
        },
        "outputs": {
          "inputspec": "{'input_image': None, 'interpolation': None, 'reference': None, 'transform': None}",
          "interp_string": "{'interpolation': None}",
          "fsl_apply_warp": "{'out_file': None}",
          "outputspec": "{'output_image': None}"
        },
        "result": null,
        "nodes": [
          {
            "name": "inputspec",
            "type": "node",
            "inputs": {
              "input_image": "[Undefined]",
              "reference": "[Undefined]",
              "transform": "[Undefined]",
              "interpolation": "nn"
            },
            "outputs": {
              "input_image": "[Undefined]",
              "reference": "[Undefined]",
              "transform": "[Undefined]",
              "interpolation": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "interp_string",
            "type": "node",
            "inputs": {
              "function_str": "def interpolation_string(interpolation, reg_tool):\n    if reg_tool == 'ants':\n        pass\n    elif reg_tool == 'fsl':\n        # translate to FSL\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\n        #          in C-PAC are now converted to .nii.gz\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\n    return interpolation\n",
              "interpolation": "[Undefined]",
              "reg_tool": "fsl"
            },
            "outputs": {
              "interpolation": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "fsl_apply_warp",
            "type": "node",
            "inputs": {
              "in_file": "[Undefined]",
              "out_file": "[Undefined]",
              "ref_file": "[Undefined]",
              "field_file": "[Undefined]",
              "abswarp": "[Undefined]",
              "relwarp": "[Undefined]",
              "datatype": "[Undefined]",
              "supersample": "[Undefined]",
              "superlevel": "[Undefined]",
              "premat": "[Undefined]",
              "postmat": "[Undefined]",
              "mask_file": "[Undefined]",
              "interp": "[Undefined]",
              "output_type": "NIFTI_GZ",
              "args": "[Undefined]",
              "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
            },
            "outputs": {
              "out_file": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "outputspec",
            "type": "node",
            "inputs": {
              "output_image": "[Undefined]"
            },
            "outputs": {
              "output_image": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          }
        ],
        "edges": [
          {
            "origin": "inputspec",
            "target": "interp_string"
          },
          {
            "origin": "inputspec",
            "target": "fsl_apply_warp"
          },
          {
            "origin": "interp_string",
            "target": "fsl_apply_warp"
          },
          {
            "origin": "fsl_apply_warp",
            "target": "outputspec"
          }
        ]
      },
      {
        "name": "warp_label-GM_mask_to_T1wtemplate_131",
        "type": "workflow",
        "inputs": {
          "inputspec": "{'input_image': '[Undefined]', 'interpolation': 'nn', 'reference': '[Undefined]', 'transform': '[Undefined]'}",
          "interp_string": "{'function_str': \"def interpolation_string(interpolation, reg_tool):\\n    if reg_tool == 'ants':\\n        pass\\n    elif reg_tool == 'fsl':\\n        # translate to FSL\\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\\n        #          in C-PAC are now converted to .nii.gz\\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\\n    return interpolation\\n\", 'reg_tool': 'fsl'}",
          "fsl_apply_warp": "{'abswarp': '[Undefined]', 'args': '[Undefined]', 'datatype': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'mask_file': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'premat': '[Undefined]', 'relwarp': '[Undefined]', 'superlevel': '[Undefined]', 'supersample': '[Undefined]'}",
          "outputspec": "{}"
        },
        "outputs": {
          "inputspec": "{'input_image': None, 'interpolation': None, 'reference': None, 'transform': None}",
          "interp_string": "{'interpolation': None}",
          "fsl_apply_warp": "{'out_file': None}",
          "outputspec": "{'output_image': None}"
        },
        "result": null,
        "nodes": [
          {
            "name": "inputspec",
            "type": "node",
            "inputs": {
              "input_image": "[Undefined]",
              "reference": "[Undefined]",
              "transform": "[Undefined]",
              "interpolation": "nn"
            },
            "outputs": {
              "input_image": "[Undefined]",
              "reference": "[Undefined]",
              "transform": "[Undefined]",
              "interpolation": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "interp_string",
            "type": "node",
            "inputs": {
              "function_str": "def interpolation_string(interpolation, reg_tool):\n    if reg_tool == 'ants':\n        pass\n    elif reg_tool == 'fsl':\n        # translate to FSL\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\n        #          in C-PAC are now converted to .nii.gz\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\n    return interpolation\n",
              "interpolation": "[Undefined]",
              "reg_tool": "fsl"
            },
            "outputs": {
              "interpolation": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "fsl_apply_warp",
            "type": "node",
            "inputs": {
              "in_file": "[Undefined]",
              "out_file": "[Undefined]",
              "ref_file": "[Undefined]",
              "field_file": "[Undefined]",
              "abswarp": "[Undefined]",
              "relwarp": "[Undefined]",
              "datatype": "[Undefined]",
              "supersample": "[Undefined]",
              "superlevel": "[Undefined]",
              "premat": "[Undefined]",
              "postmat": "[Undefined]",
              "mask_file": "[Undefined]",
              "interp": "[Undefined]",
              "output_type": "NIFTI_GZ",
              "args": "[Undefined]",
              "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
            },
            "outputs": {
              "out_file": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "outputspec",
            "type": "node",
            "inputs": {
              "output_image": "[Undefined]"
            },
            "outputs": {
              "output_image": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          }
        ],
        "edges": [
          {
            "origin": "inputspec",
            "target": "interp_string"
          },
          {
            "origin": "inputspec",
            "target": "fsl_apply_warp"
          },
          {
            "origin": "interp_string",
            "target": "fsl_apply_warp"
          },
          {
            "origin": "fsl_apply_warp",
            "target": "outputspec"
          }
        ]
      },
      {
        "name": "func_deoblique_2",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "deoblique": "True",
          "xorigin": "[Undefined]",
          "yorigin": "[Undefined]",
          "zorigin": "[Undefined]",
          "duporigin_file": "[Undefined]",
          "xdel": "[Undefined]",
          "ydel": "[Undefined]",
          "zdel": "[Undefined]",
          "xyzscale": "[Undefined]",
          "space": "[Undefined]",
          "atrcopy": "[Undefined]",
          "atrstring": "[Undefined]",
          "atrfloat": "[Undefined]",
          "atrint": "[Undefined]",
          "saveatr": "[Undefined]",
          "nosaveatr": "[Undefined]",
          "args": "[Undefined]",
          "environ": "{}"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "func_reorient_2",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "out_file": "[Undefined]",
          "orientation": "RPI",
          "resample_mode": "[Undefined]",
          "voxel_size": "[Undefined]",
          "master": "[Undefined]",
          "num_threads": "1",
          "outputtype": "NIFTI_GZ",
          "args": "[Undefined]",
          "environ": "{}"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "edit_func_139",
        "type": "workflow",
        "inputs": {
          "inputspec": "{'func': '[Undefined]', 'start_idx': 0, 'stop_idx': None}",
          "func_get_idx": "{'function_str': 'def get_idx(in_files, stop_idx=None, start_idx=None):\\n    \"\"\"\\n    Method to get the first and the last slice for\\n    the functional run. It verifies the user specified\\n    first and last slice. If the values are not valid, it\\n    calculates and returns the very first and the last slice\\n\\n    Parameters\\n    ----------\\n    in_file : str (nifti file)\\n       Path to input functional run\\n\\n    stop_idx : int\\n        Last volume to be considered, specified by user\\n        in the configuration file\\n\\n    stop_idx : int\\n        First volume to be considered, specified by user\\n        in the configuration file\\n\\n    Returns\\n    -------\\n    stop_idx :  int\\n        Value of first slice to consider for the functional run\\n\\n    start_idx : int\\n        Value of last slice to consider for the functional run\\n\\n    \"\"\"\\n\\n    # Import packages\\n    from nibabel import load\\n\\n    # Init variables\\n    img = load(in_files)\\n    hdr = img.header\\n    shape = hdr.get_data_shape()\\n\\n    # Check to make sure the input file is 4-dimensional\\n    if len(shape) != 4:\\n        raise TypeError(\\'Input nifti file: %s is not a 4D file\\' % in_files)\\n    # Grab the number of volumes\\n    nvols = int(hdr.get_data_shape()[3])\\n\\n    if (start_idx == None) or (int(start_idx) < 0) or (\\n        int(start_idx) > (nvols - 1)):\\n        startidx = 0\\n    else:\\n        startidx = int(start_idx)\\n\\n    if (stop_idx in [None, \"End\"]) or (int(stop_idx) > (nvols - 1)):\\n        stopidx = nvols - 1\\n    else:\\n        stopidx = int(stop_idx)\\n\\n    return stopidx, startidx\\n'}",
          "func_drop_trs": "{'args': '[Undefined]', 'environ': {}, 'expr': 'a', 'in_file_b': '[Undefined]', 'in_file_c': '[Undefined]', 'num_threads': 1, 'other': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'overwrite': '[Undefined]', 'single_idx': '[Undefined]'}",
          "outputspec": "{}"
        },
        "outputs": {
          "inputspec": "{'func': None, 'start_idx': None, 'stop_idx': None}",
          "func_get_idx": "{'startidx': None, 'stopidx': None}",
          "func_drop_trs": "{'out_file': None}",
          "outputspec": "{'edited_func': None}"
        },
        "result": null,
        "nodes": [
          {
            "name": "inputspec",
            "type": "node",
            "inputs": {
              "func": "[Undefined]",
              "start_idx": "0",
              "stop_idx": "None"
            },
            "outputs": {
              "func": "[Undefined]",
              "start_idx": "[Undefined]",
              "stop_idx": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "func_get_idx",
            "type": "node",
            "inputs": {
              "function_str": "def get_idx(in_files, stop_idx=None, start_idx=None):\n    \"\"\"\n    Method to get the first and the last slice for\n    the functional run. It verifies the user specified\n    first and last slice. If the values are not valid, it\n    calculates and returns the very first and the last slice\n\n    Parameters\n    ----------\n    in_file : str (nifti file)\n       Path to input functional run\n\n    stop_idx : int\n        Last volume to be considered, specified by user\n        in the configuration file\n\n    stop_idx : int\n        First volume to be considered, specified by user\n        in the configuration file\n\n    Returns\n    -------\n    stop_idx :  int\n        Value of first slice to consider for the functional run\n\n    start_idx : int\n        Value of last slice to consider for the functional run\n\n    \"\"\"\n\n    # Import packages\n    from nibabel import load\n\n    # Init variables\n    img = load(in_files)\n    hdr = img.header\n    shape = hdr.get_data_shape()\n\n    # Check to make sure the input file is 4-dimensional\n    if len(shape) != 4:\n        raise TypeError('Input nifti file: %s is not a 4D file' % in_files)\n    # Grab the number of volumes\n    nvols = int(hdr.get_data_shape()[3])\n\n    if (start_idx == None) or (int(start_idx) < 0) or (\n        int(start_idx) > (nvols - 1)):\n        startidx = 0\n    else:\n        startidx = int(start_idx)\n\n    if (stop_idx in [None, \"End\"]) or (int(stop_idx) > (nvols - 1)):\n        stopidx = nvols - 1\n    else:\n        stopidx = int(stop_idx)\n\n    return stopidx, startidx\n",
              "in_files": "[Undefined]",
              "stop_idx": "[Undefined]",
              "start_idx": "[Undefined]"
            },
            "outputs": {
              "stopidx": "[Undefined]",
              "startidx": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "func_drop_trs",
            "type": "node",
            "inputs": {
              "in_file_a": "[Undefined]",
              "in_file_b": "[Undefined]",
              "in_file_c": "[Undefined]",
              "out_file": "[Undefined]",
              "expr": "a",
              "start_idx": "[Undefined]",
              "stop_idx": "[Undefined]",
              "single_idx": "[Undefined]",
              "overwrite": "[Undefined]",
              "other": "[Undefined]",
              "num_threads": "1",
              "outputtype": "NIFTI_GZ",
              "args": "[Undefined]",
              "environ": "{}"
            },
            "outputs": {
              "out_file": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "outputspec",
            "type": "node",
            "inputs": {
              "edited_func": "[Undefined]"
            },
            "outputs": {
              "edited_func": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          }
        ],
        "edges": [
          {
            "origin": "inputspec",
            "target": "func_get_idx"
          },
          {
            "origin": "inputspec",
            "target": "func_drop_trs"
          },
          {
            "origin": "func_get_idx",
            "target": "func_drop_trs"
          },
          {
            "origin": "func_drop_trs",
            "target": "outputspec"
          }
        ]
      },
      {
        "name": "func_despiked_141",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "out_file": "[Undefined]",
          "num_threads": "1",
          "outputtype": "NIFTI_GZ",
          "args": "[Undefined]",
          "environ": "{}"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "func_slice_timing_correction_143",
        "type": "workflow",
        "inputs": {
          "inputspec": "{'func_ts': '[Undefined]', 'tpattern': '[Undefined]', 'tr': '[Undefined]'}",
          "slice_timing": "{'args': '[Undefined]', 'environ': {}, 'ignore': '[Undefined]', 'interp': '[Undefined]', 'num_threads': 1, 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'rlt': '[Undefined]', 'rltplus': '[Undefined]', 'slice_encoding_direction': 'k', 'slice_timing': '[Undefined]', 'tpattern': 'alt+z', 'tslice': '[Undefined]', 'tzero': 0.0}",
          "outputspec": "{}"
        },
        "outputs": {
          "inputspec": "{'func_ts': None, 'tpattern': None, 'tr': None}",
          "slice_timing": "{'out_file': None, 'timing_file': None}",
          "outputspec": "{'slice_time_corrected': None}"
        },
        "result": null,
        "nodes": [
          {
            "name": "inputspec",
            "type": "node",
            "inputs": {
              "func_ts": "[Undefined]",
              "tr": "[Undefined]",
              "tpattern": "[Undefined]"
            },
            "outputs": {
              "func_ts": "[Undefined]",
              "tr": "[Undefined]",
              "tpattern": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "slice_timing",
            "type": "node",
            "inputs": {
              "in_file": "[Undefined]",
              "out_file": "[Undefined]",
              "tr": "[Undefined]",
              "tzero": "0.0",
              "tslice": "[Undefined]",
              "ignore": "[Undefined]",
              "interp": "[Undefined]",
              "tpattern": "alt+z",
              "slice_timing": "[Undefined]",
              "slice_encoding_direction": "k",
              "rlt": "[Undefined]",
              "rltplus": "[Undefined]",
              "num_threads": "1",
              "outputtype": "NIFTI_GZ",
              "args": "[Undefined]",
              "environ": "{}"
            },
            "outputs": {
              "timing_file": "[Undefined]",
              "out_file": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "outputspec",
            "type": "node",
            "inputs": {
              "slice_time_corrected": "[Undefined]"
            },
            "outputs": {
              "slice_time_corrected": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          }
        ],
        "edges": [
          {
            "origin": "inputspec",
            "target": "slice_timing"
          },
          {
            "origin": "slice_timing",
            "target": "outputspec"
          }
        ]
      },
      {
        "name": "func_mean_146",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "out_file": "[Undefined]",
          "mask": "[Undefined]",
          "options": "-mean",
          "num_threads": "1",
          "outputtype": "NIFTI_GZ",
          "args": "[Undefined]",
          "environ": "{}"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "func_get_mean_RPI_149",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "out_file": "[Undefined]",
          "mask": "[Undefined]",
          "options": "-mean",
          "num_threads": "1",
          "outputtype": "NIFTI_GZ",
          "args": "[Undefined]",
          "environ": "{}"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "chunk_152",
        "type": "node",
        "inputs": {
          "function_str": "def chunk_ts(func_file, n_chunks=None, chunk_size=None):\n    func_img = nb.load(func_file)\n    trs = func_img.shape[3]\n    TR_ranges = []\n\n    if n_chunks:\n        chunk_size = trs/n_chunks\n    elif chunk_size:\n        n_chunks = int(trs/chunk_size)\n    else:\n        raise Exception(\"\\n[!] Dev error: Either 'n_chunks' or 'chunk_size' \"\n                        \"arguments must be passed to 'chunk_ts' function.\\n\")\n\n    for chunk_idx in range(0, n_chunks):\n        if chunk_idx == n_chunks - 1:\n            TR_ranges.append((int(chunk_idx*chunk_size), int(trs - 1)))\n        else:\n            TR_ranges.append((int(chunk_idx*chunk_size), int((chunk_idx+1)*chunk_size - 1)))\n    return TR_ranges\n",
          "func_file": "[Undefined]",
          "n_chunks": "[Undefined]",
          "chunk_size": "10"
        },
        "outputs": {
          "TR_ranges": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "split_152",
        "type": "node",
        "inputs": {
          "function_str": "def split_ts_chunks(func_file, tr_ranges):\n    if '.nii' in func_file:\n        ext = '.nii'\n    if '.nii.gz' in func_file:\n        ext = '.nii.gz'\n\n    split_funcs = []\n    for chunk_idx, tr_range in enumerate(tr_ranges):\n        out_file = os.path.join(os.getcwd(), os.path.basename(func_file).replace(ext, \"_{0}{1}\".format(chunk_idx, ext)))\n        in_file = \"{0}[{1}..{2}]\".format(func_file, tr_range[0], tr_range[1])\n\n        cmd = [\"3dcalc\", \"-a\", in_file, \"-expr\", \"a\", \"-prefix\", out_file]\n\n        retcode = subprocess.check_output(cmd)\n\n        split_funcs.append(out_file)\n\n    return split_funcs\n",
          "func_file": "[Undefined]",
          "tr_ranges": "[Undefined]"
        },
        "outputs": {
          "split_funcs": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "out_split_func_152",
        "type": "node",
        "inputs": {
          "out_file": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "func_generate_ref_152_",
        "type": "node",
        "inputs": {
          "args": "-twopass -Fourier",
          "basefile": "[Undefined]",
          "copyorigin": "[Undefined]",
          "environ": "{}",
          "in_file": "[Undefined]",
          "in_weight_volume": "[Undefined]",
          "interp": "[Undefined]",
          "md1d_file": "[Undefined]",
          "num_threads": "1",
          "oned_file": "[Undefined]",
          "oned_matrix_save": "[Undefined]",
          "out_file": "[Undefined]",
          "outputtype": "NIFTI_GZ",
          "timeshift": "[Undefined]",
          "verbose": "[Undefined]",
          "zpad": "4"
        },
        "outputs": {
          "out_file": "[Undefined]",
          "md1d_file": "[Undefined]",
          "oned_file": "[Undefined]",
          "oned_matrix_save": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "func_concat_152",
        "type": "node",
        "inputs": {
          "in_files": "[Undefined]",
          "out_file": "[Undefined]",
          "rlt": "[Undefined]",
          "verbose": "[Undefined]",
          "num_threads": "1",
          "outputtype": "NIFTI_GZ",
          "args": "[Undefined]",
          "environ": "{}"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "out_motion_152",
        "type": "node",
        "inputs": {
          "out_file": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "func_motion_correct_3dvolreg_152",
        "type": "node",
        "inputs": {
          "args": "-twopass -Fourier",
          "basefile": "[Undefined]",
          "copyorigin": "[Undefined]",
          "environ": "{}",
          "in_file": "[Undefined]",
          "in_weight_volume": "[Undefined]",
          "interp": "[Undefined]",
          "md1d_file": "max_displacement.1D",
          "num_threads": "1",
          "oned_file": "[Undefined]",
          "oned_matrix_save": "[Undefined]",
          "out_file": "[Undefined]",
          "outputtype": "NIFTI_GZ",
          "timeshift": "[Undefined]",
          "verbose": "[Undefined]",
          "zpad": "4"
        },
        "outputs": {
          "out_file": "[Undefined]",
          "md1d_file": "[Undefined]",
          "oned_file": "[Undefined]",
          "oned_matrix_save": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "motion_concat_152",
        "type": "node",
        "inputs": {
          "in_files": "[Undefined]",
          "out_file": "[Undefined]",
          "rlt": "[Undefined]",
          "verbose": "[Undefined]",
          "num_threads": "1",
          "outputtype": "NIFTI_GZ",
          "args": "[Undefined]",
          "environ": "{}"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "out_motion_A_152",
        "type": "node",
        "inputs": {
          "out_file": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "md1d_concat_152",
        "type": "node",
        "inputs": {
          "function_str": "def oned_text_concat(in_files):\n    out_file = os.path.join(os.getcwd(), os.path.basename(in_files[0].replace(\"_0\", \"\")))\n\n    out_txt = []\n    for txt in in_files:\n        with open(txt, 'r') as f:\n            txt_lines = f.readlines()\n        if not out_txt:\n            out_txt = [x for x in txt_lines]\n        else:\n            for line in txt_lines:\n                if \"#\" in line:\n                    continue\n                out_txt.append(line)\n\n    with open(out_file, 'wt') as f:\n        for line in out_txt:\n            f.write(line)\n\n    return out_file\n",
          "in_files": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "oned_concat_152",
        "type": "node",
        "inputs": {
          "function_str": "def oned_text_concat(in_files):\n    out_file = os.path.join(os.getcwd(), os.path.basename(in_files[0].replace(\"_0\", \"\")))\n\n    out_txt = []\n    for txt in in_files:\n        with open(txt, 'r') as f:\n            txt_lines = f.readlines()\n        if not out_txt:\n            out_txt = [x for x in txt_lines]\n        else:\n            for line in txt_lines:\n                if \"#\" in line:\n                    continue\n                out_txt.append(line)\n\n    with open(out_file, 'wt') as f:\n        for line in out_txt:\n            f.write(line)\n\n    return out_file\n",
          "in_files": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "oned_matrix_concat_152",
        "type": "node",
        "inputs": {
          "function_str": "def oned_text_concat(in_files):\n    out_file = os.path.join(os.getcwd(), os.path.basename(in_files[0].replace(\"_0\", \"\")))\n\n    out_txt = []\n    for txt in in_files:\n        with open(txt, 'r') as f:\n            txt_lines = f.readlines()\n        if not out_txt:\n            out_txt = [x for x in txt_lines]\n        else:\n            for line in txt_lines:\n                if \"#\" in line:\n                    continue\n                out_txt.append(line)\n\n    with open(out_file, 'wt') as f:\n        for line in out_txt:\n            f.write(line)\n\n    return out_file\n",
          "in_files": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "out_md1d_152",
        "type": "node",
        "inputs": {
          "out_file": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "out_oned_152",
        "type": "node",
        "inputs": {
          "out_file": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "out_oned_matrix_152",
        "type": "node",
        "inputs": {
          "out_file": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "func_tmp_brain_mask_AFNI_160",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "out_file": "[Undefined]",
          "brain_file": "[Undefined]",
          "clfrac": "[Undefined]",
          "dilate": "1",
          "erode": "[Undefined]",
          "num_threads": "1",
          "outputtype": "NIFTI_GZ",
          "args": "[Undefined]",
          "environ": "{}"
        },
        "outputs": {
          "out_file": "[Undefined]",
          "brain_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "extract_func_roi_160",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "roi_file": "[Undefined]",
          "x_min": "[Undefined]",
          "x_size": "[Undefined]",
          "y_min": "[Undefined]",
          "y_size": "[Undefined]",
          "z_min": "[Undefined]",
          "z_size": "[Undefined]",
          "t_min": "7",
          "t_size": "1",
          "crop_list": "[Undefined]",
          "output_type": "NIFTI_GZ",
          "args": "[Undefined]",
          "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
        },
        "outputs": {
          "roi_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "get_func_tmp_brain_160",
        "type": "node",
        "inputs": {
          "mask_file": "[Undefined]",
          "in_file": "[Undefined]",
          "out_file": "[Undefined]",
          "internal_datatype": "[Undefined]",
          "output_datatype": "[Undefined]",
          "nan2zeros": "[Undefined]",
          "output_type": "NIFTI_GZ",
          "args": "[Undefined]",
          "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "func_to_anat_linear_reg_160",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "reference": "[Undefined]",
          "out_file": "[Undefined]",
          "out_matrix_file": "[Undefined]",
          "out_log": "[Undefined]",
          "in_matrix_file": "[Undefined]",
          "apply_xfm": "[Undefined]",
          "apply_isoxfm": "[Undefined]",
          "datatype": "[Undefined]",
          "cost": "corratio",
          "cost_func": "[Undefined]",
          "uses_qform": "[Undefined]",
          "display_init": "[Undefined]",
          "angle_rep": "[Undefined]",
          "interp": "trilinear",
          "sinc_width": "[Undefined]",
          "sinc_window": "[Undefined]",
          "bins": "[Undefined]",
          "dof": "6",
          "no_resample": "[Undefined]",
          "force_scaling": "[Undefined]",
          "min_sampling": "[Undefined]",
          "padding_size": "[Undefined]",
          "searchr_x": "[Undefined]",
          "searchr_y": "[Undefined]",
          "searchr_z": "[Undefined]",
          "no_search": "[Undefined]",
          "coarse_search": "[Undefined]",
          "fine_search": "[Undefined]",
          "schedule": "[Undefined]",
          "ref_weight": "[Undefined]",
          "in_weight": "[Undefined]",
          "no_clamp": "[Undefined]",
          "no_resample_blur": "[Undefined]",
          "rigid2D": "[Undefined]",
          "save_log": "[Undefined]",
          "verbose": "[Undefined]",
          "bgvalue": "[Undefined]",
          "wm_seg": "[Undefined]",
          "wmcoords": "[Undefined]",
          "wmnorms": "[Undefined]",
          "fieldmap": "[Undefined]",
          "fieldmapmask": "[Undefined]",
          "pedir": "[Undefined]",
          "echospacing": "[Undefined]",
          "bbrtype": "[Undefined]",
          "bbrslope": "[Undefined]",
          "output_type": "NIFTI_GZ",
          "args": "[Undefined]",
          "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
        },
        "outputs": {
          "out_file": "[Undefined]",
          "out_matrix_file": "[Undefined]",
          "out_log": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "inv_func2anat_affine_160",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "in_file2": "[Undefined]",
          "invert_xfm": "True",
          "concat_xfm": "[Undefined]",
          "fix_scale_skew": "[Undefined]",
          "out_file": "[Undefined]",
          "output_type": "NIFTI_GZ",
          "args": "[Undefined]",
          "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "reg_anat_brain_to_func_160",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "reference": "[Undefined]",
          "out_file": "[Undefined]",
          "out_matrix_file": "[Undefined]",
          "out_log": "[Undefined]",
          "in_matrix_file": "[Undefined]",
          "apply_xfm": "True",
          "apply_isoxfm": "[Undefined]",
          "datatype": "[Undefined]",
          "cost": "[Undefined]",
          "cost_func": "[Undefined]",
          "uses_qform": "[Undefined]",
          "display_init": "[Undefined]",
          "angle_rep": "[Undefined]",
          "interp": "trilinear",
          "sinc_width": "[Undefined]",
          "sinc_window": "[Undefined]",
          "bins": "[Undefined]",
          "dof": "[Undefined]",
          "no_resample": "[Undefined]",
          "force_scaling": "[Undefined]",
          "min_sampling": "[Undefined]",
          "padding_size": "[Undefined]",
          "searchr_x": "[Undefined]",
          "searchr_y": "[Undefined]",
          "searchr_z": "[Undefined]",
          "no_search": "[Undefined]",
          "coarse_search": "[Undefined]",
          "fine_search": "[Undefined]",
          "schedule": "[Undefined]",
          "ref_weight": "[Undefined]",
          "in_weight": "[Undefined]",
          "no_clamp": "[Undefined]",
          "no_resample_blur": "[Undefined]",
          "rigid2D": "[Undefined]",
          "save_log": "[Undefined]",
          "verbose": "[Undefined]",
          "bgvalue": "[Undefined]",
          "wm_seg": "[Undefined]",
          "wmcoords": "[Undefined]",
          "wmnorms": "[Undefined]",
          "fieldmap": "[Undefined]",
          "fieldmapmask": "[Undefined]",
          "pedir": "[Undefined]",
          "echospacing": "[Undefined]",
          "bbrtype": "[Undefined]",
          "bbrslope": "[Undefined]",
          "output_type": "NIFTI_GZ",
          "args": "[Undefined]",
          "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
        },
        "outputs": {
          "out_file": "[Undefined]",
          "out_matrix_file": "[Undefined]",
          "out_log": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "bin_anat_brain_in_func_160",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "in_file2": "[Undefined]",
          "mask_file": "[Undefined]",
          "out_file": "[Undefined]",
          "op_string": "-bin -dilM",
          "suffix": "[Undefined]",
          "out_data_type": "[Undefined]",
          "output_type": "NIFTI_GZ",
          "args": "[Undefined]",
          "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "bin_func_160",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "in_file2": "[Undefined]",
          "mask_file": "[Undefined]",
          "out_file": "[Undefined]",
          "op_string": "-Tstd -bin",
          "suffix": "[Undefined]",
          "out_data_type": "[Undefined]",
          "output_type": "NIFTI_GZ",
          "args": "[Undefined]",
          "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "merge_func_mask_160",
        "type": "node",
        "inputs": {
          "axis": "vstack",
          "no_flatten": "False",
          "ravel_inputs": "False",
          "in1": "[Undefined]",
          "in2": "[Undefined]"
        },
        "outputs": {
          "out": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "intersect_mask_160",
        "type": "node",
        "inputs": {
          "op_string": "-mul %s -mul %s",
          "operand_files": "[Undefined]",
          "in_file": "[Undefined]",
          "out_file": "[Undefined]",
          "internal_datatype": "[Undefined]",
          "output_datatype": "char",
          "nan2zeros": "[Undefined]",
          "output_type": "NIFTI_GZ",
          "args": "[Undefined]",
          "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "get_example_func_brain_160",
        "type": "node",
        "inputs": {
          "mask_file": "[Undefined]",
          "in_file": "[Undefined]",
          "out_file": "[Undefined]",
          "internal_datatype": "[Undefined]",
          "output_datatype": "[Undefined]",
          "nan2zeros": "[Undefined]",
          "output_type": "NIFTI_GZ",
          "args": "[Undefined]",
          "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "func_extract_brain_165",
        "type": "node",
        "inputs": {
          "in_file_a": "[Undefined]",
          "in_file_b": "[Undefined]",
          "in_file_c": "[Undefined]",
          "out_file": "[Undefined]",
          "expr": "a*b",
          "start_idx": "[Undefined]",
          "stop_idx": "[Undefined]",
          "single_idx": "[Undefined]",
          "overwrite": "[Undefined]",
          "other": "[Undefined]",
          "num_threads": "1",
          "outputtype": "NIFTI_GZ",
          "args": "[Undefined]",
          "environ": "{}"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "gen_motion_stats_169",
        "type": "workflow",
        "inputs": {
          "inputspec": "{'mask': '[Undefined]', 'max_displacement': '[Undefined]', 'motion_correct': '[Undefined]', 'movement_parameters': '[Undefined]', 'rels_displacement': '[Undefined]', 'transformations': '[Undefined]'}",
          "cal_DVARS": "{'args': '[Undefined]', 'environ': {}, 'method': 'dvars', 'num_threads': 1, 'out_file': '[Undefined]', 'outputtype': 'AFNI'}",
          "cal_DVARS_strip": "{'function_str': 'CPAC.generate_motion_statistics.generate_motion_statistics.DVARS_strip_t0'}",
          "outputspec": "{}",
          "calculate_FD": "{'function_str': 'CPAC.generate_motion_statistics.generate_motion_statistics.calculate_FD_P'}",
          "calculate_FDJ": "{'calc_from': 'affine', 'center': '[Undefined]', 'function_str': 'CPAC.generate_motion_statistics.generate_motion_statistics.calculate_FD_J'}",
          "get_all_motion_parameters": "{'function_str': 'CPAC.generate_motion_statistics.generate_motion_statistics.get_allmotion'}",
          "calc_motion_parameters": "{'function_str': 'CPAC.generate_motion_statistics.generate_motion_statistics.gen_motion_parameters', 'motion_correct_tool': '3dvolreg'}",
          "calc_power_parameters": "{'function_str': 'CPAC.generate_motion_statistics.generate_motion_statistics.gen_power_parameters', 'motion_correct_tool': '3dvolreg'}"
        },
        "outputs": {
          "inputspec": "{'mask': None, 'max_displacement': None, 'motion_correct': None, 'movement_parameters': None, 'rels_displacement': None, 'transformations': None}",
          "cal_DVARS": "{'out_file': None}",
          "cal_DVARS_strip": "{'DVARS_val': None, 'out_file': None}",
          "outputspec": "{'DVARS_1D': None, 'FDJ_1D': None, 'FDP_1D': None, 'desc-summary_motion': None, 'motion': None, 'motion_params': None, 'power_params': None}",
          "calculate_FD": "{'fd': None, 'out_file': None}",
          "calculate_FDJ": "{'fd': None, 'out_file': None}",
          "get_all_motion_parameters": "{'all_motion_val': None, 'summary_motion_power': None}",
          "calc_motion_parameters": "{'info': None, 'maxdisp': None, 'out_file': None, 'relsdisp': None}",
          "calc_power_parameters": "{'info': None, 'out_file': None}"
        },
        "result": null,
        "nodes": [
          {
            "name": "inputspec",
            "type": "node",
            "inputs": {
              "movement_parameters": "[Undefined]",
              "max_displacement": "[Undefined]",
              "rels_displacement": "[Undefined]",
              "motion_correct": "[Undefined]",
              "mask": "[Undefined]",
              "transformations": "[Undefined]"
            },
            "outputs": {
              "movement_parameters": "[Undefined]",
              "max_displacement": "[Undefined]",
              "rels_displacement": "[Undefined]",
              "motion_correct": "[Undefined]",
              "mask": "[Undefined]",
              "transformations": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "cal_DVARS",
            "type": "node",
            "inputs": {
              "in_file": "[Undefined]",
              "mask": "[Undefined]",
              "out_file": "[Undefined]",
              "method": "dvars",
              "num_threads": "1",
              "outputtype": "AFNI",
              "args": "[Undefined]",
              "environ": "{}"
            },
            "outputs": {
              "out_file": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "cal_DVARS_strip",
            "type": "node",
            "inputs": {
              "function_str": "CPAC.generate_motion_statistics.generate_motion_statistics.DVARS_strip_t0",
              "file_1D": "[Undefined]"
            },
            "outputs": {
              "out_file": "[Undefined]",
              "DVARS_val": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "outputspec",
            "type": "node",
            "inputs": {
              "FDP_1D": "[Undefined]",
              "FDJ_1D": "[Undefined]",
              "DVARS_1D": "[Undefined]",
              "power_params": "[Undefined]",
              "motion_params": "[Undefined]",
              "motion": "[Undefined]",
              "desc-summary_motion": "[Undefined]"
            },
            "outputs": {
              "FDP_1D": "[Undefined]",
              "FDJ_1D": "[Undefined]",
              "DVARS_1D": "[Undefined]",
              "power_params": "[Undefined]",
              "motion_params": "[Undefined]",
              "motion": "[Undefined]",
              "desc-summary_motion": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "calculate_FD",
            "type": "node",
            "inputs": {
              "function_str": "CPAC.generate_motion_statistics.generate_motion_statistics.calculate_FD_P",
              "in_file": "[Undefined]"
            },
            "outputs": {
              "out_file": "[Undefined]",
              "fd": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "calculate_FDJ",
            "type": "node",
            "inputs": {
              "function_str": "CPAC.generate_motion_statistics.generate_motion_statistics.calculate_FD_J",
              "in_file": "[Undefined]",
              "calc_from": "affine",
              "center": "[Undefined]"
            },
            "outputs": {
              "out_file": "[Undefined]",
              "fd": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "get_all_motion_parameters",
            "type": "node",
            "inputs": {
              "function_str": "CPAC.generate_motion_statistics.generate_motion_statistics.get_allmotion",
              "fdj": "[Undefined]",
              "fdp": "[Undefined]",
              "maxdisp": "[Undefined]",
              "motion": "[Undefined]",
              "power": "[Undefined]",
              "relsdisp": "[Undefined]",
              "dvars": "[Undefined]"
            },
            "outputs": {
              "all_motion_val": "[Undefined]",
              "summary_motion_power": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "calc_motion_parameters",
            "type": "node",
            "inputs": {
              "function_str": "CPAC.generate_motion_statistics.generate_motion_statistics.gen_motion_parameters",
              "movement_parameters": "[Undefined]",
              "max_displacement": "[Undefined]",
              "motion_correct_tool": "3dvolreg",
              "rels_displacement": "[Undefined]"
            },
            "outputs": {
              "out_file": "[Undefined]",
              "info": "[Undefined]",
              "maxdisp": "[Undefined]",
              "relsdisp": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "calc_power_parameters",
            "type": "node",
            "inputs": {
              "function_str": "CPAC.generate_motion_statistics.generate_motion_statistics.gen_power_parameters",
              "fdp": "[Undefined]",
              "fdj": "[Undefined]",
              "dvars": "[Undefined]",
              "motion_correct_tool": "3dvolreg"
            },
            "outputs": {
              "out_file": "[Undefined]",
              "info": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          }
        ],
        "edges": [
          {
            "origin": "inputspec",
            "target": "cal_DVARS"
          },
          {
            "origin": "inputspec",
            "target": "calculate_FD"
          },
          {
            "origin": "inputspec",
            "target": "calculate_FDJ"
          },
          {
            "origin": "inputspec",
            "target": "calc_motion_parameters"
          },
          {
            "origin": "cal_DVARS",
            "target": "cal_DVARS_strip"
          },
          {
            "origin": "cal_DVARS",
            "target": "calc_power_parameters"
          },
          {
            "origin": "cal_DVARS_strip",
            "target": "outputspec"
          },
          {
            "origin": "cal_DVARS_strip",
            "target": "get_all_motion_parameters"
          },
          {
            "origin": "calculate_FD",
            "target": "outputspec"
          },
          {
            "origin": "calculate_FD",
            "target": "get_all_motion_parameters"
          },
          {
            "origin": "calculate_FD",
            "target": "calc_power_parameters"
          },
          {
            "origin": "calculate_FDJ",
            "target": "outputspec"
          },
          {
            "origin": "calculate_FDJ",
            "target": "get_all_motion_parameters"
          },
          {
            "origin": "calculate_FDJ",
            "target": "calc_power_parameters"
          },
          {
            "origin": "get_all_motion_parameters",
            "target": "outputspec"
          },
          {
            "origin": "calc_motion_parameters",
            "target": "get_all_motion_parameters"
          },
          {
            "origin": "calc_motion_parameters",
            "target": "outputspec"
          },
          {
            "origin": "calc_power_parameters",
            "target": "get_all_motion_parameters"
          },
          {
            "origin": "calc_power_parameters",
            "target": "outputspec"
          }
        ]
      },
      {
        "name": "func_normalize_167",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "in_file2": "[Undefined]",
          "mask_file": "[Undefined]",
          "out_file": "[Undefined]",
          "op_string": "-ing 10000",
          "suffix": "[Undefined]",
          "out_data_type": "float",
          "output_type": "NIFTI_GZ",
          "args": "[Undefined]",
          "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "get_func_volume_185",
        "type": "node",
        "inputs": {
          "in_file_a": "[Undefined]",
          "in_file_b": "[Undefined]",
          "in_file_c": "[Undefined]",
          "out_file": "[Undefined]",
          "expr": "a",
          "start_idx": "[Undefined]",
          "stop_idx": "[Undefined]",
          "single_idx": "7",
          "overwrite": "[Undefined]",
          "other": "[Undefined]",
          "num_threads": "1",
          "outputtype": "NIFTI_GZ",
          "args": "[Undefined]",
          "environ": "{}"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "func_to_anat_FLIRT_188",
        "type": "workflow",
        "inputs": {
          "inputspec": "{'anat': '[Undefined]', 'dof': 6, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'func': '[Undefined]', 'interp': 'trilinear'}",
          "linear_func_to_anat": "{'angle_rep': '[Undefined]', 'apply_isoxfm': '[Undefined]', 'apply_xfm': '[Undefined]', 'args': '[Undefined]', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': '[Undefined]', 'coarse_search': '[Undefined]', 'cost': 'corratio', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_matrix_file': '[Undefined]', 'in_weight': '[Undefined]', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': '[Undefined]', 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'schedule': '[Undefined]', 'searchr_x': '[Undefined]', 'searchr_y': '[Undefined]', 'searchr_z': '[Undefined]', 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}",
          "outputspec": "{}"
        },
        "outputs": {
          "inputspec": "{'anat': None, 'dof': None, 'fieldmap': None, 'fieldmapmask': None, 'func': None, 'interp': None}",
          "linear_func_to_anat": "{'out_file': None, 'out_log': None, 'out_matrix_file': None}",
          "outputspec": "{'anat_func_nobbreg': None, 'func_to_anat_linear_xfm_nobbreg': None}"
        },
        "result": null,
        "nodes": [
          {
            "name": "inputspec",
            "type": "node",
            "inputs": {
              "func": "[Undefined]",
              "anat": "[Undefined]",
              "dof": "6",
              "interp": "trilinear",
              "fieldmap": "[Undefined]",
              "fieldmapmask": "[Undefined]"
            },
            "outputs": {
              "func": "[Undefined]",
              "anat": "[Undefined]",
              "dof": "[Undefined]",
              "interp": "[Undefined]",
              "fieldmap": "[Undefined]",
              "fieldmapmask": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "linear_func_to_anat",
            "type": "node",
            "inputs": {
              "in_file": "[Undefined]",
              "reference": "[Undefined]",
              "out_file": "[Undefined]",
              "out_matrix_file": "[Undefined]",
              "out_log": "[Undefined]",
              "in_matrix_file": "[Undefined]",
              "apply_xfm": "[Undefined]",
              "apply_isoxfm": "[Undefined]",
              "datatype": "[Undefined]",
              "cost": "corratio",
              "cost_func": "[Undefined]",
              "uses_qform": "[Undefined]",
              "display_init": "[Undefined]",
              "angle_rep": "[Undefined]",
              "interp": "trilinear",
              "sinc_width": "[Undefined]",
              "sinc_window": "[Undefined]",
              "bins": "[Undefined]",
              "dof": "6",
              "no_resample": "[Undefined]",
              "force_scaling": "[Undefined]",
              "min_sampling": "[Undefined]",
              "padding_size": "[Undefined]",
              "searchr_x": "[Undefined]",
              "searchr_y": "[Undefined]",
              "searchr_z": "[Undefined]",
              "no_search": "[Undefined]",
              "coarse_search": "[Undefined]",
              "fine_search": "[Undefined]",
              "schedule": "[Undefined]",
              "ref_weight": "[Undefined]",
              "in_weight": "[Undefined]",
              "no_clamp": "[Undefined]",
              "no_resample_blur": "[Undefined]",
              "rigid2D": "[Undefined]",
              "save_log": "[Undefined]",
              "verbose": "[Undefined]",
              "bgvalue": "[Undefined]",
              "wm_seg": "[Undefined]",
              "wmcoords": "[Undefined]",
              "wmnorms": "[Undefined]",
              "fieldmap": "[Undefined]",
              "fieldmapmask": "[Undefined]",
              "pedir": "[Undefined]",
              "echospacing": "[Undefined]",
              "bbrtype": "[Undefined]",
              "bbrslope": "[Undefined]",
              "output_type": "NIFTI_GZ",
              "args": "[Undefined]",
              "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
            },
            "outputs": {
              "out_file": "[Undefined]",
              "out_matrix_file": "[Undefined]",
              "out_log": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "outputspec",
            "type": "node",
            "inputs": {
              "func_to_anat_linear_xfm_nobbreg": "[Undefined]",
              "anat_func_nobbreg": "[Undefined]"
            },
            "outputs": {
              "func_to_anat_linear_xfm_nobbreg": "[Undefined]",
              "anat_func_nobbreg": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          }
        ],
        "edges": [
          {
            "origin": "inputspec",
            "target": "linear_func_to_anat"
          },
          {
            "origin": "linear_func_to_anat",
            "target": "outputspec"
          }
        ]
      },
      {
        "name": "func_to_anat_bbreg_188",
        "type": "workflow",
        "inputs": {
          "inputspec": "{'anat': '[Undefined]', 'anat_wm_segmentation': '[Undefined]', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'func': '[Undefined]', 'linear_reg_matrix': '[Undefined]'}",
          "wm_bb_mask": "{'args': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'in_file2': '[Undefined]', 'mask_file': '[Undefined]', 'out_data_type': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'suffix': '[Undefined]'}",
          "bbreg_func_to_anat": "{'angle_rep': '[Undefined]', 'apply_isoxfm': '[Undefined]', 'apply_xfm': '[Undefined]', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': '[Undefined]', 'coarse_search': '[Undefined]', 'cost': '[Undefined]', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'dof': 6, 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_weight': '[Undefined]', 'interp': '[Undefined]', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': '[Undefined]', 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'searchr_x': '[Undefined]', 'searchr_y': '[Undefined]', 'searchr_z': '[Undefined]', 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}",
          "outputspec": "{}"
        },
        "outputs": {
          "inputspec": "{'anat': None, 'anat_wm_segmentation': None, 'bbr_schedule': None, 'bbr_wm_mask_args': None, 'fieldmap': None, 'fieldmapmask': None, 'func': None, 'linear_reg_matrix': None}",
          "wm_bb_mask": "{'out_file': None}",
          "bbreg_func_to_anat": "{'out_file': None, 'out_log': None, 'out_matrix_file': None}",
          "outputspec": "{'anat_func': None, 'func_to_anat_linear_xfm': None}"
        },
        "result": null,
        "nodes": [
          {
            "name": "inputspec",
            "type": "node",
            "inputs": {
              "func": "[Undefined]",
              "anat": "[Undefined]",
              "linear_reg_matrix": "[Undefined]",
              "anat_wm_segmentation": "[Undefined]",
              "bbr_schedule": "/usr/share/fsl/6.0/etc/flirtsch/bbr.sch",
              "bbr_wm_mask_args": "-thr 0.5 -bin",
              "fieldmap": "[Undefined]",
              "fieldmapmask": "[Undefined]"
            },
            "outputs": {
              "func": "[Undefined]",
              "anat": "[Undefined]",
              "linear_reg_matrix": "[Undefined]",
              "anat_wm_segmentation": "[Undefined]",
              "bbr_schedule": "[Undefined]",
              "bbr_wm_mask_args": "[Undefined]",
              "fieldmap": "[Undefined]",
              "fieldmapmask": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "wm_bb_mask",
            "type": "node",
            "inputs": {
              "in_file": "[Undefined]",
              "in_file2": "[Undefined]",
              "mask_file": "[Undefined]",
              "out_file": "[Undefined]",
              "op_string": "[Undefined]",
              "suffix": "[Undefined]",
              "out_data_type": "[Undefined]",
              "output_type": "NIFTI_GZ",
              "args": "[Undefined]",
              "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
            },
            "outputs": {
              "out_file": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "bbreg_func_to_anat",
            "type": "node",
            "inputs": {
              "in_file": "[Undefined]",
              "reference": "[Undefined]",
              "out_file": "[Undefined]",
              "out_matrix_file": "[Undefined]",
              "out_log": "[Undefined]",
              "in_matrix_file": "[Undefined]",
              "apply_xfm": "[Undefined]",
              "apply_isoxfm": "[Undefined]",
              "datatype": "[Undefined]",
              "cost": "[Undefined]",
              "cost_func": "[Undefined]",
              "uses_qform": "[Undefined]",
              "display_init": "[Undefined]",
              "angle_rep": "[Undefined]",
              "interp": "[Undefined]",
              "sinc_width": "[Undefined]",
              "sinc_window": "[Undefined]",
              "bins": "[Undefined]",
              "dof": "6",
              "no_resample": "[Undefined]",
              "force_scaling": "[Undefined]",
              "min_sampling": "[Undefined]",
              "padding_size": "[Undefined]",
              "searchr_x": "[Undefined]",
              "searchr_y": "[Undefined]",
              "searchr_z": "[Undefined]",
              "no_search": "[Undefined]",
              "coarse_search": "[Undefined]",
              "fine_search": "[Undefined]",
              "schedule": "[Undefined]",
              "ref_weight": "[Undefined]",
              "in_weight": "[Undefined]",
              "no_clamp": "[Undefined]",
              "no_resample_blur": "[Undefined]",
              "rigid2D": "[Undefined]",
              "save_log": "[Undefined]",
              "verbose": "[Undefined]",
              "bgvalue": "[Undefined]",
              "wm_seg": "[Undefined]",
              "wmcoords": "[Undefined]",
              "wmnorms": "[Undefined]",
              "fieldmap": "[Undefined]",
              "fieldmapmask": "[Undefined]",
              "pedir": "[Undefined]",
              "echospacing": "[Undefined]",
              "bbrtype": "[Undefined]",
              "bbrslope": "[Undefined]",
              "output_type": "NIFTI_GZ",
              "args": "[Undefined]",
              "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
            },
            "outputs": {
              "out_file": "[Undefined]",
              "out_matrix_file": "[Undefined]",
              "out_log": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "outputspec",
            "type": "node",
            "inputs": {
              "func_to_anat_linear_xfm": "[Undefined]",
              "anat_func": "[Undefined]"
            },
            "outputs": {
              "func_to_anat_linear_xfm": "[Undefined]",
              "anat_func": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          }
        ],
        "edges": [
          {
            "origin": "inputspec",
            "target": "wm_bb_mask"
          },
          {
            "origin": "inputspec",
            "target": "bbreg_func_to_anat"
          },
          {
            "origin": "wm_bb_mask",
            "target": "bbreg_func_to_anat"
          },
          {
            "origin": "bbreg_func_to_anat",
            "target": "outputspec"
          }
        ]
      },
      {
        "name": "create_func_to_T1wtemplate_xfm_197",
        "type": "workflow",
        "inputs": {
          "inputspec": "{'T1w-brain-template_funcreg': '[Undefined]', 'T1w_to_template_xfm': '[Undefined]', 'blip_warp': '[Undefined]', 'coreg_xfm': '[Undefined]', 'input_brain': '[Undefined]', 'mean_bold': '[Undefined]', 'template_to_T1w_xfm': '[Undefined]'}",
          "combine_fsl_warps": "{'abswarp': '[Undefined]', 'args': '[Undefined]', 'cons_jacobian': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'jacobian_max': '[Undefined]', 'jacobian_min': '[Undefined]', 'midmat': '[Undefined]', 'out_abswarp': '[Undefined]', 'out_file': '[Undefined]', 'out_relwarp': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'relwarp': '[Undefined]', 'shift_direction': '[Undefined]', 'shift_in_file': '[Undefined]', 'warp2': '[Undefined]'}"
        },
        "outputs": {
          "inputspec": "{'T1w-brain-template_funcreg': None, 'T1w_to_template_xfm': None, 'blip_warp': None, 'coreg_xfm': None, 'input_brain': None, 'mean_bold': None, 'template_to_T1w_xfm': None}",
          "combine_fsl_warps": "{'out_file': None}"
        },
        "result": null,
        "nodes": [
          {
            "name": "inputspec",
            "type": "node",
            "inputs": {
              "input_brain": "[Undefined]",
              "mean_bold": "[Undefined]",
              "coreg_xfm": "[Undefined]",
              "T1w-brain-template_funcreg": "[Undefined]",
              "T1w_to_template_xfm": "[Undefined]",
              "template_to_T1w_xfm": "[Undefined]",
              "blip_warp": "[Undefined]"
            },
            "outputs": {
              "input_brain": "[Undefined]",
              "mean_bold": "[Undefined]",
              "coreg_xfm": "[Undefined]",
              "T1w-brain-template_funcreg": "[Undefined]",
              "T1w_to_template_xfm": "[Undefined]",
              "template_to_T1w_xfm": "[Undefined]",
              "blip_warp": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "combine_fsl_warps",
            "type": "node",
            "inputs": {
              "reference": "[Undefined]",
              "out_file": "[Undefined]",
              "premat": "[Undefined]",
              "warp1": "[Undefined]",
              "midmat": "[Undefined]",
              "warp2": "[Undefined]",
              "postmat": "[Undefined]",
              "shift_in_file": "[Undefined]",
              "shift_direction": "[Undefined]",
              "cons_jacobian": "[Undefined]",
              "jacobian_min": "[Undefined]",
              "jacobian_max": "[Undefined]",
              "abswarp": "[Undefined]",
              "relwarp": "[Undefined]",
              "out_abswarp": "[Undefined]",
              "out_relwarp": "[Undefined]",
              "output_type": "NIFTI_GZ",
              "args": "[Undefined]",
              "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
            },
            "outputs": {
              "out_file": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          }
        ],
        "edges": [
          {
            "origin": "inputspec",
            "target": "combine_fsl_warps"
          }
        ]
      },
      {
        "name": "resampled_T1w-brain-template-funcreg",
        "type": "node",
        "inputs": {
          "function_str": "CPAC.utils.datasource.resolve_resolution",
          "resolution": "3mm",
          "template": "/usr/share/fsl/6.0/data/standard/MNI152_T1_3mm_brain.nii.gz",
          "template_name": "T1w-brain-template-funcreg",
          "tag": "func_preproc_outputs"
        },
        "outputs": {
          "resampled_template": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "nuisance_regressors_Regressor_1_203",
        "type": "workflow",
        "inputs": {
          "inputspec": "{'anat_to_func_linear_xfm_file_path': '[Undefined]', 'anat_to_mni_linear_xfm_file_path': '[Undefined]', 'anatomical_eroded_brain_mask_file_path': '[Undefined]', 'anatomical_file_path': '[Undefined]', 'creds_path': '[Undefined]', 'csf_mask_file_path': '[Undefined]', 'dl_dir': '[Undefined]', 'dvars_file_path': '[Undefined]', 'fd_j_file_path': '[Undefined]', 'fd_p_file_path': '[Undefined]', 'func_to_anat_linear_xfm_file_path': '[Undefined]', 'functional_brain_mask_file_path': '[Undefined]', 'functional_file_path': '[Undefined]', 'gm_mask_file_path': '[Undefined]', 'lat_ventricles_mask_file_path': '[Undefined]', 'mni_to_anat_linear_xfm_file_path': '[Undefined]', 'motion_parameters_file_path': '[Undefined]', 'selector': '[Undefined]', 'tr': '[Undefined]', 'wm_mask_file_path': '[Undefined]'}",
          "functional_mean": "{'args': '[Undefined]', 'environ': {}, 'mask': '[Undefined]', 'num_threads': 1, 'options': '-mean', 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ'}",
          "Anatomical_2mm_flirt": "{'angle_rep': '[Undefined]', 'apply_isoxfm': 2.0, 'apply_xfm': '[Undefined]', 'args': '[Undefined]', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': '[Undefined]', 'coarse_search': '[Undefined]', 'cost': '[Undefined]', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'dof': '[Undefined]', 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_matrix_file': '[Undefined]', 'in_weight': '[Undefined]', 'interp': '[Undefined]', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': '[Undefined]', 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'schedule': '[Undefined]', 'searchr_x': '[Undefined]', 'searchr_y': '[Undefined]', 'searchr_z': '[Undefined]', 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}",
          "Functional_2mm_flirt": "{'angle_rep': '[Undefined]', 'apply_isoxfm': '[Undefined]', 'apply_xfm': True, 'args': '[Undefined]', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': '[Undefined]', 'coarse_search': '[Undefined]', 'cost': '[Undefined]', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'dof': '[Undefined]', 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_weight': '[Undefined]', 'interp': '[Undefined]', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': '[Undefined]', 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'schedule': '[Undefined]', 'searchr_x': '[Undefined]', 'searchr_y': '[Undefined]', 'searchr_z': '[Undefined]', 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}",
          "WhiteMatter_2mm_flirt": "{'angle_rep': '[Undefined]', 'apply_isoxfm': 2.0, 'apply_xfm': '[Undefined]', 'args': '[Undefined]', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': '[Undefined]', 'coarse_search': '[Undefined]', 'cost': '[Undefined]', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'dof': '[Undefined]', 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_matrix_file': '[Undefined]', 'in_weight': '[Undefined]', 'interp': 'nearestneighbour', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': '[Undefined]', 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'schedule': '[Undefined]', 'searchr_x': '[Undefined]', 'searchr_y': '[Undefined]', 'searchr_z': '[Undefined]', 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}",
          "WhiteMatter_merge_masks": "{'axis': 'vstack', 'no_flatten': False, 'ravel_inputs': False}",
          "WhiteMatter_union_masks": "{'args': '[Undefined]', 'count': '[Undefined]', 'datum': '[Undefined]', 'dilate_inputs': '[Undefined]', 'dilate_results': '[Undefined]', 'environ': {}, 'fill_dirs': '[Undefined]', 'fill_holes': '[Undefined]', 'frac': '[Undefined]', 'inter': '[Undefined]', 'num_threads': 1, 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'union': '[Undefined]', 'verbose': '[Undefined]'}",
          "WhiteMatter_mean": "{'args': '-1Dformat', 'debug': '[Undefined]', 'environ': {}, 'format1D': '[Undefined]', 'format1DR': '[Undefined]', 'mask': '[Undefined]', 'mask_f2short': '[Undefined]', 'nobriklab': '[Undefined]', 'nomeanout': '[Undefined]', 'num_roi': '[Undefined]', 'out_file': '[Undefined]', 'quiet': False, 'roisel': '[Undefined]', 'stat': '[Undefined]', 'zerofill': '[Undefined]'}",
          "CerebrospinalFluid_2mm_flirt": "{'angle_rep': '[Undefined]', 'apply_isoxfm': 2.0, 'apply_xfm': '[Undefined]', 'args': '[Undefined]', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': '[Undefined]', 'coarse_search': '[Undefined]', 'cost': '[Undefined]', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'dof': '[Undefined]', 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_matrix_file': '[Undefined]', 'in_weight': '[Undefined]', 'interp': 'nearestneighbour', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': '[Undefined]', 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'schedule': '[Undefined]', 'searchr_x': '[Undefined]', 'searchr_y': '[Undefined]', 'searchr_z': '[Undefined]', 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}",
          "VentriclesToAnat_2mm_fsl_applywarp": "{'abswarp': '[Undefined]', 'args': '[Undefined]', 'datatype': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'interp': 'nn', 'mask_file': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'premat': '[Undefined]', 'relwarp': '[Undefined]', 'superlevel': '[Undefined]', 'supersample': '[Undefined]'}",
          "CerebrospinalFluid_2mm_Ventricles": "{'args': '[Undefined]', 'environ': {}, 'expr': 'a*b', 'in_file_c': '[Undefined]', 'num_threads': 1, 'other': '[Undefined]', 'out_file': 'csf_lat_ven_mask.nii.gz', 'outputtype': 'NIFTI_GZ', 'overwrite': '[Undefined]', 'single_idx': '[Undefined]', 'start_idx': '[Undefined]', 'stop_idx': '[Undefined]'}",
          "CerebrospinalFluid_merge_masks": "{'axis': 'vstack', 'no_flatten': False, 'ravel_inputs': False}",
          "CerebrospinalFluid_union_masks": "{'args': '[Undefined]', 'count': '[Undefined]', 'datum': '[Undefined]', 'dilate_inputs': '[Undefined]', 'dilate_results': '[Undefined]', 'environ': {}, 'fill_dirs': '[Undefined]', 'fill_holes': '[Undefined]', 'frac': '[Undefined]', 'inter': '[Undefined]', 'num_threads': 1, 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'union': '[Undefined]', 'verbose': '[Undefined]'}",
          "CerebrospinalFluid_mean": "{'args': '-1Dformat', 'debug': '[Undefined]', 'environ': {}, 'format1D': '[Undefined]', 'format1DR': '[Undefined]', 'mask': '[Undefined]', 'mask_f2short': '[Undefined]', 'nobriklab': '[Undefined]', 'nomeanout': '[Undefined]', 'num_roi': '[Undefined]', 'out_file': '[Undefined]', 'quiet': False, 'roisel': '[Undefined]', 'stat': '[Undefined]', 'zerofill': '[Undefined]'}",
          "GlobalSignal_merge_masks": "{'axis': 'vstack', 'no_flatten': False, 'ravel_inputs': False}",
          "GlobalSignal_union_masks": "{'args': '[Undefined]', 'count': '[Undefined]', 'datum': '[Undefined]', 'dilate_inputs': '[Undefined]', 'dilate_results': '[Undefined]', 'environ': {}, 'fill_dirs': '[Undefined]', 'fill_holes': '[Undefined]', 'frac': '[Undefined]', 'inter': '[Undefined]', 'num_threads': 1, 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'union': '[Undefined]', 'verbose': '[Undefined]'}",
          "GlobalSignal_mean": "{'args': '-1Dformat', 'debug': '[Undefined]', 'environ': {}, 'format1D': '[Undefined]', 'format1DR': '[Undefined]', 'mask': '[Undefined]', 'mask_f2short': '[Undefined]', 'nobriklab': '[Undefined]', 'nomeanout': '[Undefined]', 'num_roi': '[Undefined]', 'out_file': '[Undefined]', 'quiet': False, 'roisel': '[Undefined]', 'stat': '[Undefined]', 'zerofill': '[Undefined]'}",
          "build_nuisance_regressors": "{'acompcor_file_path': '[Undefined]', 'censor_file_path': '[Undefined]', 'custom_file_paths': '[Undefined]', 'function_str': 'CPAC.nuisance.nuisance.gather_nuisance', 'grey_matter_summary_file_path': '[Undefined]', 'selector': {'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': {'filter': 'Mean', 'method': 'Mean'}}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': {'filter': 'Mean', 'method': 'Mean'}}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': {'filter': 'Mean', 'method': 'Mean'}}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, 'tcompcor_file_path': '[Undefined]'}",
          "outputspec": "{}"
        },
        "outputs": {
          "inputspec": "{'anat_to_func_linear_xfm_file_path': None, 'anat_to_mni_linear_xfm_file_path': None, 'anatomical_eroded_brain_mask_file_path': None, 'anatomical_file_path': None, 'creds_path': None, 'csf_mask_file_path': None, 'dl_dir': None, 'dvars_file_path': None, 'fd_j_file_path': None, 'fd_p_file_path': None, 'func_to_anat_linear_xfm_file_path': None, 'functional_brain_mask_file_path': None, 'functional_file_path': None, 'gm_mask_file_path': None, 'lat_ventricles_mask_file_path': None, 'mni_to_anat_linear_xfm_file_path': None, 'motion_parameters_file_path': None, 'selector': None, 'tr': None, 'wm_mask_file_path': None}",
          "functional_mean": "{'out_file': None}",
          "Anatomical_2mm_flirt": "{'out_file': None, 'out_log': None, 'out_matrix_file': None}",
          "Functional_2mm_flirt": "{'out_file': None, 'out_log': None, 'out_matrix_file': None}",
          "WhiteMatter_2mm_flirt": "{'out_file': None, 'out_log': None, 'out_matrix_file': None}",
          "WhiteMatter_merge_masks": "{'out': None}",
          "WhiteMatter_union_masks": "{'out_file': None}",
          "WhiteMatter_mean": "{'out_file': None}",
          "CerebrospinalFluid_2mm_flirt": "{'out_file': None, 'out_log': None, 'out_matrix_file': None}",
          "VentriclesToAnat_2mm_fsl_applywarp": "{'out_file': None}",
          "CerebrospinalFluid_2mm_Ventricles": "{'out_file': None}",
          "CerebrospinalFluid_merge_masks": "{'out': None}",
          "CerebrospinalFluid_union_masks": "{'out_file': None}",
          "CerebrospinalFluid_mean": "{'out_file': None}",
          "GlobalSignal_merge_masks": "{'out': None}",
          "GlobalSignal_union_masks": "{'out_file': None}",
          "GlobalSignal_mean": "{'out_file': None}",
          "build_nuisance_regressors": "{'censor_indices': None, 'out_file': None}",
          "outputspec": "{'censor_indices': None, 'regressors_file_path': None}"
        },
        "result": null,
        "nodes": [
          {
            "name": "inputspec",
            "type": "node",
            "inputs": {
              "selector": "[Undefined]",
              "functional_file_path": "[Undefined]",
              "anatomical_file_path": "[Undefined]",
              "anatomical_eroded_brain_mask_file_path": "[Undefined]",
              "gm_mask_file_path": "[Undefined]",
              "wm_mask_file_path": "[Undefined]",
              "csf_mask_file_path": "[Undefined]",
              "lat_ventricles_mask_file_path": "[Undefined]",
              "functional_brain_mask_file_path": "[Undefined]",
              "func_to_anat_linear_xfm_file_path": "[Undefined]",
              "anat_to_func_linear_xfm_file_path": "[Undefined]",
              "mni_to_anat_linear_xfm_file_path": "[Undefined]",
              "anat_to_mni_linear_xfm_file_path": "[Undefined]",
              "motion_parameters_file_path": "[Undefined]",
              "fd_j_file_path": "[Undefined]",
              "fd_p_file_path": "[Undefined]",
              "dvars_file_path": "[Undefined]",
              "creds_path": "[Undefined]",
              "dl_dir": "[Undefined]",
              "tr": "[Undefined]"
            },
            "outputs": {
              "selector": "[Undefined]",
              "functional_file_path": "[Undefined]",
              "anatomical_file_path": "[Undefined]",
              "anatomical_eroded_brain_mask_file_path": "[Undefined]",
              "gm_mask_file_path": "[Undefined]",
              "wm_mask_file_path": "[Undefined]",
              "csf_mask_file_path": "[Undefined]",
              "lat_ventricles_mask_file_path": "[Undefined]",
              "functional_brain_mask_file_path": "[Undefined]",
              "func_to_anat_linear_xfm_file_path": "[Undefined]",
              "anat_to_func_linear_xfm_file_path": "[Undefined]",
              "mni_to_anat_linear_xfm_file_path": "[Undefined]",
              "anat_to_mni_linear_xfm_file_path": "[Undefined]",
              "motion_parameters_file_path": "[Undefined]",
              "fd_j_file_path": "[Undefined]",
              "fd_p_file_path": "[Undefined]",
              "dvars_file_path": "[Undefined]",
              "creds_path": "[Undefined]",
              "dl_dir": "[Undefined]",
              "tr": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "functional_mean",
            "type": "node",
            "inputs": {
              "in_file": "[Undefined]",
              "out_file": "[Undefined]",
              "mask": "[Undefined]",
              "options": "-mean",
              "num_threads": "1",
              "outputtype": "NIFTI_GZ",
              "args": "[Undefined]",
              "environ": "{}"
            },
            "outputs": {
              "out_file": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "Anatomical_2mm_flirt",
            "type": "node",
            "inputs": {
              "in_file": "[Undefined]",
              "reference": "[Undefined]",
              "out_file": "[Undefined]",
              "out_matrix_file": "[Undefined]",
              "out_log": "[Undefined]",
              "in_matrix_file": "[Undefined]",
              "apply_xfm": "[Undefined]",
              "apply_isoxfm": "2.0",
              "datatype": "[Undefined]",
              "cost": "[Undefined]",
              "cost_func": "[Undefined]",
              "uses_qform": "[Undefined]",
              "display_init": "[Undefined]",
              "angle_rep": "[Undefined]",
              "interp": "[Undefined]",
              "sinc_width": "[Undefined]",
              "sinc_window": "[Undefined]",
              "bins": "[Undefined]",
              "dof": "[Undefined]",
              "no_resample": "[Undefined]",
              "force_scaling": "[Undefined]",
              "min_sampling": "[Undefined]",
              "padding_size": "[Undefined]",
              "searchr_x": "[Undefined]",
              "searchr_y": "[Undefined]",
              "searchr_z": "[Undefined]",
              "no_search": "[Undefined]",
              "coarse_search": "[Undefined]",
              "fine_search": "[Undefined]",
              "schedule": "[Undefined]",
              "ref_weight": "[Undefined]",
              "in_weight": "[Undefined]",
              "no_clamp": "[Undefined]",
              "no_resample_blur": "[Undefined]",
              "rigid2D": "[Undefined]",
              "save_log": "[Undefined]",
              "verbose": "[Undefined]",
              "bgvalue": "[Undefined]",
              "wm_seg": "[Undefined]",
              "wmcoords": "[Undefined]",
              "wmnorms": "[Undefined]",
              "fieldmap": "[Undefined]",
              "fieldmapmask": "[Undefined]",
              "pedir": "[Undefined]",
              "echospacing": "[Undefined]",
              "bbrtype": "[Undefined]",
              "bbrslope": "[Undefined]",
              "output_type": "NIFTI_GZ",
              "args": "[Undefined]",
              "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
            },
            "outputs": {
              "out_file": "[Undefined]",
              "out_matrix_file": "[Undefined]",
              "out_log": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "Functional_2mm_flirt",
            "type": "node",
            "inputs": {
              "in_file": "[Undefined]",
              "reference": "[Undefined]",
              "out_file": "[Undefined]",
              "out_matrix_file": "[Undefined]",
              "out_log": "[Undefined]",
              "in_matrix_file": "[Undefined]",
              "apply_xfm": "True",
              "apply_isoxfm": "[Undefined]",
              "datatype": "[Undefined]",
              "cost": "[Undefined]",
              "cost_func": "[Undefined]",
              "uses_qform": "[Undefined]",
              "display_init": "[Undefined]",
              "angle_rep": "[Undefined]",
              "interp": "[Undefined]",
              "sinc_width": "[Undefined]",
              "sinc_window": "[Undefined]",
              "bins": "[Undefined]",
              "dof": "[Undefined]",
              "no_resample": "[Undefined]",
              "force_scaling": "[Undefined]",
              "min_sampling": "[Undefined]",
              "padding_size": "[Undefined]",
              "searchr_x": "[Undefined]",
              "searchr_y": "[Undefined]",
              "searchr_z": "[Undefined]",
              "no_search": "[Undefined]",
              "coarse_search": "[Undefined]",
              "fine_search": "[Undefined]",
              "schedule": "[Undefined]",
              "ref_weight": "[Undefined]",
              "in_weight": "[Undefined]",
              "no_clamp": "[Undefined]",
              "no_resample_blur": "[Undefined]",
              "rigid2D": "[Undefined]",
              "save_log": "[Undefined]",
              "verbose": "[Undefined]",
              "bgvalue": "[Undefined]",
              "wm_seg": "[Undefined]",
              "wmcoords": "[Undefined]",
              "wmnorms": "[Undefined]",
              "fieldmap": "[Undefined]",
              "fieldmapmask": "[Undefined]",
              "pedir": "[Undefined]",
              "echospacing": "[Undefined]",
              "bbrtype": "[Undefined]",
              "bbrslope": "[Undefined]",
              "output_type": "NIFTI_GZ",
              "args": "[Undefined]",
              "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
            },
            "outputs": {
              "out_file": "[Undefined]",
              "out_matrix_file": "[Undefined]",
              "out_log": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "WhiteMatter_2mm_flirt",
            "type": "node",
            "inputs": {
              "in_file": "[Undefined]",
              "reference": "[Undefined]",
              "out_file": "[Undefined]",
              "out_matrix_file": "[Undefined]",
              "out_log": "[Undefined]",
              "in_matrix_file": "[Undefined]",
              "apply_xfm": "[Undefined]",
              "apply_isoxfm": "2.0",
              "datatype": "[Undefined]",
              "cost": "[Undefined]",
              "cost_func": "[Undefined]",
              "uses_qform": "[Undefined]",
              "display_init": "[Undefined]",
              "angle_rep": "[Undefined]",
              "interp": "nearestneighbour",
              "sinc_width": "[Undefined]",
              "sinc_window": "[Undefined]",
              "bins": "[Undefined]",
              "dof": "[Undefined]",
              "no_resample": "[Undefined]",
              "force_scaling": "[Undefined]",
              "min_sampling": "[Undefined]",
              "padding_size": "[Undefined]",
              "searchr_x": "[Undefined]",
              "searchr_y": "[Undefined]",
              "searchr_z": "[Undefined]",
              "no_search": "[Undefined]",
              "coarse_search": "[Undefined]",
              "fine_search": "[Undefined]",
              "schedule": "[Undefined]",
              "ref_weight": "[Undefined]",
              "in_weight": "[Undefined]",
              "no_clamp": "[Undefined]",
              "no_resample_blur": "[Undefined]",
              "rigid2D": "[Undefined]",
              "save_log": "[Undefined]",
              "verbose": "[Undefined]",
              "bgvalue": "[Undefined]",
              "wm_seg": "[Undefined]",
              "wmcoords": "[Undefined]",
              "wmnorms": "[Undefined]",
              "fieldmap": "[Undefined]",
              "fieldmapmask": "[Undefined]",
              "pedir": "[Undefined]",
              "echospacing": "[Undefined]",
              "bbrtype": "[Undefined]",
              "bbrslope": "[Undefined]",
              "output_type": "NIFTI_GZ",
              "args": "[Undefined]",
              "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
            },
            "outputs": {
              "out_file": "[Undefined]",
              "out_matrix_file": "[Undefined]",
              "out_log": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "WhiteMatter_merge_masks",
            "type": "node",
            "inputs": {
              "axis": "vstack",
              "no_flatten": "False",
              "ravel_inputs": "False",
              "in1": "[Undefined]"
            },
            "outputs": {
              "out": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "WhiteMatter_union_masks",
            "type": "node",
            "inputs": {
              "in_files": "[Undefined]",
              "out_file": "[Undefined]",
              "count": "[Undefined]",
              "datum": "[Undefined]",
              "dilate_inputs": "[Undefined]",
              "dilate_results": "[Undefined]",
              "frac": "[Undefined]",
              "inter": "[Undefined]",
              "union": "[Undefined]",
              "fill_holes": "[Undefined]",
              "fill_dirs": "[Undefined]",
              "verbose": "[Undefined]",
              "num_threads": "1",
              "outputtype": "NIFTI_GZ",
              "args": "[Undefined]",
              "environ": "{}"
            },
            "outputs": {
              "out_file": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "WhiteMatter_mean",
            "type": "node",
            "inputs": {
              "in_file": "[Undefined]",
              "mask": "[Undefined]",
              "mask_file": "[Undefined]",
              "mask_f2short": "[Undefined]",
              "num_roi": "[Undefined]",
              "zerofill": "[Undefined]",
              "roisel": "[Undefined]",
              "debug": "[Undefined]",
              "quiet": "False",
              "nomeanout": "[Undefined]",
              "nobriklab": "[Undefined]",
              "format1D": "[Undefined]",
              "format1DR": "[Undefined]",
              "stat": "[Undefined]",
              "out_file": "[Undefined]",
              "args": "-1Dformat",
              "environ": "{}"
            },
            "outputs": {
              "out_file": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "CerebrospinalFluid_2mm_flirt",
            "type": "node",
            "inputs": {
              "in_file": "[Undefined]",
              "reference": "[Undefined]",
              "out_file": "[Undefined]",
              "out_matrix_file": "[Undefined]",
              "out_log": "[Undefined]",
              "in_matrix_file": "[Undefined]",
              "apply_xfm": "[Undefined]",
              "apply_isoxfm": "2.0",
              "datatype": "[Undefined]",
              "cost": "[Undefined]",
              "cost_func": "[Undefined]",
              "uses_qform": "[Undefined]",
              "display_init": "[Undefined]",
              "angle_rep": "[Undefined]",
              "interp": "nearestneighbour",
              "sinc_width": "[Undefined]",
              "sinc_window": "[Undefined]",
              "bins": "[Undefined]",
              "dof": "[Undefined]",
              "no_resample": "[Undefined]",
              "force_scaling": "[Undefined]",
              "min_sampling": "[Undefined]",
              "padding_size": "[Undefined]",
              "searchr_x": "[Undefined]",
              "searchr_y": "[Undefined]",
              "searchr_z": "[Undefined]",
              "no_search": "[Undefined]",
              "coarse_search": "[Undefined]",
              "fine_search": "[Undefined]",
              "schedule": "[Undefined]",
              "ref_weight": "[Undefined]",
              "in_weight": "[Undefined]",
              "no_clamp": "[Undefined]",
              "no_resample_blur": "[Undefined]",
              "rigid2D": "[Undefined]",
              "save_log": "[Undefined]",
              "verbose": "[Undefined]",
              "bgvalue": "[Undefined]",
              "wm_seg": "[Undefined]",
              "wmcoords": "[Undefined]",
              "wmnorms": "[Undefined]",
              "fieldmap": "[Undefined]",
              "fieldmapmask": "[Undefined]",
              "pedir": "[Undefined]",
              "echospacing": "[Undefined]",
              "bbrtype": "[Undefined]",
              "bbrslope": "[Undefined]",
              "output_type": "NIFTI_GZ",
              "args": "[Undefined]",
              "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
            },
            "outputs": {
              "out_file": "[Undefined]",
              "out_matrix_file": "[Undefined]",
              "out_log": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "VentriclesToAnat_2mm_fsl_applywarp",
            "type": "node",
            "inputs": {
              "in_file": "[Undefined]",
              "out_file": "[Undefined]",
              "ref_file": "[Undefined]",
              "field_file": "[Undefined]",
              "abswarp": "[Undefined]",
              "relwarp": "[Undefined]",
              "datatype": "[Undefined]",
              "supersample": "[Undefined]",
              "superlevel": "[Undefined]",
              "premat": "[Undefined]",
              "postmat": "[Undefined]",
              "mask_file": "[Undefined]",
              "interp": "nn",
              "output_type": "NIFTI_GZ",
              "args": "[Undefined]",
              "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
            },
            "outputs": {
              "out_file": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "CerebrospinalFluid_2mm_Ventricles",
            "type": "node",
            "inputs": {
              "in_file_a": "[Undefined]",
              "in_file_b": "[Undefined]",
              "in_file_c": "[Undefined]",
              "out_file": "csf_lat_ven_mask.nii.gz",
              "expr": "a*b",
              "start_idx": "[Undefined]",
              "stop_idx": "[Undefined]",
              "single_idx": "[Undefined]",
              "overwrite": "[Undefined]",
              "other": "[Undefined]",
              "num_threads": "1",
              "outputtype": "NIFTI_GZ",
              "args": "[Undefined]",
              "environ": "{}"
            },
            "outputs": {
              "out_file": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "CerebrospinalFluid_merge_masks",
            "type": "node",
            "inputs": {
              "axis": "vstack",
              "no_flatten": "False",
              "ravel_inputs": "False",
              "in1": "[Undefined]"
            },
            "outputs": {
              "out": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "CerebrospinalFluid_union_masks",
            "type": "node",
            "inputs": {
              "in_files": "[Undefined]",
              "out_file": "[Undefined]",
              "count": "[Undefined]",
              "datum": "[Undefined]",
              "dilate_inputs": "[Undefined]",
              "dilate_results": "[Undefined]",
              "frac": "[Undefined]",
              "inter": "[Undefined]",
              "union": "[Undefined]",
              "fill_holes": "[Undefined]",
              "fill_dirs": "[Undefined]",
              "verbose": "[Undefined]",
              "num_threads": "1",
              "outputtype": "NIFTI_GZ",
              "args": "[Undefined]",
              "environ": "{}"
            },
            "outputs": {
              "out_file": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "CerebrospinalFluid_mean",
            "type": "node",
            "inputs": {
              "in_file": "[Undefined]",
              "mask": "[Undefined]",
              "mask_file": "[Undefined]",
              "mask_f2short": "[Undefined]",
              "num_roi": "[Undefined]",
              "zerofill": "[Undefined]",
              "roisel": "[Undefined]",
              "debug": "[Undefined]",
              "quiet": "False",
              "nomeanout": "[Undefined]",
              "nobriklab": "[Undefined]",
              "format1D": "[Undefined]",
              "format1DR": "[Undefined]",
              "stat": "[Undefined]",
              "out_file": "[Undefined]",
              "args": "-1Dformat",
              "environ": "{}"
            },
            "outputs": {
              "out_file": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "GlobalSignal_merge_masks",
            "type": "node",
            "inputs": {
              "axis": "vstack",
              "no_flatten": "False",
              "ravel_inputs": "False",
              "in1": "[Undefined]"
            },
            "outputs": {
              "out": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "GlobalSignal_union_masks",
            "type": "node",
            "inputs": {
              "in_files": "[Undefined]",
              "out_file": "[Undefined]",
              "count": "[Undefined]",
              "datum": "[Undefined]",
              "dilate_inputs": "[Undefined]",
              "dilate_results": "[Undefined]",
              "frac": "[Undefined]",
              "inter": "[Undefined]",
              "union": "[Undefined]",
              "fill_holes": "[Undefined]",
              "fill_dirs": "[Undefined]",
              "verbose": "[Undefined]",
              "num_threads": "1",
              "outputtype": "NIFTI_GZ",
              "args": "[Undefined]",
              "environ": "{}"
            },
            "outputs": {
              "out_file": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "GlobalSignal_mean",
            "type": "node",
            "inputs": {
              "in_file": "[Undefined]",
              "mask": "[Undefined]",
              "mask_file": "[Undefined]",
              "mask_f2short": "[Undefined]",
              "num_roi": "[Undefined]",
              "zerofill": "[Undefined]",
              "roisel": "[Undefined]",
              "debug": "[Undefined]",
              "quiet": "False",
              "nomeanout": "[Undefined]",
              "nobriklab": "[Undefined]",
              "format1D": "[Undefined]",
              "format1DR": "[Undefined]",
              "stat": "[Undefined]",
              "out_file": "[Undefined]",
              "args": "-1Dformat",
              "environ": "{}"
            },
            "outputs": {
              "out_file": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "build_nuisance_regressors",
            "type": "node",
            "inputs": {
              "function_str": "CPAC.nuisance.nuisance.gather_nuisance",
              "functional_file_path": "[Undefined]",
              "selector": "{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': {'filter': 'Mean', 'method': 'Mean'}}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': {'filter': 'Mean', 'method': 'Mean'}}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': {'filter': 'Mean', 'method': 'Mean'}}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}",
              "grey_matter_summary_file_path": "[Undefined]",
              "white_matter_summary_file_path": "[Undefined]",
              "csf_summary_file_path": "[Undefined]",
              "acompcor_file_path": "[Undefined]",
              "tcompcor_file_path": "[Undefined]",
              "global_summary_file_path": "[Undefined]",
              "motion_parameters_file_path": "[Undefined]",
              "custom_file_paths": "[Undefined]",
              "censor_file_path": "[Undefined]"
            },
            "outputs": {
              "out_file": "[Undefined]",
              "censor_indices": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "outputspec",
            "type": "node",
            "inputs": {
              "regressors_file_path": "[Undefined]",
              "censor_indices": "[Undefined]"
            },
            "outputs": {
              "regressors_file_path": "[Undefined]",
              "censor_indices": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          }
        ],
        "edges": [
          {
            "origin": "inputspec",
            "target": "functional_mean"
          },
          {
            "origin": "inputspec",
            "target": "Anatomical_2mm_flirt"
          },
          {
            "origin": "inputspec",
            "target": "Functional_2mm_flirt"
          },
          {
            "origin": "inputspec",
            "target": "WhiteMatter_2mm_flirt"
          },
          {
            "origin": "inputspec",
            "target": "CerebrospinalFluid_2mm_flirt"
          },
          {
            "origin": "inputspec",
            "target": "VentriclesToAnat_2mm_fsl_applywarp"
          },
          {
            "origin": "inputspec",
            "target": "GlobalSignal_merge_masks"
          },
          {
            "origin": "inputspec",
            "target": "GlobalSignal_mean"
          },
          {
            "origin": "inputspec",
            "target": "build_nuisance_regressors"
          },
          {
            "origin": "Anatomical_2mm_flirt",
            "target": "Functional_2mm_flirt"
          },
          {
            "origin": "Anatomical_2mm_flirt",
            "target": "WhiteMatter_2mm_flirt"
          },
          {
            "origin": "Anatomical_2mm_flirt",
            "target": "CerebrospinalFluid_2mm_flirt"
          },
          {
            "origin": "Functional_2mm_flirt",
            "target": "WhiteMatter_mean"
          },
          {
            "origin": "Functional_2mm_flirt",
            "target": "CerebrospinalFluid_mean"
          },
          {
            "origin": "WhiteMatter_2mm_flirt",
            "target": "WhiteMatter_merge_masks"
          },
          {
            "origin": "WhiteMatter_merge_masks",
            "target": "WhiteMatter_union_masks"
          },
          {
            "origin": "WhiteMatter_union_masks",
            "target": "WhiteMatter_mean"
          },
          {
            "origin": "WhiteMatter_mean",
            "target": "build_nuisance_regressors"
          },
          {
            "origin": "CerebrospinalFluid_2mm_flirt",
            "target": "VentriclesToAnat_2mm_fsl_applywarp"
          },
          {
            "origin": "CerebrospinalFluid_2mm_flirt",
            "target": "CerebrospinalFluid_2mm_Ventricles"
          },
          {
            "origin": "VentriclesToAnat_2mm_fsl_applywarp",
            "target": "CerebrospinalFluid_2mm_Ventricles"
          },
          {
            "origin": "CerebrospinalFluid_2mm_Ventricles",
            "target": "CerebrospinalFluid_merge_masks"
          },
          {
            "origin": "CerebrospinalFluid_merge_masks",
            "target": "CerebrospinalFluid_union_masks"
          },
          {
            "origin": "CerebrospinalFluid_union_masks",
            "target": "CerebrospinalFluid_mean"
          },
          {
            "origin": "CerebrospinalFluid_mean",
            "target": "build_nuisance_regressors"
          },
          {
            "origin": "GlobalSignal_merge_masks",
            "target": "GlobalSignal_union_masks"
          },
          {
            "origin": "GlobalSignal_union_masks",
            "target": "GlobalSignal_mean"
          },
          {
            "origin": "GlobalSignal_mean",
            "target": "build_nuisance_regressors"
          },
          {
            "origin": "build_nuisance_regressors",
            "target": "outputspec"
          }
        ]
      },
      {
        "name": "gather_lateral-ventricles-mask",
        "type": "workflow",
        "inputs": {
          "inputnode": "{'creds_path': None, 'data': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'dl_dir': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working/pipeline_cpac_ccs-options', 'scan': '[Undefined]', 'unique_id': 'sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1'}",
          "check_for_s3": "{'function_str': 'CPAC.utils.datasource.check_for_s3', 'img_type': 'other'}",
          "outputspec": "{}"
        },
        "outputs": {
          "inputnode": "{'creds_path': None, 'data': None, 'dl_dir': None, 'scan': None, 'unique_id': None}",
          "check_for_s3": "{'local_path': None}",
          "outputspec": "{'data': None, 'scan': None, 'unique_id': None}"
        },
        "result": null,
        "nodes": [
          {
            "name": "inputnode",
            "type": "node",
            "inputs": {
              "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
              "data": "/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz",
              "scan": "[Undefined]",
              "creds_path": "None",
              "dl_dir": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working/pipeline_cpac_ccs-options"
            },
            "outputs": {
              "unique_id": "[Undefined]",
              "data": "[Undefined]",
              "scan": "[Undefined]",
              "creds_path": "[Undefined]",
              "dl_dir": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "check_for_s3",
            "type": "node",
            "inputs": {
              "function_str": "CPAC.utils.datasource.check_for_s3",
              "file_path": "[Undefined]",
              "creds_path": "[Undefined]",
              "dl_dir": "[Undefined]",
              "img_type": "other"
            },
            "outputs": {
              "local_path": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "outputspec",
            "type": "node",
            "inputs": {
              "unique_id": "[Undefined]",
              "data": "[Undefined]",
              "scan": "[Undefined]"
            },
            "outputs": {
              "unique_id": "[Undefined]",
              "data": "[Undefined]",
              "scan": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          }
        ],
        "edges": [
          {
            "origin": "inputnode",
            "target": "check_for_s3"
          },
          {
            "origin": "inputnode",
            "target": "outputspec"
          },
          {
            "origin": "check_for_s3",
            "target": "outputspec"
          }
        ]
      },
      {
        "name": "anat_to_func_linear_xfm_Regressor_1_203",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "in_file2": "[Undefined]",
          "invert_xfm": "True",
          "concat_xfm": "[Undefined]",
          "fix_scale_skew": "[Undefined]",
          "out_file": "[Undefined]",
          "output_type": "NIFTI_GZ",
          "args": "[Undefined]",
          "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "fsl_lin-warp_to_nii",
        "type": "node",
        "inputs": {
          "reference": "[Undefined]",
          "out_file": "[Undefined]",
          "premat": "[Undefined]",
          "warp1": "[Undefined]",
          "midmat": "[Undefined]",
          "warp2": "[Undefined]",
          "postmat": "[Undefined]",
          "shift_in_file": "[Undefined]",
          "shift_direction": "[Undefined]",
          "cons_jacobian": "[Undefined]",
          "jacobian_min": "[Undefined]",
          "jacobian_max": "[Undefined]",
          "abswarp": "[Undefined]",
          "relwarp": "[Undefined]",
          "out_abswarp": "[Undefined]",
          "out_relwarp": "[Undefined]",
          "output_type": "NIFTI_GZ",
          "args": "[Undefined]",
          "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "nuisance_regressors_Regressor_2_203",
        "type": "workflow",
        "inputs": {
          "inputspec": "{'anat_to_func_linear_xfm_file_path': '[Undefined]', 'anat_to_mni_linear_xfm_file_path': '[Undefined]', 'anatomical_eroded_brain_mask_file_path': '[Undefined]', 'anatomical_file_path': '[Undefined]', 'creds_path': '[Undefined]', 'csf_mask_file_path': '[Undefined]', 'dl_dir': '[Undefined]', 'dvars_file_path': '[Undefined]', 'fd_j_file_path': '[Undefined]', 'fd_p_file_path': '[Undefined]', 'func_to_anat_linear_xfm_file_path': '[Undefined]', 'functional_brain_mask_file_path': '[Undefined]', 'functional_file_path': '[Undefined]', 'gm_mask_file_path': '[Undefined]', 'lat_ventricles_mask_file_path': '[Undefined]', 'mni_to_anat_linear_xfm_file_path': '[Undefined]', 'motion_parameters_file_path': '[Undefined]', 'selector': '[Undefined]', 'tr': '[Undefined]', 'wm_mask_file_path': '[Undefined]'}",
          "functional_mean": "{'args': '[Undefined]', 'environ': {}, 'mask': '[Undefined]', 'num_threads': 1, 'options': '-mean', 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ'}",
          "Anatomical_2mm_flirt": "{'angle_rep': '[Undefined]', 'apply_isoxfm': 2.0, 'apply_xfm': '[Undefined]', 'args': '[Undefined]', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': '[Undefined]', 'coarse_search': '[Undefined]', 'cost': '[Undefined]', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'dof': '[Undefined]', 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_matrix_file': '[Undefined]', 'in_weight': '[Undefined]', 'interp': '[Undefined]', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': '[Undefined]', 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'schedule': '[Undefined]', 'searchr_x': '[Undefined]', 'searchr_y': '[Undefined]', 'searchr_z': '[Undefined]', 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}",
          "Functional_2mm_flirt": "{'angle_rep': '[Undefined]', 'apply_isoxfm': '[Undefined]', 'apply_xfm': True, 'args': '[Undefined]', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': '[Undefined]', 'coarse_search': '[Undefined]', 'cost': '[Undefined]', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'dof': '[Undefined]', 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_weight': '[Undefined]', 'interp': '[Undefined]', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': '[Undefined]', 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'schedule': '[Undefined]', 'searchr_x': '[Undefined]', 'searchr_y': '[Undefined]', 'searchr_z': '[Undefined]', 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}",
          "WhiteMatter_2mm_flirt": "{'angle_rep': '[Undefined]', 'apply_isoxfm': 2.0, 'apply_xfm': '[Undefined]', 'args': '[Undefined]', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': '[Undefined]', 'coarse_search': '[Undefined]', 'cost': '[Undefined]', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'dof': '[Undefined]', 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_matrix_file': '[Undefined]', 'in_weight': '[Undefined]', 'interp': 'nearestneighbour', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': '[Undefined]', 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'schedule': '[Undefined]', 'searchr_x': '[Undefined]', 'searchr_y': '[Undefined]', 'searchr_z': '[Undefined]', 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}",
          "WhiteMatter_merge_masks": "{'axis': 'vstack', 'no_flatten': False, 'ravel_inputs': False}",
          "WhiteMatter_union_masks": "{'args': '[Undefined]', 'count': '[Undefined]', 'datum': '[Undefined]', 'dilate_inputs': '[Undefined]', 'dilate_results': '[Undefined]', 'environ': {}, 'fill_dirs': '[Undefined]', 'fill_holes': '[Undefined]', 'frac': '[Undefined]', 'inter': '[Undefined]', 'num_threads': 1, 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'union': '[Undefined]', 'verbose': '[Undefined]'}",
          "WhiteMatter_mean": "{'args': '-1Dformat', 'debug': '[Undefined]', 'environ': {}, 'format1D': '[Undefined]', 'format1DR': '[Undefined]', 'mask': '[Undefined]', 'mask_f2short': '[Undefined]', 'nobriklab': '[Undefined]', 'nomeanout': '[Undefined]', 'num_roi': '[Undefined]', 'out_file': '[Undefined]', 'quiet': False, 'roisel': '[Undefined]', 'stat': '[Undefined]', 'zerofill': '[Undefined]'}",
          "CerebrospinalFluid_2mm_flirt": "{'angle_rep': '[Undefined]', 'apply_isoxfm': 2.0, 'apply_xfm': '[Undefined]', 'args': '[Undefined]', 'bbrslope': '[Undefined]', 'bbrtype': '[Undefined]', 'bgvalue': '[Undefined]', 'bins': '[Undefined]', 'coarse_search': '[Undefined]', 'cost': '[Undefined]', 'cost_func': '[Undefined]', 'datatype': '[Undefined]', 'display_init': '[Undefined]', 'dof': '[Undefined]', 'echospacing': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'fieldmap': '[Undefined]', 'fieldmapmask': '[Undefined]', 'fine_search': '[Undefined]', 'force_scaling': '[Undefined]', 'in_matrix_file': '[Undefined]', 'in_weight': '[Undefined]', 'interp': 'nearestneighbour', 'min_sampling': '[Undefined]', 'no_clamp': '[Undefined]', 'no_resample': '[Undefined]', 'no_resample_blur': '[Undefined]', 'no_search': '[Undefined]', 'out_file': '[Undefined]', 'out_log': '[Undefined]', 'out_matrix_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'padding_size': '[Undefined]', 'pedir': '[Undefined]', 'ref_weight': '[Undefined]', 'rigid2D': '[Undefined]', 'save_log': '[Undefined]', 'schedule': '[Undefined]', 'searchr_x': '[Undefined]', 'searchr_y': '[Undefined]', 'searchr_z': '[Undefined]', 'sinc_width': '[Undefined]', 'sinc_window': '[Undefined]', 'uses_qform': '[Undefined]', 'verbose': '[Undefined]', 'wm_seg': '[Undefined]', 'wmcoords': '[Undefined]', 'wmnorms': '[Undefined]'}",
          "VentriclesToAnat_2mm_fsl_applywarp": "{'abswarp': '[Undefined]', 'args': '[Undefined]', 'datatype': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'interp': 'nn', 'mask_file': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'premat': '[Undefined]', 'relwarp': '[Undefined]', 'superlevel': '[Undefined]', 'supersample': '[Undefined]'}",
          "CerebrospinalFluid_2mm_Ventricles": "{'args': '[Undefined]', 'environ': {}, 'expr': 'a*b', 'in_file_c': '[Undefined]', 'num_threads': 1, 'other': '[Undefined]', 'out_file': 'csf_lat_ven_mask.nii.gz', 'outputtype': 'NIFTI_GZ', 'overwrite': '[Undefined]', 'single_idx': '[Undefined]', 'start_idx': '[Undefined]', 'stop_idx': '[Undefined]'}",
          "CerebrospinalFluid_merge_masks": "{'axis': 'vstack', 'no_flatten': False, 'ravel_inputs': False}",
          "CerebrospinalFluid_union_masks": "{'args': '[Undefined]', 'count': '[Undefined]', 'datum': '[Undefined]', 'dilate_inputs': '[Undefined]', 'dilate_results': '[Undefined]', 'environ': {}, 'fill_dirs': '[Undefined]', 'fill_holes': '[Undefined]', 'frac': '[Undefined]', 'inter': '[Undefined]', 'num_threads': 1, 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'union': '[Undefined]', 'verbose': '[Undefined]'}",
          "CerebrospinalFluid_mean": "{'args': '-1Dformat', 'debug': '[Undefined]', 'environ': {}, 'format1D': '[Undefined]', 'format1DR': '[Undefined]', 'mask': '[Undefined]', 'mask_f2short': '[Undefined]', 'nobriklab': '[Undefined]', 'nomeanout': '[Undefined]', 'num_roi': '[Undefined]', 'out_file': '[Undefined]', 'quiet': False, 'roisel': '[Undefined]', 'stat': '[Undefined]', 'zerofill': '[Undefined]'}",
          "build_nuisance_regressors": "{'acompcor_file_path': '[Undefined]', 'censor_file_path': '[Undefined]', 'custom_file_paths': '[Undefined]', 'function_str': 'CPAC.nuisance.nuisance.gather_nuisance', 'global_summary_file_path': '[Undefined]', 'grey_matter_summary_file_path': '[Undefined]', 'selector': {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': {'filter': 'Mean', 'method': 'Mean'}}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': {'filter': 'Mean', 'method': 'Mean'}}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, 'tcompcor_file_path': '[Undefined]'}",
          "outputspec": "{}"
        },
        "outputs": {
          "inputspec": "{'anat_to_func_linear_xfm_file_path': None, 'anat_to_mni_linear_xfm_file_path': None, 'anatomical_eroded_brain_mask_file_path': None, 'anatomical_file_path': None, 'creds_path': None, 'csf_mask_file_path': None, 'dl_dir': None, 'dvars_file_path': None, 'fd_j_file_path': None, 'fd_p_file_path': None, 'func_to_anat_linear_xfm_file_path': None, 'functional_brain_mask_file_path': None, 'functional_file_path': None, 'gm_mask_file_path': None, 'lat_ventricles_mask_file_path': None, 'mni_to_anat_linear_xfm_file_path': None, 'motion_parameters_file_path': None, 'selector': None, 'tr': None, 'wm_mask_file_path': None}",
          "functional_mean": "{'out_file': None}",
          "Anatomical_2mm_flirt": "{'out_file': None, 'out_log': None, 'out_matrix_file': None}",
          "Functional_2mm_flirt": "{'out_file': None, 'out_log': None, 'out_matrix_file': None}",
          "WhiteMatter_2mm_flirt": "{'out_file': None, 'out_log': None, 'out_matrix_file': None}",
          "WhiteMatter_merge_masks": "{'out': None}",
          "WhiteMatter_union_masks": "{'out_file': None}",
          "WhiteMatter_mean": "{'out_file': None}",
          "CerebrospinalFluid_2mm_flirt": "{'out_file': None, 'out_log': None, 'out_matrix_file': None}",
          "VentriclesToAnat_2mm_fsl_applywarp": "{'out_file': None}",
          "CerebrospinalFluid_2mm_Ventricles": "{'out_file': None}",
          "CerebrospinalFluid_merge_masks": "{'out': None}",
          "CerebrospinalFluid_union_masks": "{'out_file': None}",
          "CerebrospinalFluid_mean": "{'out_file': None}",
          "build_nuisance_regressors": "{'censor_indices': None, 'out_file': None}",
          "outputspec": "{'censor_indices': None, 'regressors_file_path': None}"
        },
        "result": null,
        "nodes": [
          {
            "name": "inputspec",
            "type": "node",
            "inputs": {
              "selector": "[Undefined]",
              "functional_file_path": "[Undefined]",
              "anatomical_file_path": "[Undefined]",
              "anatomical_eroded_brain_mask_file_path": "[Undefined]",
              "gm_mask_file_path": "[Undefined]",
              "wm_mask_file_path": "[Undefined]",
              "csf_mask_file_path": "[Undefined]",
              "lat_ventricles_mask_file_path": "[Undefined]",
              "functional_brain_mask_file_path": "[Undefined]",
              "func_to_anat_linear_xfm_file_path": "[Undefined]",
              "anat_to_func_linear_xfm_file_path": "[Undefined]",
              "mni_to_anat_linear_xfm_file_path": "[Undefined]",
              "anat_to_mni_linear_xfm_file_path": "[Undefined]",
              "motion_parameters_file_path": "[Undefined]",
              "fd_j_file_path": "[Undefined]",
              "fd_p_file_path": "[Undefined]",
              "dvars_file_path": "[Undefined]",
              "creds_path": "[Undefined]",
              "dl_dir": "[Undefined]",
              "tr": "[Undefined]"
            },
            "outputs": {
              "selector": "[Undefined]",
              "functional_file_path": "[Undefined]",
              "anatomical_file_path": "[Undefined]",
              "anatomical_eroded_brain_mask_file_path": "[Undefined]",
              "gm_mask_file_path": "[Undefined]",
              "wm_mask_file_path": "[Undefined]",
              "csf_mask_file_path": "[Undefined]",
              "lat_ventricles_mask_file_path": "[Undefined]",
              "functional_brain_mask_file_path": "[Undefined]",
              "func_to_anat_linear_xfm_file_path": "[Undefined]",
              "anat_to_func_linear_xfm_file_path": "[Undefined]",
              "mni_to_anat_linear_xfm_file_path": "[Undefined]",
              "anat_to_mni_linear_xfm_file_path": "[Undefined]",
              "motion_parameters_file_path": "[Undefined]",
              "fd_j_file_path": "[Undefined]",
              "fd_p_file_path": "[Undefined]",
              "dvars_file_path": "[Undefined]",
              "creds_path": "[Undefined]",
              "dl_dir": "[Undefined]",
              "tr": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "functional_mean",
            "type": "node",
            "inputs": {
              "in_file": "[Undefined]",
              "out_file": "[Undefined]",
              "mask": "[Undefined]",
              "options": "-mean",
              "num_threads": "1",
              "outputtype": "NIFTI_GZ",
              "args": "[Undefined]",
              "environ": "{}"
            },
            "outputs": {
              "out_file": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "Anatomical_2mm_flirt",
            "type": "node",
            "inputs": {
              "in_file": "[Undefined]",
              "reference": "[Undefined]",
              "out_file": "[Undefined]",
              "out_matrix_file": "[Undefined]",
              "out_log": "[Undefined]",
              "in_matrix_file": "[Undefined]",
              "apply_xfm": "[Undefined]",
              "apply_isoxfm": "2.0",
              "datatype": "[Undefined]",
              "cost": "[Undefined]",
              "cost_func": "[Undefined]",
              "uses_qform": "[Undefined]",
              "display_init": "[Undefined]",
              "angle_rep": "[Undefined]",
              "interp": "[Undefined]",
              "sinc_width": "[Undefined]",
              "sinc_window": "[Undefined]",
              "bins": "[Undefined]",
              "dof": "[Undefined]",
              "no_resample": "[Undefined]",
              "force_scaling": "[Undefined]",
              "min_sampling": "[Undefined]",
              "padding_size": "[Undefined]",
              "searchr_x": "[Undefined]",
              "searchr_y": "[Undefined]",
              "searchr_z": "[Undefined]",
              "no_search": "[Undefined]",
              "coarse_search": "[Undefined]",
              "fine_search": "[Undefined]",
              "schedule": "[Undefined]",
              "ref_weight": "[Undefined]",
              "in_weight": "[Undefined]",
              "no_clamp": "[Undefined]",
              "no_resample_blur": "[Undefined]",
              "rigid2D": "[Undefined]",
              "save_log": "[Undefined]",
              "verbose": "[Undefined]",
              "bgvalue": "[Undefined]",
              "wm_seg": "[Undefined]",
              "wmcoords": "[Undefined]",
              "wmnorms": "[Undefined]",
              "fieldmap": "[Undefined]",
              "fieldmapmask": "[Undefined]",
              "pedir": "[Undefined]",
              "echospacing": "[Undefined]",
              "bbrtype": "[Undefined]",
              "bbrslope": "[Undefined]",
              "output_type": "NIFTI_GZ",
              "args": "[Undefined]",
              "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
            },
            "outputs": {
              "out_file": "[Undefined]",
              "out_matrix_file": "[Undefined]",
              "out_log": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "Functional_2mm_flirt",
            "type": "node",
            "inputs": {
              "in_file": "[Undefined]",
              "reference": "[Undefined]",
              "out_file": "[Undefined]",
              "out_matrix_file": "[Undefined]",
              "out_log": "[Undefined]",
              "in_matrix_file": "[Undefined]",
              "apply_xfm": "True",
              "apply_isoxfm": "[Undefined]",
              "datatype": "[Undefined]",
              "cost": "[Undefined]",
              "cost_func": "[Undefined]",
              "uses_qform": "[Undefined]",
              "display_init": "[Undefined]",
              "angle_rep": "[Undefined]",
              "interp": "[Undefined]",
              "sinc_width": "[Undefined]",
              "sinc_window": "[Undefined]",
              "bins": "[Undefined]",
              "dof": "[Undefined]",
              "no_resample": "[Undefined]",
              "force_scaling": "[Undefined]",
              "min_sampling": "[Undefined]",
              "padding_size": "[Undefined]",
              "searchr_x": "[Undefined]",
              "searchr_y": "[Undefined]",
              "searchr_z": "[Undefined]",
              "no_search": "[Undefined]",
              "coarse_search": "[Undefined]",
              "fine_search": "[Undefined]",
              "schedule": "[Undefined]",
              "ref_weight": "[Undefined]",
              "in_weight": "[Undefined]",
              "no_clamp": "[Undefined]",
              "no_resample_blur": "[Undefined]",
              "rigid2D": "[Undefined]",
              "save_log": "[Undefined]",
              "verbose": "[Undefined]",
              "bgvalue": "[Undefined]",
              "wm_seg": "[Undefined]",
              "wmcoords": "[Undefined]",
              "wmnorms": "[Undefined]",
              "fieldmap": "[Undefined]",
              "fieldmapmask": "[Undefined]",
              "pedir": "[Undefined]",
              "echospacing": "[Undefined]",
              "bbrtype": "[Undefined]",
              "bbrslope": "[Undefined]",
              "output_type": "NIFTI_GZ",
              "args": "[Undefined]",
              "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
            },
            "outputs": {
              "out_file": "[Undefined]",
              "out_matrix_file": "[Undefined]",
              "out_log": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "WhiteMatter_2mm_flirt",
            "type": "node",
            "inputs": {
              "in_file": "[Undefined]",
              "reference": "[Undefined]",
              "out_file": "[Undefined]",
              "out_matrix_file": "[Undefined]",
              "out_log": "[Undefined]",
              "in_matrix_file": "[Undefined]",
              "apply_xfm": "[Undefined]",
              "apply_isoxfm": "2.0",
              "datatype": "[Undefined]",
              "cost": "[Undefined]",
              "cost_func": "[Undefined]",
              "uses_qform": "[Undefined]",
              "display_init": "[Undefined]",
              "angle_rep": "[Undefined]",
              "interp": "nearestneighbour",
              "sinc_width": "[Undefined]",
              "sinc_window": "[Undefined]",
              "bins": "[Undefined]",
              "dof": "[Undefined]",
              "no_resample": "[Undefined]",
              "force_scaling": "[Undefined]",
              "min_sampling": "[Undefined]",
              "padding_size": "[Undefined]",
              "searchr_x": "[Undefined]",
              "searchr_y": "[Undefined]",
              "searchr_z": "[Undefined]",
              "no_search": "[Undefined]",
              "coarse_search": "[Undefined]",
              "fine_search": "[Undefined]",
              "schedule": "[Undefined]",
              "ref_weight": "[Undefined]",
              "in_weight": "[Undefined]",
              "no_clamp": "[Undefined]",
              "no_resample_blur": "[Undefined]",
              "rigid2D": "[Undefined]",
              "save_log": "[Undefined]",
              "verbose": "[Undefined]",
              "bgvalue": "[Undefined]",
              "wm_seg": "[Undefined]",
              "wmcoords": "[Undefined]",
              "wmnorms": "[Undefined]",
              "fieldmap": "[Undefined]",
              "fieldmapmask": "[Undefined]",
              "pedir": "[Undefined]",
              "echospacing": "[Undefined]",
              "bbrtype": "[Undefined]",
              "bbrslope": "[Undefined]",
              "output_type": "NIFTI_GZ",
              "args": "[Undefined]",
              "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
            },
            "outputs": {
              "out_file": "[Undefined]",
              "out_matrix_file": "[Undefined]",
              "out_log": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "WhiteMatter_merge_masks",
            "type": "node",
            "inputs": {
              "axis": "vstack",
              "no_flatten": "False",
              "ravel_inputs": "False",
              "in1": "[Undefined]"
            },
            "outputs": {
              "out": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "WhiteMatter_union_masks",
            "type": "node",
            "inputs": {
              "in_files": "[Undefined]",
              "out_file": "[Undefined]",
              "count": "[Undefined]",
              "datum": "[Undefined]",
              "dilate_inputs": "[Undefined]",
              "dilate_results": "[Undefined]",
              "frac": "[Undefined]",
              "inter": "[Undefined]",
              "union": "[Undefined]",
              "fill_holes": "[Undefined]",
              "fill_dirs": "[Undefined]",
              "verbose": "[Undefined]",
              "num_threads": "1",
              "outputtype": "NIFTI_GZ",
              "args": "[Undefined]",
              "environ": "{}"
            },
            "outputs": {
              "out_file": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "WhiteMatter_mean",
            "type": "node",
            "inputs": {
              "in_file": "[Undefined]",
              "mask": "[Undefined]",
              "mask_file": "[Undefined]",
              "mask_f2short": "[Undefined]",
              "num_roi": "[Undefined]",
              "zerofill": "[Undefined]",
              "roisel": "[Undefined]",
              "debug": "[Undefined]",
              "quiet": "False",
              "nomeanout": "[Undefined]",
              "nobriklab": "[Undefined]",
              "format1D": "[Undefined]",
              "format1DR": "[Undefined]",
              "stat": "[Undefined]",
              "out_file": "[Undefined]",
              "args": "-1Dformat",
              "environ": "{}"
            },
            "outputs": {
              "out_file": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "CerebrospinalFluid_2mm_flirt",
            "type": "node",
            "inputs": {
              "in_file": "[Undefined]",
              "reference": "[Undefined]",
              "out_file": "[Undefined]",
              "out_matrix_file": "[Undefined]",
              "out_log": "[Undefined]",
              "in_matrix_file": "[Undefined]",
              "apply_xfm": "[Undefined]",
              "apply_isoxfm": "2.0",
              "datatype": "[Undefined]",
              "cost": "[Undefined]",
              "cost_func": "[Undefined]",
              "uses_qform": "[Undefined]",
              "display_init": "[Undefined]",
              "angle_rep": "[Undefined]",
              "interp": "nearestneighbour",
              "sinc_width": "[Undefined]",
              "sinc_window": "[Undefined]",
              "bins": "[Undefined]",
              "dof": "[Undefined]",
              "no_resample": "[Undefined]",
              "force_scaling": "[Undefined]",
              "min_sampling": "[Undefined]",
              "padding_size": "[Undefined]",
              "searchr_x": "[Undefined]",
              "searchr_y": "[Undefined]",
              "searchr_z": "[Undefined]",
              "no_search": "[Undefined]",
              "coarse_search": "[Undefined]",
              "fine_search": "[Undefined]",
              "schedule": "[Undefined]",
              "ref_weight": "[Undefined]",
              "in_weight": "[Undefined]",
              "no_clamp": "[Undefined]",
              "no_resample_blur": "[Undefined]",
              "rigid2D": "[Undefined]",
              "save_log": "[Undefined]",
              "verbose": "[Undefined]",
              "bgvalue": "[Undefined]",
              "wm_seg": "[Undefined]",
              "wmcoords": "[Undefined]",
              "wmnorms": "[Undefined]",
              "fieldmap": "[Undefined]",
              "fieldmapmask": "[Undefined]",
              "pedir": "[Undefined]",
              "echospacing": "[Undefined]",
              "bbrtype": "[Undefined]",
              "bbrslope": "[Undefined]",
              "output_type": "NIFTI_GZ",
              "args": "[Undefined]",
              "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
            },
            "outputs": {
              "out_file": "[Undefined]",
              "out_matrix_file": "[Undefined]",
              "out_log": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "VentriclesToAnat_2mm_fsl_applywarp",
            "type": "node",
            "inputs": {
              "in_file": "[Undefined]",
              "out_file": "[Undefined]",
              "ref_file": "[Undefined]",
              "field_file": "[Undefined]",
              "abswarp": "[Undefined]",
              "relwarp": "[Undefined]",
              "datatype": "[Undefined]",
              "supersample": "[Undefined]",
              "superlevel": "[Undefined]",
              "premat": "[Undefined]",
              "postmat": "[Undefined]",
              "mask_file": "[Undefined]",
              "interp": "nn",
              "output_type": "NIFTI_GZ",
              "args": "[Undefined]",
              "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
            },
            "outputs": {
              "out_file": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "CerebrospinalFluid_2mm_Ventricles",
            "type": "node",
            "inputs": {
              "in_file_a": "[Undefined]",
              "in_file_b": "[Undefined]",
              "in_file_c": "[Undefined]",
              "out_file": "csf_lat_ven_mask.nii.gz",
              "expr": "a*b",
              "start_idx": "[Undefined]",
              "stop_idx": "[Undefined]",
              "single_idx": "[Undefined]",
              "overwrite": "[Undefined]",
              "other": "[Undefined]",
              "num_threads": "1",
              "outputtype": "NIFTI_GZ",
              "args": "[Undefined]",
              "environ": "{}"
            },
            "outputs": {
              "out_file": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "CerebrospinalFluid_merge_masks",
            "type": "node",
            "inputs": {
              "axis": "vstack",
              "no_flatten": "False",
              "ravel_inputs": "False",
              "in1": "[Undefined]"
            },
            "outputs": {
              "out": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "CerebrospinalFluid_union_masks",
            "type": "node",
            "inputs": {
              "in_files": "[Undefined]",
              "out_file": "[Undefined]",
              "count": "[Undefined]",
              "datum": "[Undefined]",
              "dilate_inputs": "[Undefined]",
              "dilate_results": "[Undefined]",
              "frac": "[Undefined]",
              "inter": "[Undefined]",
              "union": "[Undefined]",
              "fill_holes": "[Undefined]",
              "fill_dirs": "[Undefined]",
              "verbose": "[Undefined]",
              "num_threads": "1",
              "outputtype": "NIFTI_GZ",
              "args": "[Undefined]",
              "environ": "{}"
            },
            "outputs": {
              "out_file": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "CerebrospinalFluid_mean",
            "type": "node",
            "inputs": {
              "in_file": "[Undefined]",
              "mask": "[Undefined]",
              "mask_file": "[Undefined]",
              "mask_f2short": "[Undefined]",
              "num_roi": "[Undefined]",
              "zerofill": "[Undefined]",
              "roisel": "[Undefined]",
              "debug": "[Undefined]",
              "quiet": "False",
              "nomeanout": "[Undefined]",
              "nobriklab": "[Undefined]",
              "format1D": "[Undefined]",
              "format1DR": "[Undefined]",
              "stat": "[Undefined]",
              "out_file": "[Undefined]",
              "args": "-1Dformat",
              "environ": "{}"
            },
            "outputs": {
              "out_file": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "build_nuisance_regressors",
            "type": "node",
            "inputs": {
              "function_str": "CPAC.nuisance.nuisance.gather_nuisance",
              "functional_file_path": "[Undefined]",
              "selector": "{'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': {'filter': 'Mean', 'method': 'Mean'}}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': {'filter': 'Mean', 'method': 'Mean'}}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}",
              "grey_matter_summary_file_path": "[Undefined]",
              "white_matter_summary_file_path": "[Undefined]",
              "csf_summary_file_path": "[Undefined]",
              "acompcor_file_path": "[Undefined]",
              "tcompcor_file_path": "[Undefined]",
              "global_summary_file_path": "[Undefined]",
              "motion_parameters_file_path": "[Undefined]",
              "custom_file_paths": "[Undefined]",
              "censor_file_path": "[Undefined]"
            },
            "outputs": {
              "out_file": "[Undefined]",
              "censor_indices": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "outputspec",
            "type": "node",
            "inputs": {
              "regressors_file_path": "[Undefined]",
              "censor_indices": "[Undefined]"
            },
            "outputs": {
              "regressors_file_path": "[Undefined]",
              "censor_indices": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          }
        ],
        "edges": [
          {
            "origin": "inputspec",
            "target": "functional_mean"
          },
          {
            "origin": "inputspec",
            "target": "Anatomical_2mm_flirt"
          },
          {
            "origin": "inputspec",
            "target": "Functional_2mm_flirt"
          },
          {
            "origin": "inputspec",
            "target": "WhiteMatter_2mm_flirt"
          },
          {
            "origin": "inputspec",
            "target": "CerebrospinalFluid_2mm_flirt"
          },
          {
            "origin": "inputspec",
            "target": "VentriclesToAnat_2mm_fsl_applywarp"
          },
          {
            "origin": "inputspec",
            "target": "build_nuisance_regressors"
          },
          {
            "origin": "Anatomical_2mm_flirt",
            "target": "Functional_2mm_flirt"
          },
          {
            "origin": "Anatomical_2mm_flirt",
            "target": "WhiteMatter_2mm_flirt"
          },
          {
            "origin": "Anatomical_2mm_flirt",
            "target": "CerebrospinalFluid_2mm_flirt"
          },
          {
            "origin": "Functional_2mm_flirt",
            "target": "WhiteMatter_mean"
          },
          {
            "origin": "Functional_2mm_flirt",
            "target": "CerebrospinalFluid_mean"
          },
          {
            "origin": "WhiteMatter_2mm_flirt",
            "target": "WhiteMatter_merge_masks"
          },
          {
            "origin": "WhiteMatter_merge_masks",
            "target": "WhiteMatter_union_masks"
          },
          {
            "origin": "WhiteMatter_union_masks",
            "target": "WhiteMatter_mean"
          },
          {
            "origin": "WhiteMatter_mean",
            "target": "build_nuisance_regressors"
          },
          {
            "origin": "CerebrospinalFluid_2mm_flirt",
            "target": "VentriclesToAnat_2mm_fsl_applywarp"
          },
          {
            "origin": "CerebrospinalFluid_2mm_flirt",
            "target": "CerebrospinalFluid_2mm_Ventricles"
          },
          {
            "origin": "VentriclesToAnat_2mm_fsl_applywarp",
            "target": "CerebrospinalFluid_2mm_Ventricles"
          },
          {
            "origin": "CerebrospinalFluid_2mm_Ventricles",
            "target": "CerebrospinalFluid_merge_masks"
          },
          {
            "origin": "CerebrospinalFluid_merge_masks",
            "target": "CerebrospinalFluid_union_masks"
          },
          {
            "origin": "CerebrospinalFluid_union_masks",
            "target": "CerebrospinalFluid_mean"
          },
          {
            "origin": "CerebrospinalFluid_mean",
            "target": "build_nuisance_regressors"
          },
          {
            "origin": "build_nuisance_regressors",
            "target": "outputspec"
          }
        ]
      },
      {
        "name": "anat_to_func_linear_xfm_Regressor_2_203",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "in_file2": "[Undefined]",
          "invert_xfm": "True",
          "concat_xfm": "[Undefined]",
          "fix_scale_skew": "[Undefined]",
          "out_file": "[Undefined]",
          "output_type": "NIFTI_GZ",
          "args": "[Undefined]",
          "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "warp_ts_to_T1template_236",
        "type": "workflow",
        "inputs": {
          "inputspec": "{'input_image': '[Undefined]', 'interpolation': 'trilinear', 'reference': '[Undefined]', 'transform': '[Undefined]'}",
          "interp_string": "{'function_str': \"def interpolation_string(interpolation, reg_tool):\\n    if reg_tool == 'ants':\\n        pass\\n    elif reg_tool == 'fsl':\\n        # translate to FSL\\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\\n        #          in C-PAC are now converted to .nii.gz\\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\\n    return interpolation\\n\", 'reg_tool': 'fsl'}",
          "fsl_apply_warp_": "{'abswarp': '[Undefined]', 'args': '[Undefined]', 'datatype': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'mask_file': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'premat': '[Undefined]', 'relwarp': '[Undefined]', 'superlevel': '[Undefined]', 'supersample': '[Undefined]'}",
          "chunk_warp_ts_to_T1template_236": "{'chunk_size': 10, 'function_str': 'def chunk_ts(func_file, n_chunks=None, chunk_size=None):\\n    func_img = nb.load(func_file)\\n    trs = func_img.shape[3]\\n    TR_ranges = []\\n\\n    if n_chunks:\\n        chunk_size = trs/n_chunks\\n    elif chunk_size:\\n        n_chunks = int(trs/chunk_size)\\n    else:\\n        raise Exception(\"\\\\n[!] Dev error: Either \\'n_chunks\\' or \\'chunk_size\\' \"\\n                        \"arguments must be passed to \\'chunk_ts\\' function.\\\\n\")\\n\\n    for chunk_idx in range(0, n_chunks):\\n        if chunk_idx == n_chunks - 1:\\n            TR_ranges.append((int(chunk_idx*chunk_size), int(trs - 1)))\\n        else:\\n            TR_ranges.append((int(chunk_idx*chunk_size), int((chunk_idx+1)*chunk_size - 1)))\\n    return TR_ranges\\n', 'n_chunks': '[Undefined]'}",
          "split_warp_ts_to_T1template_236": "{'function_str': 'def split_ts_chunks(func_file, tr_ranges):\\n    if \\'.nii\\' in func_file:\\n        ext = \\'.nii\\'\\n    if \\'.nii.gz\\' in func_file:\\n        ext = \\'.nii.gz\\'\\n\\n    split_funcs = []\\n    for chunk_idx, tr_range in enumerate(tr_ranges):\\n        out_file = os.path.join(os.getcwd(), os.path.basename(func_file).replace(ext, \"_{0}{1}\".format(chunk_idx, ext)))\\n        in_file = \"{0}[{1}..{2}]\".format(func_file, tr_range[0], tr_range[1])\\n\\n        cmd = [\"3dcalc\", \"-a\", in_file, \"-expr\", \"a\", \"-prefix\", out_file]\\n\\n        retcode = subprocess.check_output(cmd)\\n\\n        split_funcs.append(out_file)\\n\\n    return split_funcs\\n'}",
          "func_concatwarp_ts_to_T1template_236": "{'args': '[Undefined]', 'environ': {}, 'num_threads': 1, 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'rlt': '[Undefined]', 'verbose': '[Undefined]'}",
          "outputspec": "{}"
        },
        "outputs": {
          "inputspec": "{'input_image': None, 'interpolation': None, 'reference': None, 'transform': None}",
          "interp_string": "{'interpolation': None}",
          "fsl_apply_warp_": "{'out_file': None}",
          "chunk_warp_ts_to_T1template_236": "{'TR_ranges': None}",
          "split_warp_ts_to_T1template_236": "{'split_funcs': None}",
          "func_concatwarp_ts_to_T1template_236": "{'out_file': None}",
          "outputspec": "{'output_image': None}"
        },
        "result": null,
        "nodes": [
          {
            "name": "inputspec",
            "type": "node",
            "inputs": {
              "input_image": "[Undefined]",
              "reference": "[Undefined]",
              "transform": "[Undefined]",
              "interpolation": "trilinear"
            },
            "outputs": {
              "input_image": "[Undefined]",
              "reference": "[Undefined]",
              "transform": "[Undefined]",
              "interpolation": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "interp_string",
            "type": "node",
            "inputs": {
              "function_str": "def interpolation_string(interpolation, reg_tool):\n    if reg_tool == 'ants':\n        pass\n    elif reg_tool == 'fsl':\n        # translate to FSL\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\n        #          in C-PAC are now converted to .nii.gz\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\n    return interpolation\n",
              "interpolation": "[Undefined]",
              "reg_tool": "fsl"
            },
            "outputs": {
              "interpolation": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "fsl_apply_warp_",
            "type": "node",
            "inputs": {
              "abswarp": "[Undefined]",
              "args": "[Undefined]",
              "datatype": "[Undefined]",
              "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}",
              "field_file": "[Undefined]",
              "in_file": "[Undefined]",
              "interp": "[Undefined]",
              "mask_file": "[Undefined]",
              "out_file": "[Undefined]",
              "output_type": "NIFTI_GZ",
              "postmat": "[Undefined]",
              "premat": "[Undefined]",
              "ref_file": "[Undefined]",
              "relwarp": "[Undefined]",
              "superlevel": "[Undefined]",
              "supersample": "[Undefined]"
            },
            "outputs": {
              "out_file": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "chunk_warp_ts_to_T1template_236",
            "type": "node",
            "inputs": {
              "function_str": "def chunk_ts(func_file, n_chunks=None, chunk_size=None):\n    func_img = nb.load(func_file)\n    trs = func_img.shape[3]\n    TR_ranges = []\n\n    if n_chunks:\n        chunk_size = trs/n_chunks\n    elif chunk_size:\n        n_chunks = int(trs/chunk_size)\n    else:\n        raise Exception(\"\\n[!] Dev error: Either 'n_chunks' or 'chunk_size' \"\n                        \"arguments must be passed to 'chunk_ts' function.\\n\")\n\n    for chunk_idx in range(0, n_chunks):\n        if chunk_idx == n_chunks - 1:\n            TR_ranges.append((int(chunk_idx*chunk_size), int(trs - 1)))\n        else:\n            TR_ranges.append((int(chunk_idx*chunk_size), int((chunk_idx+1)*chunk_size - 1)))\n    return TR_ranges\n",
              "func_file": "[Undefined]",
              "n_chunks": "[Undefined]",
              "chunk_size": "10"
            },
            "outputs": {
              "TR_ranges": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "split_warp_ts_to_T1template_236",
            "type": "node",
            "inputs": {
              "function_str": "def split_ts_chunks(func_file, tr_ranges):\n    if '.nii' in func_file:\n        ext = '.nii'\n    if '.nii.gz' in func_file:\n        ext = '.nii.gz'\n\n    split_funcs = []\n    for chunk_idx, tr_range in enumerate(tr_ranges):\n        out_file = os.path.join(os.getcwd(), os.path.basename(func_file).replace(ext, \"_{0}{1}\".format(chunk_idx, ext)))\n        in_file = \"{0}[{1}..{2}]\".format(func_file, tr_range[0], tr_range[1])\n\n        cmd = [\"3dcalc\", \"-a\", in_file, \"-expr\", \"a\", \"-prefix\", out_file]\n\n        retcode = subprocess.check_output(cmd)\n\n        split_funcs.append(out_file)\n\n    return split_funcs\n",
              "func_file": "[Undefined]",
              "tr_ranges": "[Undefined]"
            },
            "outputs": {
              "split_funcs": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "func_concatwarp_ts_to_T1template_236",
            "type": "node",
            "inputs": {
              "in_files": "[Undefined]",
              "out_file": "[Undefined]",
              "rlt": "[Undefined]",
              "verbose": "[Undefined]",
              "num_threads": "1",
              "outputtype": "NIFTI_GZ",
              "args": "[Undefined]",
              "environ": "{}"
            },
            "outputs": {
              "out_file": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "outputspec",
            "type": "node",
            "inputs": {
              "output_image": "[Undefined]"
            },
            "outputs": {
              "output_image": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          }
        ],
        "edges": [
          {
            "origin": "inputspec",
            "target": "interp_string"
          },
          {
            "origin": "inputspec",
            "target": "fsl_apply_warp_"
          },
          {
            "origin": "inputspec",
            "target": "chunk_warp_ts_to_T1template_236"
          },
          {
            "origin": "inputspec",
            "target": "split_warp_ts_to_T1template_236"
          },
          {
            "origin": "interp_string",
            "target": "fsl_apply_warp_"
          },
          {
            "origin": "fsl_apply_warp_",
            "target": "func_concatwarp_ts_to_T1template_236"
          },
          {
            "origin": "chunk_warp_ts_to_T1template_236",
            "target": "split_warp_ts_to_T1template_236"
          },
          {
            "origin": "split_warp_ts_to_T1template_236",
            "target": "fsl_apply_warp_"
          },
          {
            "origin": "func_concatwarp_ts_to_T1template_236",
            "target": "outputspec"
          }
        ]
      },
      {
        "name": "combine_fsl_warps",
        "type": "node",
        "inputs": {
          "reference": "[Undefined]",
          "out_file": "[Undefined]",
          "premat": "[Undefined]",
          "warp1": "[Undefined]",
          "midmat": "[Undefined]",
          "warp2": "[Undefined]",
          "postmat": "[Undefined]",
          "shift_in_file": "[Undefined]",
          "shift_direction": "[Undefined]",
          "cons_jacobian": "[Undefined]",
          "jacobian_min": "[Undefined]",
          "jacobian_max": "[Undefined]",
          "abswarp": "[Undefined]",
          "relwarp": "[Undefined]",
          "out_abswarp": "[Undefined]",
          "out_relwarp": "[Undefined]",
          "output_type": "NIFTI_GZ",
          "args": "[Undefined]",
          "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "warp_funcreg-sbref_to_T1wtemplate_240",
        "type": "workflow",
        "inputs": {
          "inputspec": "{'input_image': '[Undefined]', 'interpolation': 'nn', 'reference': '[Undefined]', 'transform': '[Undefined]'}",
          "interp_string": "{'function_str': \"def interpolation_string(interpolation, reg_tool):\\n    if reg_tool == 'ants':\\n        pass\\n    elif reg_tool == 'fsl':\\n        # translate to FSL\\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\\n        #          in C-PAC are now converted to .nii.gz\\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\\n    return interpolation\\n\", 'reg_tool': 'fsl'}",
          "fsl_apply_warp": "{'abswarp': '[Undefined]', 'args': '[Undefined]', 'datatype': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'mask_file': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'premat': '[Undefined]', 'relwarp': '[Undefined]', 'superlevel': '[Undefined]', 'supersample': '[Undefined]'}",
          "outputspec": "{}"
        },
        "outputs": {
          "inputspec": "{'input_image': None, 'interpolation': None, 'reference': None, 'transform': None}",
          "interp_string": "{'interpolation': None}",
          "fsl_apply_warp": "{'out_file': None}",
          "outputspec": "{'output_image': None}"
        },
        "result": null,
        "nodes": [
          {
            "name": "inputspec",
            "type": "node",
            "inputs": {
              "input_image": "[Undefined]",
              "reference": "[Undefined]",
              "transform": "[Undefined]",
              "interpolation": "nn"
            },
            "outputs": {
              "input_image": "[Undefined]",
              "reference": "[Undefined]",
              "transform": "[Undefined]",
              "interpolation": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "interp_string",
            "type": "node",
            "inputs": {
              "function_str": "def interpolation_string(interpolation, reg_tool):\n    if reg_tool == 'ants':\n        pass\n    elif reg_tool == 'fsl':\n        # translate to FSL\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\n        #          in C-PAC are now converted to .nii.gz\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\n    return interpolation\n",
              "interpolation": "[Undefined]",
              "reg_tool": "fsl"
            },
            "outputs": {
              "interpolation": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "fsl_apply_warp",
            "type": "node",
            "inputs": {
              "in_file": "[Undefined]",
              "out_file": "[Undefined]",
              "ref_file": "[Undefined]",
              "field_file": "[Undefined]",
              "abswarp": "[Undefined]",
              "relwarp": "[Undefined]",
              "datatype": "[Undefined]",
              "supersample": "[Undefined]",
              "superlevel": "[Undefined]",
              "premat": "[Undefined]",
              "postmat": "[Undefined]",
              "mask_file": "[Undefined]",
              "interp": "[Undefined]",
              "output_type": "NIFTI_GZ",
              "args": "[Undefined]",
              "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
            },
            "outputs": {
              "out_file": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "outputspec",
            "type": "node",
            "inputs": {
              "output_image": "[Undefined]"
            },
            "outputs": {
              "output_image": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          }
        ],
        "edges": [
          {
            "origin": "inputspec",
            "target": "interp_string"
          },
          {
            "origin": "inputspec",
            "target": "fsl_apply_warp"
          },
          {
            "origin": "interp_string",
            "target": "fsl_apply_warp"
          },
          {
            "origin": "fsl_apply_warp",
            "target": "outputspec"
          }
        ]
      },
      {
        "name": "warp_funcreg-mask_to_T1wtemplate_244",
        "type": "workflow",
        "inputs": {
          "inputspec": "{'input_image': '[Undefined]', 'interpolation': 'nn', 'reference': '[Undefined]', 'transform': '[Undefined]'}",
          "interp_string": "{'function_str': \"def interpolation_string(interpolation, reg_tool):\\n    if reg_tool == 'ants':\\n        pass\\n    elif reg_tool == 'fsl':\\n        # translate to FSL\\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\\n        #          in C-PAC are now converted to .nii.gz\\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\\n    return interpolation\\n\", 'reg_tool': 'fsl'}",
          "fsl_apply_warp": "{'abswarp': '[Undefined]', 'args': '[Undefined]', 'datatype': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'mask_file': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'premat': '[Undefined]', 'relwarp': '[Undefined]', 'superlevel': '[Undefined]', 'supersample': '[Undefined]'}",
          "outputspec": "{}"
        },
        "outputs": {
          "inputspec": "{'input_image': None, 'interpolation': None, 'reference': None, 'transform': None}",
          "interp_string": "{'interpolation': None}",
          "fsl_apply_warp": "{'out_file': None}",
          "outputspec": "{'output_image': None}"
        },
        "result": null,
        "nodes": [
          {
            "name": "inputspec",
            "type": "node",
            "inputs": {
              "input_image": "[Undefined]",
              "reference": "[Undefined]",
              "transform": "[Undefined]",
              "interpolation": "nn"
            },
            "outputs": {
              "input_image": "[Undefined]",
              "reference": "[Undefined]",
              "transform": "[Undefined]",
              "interpolation": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "interp_string",
            "type": "node",
            "inputs": {
              "function_str": "def interpolation_string(interpolation, reg_tool):\n    if reg_tool == 'ants':\n        pass\n    elif reg_tool == 'fsl':\n        # translate to FSL\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\n        #          in C-PAC are now converted to .nii.gz\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\n    return interpolation\n",
              "interpolation": "[Undefined]",
              "reg_tool": "fsl"
            },
            "outputs": {
              "interpolation": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "fsl_apply_warp",
            "type": "node",
            "inputs": {
              "in_file": "[Undefined]",
              "out_file": "[Undefined]",
              "ref_file": "[Undefined]",
              "field_file": "[Undefined]",
              "abswarp": "[Undefined]",
              "relwarp": "[Undefined]",
              "datatype": "[Undefined]",
              "supersample": "[Undefined]",
              "superlevel": "[Undefined]",
              "premat": "[Undefined]",
              "postmat": "[Undefined]",
              "mask_file": "[Undefined]",
              "interp": "[Undefined]",
              "output_type": "NIFTI_GZ",
              "args": "[Undefined]",
              "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
            },
            "outputs": {
              "out_file": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "outputspec",
            "type": "node",
            "inputs": {
              "output_image": "[Undefined]"
            },
            "outputs": {
              "output_image": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          }
        ],
        "edges": [
          {
            "origin": "inputspec",
            "target": "interp_string"
          },
          {
            "origin": "inputspec",
            "target": "fsl_apply_warp"
          },
          {
            "origin": "interp_string",
            "target": "fsl_apply_warp"
          },
          {
            "origin": "fsl_apply_warp",
            "target": "outputspec"
          }
        ]
      },
      {
        "name": "warp_deriv-mask_to_T1wtemplate_248",
        "type": "workflow",
        "inputs": {
          "inputspec": "{'input_image': '[Undefined]', 'interpolation': 'nn', 'reference': '[Undefined]', 'transform': '[Undefined]'}",
          "interp_string": "{'function_str': \"def interpolation_string(interpolation, reg_tool):\\n    if reg_tool == 'ants':\\n        pass\\n    elif reg_tool == 'fsl':\\n        # translate to FSL\\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\\n        #          in C-PAC are now converted to .nii.gz\\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\\n    return interpolation\\n\", 'reg_tool': 'fsl'}",
          "fsl_apply_warp": "{'abswarp': '[Undefined]', 'args': '[Undefined]', 'datatype': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'mask_file': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'premat': '[Undefined]', 'relwarp': '[Undefined]', 'superlevel': '[Undefined]', 'supersample': '[Undefined]'}",
          "outputspec": "{}"
        },
        "outputs": {
          "inputspec": "{'input_image': None, 'interpolation': None, 'reference': None, 'transform': None}",
          "interp_string": "{'interpolation': None}",
          "fsl_apply_warp": "{'out_file': None}",
          "outputspec": "{'output_image': None}"
        },
        "result": null,
        "nodes": [
          {
            "name": "inputspec",
            "type": "node",
            "inputs": {
              "input_image": "[Undefined]",
              "reference": "[Undefined]",
              "transform": "[Undefined]",
              "interpolation": "nn"
            },
            "outputs": {
              "input_image": "[Undefined]",
              "reference": "[Undefined]",
              "transform": "[Undefined]",
              "interpolation": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "interp_string",
            "type": "node",
            "inputs": {
              "function_str": "def interpolation_string(interpolation, reg_tool):\n    if reg_tool == 'ants':\n        pass\n    elif reg_tool == 'fsl':\n        # translate to FSL\n        # warning: flirt requires 'nearestneighbour', but FSL applywarp uses\n        #          'nn', so this is designed for applywarp, as all FSL xfm's\n        #          in C-PAC are now converted to .nii.gz\n        interpolation = interpolation.replace('NearestNeighbor', 'nn')\n    return interpolation\n",
              "interpolation": "[Undefined]",
              "reg_tool": "fsl"
            },
            "outputs": {
              "interpolation": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "fsl_apply_warp",
            "type": "node",
            "inputs": {
              "in_file": "[Undefined]",
              "out_file": "[Undefined]",
              "ref_file": "[Undefined]",
              "field_file": "[Undefined]",
              "abswarp": "[Undefined]",
              "relwarp": "[Undefined]",
              "datatype": "[Undefined]",
              "supersample": "[Undefined]",
              "superlevel": "[Undefined]",
              "premat": "[Undefined]",
              "postmat": "[Undefined]",
              "mask_file": "[Undefined]",
              "interp": "[Undefined]",
              "output_type": "NIFTI_GZ",
              "args": "[Undefined]",
              "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
            },
            "outputs": {
              "out_file": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "outputspec",
            "type": "node",
            "inputs": {
              "output_image": "[Undefined]"
            },
            "outputs": {
              "output_image": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          }
        ],
        "edges": [
          {
            "origin": "inputspec",
            "target": "interp_string"
          },
          {
            "origin": "inputspec",
            "target": "fsl_apply_warp"
          },
          {
            "origin": "interp_string",
            "target": "fsl_apply_warp"
          },
          {
            "origin": "fsl_apply_warp",
            "target": "outputspec"
          }
        ]
      },
      {
        "name": "resampled_T1w-brain-template-deriv",
        "type": "node",
        "inputs": {
          "function_str": "CPAC.utils.datasource.resolve_resolution",
          "resolution": "3mm",
          "template": "/usr/share/fsl/6.0/data/standard/MNI152_T1_3mm_brain.nii.gz",
          "template_name": "T1w-brain-template-deriv",
          "tag": "func_derivative_outputs"
        },
        "outputs": {
          "resampled_template": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "qc_snr_252",
        "type": "workflow",
        "inputs": {
          "inputspec": "{'anatomical_brain': '[Undefined]', 'functional_brain_mask': '[Undefined]', 'functional_preprocessed': '[Undefined]', 'functional_to_anat_linear_xfm': '[Undefined]', 'mean_functional_in_anat': '[Undefined]'}",
          "std_dev": "{'args': '-stdev', 'environ': {}, 'num_threads': 1, 'options': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ'}",
          "std_dev_anat": "{'abswarp': '[Undefined]', 'args': '[Undefined]', 'datatype': '[Undefined]', 'environ': {'FSLOUTPUTTYPE': 'NIFTI_GZ'}, 'field_file': '[Undefined]', 'interp': 'trilinear', 'mask_file': '[Undefined]', 'out_file': '[Undefined]', 'output_type': 'NIFTI_GZ', 'postmat': '[Undefined]', 'relwarp': '[Undefined]', 'superlevel': '[Undefined]', 'supersample': '[Undefined]'}",
          "snr": "{'args': '[Undefined]', 'environ': {}, 'expr': 'b/a', 'in_file_c': '[Undefined]', 'num_threads': 1, 'other': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI_GZ', 'overwrite': '[Undefined]', 'single_idx': '[Undefined]', 'start_idx': '[Undefined]', 'stop_idx': '[Undefined]'}",
          "snr_val": "{'function_str': 'CPAC.qc.utils.cal_snr_val'}",
          "hist_snr": "{'function_str': 'CPAC.qc.utils.gen_histogram', 'measure': 'snr'}",
          "dp_snr": "{'function_str': 'CPAC.qc.utils.drop_percent', 'percent': 99}",
          "montage_snr": "{'inputspec': {'overlay': '[Undefined]', 'underlay': '[Undefined]'}, 'resample_u': {'function_str': 'CPAC.qc.utils.resample_1mm'}, 'outputspec': {}, 'resample_o': {'function_str': 'CPAC.qc.utils.resample_1mm'}, 'montage_a': {'cbar_name': 'red_to_blue', 'function_str': 'CPAC.qc.utils.montage_axial', 'png_name': 'snr_a.png'}, 'montage_s': {'cbar_name': 'red_to_blue', 'function_str': 'CPAC.qc.utils.montage_sagittal', 'png_name': 'snr_s.png'}}",
          "outputspec": "{}"
        },
        "outputs": {
          "inputspec": "{'anatomical_brain': None, 'functional_brain_mask': None, 'functional_preprocessed': None, 'functional_to_anat_linear_xfm': None, 'mean_functional_in_anat': None}",
          "std_dev": "{'out_file': None}",
          "std_dev_anat": "{'out_file': None}",
          "snr": "{'out_file': None}",
          "snr_val": "{'snr_storefl': None}",
          "hist_snr": "{'hist_path': None}",
          "dp_snr": "{'modified_measure_file': None}",
          "montage_snr": "{'inputspec': {'overlay': None, 'underlay': None}, 'resample_u': {'new_fname': None}, 'outputspec': {'axial_png': None, 'resampled_overlay': None, 'resampled_underlay': None, 'sagittal_png': None}, 'resample_o': {'new_fname': None}, 'montage_a': {'png_name': None}, 'montage_s': {'png_name': None}}",
          "outputspec": "{'snr_axial_image': None, 'snr_histogram_image': None, 'snr_mean': None, 'snr_sagittal_image': None}"
        },
        "result": null,
        "nodes": [
          {
            "name": "inputspec",
            "type": "node",
            "inputs": {
              "functional_preprocessed": "[Undefined]",
              "functional_brain_mask": "[Undefined]",
              "functional_to_anat_linear_xfm": "[Undefined]",
              "anatomical_brain": "[Undefined]",
              "mean_functional_in_anat": "[Undefined]"
            },
            "outputs": {
              "functional_preprocessed": "[Undefined]",
              "functional_brain_mask": "[Undefined]",
              "functional_to_anat_linear_xfm": "[Undefined]",
              "anatomical_brain": "[Undefined]",
              "mean_functional_in_anat": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "std_dev",
            "type": "node",
            "inputs": {
              "in_file": "[Undefined]",
              "out_file": "[Undefined]",
              "mask": "[Undefined]",
              "options": "[Undefined]",
              "num_threads": "1",
              "outputtype": "NIFTI_GZ",
              "args": "-stdev",
              "environ": "{}"
            },
            "outputs": {
              "out_file": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "std_dev_anat",
            "type": "node",
            "inputs": {
              "in_file": "[Undefined]",
              "out_file": "[Undefined]",
              "ref_file": "[Undefined]",
              "field_file": "[Undefined]",
              "abswarp": "[Undefined]",
              "relwarp": "[Undefined]",
              "datatype": "[Undefined]",
              "supersample": "[Undefined]",
              "superlevel": "[Undefined]",
              "premat": "[Undefined]",
              "postmat": "[Undefined]",
              "mask_file": "[Undefined]",
              "interp": "trilinear",
              "output_type": "NIFTI_GZ",
              "args": "[Undefined]",
              "environ": "{'FSLOUTPUTTYPE': 'NIFTI_GZ'}"
            },
            "outputs": {
              "out_file": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "snr",
            "type": "node",
            "inputs": {
              "in_file_a": "[Undefined]",
              "in_file_b": "[Undefined]",
              "in_file_c": "[Undefined]",
              "out_file": "[Undefined]",
              "expr": "b/a",
              "start_idx": "[Undefined]",
              "stop_idx": "[Undefined]",
              "single_idx": "[Undefined]",
              "overwrite": "[Undefined]",
              "other": "[Undefined]",
              "num_threads": "1",
              "outputtype": "NIFTI_GZ",
              "args": "[Undefined]",
              "environ": "{}"
            },
            "outputs": {
              "out_file": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "snr_val",
            "type": "node",
            "inputs": {
              "function_str": "CPAC.qc.utils.cal_snr_val",
              "measure_file": "[Undefined]"
            },
            "outputs": {
              "snr_storefl": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "hist_snr",
            "type": "node",
            "inputs": {
              "function_str": "CPAC.qc.utils.gen_histogram",
              "measure_file": "[Undefined]",
              "measure": "snr"
            },
            "outputs": {
              "hist_path": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "dp_snr",
            "type": "node",
            "inputs": {
              "function_str": "CPAC.qc.utils.drop_percent",
              "measure_file": "[Undefined]",
              "percent": "99"
            },
            "outputs": {
              "modified_measure_file": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "montage_snr",
            "type": "workflow",
            "inputs": {
              "inputspec": "{'overlay': '[Undefined]', 'underlay': '[Undefined]'}",
              "resample_u": "{'function_str': 'CPAC.qc.utils.resample_1mm'}",
              "outputspec": "{}",
              "resample_o": "{'function_str': 'CPAC.qc.utils.resample_1mm'}",
              "montage_a": "{'cbar_name': 'red_to_blue', 'function_str': 'CPAC.qc.utils.montage_axial', 'png_name': 'snr_a.png'}",
              "montage_s": "{'cbar_name': 'red_to_blue', 'function_str': 'CPAC.qc.utils.montage_sagittal', 'png_name': 'snr_s.png'}"
            },
            "outputs": {
              "inputspec": "{'overlay': None, 'underlay': None}",
              "resample_u": "{'new_fname': None}",
              "outputspec": "{'axial_png': None, 'resampled_overlay': None, 'resampled_underlay': None, 'sagittal_png': None}",
              "resample_o": "{'new_fname': None}",
              "montage_a": "{'png_name': None}",
              "montage_s": "{'png_name': None}"
            },
            "result": null,
            "nodes": [
              {
                "name": "inputspec",
                "type": "node",
                "inputs": {
                  "underlay": "[Undefined]",
                  "overlay": "[Undefined]"
                },
                "outputs": {
                  "underlay": "[Undefined]",
                  "overlay": "[Undefined]"
                },
                "result": null,
                "nodes": [],
                "edges": []
              },
              {
                "name": "resample_u",
                "type": "node",
                "inputs": {
                  "function_str": "CPAC.qc.utils.resample_1mm",
                  "file_": "[Undefined]"
                },
                "outputs": {
                  "new_fname": "[Undefined]"
                },
                "result": null,
                "nodes": [],
                "edges": []
              },
              {
                "name": "outputspec",
                "type": "node",
                "inputs": {
                  "axial_png": "[Undefined]",
                  "sagittal_png": "[Undefined]",
                  "resampled_underlay": "[Undefined]",
                  "resampled_overlay": "[Undefined]"
                },
                "outputs": {
                  "axial_png": "[Undefined]",
                  "sagittal_png": "[Undefined]",
                  "resampled_underlay": "[Undefined]",
                  "resampled_overlay": "[Undefined]"
                },
                "result": null,
                "nodes": [],
                "edges": []
              },
              {
                "name": "resample_o",
                "type": "node",
                "inputs": {
                  "function_str": "CPAC.qc.utils.resample_1mm",
                  "file_": "[Undefined]"
                },
                "outputs": {
                  "new_fname": "[Undefined]"
                },
                "result": null,
                "nodes": [],
                "edges": []
              },
              {
                "name": "montage_a",
                "type": "node",
                "inputs": {
                  "function_str": "CPAC.qc.utils.montage_axial",
                  "overlay": "[Undefined]",
                  "underlay": "[Undefined]",
                  "png_name": "snr_a.png",
                  "cbar_name": "red_to_blue"
                },
                "outputs": {
                  "png_name": "[Undefined]"
                },
                "result": null,
                "nodes": [],
                "edges": []
              },
              {
                "name": "montage_s",
                "type": "node",
                "inputs": {
                  "function_str": "CPAC.qc.utils.montage_sagittal",
                  "overlay": "[Undefined]",
                  "underlay": "[Undefined]",
                  "png_name": "snr_s.png",
                  "cbar_name": "red_to_blue"
                },
                "outputs": {
                  "png_name": "[Undefined]"
                },
                "result": null,
                "nodes": [],
                "edges": []
              }
            ],
            "edges": [
              {
                "origin": "inputspec",
                "target": "resample_u"
              },
              {
                "origin": "inputspec",
                "target": "resample_o"
              },
              {
                "origin": "resample_u",
                "target": "outputspec"
              },
              {
                "origin": "resample_u",
                "target": "montage_a"
              },
              {
                "origin": "resample_u",
                "target": "montage_s"
              },
              {
                "origin": "resample_o",
                "target": "outputspec"
              },
              {
                "origin": "resample_o",
                "target": "montage_a"
              },
              {
                "origin": "resample_o",
                "target": "montage_s"
              },
              {
                "origin": "montage_a",
                "target": "outputspec"
              },
              {
                "origin": "montage_s",
                "target": "outputspec"
              }
            ]
          },
          {
            "name": "outputspec",
            "type": "node",
            "inputs": {
              "snr_axial_image": "[Undefined]",
              "snr_sagittal_image": "[Undefined]",
              "snr_histogram_image": "[Undefined]",
              "snr_mean": "[Undefined]"
            },
            "outputs": {
              "snr_axial_image": "[Undefined]",
              "snr_sagittal_image": "[Undefined]",
              "snr_histogram_image": "[Undefined]",
              "snr_mean": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          }
        ],
        "edges": [
          {
            "origin": "inputspec",
            "target": "std_dev"
          },
          {
            "origin": "inputspec",
            "target": "std_dev_anat"
          },
          {
            "origin": "inputspec",
            "target": "snr"
          },
          {
            "origin": "inputspec",
            "target": "montage_snr"
          },
          {
            "origin": "std_dev",
            "target": "std_dev_anat"
          },
          {
            "origin": "std_dev_anat",
            "target": "snr"
          },
          {
            "origin": "snr",
            "target": "snr_val"
          },
          {
            "origin": "snr",
            "target": "hist_snr"
          },
          {
            "origin": "snr",
            "target": "dp_snr"
          },
          {
            "origin": "snr_val",
            "target": "outputspec"
          },
          {
            "origin": "hist_snr",
            "target": "outputspec"
          },
          {
            "origin": "dp_snr",
            "target": "montage_snr"
          },
          {
            "origin": "montage_snr",
            "target": "outputspec"
          }
        ]
      },
      {
        "name": "anat_edge_261",
        "type": "node",
        "inputs": {
          "function_str": "CPAC.qc.qc.afni_Edge3",
          "in_file": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "montage_anat_261",
        "type": "workflow",
        "inputs": {
          "inputspec": "{'overlay': '[Undefined]', 'underlay': '[Undefined]'}",
          "resample_u": "{'function_str': 'CPAC.qc.utils.resample_1mm'}",
          "outputspec": "{}",
          "resample_o": "{'function_str': 'CPAC.qc.utils.resample_1mm'}",
          "montage_a": "{'cbar_name': 'red', 'function_str': 'CPAC.qc.utils.montage_axial', 'png_name': 't1_edge_on_mean_func_in_t1_a.png'}",
          "montage_s": "{'cbar_name': 'red', 'function_str': 'CPAC.qc.utils.montage_sagittal', 'png_name': 't1_edge_on_mean_func_in_t1_s.png'}"
        },
        "outputs": {
          "inputspec": "{'overlay': None, 'underlay': None}",
          "resample_u": "{'new_fname': None}",
          "outputspec": "{'axial_png': None, 'resampled_overlay': None, 'resampled_underlay': None, 'sagittal_png': None}",
          "resample_o": "{'new_fname': None}",
          "montage_a": "{'png_name': None}",
          "montage_s": "{'png_name': None}"
        },
        "result": null,
        "nodes": [
          {
            "name": "inputspec",
            "type": "node",
            "inputs": {
              "underlay": "[Undefined]",
              "overlay": "[Undefined]"
            },
            "outputs": {
              "underlay": "[Undefined]",
              "overlay": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "resample_u",
            "type": "node",
            "inputs": {
              "function_str": "CPAC.qc.utils.resample_1mm",
              "file_": "[Undefined]"
            },
            "outputs": {
              "new_fname": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "outputspec",
            "type": "node",
            "inputs": {
              "axial_png": "[Undefined]",
              "sagittal_png": "[Undefined]",
              "resampled_underlay": "[Undefined]",
              "resampled_overlay": "[Undefined]"
            },
            "outputs": {
              "axial_png": "[Undefined]",
              "sagittal_png": "[Undefined]",
              "resampled_underlay": "[Undefined]",
              "resampled_overlay": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "resample_o",
            "type": "node",
            "inputs": {
              "function_str": "CPAC.qc.utils.resample_1mm",
              "file_": "[Undefined]"
            },
            "outputs": {
              "new_fname": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "montage_a",
            "type": "node",
            "inputs": {
              "function_str": "CPAC.qc.utils.montage_axial",
              "overlay": "[Undefined]",
              "underlay": "[Undefined]",
              "png_name": "t1_edge_on_mean_func_in_t1_a.png",
              "cbar_name": "red"
            },
            "outputs": {
              "png_name": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "montage_s",
            "type": "node",
            "inputs": {
              "function_str": "CPAC.qc.utils.montage_sagittal",
              "overlay": "[Undefined]",
              "underlay": "[Undefined]",
              "png_name": "t1_edge_on_mean_func_in_t1_s.png",
              "cbar_name": "red"
            },
            "outputs": {
              "png_name": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          }
        ],
        "edges": [
          {
            "origin": "inputspec",
            "target": "resample_u"
          },
          {
            "origin": "inputspec",
            "target": "resample_o"
          },
          {
            "origin": "resample_u",
            "target": "outputspec"
          },
          {
            "origin": "resample_u",
            "target": "montage_a"
          },
          {
            "origin": "resample_u",
            "target": "montage_s"
          },
          {
            "origin": "resample_o",
            "target": "outputspec"
          },
          {
            "origin": "resample_o",
            "target": "montage_a"
          },
          {
            "origin": "resample_o",
            "target": "montage_s"
          },
          {
            "origin": "montage_a",
            "target": "outputspec"
          },
          {
            "origin": "montage_s",
            "target": "outputspec"
          }
        ]
      },
      {
        "name": "qc_motion_157",
        "type": "workflow",
        "inputs": {
          "inputspec": "{'motion_parameters': '[Undefined]'}",
          "motion_plot": "{'function_str': 'CPAC.qc.utils.gen_motion_plt'}",
          "outputspec": "{}"
        },
        "outputs": {
          "inputspec": "{'motion_parameters': None}",
          "motion_plot": "{'rotation_plot': None, 'translation_plot': None}",
          "outputspec": "{'motion_rotation_plot': None, 'motion_translation_plot': None}"
        },
        "result": null,
        "nodes": [
          {
            "name": "inputspec",
            "type": "node",
            "inputs": {
              "motion_parameters": "[Undefined]"
            },
            "outputs": {
              "motion_parameters": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "motion_plot",
            "type": "node",
            "inputs": {
              "function_str": "CPAC.qc.utils.gen_motion_plt",
              "motion_parameters": "[Undefined]"
            },
            "outputs": {
              "translation_plot": "[Undefined]",
              "rotation_plot": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "outputspec",
            "type": "node",
            "inputs": {
              "motion_translation_plot": "[Undefined]",
              "motion_rotation_plot": "[Undefined]"
            },
            "outputs": {
              "motion_translation_plot": "[Undefined]",
              "motion_rotation_plot": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          }
        ],
        "edges": [
          {
            "origin": "inputspec",
            "target": "motion_plot"
          },
          {
            "origin": "motion_plot",
            "target": "outputspec"
          }
        ]
      },
      {
        "name": "qc_fd_178",
        "type": "workflow",
        "inputs": {
          "inputspec": "{'excluded_volumes': '[Undefined]', 'fd': '[Undefined]'}",
          "fd_plot": "{'function_str': 'CPAC.qc.utils.gen_plot_png', 'measure': 'FD'}",
          "outputspec": "{}"
        },
        "outputs": {
          "inputspec": "{'excluded_volumes': None, 'fd': None}",
          "fd_plot": "{'hist_path': None}",
          "outputspec": "{'fd_histogram_plot': None}"
        },
        "result": null,
        "nodes": [
          {
            "name": "inputspec",
            "type": "node",
            "inputs": {
              "fd": "[Undefined]",
              "excluded_volumes": "[Undefined]"
            },
            "outputs": {
              "fd": "[Undefined]",
              "excluded_volumes": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "fd_plot",
            "type": "node",
            "inputs": {
              "function_str": "CPAC.qc.utils.gen_plot_png",
              "arr": "[Undefined]",
              "measure": "FD",
              "ex_vol": "[Undefined]"
            },
            "outputs": {
              "hist_path": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "outputspec",
            "type": "node",
            "inputs": {
              "fd_histogram_plot": "[Undefined]"
            },
            "outputs": {
              "fd_histogram_plot": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          }
        ],
        "edges": [
          {
            "origin": "inputspec",
            "target": "fd_plot"
          },
          {
            "origin": "fd_plot",
            "target": "outputspec"
          }
        ]
      },
      {
        "name": "qc_skullstrip_268",
        "type": "workflow",
        "inputs": {
          "inputspec": "{'anatomical_brain': '[Undefined]', 'anatomical_reorient': '[Undefined]'}",
          "skull_edge": "{'function_str': 'CPAC.qc.qc.afni_Edge3'}",
          "montage_skull": "{'inputspec': {'overlay': '[Undefined]', 'underlay': '[Undefined]'}, 'resample_u': {'function_str': 'CPAC.qc.utils.resample_1mm'}, 'outputspec': {}, 'resample_o': {'function_str': 'CPAC.qc.utils.resample_1mm'}, 'montage_a': {'cbar_name': 'red', 'function_str': 'CPAC.qc.utils.montage_axial', 'png_name': 'skull_vis_a.png'}, 'montage_s': {'cbar_name': 'red', 'function_str': 'CPAC.qc.utils.montage_sagittal', 'png_name': 'skull_vis_s.png'}}",
          "outputspec": "{}"
        },
        "outputs": {
          "inputspec": "{'anatomical_brain': None, 'anatomical_reorient': None}",
          "skull_edge": "{'out_file': None}",
          "montage_skull": "{'inputspec': {'overlay': None, 'underlay': None}, 'resample_u': {'new_fname': None}, 'outputspec': {'axial_png': None, 'resampled_overlay': None, 'resampled_underlay': None, 'sagittal_png': None}, 'resample_o': {'new_fname': None}, 'montage_a': {'png_name': None}, 'montage_s': {'png_name': None}}",
          "outputspec": "{'axial_image': None, 'sagittal_image': None}"
        },
        "result": null,
        "nodes": [
          {
            "name": "inputspec",
            "type": "node",
            "inputs": {
              "anatomical_brain": "[Undefined]",
              "anatomical_reorient": "[Undefined]"
            },
            "outputs": {
              "anatomical_brain": "[Undefined]",
              "anatomical_reorient": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "skull_edge",
            "type": "node",
            "inputs": {
              "function_str": "CPAC.qc.qc.afni_Edge3",
              "in_file": "[Undefined]"
            },
            "outputs": {
              "out_file": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "montage_skull",
            "type": "workflow",
            "inputs": {
              "inputspec": "{'overlay': '[Undefined]', 'underlay': '[Undefined]'}",
              "resample_u": "{'function_str': 'CPAC.qc.utils.resample_1mm'}",
              "outputspec": "{}",
              "resample_o": "{'function_str': 'CPAC.qc.utils.resample_1mm'}",
              "montage_a": "{'cbar_name': 'red', 'function_str': 'CPAC.qc.utils.montage_axial', 'png_name': 'skull_vis_a.png'}",
              "montage_s": "{'cbar_name': 'red', 'function_str': 'CPAC.qc.utils.montage_sagittal', 'png_name': 'skull_vis_s.png'}"
            },
            "outputs": {
              "inputspec": "{'overlay': None, 'underlay': None}",
              "resample_u": "{'new_fname': None}",
              "outputspec": "{'axial_png': None, 'resampled_overlay': None, 'resampled_underlay': None, 'sagittal_png': None}",
              "resample_o": "{'new_fname': None}",
              "montage_a": "{'png_name': None}",
              "montage_s": "{'png_name': None}"
            },
            "result": null,
            "nodes": [
              {
                "name": "inputspec",
                "type": "node",
                "inputs": {
                  "underlay": "[Undefined]",
                  "overlay": "[Undefined]"
                },
                "outputs": {
                  "underlay": "[Undefined]",
                  "overlay": "[Undefined]"
                },
                "result": null,
                "nodes": [],
                "edges": []
              },
              {
                "name": "resample_u",
                "type": "node",
                "inputs": {
                  "function_str": "CPAC.qc.utils.resample_1mm",
                  "file_": "[Undefined]"
                },
                "outputs": {
                  "new_fname": "[Undefined]"
                },
                "result": null,
                "nodes": [],
                "edges": []
              },
              {
                "name": "outputspec",
                "type": "node",
                "inputs": {
                  "axial_png": "[Undefined]",
                  "sagittal_png": "[Undefined]",
                  "resampled_underlay": "[Undefined]",
                  "resampled_overlay": "[Undefined]"
                },
                "outputs": {
                  "axial_png": "[Undefined]",
                  "sagittal_png": "[Undefined]",
                  "resampled_underlay": "[Undefined]",
                  "resampled_overlay": "[Undefined]"
                },
                "result": null,
                "nodes": [],
                "edges": []
              },
              {
                "name": "resample_o",
                "type": "node",
                "inputs": {
                  "function_str": "CPAC.qc.utils.resample_1mm",
                  "file_": "[Undefined]"
                },
                "outputs": {
                  "new_fname": "[Undefined]"
                },
                "result": null,
                "nodes": [],
                "edges": []
              },
              {
                "name": "montage_a",
                "type": "node",
                "inputs": {
                  "function_str": "CPAC.qc.utils.montage_axial",
                  "overlay": "[Undefined]",
                  "underlay": "[Undefined]",
                  "png_name": "skull_vis_a.png",
                  "cbar_name": "red"
                },
                "outputs": {
                  "png_name": "[Undefined]"
                },
                "result": null,
                "nodes": [],
                "edges": []
              },
              {
                "name": "montage_s",
                "type": "node",
                "inputs": {
                  "function_str": "CPAC.qc.utils.montage_sagittal",
                  "overlay": "[Undefined]",
                  "underlay": "[Undefined]",
                  "png_name": "skull_vis_s.png",
                  "cbar_name": "red"
                },
                "outputs": {
                  "png_name": "[Undefined]"
                },
                "result": null,
                "nodes": [],
                "edges": []
              }
            ],
            "edges": [
              {
                "origin": "inputspec",
                "target": "resample_u"
              },
              {
                "origin": "inputspec",
                "target": "resample_o"
              },
              {
                "origin": "resample_u",
                "target": "outputspec"
              },
              {
                "origin": "resample_u",
                "target": "montage_a"
              },
              {
                "origin": "resample_u",
                "target": "montage_s"
              },
              {
                "origin": "resample_o",
                "target": "outputspec"
              },
              {
                "origin": "resample_o",
                "target": "montage_a"
              },
              {
                "origin": "resample_o",
                "target": "montage_s"
              },
              {
                "origin": "montage_a",
                "target": "outputspec"
              },
              {
                "origin": "montage_s",
                "target": "outputspec"
              }
            ]
          },
          {
            "name": "outputspec",
            "type": "node",
            "inputs": {
              "axial_image": "[Undefined]",
              "sagittal_image": "[Undefined]"
            },
            "outputs": {
              "axial_image": "[Undefined]",
              "sagittal_image": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          }
        ],
        "edges": [
          {
            "origin": "inputspec",
            "target": "skull_edge"
          },
          {
            "origin": "inputspec",
            "target": "montage_skull"
          },
          {
            "origin": "skull_edge",
            "target": "montage_skull"
          },
          {
            "origin": "montage_skull",
            "target": "outputspec"
          }
        ]
      },
      {
        "name": "montage_mni_anat_272",
        "type": "workflow",
        "inputs": {
          "inputspec": "{'overlay': '[Undefined]', 'underlay': '[Undefined]'}",
          "resample_u": "{'function_str': 'CPAC.qc.utils.resample_1mm'}",
          "outputspec": "{}",
          "resample_o": "{'function_str': 'CPAC.qc.utils.resample_1mm'}",
          "montage_a": "{'cbar_name': 'red', 'function_str': 'CPAC.qc.utils.montage_axial', 'png_name': 'mni_anat_a.png'}",
          "montage_s": "{'cbar_name': 'red', 'function_str': 'CPAC.qc.utils.montage_sagittal', 'png_name': 'mni_anat_s.png'}"
        },
        "outputs": {
          "inputspec": "{'overlay': None, 'underlay': None}",
          "resample_u": "{'new_fname': None}",
          "outputspec": "{'axial_png': None, 'resampled_overlay': None, 'resampled_underlay': None, 'sagittal_png': None}",
          "resample_o": "{'new_fname': None}",
          "montage_a": "{'png_name': None}",
          "montage_s": "{'png_name': None}"
        },
        "result": null,
        "nodes": [
          {
            "name": "inputspec",
            "type": "node",
            "inputs": {
              "underlay": "[Undefined]",
              "overlay": "[Undefined]"
            },
            "outputs": {
              "underlay": "[Undefined]",
              "overlay": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "resample_u",
            "type": "node",
            "inputs": {
              "function_str": "CPAC.qc.utils.resample_1mm",
              "file_": "[Undefined]"
            },
            "outputs": {
              "new_fname": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "outputspec",
            "type": "node",
            "inputs": {
              "axial_png": "[Undefined]",
              "sagittal_png": "[Undefined]",
              "resampled_underlay": "[Undefined]",
              "resampled_overlay": "[Undefined]"
            },
            "outputs": {
              "axial_png": "[Undefined]",
              "sagittal_png": "[Undefined]",
              "resampled_underlay": "[Undefined]",
              "resampled_overlay": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "resample_o",
            "type": "node",
            "inputs": {
              "function_str": "CPAC.qc.utils.resample_1mm",
              "file_": "[Undefined]"
            },
            "outputs": {
              "new_fname": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "montage_a",
            "type": "node",
            "inputs": {
              "function_str": "CPAC.qc.utils.montage_axial",
              "overlay": "[Undefined]",
              "underlay": "[Undefined]",
              "png_name": "mni_anat_a.png",
              "cbar_name": "red"
            },
            "outputs": {
              "png_name": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "montage_s",
            "type": "node",
            "inputs": {
              "function_str": "CPAC.qc.utils.montage_sagittal",
              "overlay": "[Undefined]",
              "underlay": "[Undefined]",
              "png_name": "mni_anat_s.png",
              "cbar_name": "red"
            },
            "outputs": {
              "png_name": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          }
        ],
        "edges": [
          {
            "origin": "inputspec",
            "target": "resample_u"
          },
          {
            "origin": "inputspec",
            "target": "resample_o"
          },
          {
            "origin": "resample_u",
            "target": "outputspec"
          },
          {
            "origin": "resample_u",
            "target": "montage_a"
          },
          {
            "origin": "resample_u",
            "target": "montage_s"
          },
          {
            "origin": "resample_o",
            "target": "outputspec"
          },
          {
            "origin": "resample_o",
            "target": "montage_a"
          },
          {
            "origin": "resample_o",
            "target": "montage_s"
          },
          {
            "origin": "montage_a",
            "target": "outputspec"
          },
          {
            "origin": "montage_s",
            "target": "outputspec"
          }
        ]
      },
      {
        "name": "anat_template_edge_272",
        "type": "node",
        "inputs": {
          "function_str": "CPAC.qc.qc.afni_Edge3",
          "in_file": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "montage_csf_gm_wm_276",
        "type": "workflow",
        "inputs": {
          "inputspec": "{'overlay_csf': '[Undefined]', 'overlay_gm': '[Undefined]', 'overlay_wm': '[Undefined]', 'underlay': '[Undefined]'}",
          "resample_u": "{'function_str': 'CPAC.qc.utils.resample_1mm'}",
          "resample_o_csf": "{'function_str': 'CPAC.qc.utils.resample_1mm'}",
          "resample_o_gm": "{'function_str': 'CPAC.qc.utils.resample_1mm'}",
          "resample_o_wm": "{'function_str': 'CPAC.qc.utils.resample_1mm'}",
          "montage_a": "{'function_str': 'CPAC.qc.utils.montage_gm_wm_csf_axial', 'png_name': 'montage_csf_gm_wm_a.png'}",
          "montage_s": "{'function_str': 'CPAC.qc.utils.montage_gm_wm_csf_sagittal', 'png_name': 'montage_csf_gm_wm_s.png'}",
          "outputspec": "{}"
        },
        "outputs": {
          "inputspec": "{'overlay_csf': None, 'overlay_gm': None, 'overlay_wm': None, 'underlay': None}",
          "resample_u": "{'new_fname': None}",
          "resample_o_csf": "{'new_fname': None}",
          "resample_o_gm": "{'new_fname': None}",
          "resample_o_wm": "{'new_fname': None}",
          "montage_a": "{'png_name': None}",
          "montage_s": "{'png_name': None}",
          "outputspec": "{'axial_png': None, 'resampled_overlay_csf': None, 'resampled_overlay_gm': None, 'resampled_overlay_wm': None, 'resampled_underlay': None, 'sagittal_png': None}"
        },
        "result": null,
        "nodes": [
          {
            "name": "inputspec",
            "type": "node",
            "inputs": {
              "underlay": "[Undefined]",
              "overlay_csf": "[Undefined]",
              "overlay_wm": "[Undefined]",
              "overlay_gm": "[Undefined]"
            },
            "outputs": {
              "underlay": "[Undefined]",
              "overlay_csf": "[Undefined]",
              "overlay_wm": "[Undefined]",
              "overlay_gm": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "resample_u",
            "type": "node",
            "inputs": {
              "function_str": "CPAC.qc.utils.resample_1mm",
              "file_": "[Undefined]"
            },
            "outputs": {
              "new_fname": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "resample_o_csf",
            "type": "node",
            "inputs": {
              "function_str": "CPAC.qc.utils.resample_1mm",
              "file_": "[Undefined]"
            },
            "outputs": {
              "new_fname": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "resample_o_gm",
            "type": "node",
            "inputs": {
              "function_str": "CPAC.qc.utils.resample_1mm",
              "file_": "[Undefined]"
            },
            "outputs": {
              "new_fname": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "resample_o_wm",
            "type": "node",
            "inputs": {
              "function_str": "CPAC.qc.utils.resample_1mm",
              "file_": "[Undefined]"
            },
            "outputs": {
              "new_fname": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "montage_a",
            "type": "node",
            "inputs": {
              "function_str": "CPAC.qc.utils.montage_gm_wm_csf_axial",
              "overlay_csf": "[Undefined]",
              "overlay_wm": "[Undefined]",
              "overlay_gm": "[Undefined]",
              "underlay": "[Undefined]",
              "png_name": "montage_csf_gm_wm_a.png"
            },
            "outputs": {
              "png_name": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "montage_s",
            "type": "node",
            "inputs": {
              "function_str": "CPAC.qc.utils.montage_gm_wm_csf_sagittal",
              "overlay_csf": "[Undefined]",
              "overlay_wm": "[Undefined]",
              "overlay_gm": "[Undefined]",
              "underlay": "[Undefined]",
              "png_name": "montage_csf_gm_wm_s.png"
            },
            "outputs": {
              "png_name": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "outputspec",
            "type": "node",
            "inputs": {
              "axial_png": "[Undefined]",
              "sagittal_png": "[Undefined]",
              "resampled_underlay": "[Undefined]",
              "resampled_overlay_csf": "[Undefined]",
              "resampled_overlay_wm": "[Undefined]",
              "resampled_overlay_gm": "[Undefined]"
            },
            "outputs": {
              "axial_png": "[Undefined]",
              "sagittal_png": "[Undefined]",
              "resampled_underlay": "[Undefined]",
              "resampled_overlay_csf": "[Undefined]",
              "resampled_overlay_wm": "[Undefined]",
              "resampled_overlay_gm": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          }
        ],
        "edges": [
          {
            "origin": "inputspec",
            "target": "resample_u"
          },
          {
            "origin": "inputspec",
            "target": "resample_o_csf"
          },
          {
            "origin": "inputspec",
            "target": "resample_o_gm"
          },
          {
            "origin": "inputspec",
            "target": "resample_o_wm"
          },
          {
            "origin": "resample_u",
            "target": "montage_a"
          },
          {
            "origin": "resample_u",
            "target": "montage_s"
          },
          {
            "origin": "resample_u",
            "target": "outputspec"
          },
          {
            "origin": "resample_o_csf",
            "target": "montage_a"
          },
          {
            "origin": "resample_o_csf",
            "target": "montage_s"
          },
          {
            "origin": "resample_o_csf",
            "target": "outputspec"
          },
          {
            "origin": "resample_o_gm",
            "target": "montage_a"
          },
          {
            "origin": "resample_o_gm",
            "target": "montage_s"
          },
          {
            "origin": "resample_o_gm",
            "target": "outputspec"
          },
          {
            "origin": "resample_o_wm",
            "target": "montage_a"
          },
          {
            "origin": "resample_o_wm",
            "target": "montage_s"
          },
          {
            "origin": "resample_o_wm",
            "target": "outputspec"
          },
          {
            "origin": "montage_a",
            "target": "outputspec"
          },
          {
            "origin": "montage_s",
            "target": "outputspec"
          }
        ]
      },
      {
        "name": "carpet_seg_282",
        "type": "workflow",
        "inputs": {
          "inputspec": "{'anatomical_csf_mask': '[Undefined]', 'anatomical_gm_mask': '[Undefined]', 'anatomical_wm_mask': '[Undefined]', 'functional_to_standard': '[Undefined]', 'mean_functional_to_standard': '[Undefined]'}",
          "gm_resample": "{'args': '[Undefined]', 'environ': {}, 'num_threads': 1, 'orientation': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI', 'resample_mode': '[Undefined]', 'voxel_size': '[Undefined]'}",
          "gm_mask": "{'args': '[Undefined]', 'environ': {}, 'expr': 'astep(a, 0.5)', 'in_file_b': '[Undefined]', 'in_file_c': '[Undefined]', 'num_threads': 1, 'other': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI', 'overwrite': '[Undefined]', 'single_idx': '[Undefined]', 'start_idx': '[Undefined]', 'stop_idx': '[Undefined]'}",
          "wm_resample": "{'args': '[Undefined]', 'environ': {}, 'num_threads': 1, 'orientation': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI', 'resample_mode': '[Undefined]', 'voxel_size': '[Undefined]'}",
          "wm_mask": "{'args': '[Undefined]', 'environ': {}, 'expr': 'astep(a, 0.5)', 'in_file_b': '[Undefined]', 'in_file_c': '[Undefined]', 'num_threads': 1, 'other': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI', 'overwrite': '[Undefined]', 'single_idx': '[Undefined]', 'start_idx': '[Undefined]', 'stop_idx': '[Undefined]'}",
          "csf_resample": "{'args': '[Undefined]', 'environ': {}, 'num_threads': 1, 'orientation': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI', 'resample_mode': '[Undefined]', 'voxel_size': '[Undefined]'}",
          "csf_mask": "{'args': '[Undefined]', 'environ': {}, 'expr': 'astep(a, 0.5)', 'in_file_b': '[Undefined]', 'in_file_c': '[Undefined]', 'num_threads': 1, 'other': '[Undefined]', 'out_file': '[Undefined]', 'outputtype': 'NIFTI', 'overwrite': '[Undefined]', 'single_idx': '[Undefined]', 'start_idx': '[Undefined]', 'stop_idx': '[Undefined]'}",
          "carpet_plot": "{'function_str': 'CPAC.qc.utils.gen_carpet_plt', 'output': 'carpet_seg'}",
          "outputspec": "{}"
        },
        "outputs": {
          "inputspec": "{'anatomical_csf_mask': None, 'anatomical_gm_mask': None, 'anatomical_wm_mask': None, 'functional_to_standard': None, 'mean_functional_to_standard': None}",
          "gm_resample": "{'out_file': None}",
          "gm_mask": "{'out_file': None}",
          "wm_resample": "{'out_file': None}",
          "wm_mask": "{'out_file': None}",
          "csf_resample": "{'out_file': None}",
          "csf_mask": "{'out_file': None}",
          "carpet_plot": "{'carpet_plot': None}",
          "outputspec": "{'carpet_plot': None}"
        },
        "result": null,
        "nodes": [
          {
            "name": "inputspec",
            "type": "node",
            "inputs": {
              "functional_to_standard": "[Undefined]",
              "mean_functional_to_standard": "[Undefined]",
              "anatomical_gm_mask": "[Undefined]",
              "anatomical_wm_mask": "[Undefined]",
              "anatomical_csf_mask": "[Undefined]"
            },
            "outputs": {
              "functional_to_standard": "[Undefined]",
              "mean_functional_to_standard": "[Undefined]",
              "anatomical_gm_mask": "[Undefined]",
              "anatomical_wm_mask": "[Undefined]",
              "anatomical_csf_mask": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "gm_resample",
            "type": "node",
            "inputs": {
              "in_file": "[Undefined]",
              "out_file": "[Undefined]",
              "orientation": "[Undefined]",
              "resample_mode": "[Undefined]",
              "voxel_size": "[Undefined]",
              "master": "[Undefined]",
              "num_threads": "1",
              "outputtype": "NIFTI",
              "args": "[Undefined]",
              "environ": "{}"
            },
            "outputs": {
              "out_file": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "gm_mask",
            "type": "node",
            "inputs": {
              "in_file_a": "[Undefined]",
              "in_file_b": "[Undefined]",
              "in_file_c": "[Undefined]",
              "out_file": "[Undefined]",
              "expr": "astep(a, 0.5)",
              "start_idx": "[Undefined]",
              "stop_idx": "[Undefined]",
              "single_idx": "[Undefined]",
              "overwrite": "[Undefined]",
              "other": "[Undefined]",
              "num_threads": "1",
              "outputtype": "NIFTI",
              "args": "[Undefined]",
              "environ": "{}"
            },
            "outputs": {
              "out_file": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "wm_resample",
            "type": "node",
            "inputs": {
              "in_file": "[Undefined]",
              "out_file": "[Undefined]",
              "orientation": "[Undefined]",
              "resample_mode": "[Undefined]",
              "voxel_size": "[Undefined]",
              "master": "[Undefined]",
              "num_threads": "1",
              "outputtype": "NIFTI",
              "args": "[Undefined]",
              "environ": "{}"
            },
            "outputs": {
              "out_file": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "wm_mask",
            "type": "node",
            "inputs": {
              "in_file_a": "[Undefined]",
              "in_file_b": "[Undefined]",
              "in_file_c": "[Undefined]",
              "out_file": "[Undefined]",
              "expr": "astep(a, 0.5)",
              "start_idx": "[Undefined]",
              "stop_idx": "[Undefined]",
              "single_idx": "[Undefined]",
              "overwrite": "[Undefined]",
              "other": "[Undefined]",
              "num_threads": "1",
              "outputtype": "NIFTI",
              "args": "[Undefined]",
              "environ": "{}"
            },
            "outputs": {
              "out_file": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "csf_resample",
            "type": "node",
            "inputs": {
              "in_file": "[Undefined]",
              "out_file": "[Undefined]",
              "orientation": "[Undefined]",
              "resample_mode": "[Undefined]",
              "voxel_size": "[Undefined]",
              "master": "[Undefined]",
              "num_threads": "1",
              "outputtype": "NIFTI",
              "args": "[Undefined]",
              "environ": "{}"
            },
            "outputs": {
              "out_file": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "csf_mask",
            "type": "node",
            "inputs": {
              "in_file_a": "[Undefined]",
              "in_file_b": "[Undefined]",
              "in_file_c": "[Undefined]",
              "out_file": "[Undefined]",
              "expr": "astep(a, 0.5)",
              "start_idx": "[Undefined]",
              "stop_idx": "[Undefined]",
              "single_idx": "[Undefined]",
              "overwrite": "[Undefined]",
              "other": "[Undefined]",
              "num_threads": "1",
              "outputtype": "NIFTI",
              "args": "[Undefined]",
              "environ": "{}"
            },
            "outputs": {
              "out_file": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "carpet_plot",
            "type": "node",
            "inputs": {
              "function_str": "CPAC.qc.utils.gen_carpet_plt",
              "gm_mask": "[Undefined]",
              "wm_mask": "[Undefined]",
              "csf_mask": "[Undefined]",
              "functional_to_standard": "[Undefined]",
              "output": "carpet_seg"
            },
            "outputs": {
              "carpet_plot": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "outputspec",
            "type": "node",
            "inputs": {
              "carpet_plot": "[Undefined]"
            },
            "outputs": {
              "carpet_plot": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          }
        ],
        "edges": [
          {
            "origin": "inputspec",
            "target": "gm_resample"
          },
          {
            "origin": "inputspec",
            "target": "wm_resample"
          },
          {
            "origin": "inputspec",
            "target": "csf_resample"
          },
          {
            "origin": "inputspec",
            "target": "carpet_plot"
          },
          {
            "origin": "gm_resample",
            "target": "gm_mask"
          },
          {
            "origin": "gm_mask",
            "target": "carpet_plot"
          },
          {
            "origin": "wm_resample",
            "target": "wm_mask"
          },
          {
            "origin": "wm_mask",
            "target": "carpet_plot"
          },
          {
            "origin": "csf_resample",
            "target": "csf_mask"
          },
          {
            "origin": "csf_mask",
            "target": "carpet_plot"
          },
          {
            "origin": "carpet_plot",
            "target": "outputspec"
          }
        ]
      },
      {
        "name": "montage_mfi_288",
        "type": "workflow",
        "inputs": {
          "inputspec": "{'overlay': '[Undefined]', 'underlay': '[Undefined]'}",
          "resample_u": "{'function_str': 'CPAC.qc.utils.resample_1mm'}",
          "outputspec": "{}",
          "resample_o": "{'function_str': 'CPAC.qc.utils.resample_1mm'}",
          "montage_a": "{'cbar_name': 'red', 'function_str': 'CPAC.qc.utils.montage_axial', 'png_name': 'MNI_edge_on_mean_func_mni_a.png'}",
          "montage_s": "{'cbar_name': 'red', 'function_str': 'CPAC.qc.utils.montage_sagittal', 'png_name': 'MNI_edge_on_mean_func_mni_s.png'}"
        },
        "outputs": {
          "inputspec": "{'overlay': None, 'underlay': None}",
          "resample_u": "{'new_fname': None}",
          "outputspec": "{'axial_png': None, 'resampled_overlay': None, 'resampled_underlay': None, 'sagittal_png': None}",
          "resample_o": "{'new_fname': None}",
          "montage_a": "{'png_name': None}",
          "montage_s": "{'png_name': None}"
        },
        "result": null,
        "nodes": [
          {
            "name": "inputspec",
            "type": "node",
            "inputs": {
              "underlay": "[Undefined]",
              "overlay": "[Undefined]"
            },
            "outputs": {
              "underlay": "[Undefined]",
              "overlay": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "resample_u",
            "type": "node",
            "inputs": {
              "function_str": "CPAC.qc.utils.resample_1mm",
              "file_": "[Undefined]"
            },
            "outputs": {
              "new_fname": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "outputspec",
            "type": "node",
            "inputs": {
              "axial_png": "[Undefined]",
              "sagittal_png": "[Undefined]",
              "resampled_underlay": "[Undefined]",
              "resampled_overlay": "[Undefined]"
            },
            "outputs": {
              "axial_png": "[Undefined]",
              "sagittal_png": "[Undefined]",
              "resampled_underlay": "[Undefined]",
              "resampled_overlay": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "resample_o",
            "type": "node",
            "inputs": {
              "function_str": "CPAC.qc.utils.resample_1mm",
              "file_": "[Undefined]"
            },
            "outputs": {
              "new_fname": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "montage_a",
            "type": "node",
            "inputs": {
              "function_str": "CPAC.qc.utils.montage_axial",
              "overlay": "[Undefined]",
              "underlay": "[Undefined]",
              "png_name": "MNI_edge_on_mean_func_mni_a.png",
              "cbar_name": "red"
            },
            "outputs": {
              "png_name": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          },
          {
            "name": "montage_s",
            "type": "node",
            "inputs": {
              "function_str": "CPAC.qc.utils.montage_sagittal",
              "overlay": "[Undefined]",
              "underlay": "[Undefined]",
              "png_name": "MNI_edge_on_mean_func_mni_s.png",
              "cbar_name": "red"
            },
            "outputs": {
              "png_name": "[Undefined]"
            },
            "result": null,
            "nodes": [],
            "edges": []
          }
        ],
        "edges": [
          {
            "origin": "inputspec",
            "target": "resample_u"
          },
          {
            "origin": "inputspec",
            "target": "resample_o"
          },
          {
            "origin": "resample_u",
            "target": "outputspec"
          },
          {
            "origin": "resample_u",
            "target": "montage_a"
          },
          {
            "origin": "resample_u",
            "target": "montage_s"
          },
          {
            "origin": "resample_o",
            "target": "outputspec"
          },
          {
            "origin": "resample_o",
            "target": "montage_a"
          },
          {
            "origin": "resample_o",
            "target": "montage_s"
          },
          {
            "origin": "montage_a",
            "target": "outputspec"
          },
          {
            "origin": "montage_s",
            "target": "outputspec"
          }
        ]
      },
      {
        "name": "func_template_edge_288",
        "type": "node",
        "inputs": {
          "function_str": "CPAC.qc.qc.afni_Edge3",
          "in_file": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "id_string_desc-preproc_T1w_93",
        "type": "node",
        "inputs": {
          "function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
          "cfg": "C-PAC Configuration ('cpac_ccs-options')",
          "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
          "resource": "desc-preproc_T1w",
          "scan_id": "[Undefined]",
          "template_desc": "[Undefined]",
          "atlas_id": "[Undefined]",
          "fwhm": "[Undefined]",
          "subdir": "anat"
        },
        "outputs": {
          "out_filename": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "nii_desc-preproc_T1w_93",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "keep_ext": "True",
          "format_string": "[Undefined]",
          "parse_string": "[Undefined]",
          "use_fullpath": "False"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "json_desc-preproc_T1w_93",
        "type": "node",
        "inputs": {
          "function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
          "json_data": "{'CpacProvenance': [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['desc-head_T1w', 'desc-preproc_T1w', 'space-T1w_desc-brain_mask'], 'SkullStripped': 'True', 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
          "filename": "[Undefined]"
        },
        "outputs": {
          "json_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "sinker_desc-preproc_T1w_93",
        "type": "node",
        "inputs": {
          "base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output",
          "container": "pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
          "parameterization": "False",
          "strip_dir": "[Undefined]",
          "substitutions": "[Undefined]",
          "regexp_substitutions": "[Undefined]",
          "_outputs": "{}",
          "remove_dest_dir": "False",
          "creds_path": "[Undefined]",
          "encrypt_bucket_keys": "False",
          "bucket": "[Undefined]",
          "local_copy": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "id_string_desc-head_T1w_95",
        "type": "node",
        "inputs": {
          "function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
          "cfg": "C-PAC Configuration ('cpac_ccs-options')",
          "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
          "resource": "desc-head_T1w",
          "scan_id": "[Undefined]",
          "template_desc": "[Undefined]",
          "atlas_id": "[Undefined]",
          "fwhm": "[Undefined]",
          "subdir": "anat"
        },
        "outputs": {
          "out_filename": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "nii_desc-head_T1w_95",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "keep_ext": "True",
          "format_string": "[Undefined]",
          "parse_string": "[Undefined]",
          "use_fullpath": "False"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "json_desc-head_T1w_95",
        "type": "node",
        "inputs": {
          "function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
          "json_data": "{'CpacProvenance': [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['desc-head_T1w', 'desc-preproc_T1w', 'space-T1w_desc-brain_mask'], 'SkullStripped': 'False', 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
          "filename": "[Undefined]"
        },
        "outputs": {
          "json_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "sinker_desc-head_T1w_95",
        "type": "node",
        "inputs": {
          "base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output",
          "container": "pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
          "parameterization": "False",
          "strip_dir": "[Undefined]",
          "substitutions": "[Undefined]",
          "regexp_substitutions": "[Undefined]",
          "_outputs": "{}",
          "remove_dest_dir": "False",
          "creds_path": "[Undefined]",
          "encrypt_bucket_keys": "False",
          "bucket": "[Undefined]",
          "local_copy": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "id_string_space-T1w_desc-brain_mask_75",
        "type": "node",
        "inputs": {
          "function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
          "cfg": "C-PAC Configuration ('cpac_ccs-options')",
          "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
          "resource": "space-T1w_desc-brain_mask",
          "scan_id": "[Undefined]",
          "template_desc": "[Undefined]",
          "atlas_id": "[Undefined]",
          "fwhm": "[Undefined]",
          "subdir": "anat"
        },
        "outputs": {
          "out_filename": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "nii_space-T1w_desc-brain_mask_75",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "keep_ext": "True",
          "format_string": "[Undefined]",
          "parse_string": "[Undefined]",
          "use_fullpath": "False"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "json_space-T1w_desc-brain_mask_75",
        "type": "node",
        "inputs": {
          "function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
          "json_data": "{'CpacProvenance': [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'Sources': ['pipeline-fs_raw-average', 'pipeline-fs_brainmask', 'freesurfer-subject-dir'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}, 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}}",
          "filename": "[Undefined]"
        },
        "outputs": {
          "json_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "sinker_space-T1w_desc-brain_mask_75",
        "type": "node",
        "inputs": {
          "base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output",
          "container": "pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
          "parameterization": "False",
          "strip_dir": "[Undefined]",
          "substitutions": "[Undefined]",
          "regexp_substitutions": "[Undefined]",
          "_outputs": "{}",
          "remove_dest_dir": "False",
          "creds_path": "[Undefined]",
          "encrypt_bucket_keys": "False",
          "bucket": "[Undefined]",
          "local_copy": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "id_string_space-template_desc-preproc_T1w_101",
        "type": "node",
        "inputs": {
          "function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
          "cfg": "C-PAC Configuration ('cpac_ccs-options')",
          "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
          "resource": "space-template_desc-preproc_T1w",
          "scan_id": "[Undefined]",
          "template_desc": "MNI152NLin6ASym - T1w-based skull-stripped template - /usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain.nii.gz",
          "atlas_id": "[Undefined]",
          "fwhm": "[Undefined]",
          "subdir": "anat"
        },
        "outputs": {
          "out_filename": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "nii_space-template_desc-preproc_T1w_101",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "keep_ext": "True",
          "format_string": "[Undefined]",
          "parse_string": "[Undefined]",
          "use_fullpath": "False"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "json_space-template_desc-preproc_T1w_101",
        "type": "node",
        "inputs": {
          "function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
          "json_data": "{'CpacProvenance': [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'space-template_desc-preproc_T1w:register_FSL_anat_to_template_FSL'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'SkullStripped': 'True', 'Sources': ['desc-preproc_T1w', 'desc-brain_T1w', 'T1w-template', 'T1w-brain-template', 'template-ref-mask'], 'Template': 'MNI152NLin6ASym - T1w-based skull-stripped template - /usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain.nii.gz', 'Resolution': '2mm', 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
          "filename": "[Undefined]"
        },
        "outputs": {
          "json_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "sinker_space-template_desc-preproc_T1w_101",
        "type": "node",
        "inputs": {
          "base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output",
          "container": "pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
          "parameterization": "False",
          "strip_dir": "[Undefined]",
          "substitutions": "[Undefined]",
          "regexp_substitutions": "[Undefined]",
          "_outputs": "{}",
          "remove_dest_dir": "False",
          "creds_path": "[Undefined]",
          "encrypt_bucket_keys": "False",
          "bucket": "[Undefined]",
          "local_copy": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "id_string_from-T1w_to-template_mode-image_desc-linear_xfm_102",
        "type": "node",
        "inputs": {
          "function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
          "cfg": "C-PAC Configuration ('cpac_ccs-options')",
          "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
          "resource": "from-T1w_to-template_mode-image_desc-linear_xfm",
          "scan_id": "[Undefined]",
          "template_desc": "MNI152NLin6ASym - T1w-based whole-head template - /usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz",
          "atlas_id": "[Undefined]",
          "fwhm": "[Undefined]",
          "subdir": "anat"
        },
        "outputs": {
          "out_filename": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "nii_from-T1w_to-template_mode-image_desc-linear_xfm_102",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "keep_ext": "True",
          "format_string": "[Undefined]",
          "parse_string": "[Undefined]",
          "use_fullpath": "False"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "json_from-T1w_to-template_mode-image_desc-linear_xfm_102",
        "type": "node",
        "inputs": {
          "function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
          "json_data": "{'CpacProvenance': [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-T1w_to-template_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['desc-preproc_T1w', 'desc-brain_T1w', 'T1w-template', 'T1w-brain-template', 'template-ref-mask'], 'Template': 'MNI152NLin6ASym - T1w-based whole-head template - /usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'Resolution': '2mm', 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
          "filename": "[Undefined]"
        },
        "outputs": {
          "json_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "sinker_from-T1w_to-template_mode-image_desc-linear_xfm_102",
        "type": "node",
        "inputs": {
          "base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output",
          "container": "pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
          "parameterization": "False",
          "strip_dir": "[Undefined]",
          "substitutions": "[Undefined]",
          "regexp_substitutions": "[Undefined]",
          "_outputs": "{}",
          "remove_dest_dir": "False",
          "creds_path": "[Undefined]",
          "encrypt_bucket_keys": "False",
          "bucket": "[Undefined]",
          "local_copy": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "id_string_from-template_to-T1w_mode-image_desc-linear_xfm_103",
        "type": "node",
        "inputs": {
          "function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
          "cfg": "C-PAC Configuration ('cpac_ccs-options')",
          "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
          "resource": "from-template_to-T1w_mode-image_desc-linear_xfm",
          "scan_id": "[Undefined]",
          "template_desc": "MNI152NLin6ASym - T1w-based whole-head template - /usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz",
          "atlas_id": "[Undefined]",
          "fwhm": "[Undefined]",
          "subdir": "anat"
        },
        "outputs": {
          "out_filename": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "nii_from-template_to-T1w_mode-image_desc-linear_xfm_103",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "keep_ext": "True",
          "format_string": "[Undefined]",
          "parse_string": "[Undefined]",
          "use_fullpath": "False"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "json_from-template_to-T1w_mode-image_desc-linear_xfm_103",
        "type": "node",
        "inputs": {
          "function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
          "json_data": "{'CpacProvenance': [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['desc-preproc_T1w', 'desc-brain_T1w', 'T1w-template', 'T1w-brain-template', 'template-ref-mask'], 'Template': 'MNI152NLin6ASym - T1w-based whole-head template - /usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'Resolution': '2mm', 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
          "filename": "[Undefined]"
        },
        "outputs": {
          "json_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "sinker_from-template_to-T1w_mode-image_desc-linear_xfm_103",
        "type": "node",
        "inputs": {
          "base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output",
          "container": "pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
          "parameterization": "False",
          "strip_dir": "[Undefined]",
          "substitutions": "[Undefined]",
          "regexp_substitutions": "[Undefined]",
          "_outputs": "{}",
          "remove_dest_dir": "False",
          "creds_path": "[Undefined]",
          "encrypt_bucket_keys": "False",
          "bucket": "[Undefined]",
          "local_copy": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "id_string_from-T1w_to-template_mode-image_xfm_104",
        "type": "node",
        "inputs": {
          "function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
          "cfg": "C-PAC Configuration ('cpac_ccs-options')",
          "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
          "resource": "from-T1w_to-template_mode-image_xfm",
          "scan_id": "[Undefined]",
          "template_desc": "MNI152NLin6ASym - T1w-based whole-head template - /usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz",
          "atlas_id": "[Undefined]",
          "fwhm": "[Undefined]",
          "subdir": "anat"
        },
        "outputs": {
          "out_filename": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "nii_from-T1w_to-template_mode-image_xfm_104",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "keep_ext": "True",
          "format_string": "[Undefined]",
          "parse_string": "[Undefined]",
          "use_fullpath": "False"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "json_from-T1w_to-template_mode-image_xfm_104",
        "type": "node",
        "inputs": {
          "function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
          "json_data": "{'CpacProvenance': [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_FSL_anat_to_template_FSL'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['desc-preproc_T1w', 'desc-brain_T1w', 'T1w-template', 'T1w-brain-template', 'template-ref-mask'], 'Template': 'MNI152NLin6ASym - T1w-based whole-head template - /usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'Resolution': '2mm', 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
          "filename": "[Undefined]"
        },
        "outputs": {
          "json_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "sinker_from-T1w_to-template_mode-image_xfm_104",
        "type": "node",
        "inputs": {
          "base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output",
          "container": "pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
          "parameterization": "False",
          "strip_dir": "[Undefined]",
          "substitutions": "[Undefined]",
          "regexp_substitutions": "[Undefined]",
          "_outputs": "{}",
          "remove_dest_dir": "False",
          "creds_path": "[Undefined]",
          "encrypt_bucket_keys": "False",
          "bucket": "[Undefined]",
          "local_copy": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "id_string_space-template_desc-head_T1w_108",
        "type": "node",
        "inputs": {
          "function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
          "cfg": "C-PAC Configuration ('cpac_ccs-options')",
          "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
          "resource": "space-template_desc-head_T1w",
          "scan_id": "[Undefined]",
          "template_desc": "MNI152NLin6ASym - T1w-based whole-head template - /usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz",
          "atlas_id": "[Undefined]",
          "fwhm": "[Undefined]",
          "subdir": "anat"
        },
        "outputs": {
          "out_filename": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "nii_space-template_desc-head_T1w_108",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "keep_ext": "True",
          "format_string": "[Undefined]",
          "parse_string": "[Undefined]",
          "use_fullpath": "False"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "json_space-template_desc-head_T1w_108",
        "type": "node",
        "inputs": {
          "function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
          "json_data": "{'CpacProvenance': [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_FSL_anat_to_template_FSL'], ['T1w-template:template_resample'], 'space-template_desc-head_T1w:transform_whole_head_T1w_to_T1template'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'SkullStripped': 'False', 'Sources': ['desc-head_T1w', 'from-T1w_to-template_mode-image_xfm', 'T1w-template'], 'Template': 'MNI152NLin6ASym - T1w-based whole-head template - /usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'Resolution': '2mm', 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
          "filename": "[Undefined]"
        },
        "outputs": {
          "json_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "sinker_space-template_desc-head_T1w_108",
        "type": "node",
        "inputs": {
          "base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output",
          "container": "pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
          "parameterization": "False",
          "strip_dir": "[Undefined]",
          "substitutions": "[Undefined]",
          "regexp_substitutions": "[Undefined]",
          "_outputs": "{}",
          "remove_dest_dir": "False",
          "creds_path": "[Undefined]",
          "encrypt_bucket_keys": "False",
          "bucket": "[Undefined]",
          "local_copy": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "id_string_space-template_desc-brain_mask_112",
        "type": "node",
        "inputs": {
          "function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
          "cfg": "C-PAC Configuration ('cpac_ccs-options')",
          "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
          "resource": "space-template_desc-brain_mask",
          "scan_id": "[Undefined]",
          "template_desc": "MNI152NLin6ASym - T1w-based whole-head template - /usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz",
          "atlas_id": "[Undefined]",
          "fwhm": "[Undefined]",
          "subdir": "anat"
        },
        "outputs": {
          "out_filename": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "nii_space-template_desc-brain_mask_112",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "keep_ext": "True",
          "format_string": "[Undefined]",
          "parse_string": "[Undefined]",
          "use_fullpath": "False"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "json_space-template_desc-brain_mask_112",
        "type": "node",
        "inputs": {
          "function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
          "json_data": "{'CpacProvenance': [[['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_FSL_anat_to_template_FSL'], ['T1w-template:template_resample'], 'space-template_desc-brain_mask:transform_T1mask_to_T1template'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['space-T1w_desc-brain_mask', 'from-T1w_to-template_mode-image_xfm', 'T1w-template'], 'Template': 'MNI152NLin6ASym - T1w-based whole-head template - /usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'Resolution': '2mm', 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
          "filename": "[Undefined]"
        },
        "outputs": {
          "json_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "sinker_space-template_desc-brain_mask_112",
        "type": "node",
        "inputs": {
          "base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output",
          "container": "pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
          "parameterization": "False",
          "strip_dir": "[Undefined]",
          "substitutions": "[Undefined]",
          "regexp_substitutions": "[Undefined]",
          "_outputs": "{}",
          "remove_dest_dir": "False",
          "creds_path": "[Undefined]",
          "encrypt_bucket_keys": "False",
          "bucket": "[Undefined]",
          "local_copy": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "id_string_label-CSF_probseg_119",
        "type": "node",
        "inputs": {
          "function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
          "cfg": "C-PAC Configuration ('cpac_ccs-options')",
          "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
          "resource": "label-CSF_probseg",
          "scan_id": "[Undefined]",
          "template_desc": "[Undefined]",
          "atlas_id": "[Undefined]",
          "fwhm": "[Undefined]",
          "subdir": "anat"
        },
        "outputs": {
          "out_filename": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "nii_label-CSF_probseg_119",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "keep_ext": "True",
          "format_string": "[Undefined]",
          "parse_string": "[Undefined]",
          "use_fullpath": "False"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "json_label-CSF_probseg_119",
        "type": "node",
        "inputs": {
          "function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
          "json_data": "{'CpacProvenance': [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-CSF_probseg:tissue_seg_fsl_fast'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['desc-brain_T1w', 'space-T1w_desc-brain_mask', 'from-template_to-T1w_mode-image_desc-linear_xfm', 'CSF-path', 'GM-path', 'WM-path'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
          "filename": "[Undefined]"
        },
        "outputs": {
          "json_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "sinker_label-CSF_probseg_119",
        "type": "node",
        "inputs": {
          "base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output",
          "container": "pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
          "parameterization": "False",
          "strip_dir": "[Undefined]",
          "substitutions": "[Undefined]",
          "regexp_substitutions": "[Undefined]",
          "_outputs": "{}",
          "remove_dest_dir": "False",
          "creds_path": "[Undefined]",
          "encrypt_bucket_keys": "False",
          "bucket": "[Undefined]",
          "local_copy": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "id_string_label-GM_probseg_120",
        "type": "node",
        "inputs": {
          "function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
          "cfg": "C-PAC Configuration ('cpac_ccs-options')",
          "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
          "resource": "label-GM_probseg",
          "scan_id": "[Undefined]",
          "template_desc": "[Undefined]",
          "atlas_id": "[Undefined]",
          "fwhm": "[Undefined]",
          "subdir": "anat"
        },
        "outputs": {
          "out_filename": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "nii_label-GM_probseg_120",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "keep_ext": "True",
          "format_string": "[Undefined]",
          "parse_string": "[Undefined]",
          "use_fullpath": "False"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "json_label-GM_probseg_120",
        "type": "node",
        "inputs": {
          "function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
          "json_data": "{'CpacProvenance': [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-GM_probseg:tissue_seg_fsl_fast'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['desc-brain_T1w', 'space-T1w_desc-brain_mask', 'from-template_to-T1w_mode-image_desc-linear_xfm', 'CSF-path', 'GM-path', 'WM-path'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
          "filename": "[Undefined]"
        },
        "outputs": {
          "json_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "sinker_label-GM_probseg_120",
        "type": "node",
        "inputs": {
          "base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output",
          "container": "pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
          "parameterization": "False",
          "strip_dir": "[Undefined]",
          "substitutions": "[Undefined]",
          "regexp_substitutions": "[Undefined]",
          "_outputs": "{}",
          "remove_dest_dir": "False",
          "creds_path": "[Undefined]",
          "encrypt_bucket_keys": "False",
          "bucket": "[Undefined]",
          "local_copy": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "id_string_label-WM_probseg_121",
        "type": "node",
        "inputs": {
          "function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
          "cfg": "C-PAC Configuration ('cpac_ccs-options')",
          "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
          "resource": "label-WM_probseg",
          "scan_id": "[Undefined]",
          "template_desc": "[Undefined]",
          "atlas_id": "[Undefined]",
          "fwhm": "[Undefined]",
          "subdir": "anat"
        },
        "outputs": {
          "out_filename": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "nii_label-WM_probseg_121",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "keep_ext": "True",
          "format_string": "[Undefined]",
          "parse_string": "[Undefined]",
          "use_fullpath": "False"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "json_label-WM_probseg_121",
        "type": "node",
        "inputs": {
          "function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
          "json_data": "{'CpacProvenance': [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['desc-brain_T1w', 'space-T1w_desc-brain_mask', 'from-template_to-T1w_mode-image_desc-linear_xfm', 'CSF-path', 'GM-path', 'WM-path'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
          "filename": "[Undefined]"
        },
        "outputs": {
          "json_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "sinker_label-WM_probseg_121",
        "type": "node",
        "inputs": {
          "base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output",
          "container": "pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
          "parameterization": "False",
          "strip_dir": "[Undefined]",
          "substitutions": "[Undefined]",
          "regexp_substitutions": "[Undefined]",
          "_outputs": "{}",
          "remove_dest_dir": "False",
          "creds_path": "[Undefined]",
          "encrypt_bucket_keys": "False",
          "bucket": "[Undefined]",
          "local_copy": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "id_string_label-CSF_mask_122",
        "type": "node",
        "inputs": {
          "function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
          "cfg": "C-PAC Configuration ('cpac_ccs-options')",
          "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
          "resource": "label-CSF_mask",
          "scan_id": "[Undefined]",
          "template_desc": "[Undefined]",
          "atlas_id": "[Undefined]",
          "fwhm": "[Undefined]",
          "subdir": "anat"
        },
        "outputs": {
          "out_filename": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "nii_label-CSF_mask_122",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "keep_ext": "True",
          "format_string": "[Undefined]",
          "parse_string": "[Undefined]",
          "use_fullpath": "False"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "json_label-CSF_mask_122",
        "type": "node",
        "inputs": {
          "function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
          "json_data": "{'CpacProvenance': [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-CSF_mask:tissue_seg_fsl_fast'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['desc-brain_T1w', 'space-T1w_desc-brain_mask', 'from-template_to-T1w_mode-image_desc-linear_xfm', 'CSF-path', 'GM-path', 'WM-path'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
          "filename": "[Undefined]"
        },
        "outputs": {
          "json_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "sinker_label-CSF_mask_122",
        "type": "node",
        "inputs": {
          "base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output",
          "container": "pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
          "parameterization": "False",
          "strip_dir": "[Undefined]",
          "substitutions": "[Undefined]",
          "regexp_substitutions": "[Undefined]",
          "_outputs": "{}",
          "remove_dest_dir": "False",
          "creds_path": "[Undefined]",
          "encrypt_bucket_keys": "False",
          "bucket": "[Undefined]",
          "local_copy": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "id_string_label-GM_mask_123",
        "type": "node",
        "inputs": {
          "function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
          "cfg": "C-PAC Configuration ('cpac_ccs-options')",
          "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
          "resource": "label-GM_mask",
          "scan_id": "[Undefined]",
          "template_desc": "[Undefined]",
          "atlas_id": "[Undefined]",
          "fwhm": "[Undefined]",
          "subdir": "anat"
        },
        "outputs": {
          "out_filename": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "nii_label-GM_mask_123",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "keep_ext": "True",
          "format_string": "[Undefined]",
          "parse_string": "[Undefined]",
          "use_fullpath": "False"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "json_label-GM_mask_123",
        "type": "node",
        "inputs": {
          "function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
          "json_data": "{'CpacProvenance': [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-GM_mask:tissue_seg_fsl_fast'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['desc-brain_T1w', 'space-T1w_desc-brain_mask', 'from-template_to-T1w_mode-image_desc-linear_xfm', 'CSF-path', 'GM-path', 'WM-path'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
          "filename": "[Undefined]"
        },
        "outputs": {
          "json_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "sinker_label-GM_mask_123",
        "type": "node",
        "inputs": {
          "base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output",
          "container": "pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
          "parameterization": "False",
          "strip_dir": "[Undefined]",
          "substitutions": "[Undefined]",
          "regexp_substitutions": "[Undefined]",
          "_outputs": "{}",
          "remove_dest_dir": "False",
          "creds_path": "[Undefined]",
          "encrypt_bucket_keys": "False",
          "bucket": "[Undefined]",
          "local_copy": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "id_string_label-WM_mask_124",
        "type": "node",
        "inputs": {
          "function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
          "cfg": "C-PAC Configuration ('cpac_ccs-options')",
          "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
          "resource": "label-WM_mask",
          "scan_id": "[Undefined]",
          "template_desc": "[Undefined]",
          "atlas_id": "[Undefined]",
          "fwhm": "[Undefined]",
          "subdir": "anat"
        },
        "outputs": {
          "out_filename": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "nii_label-WM_mask_124",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "keep_ext": "True",
          "format_string": "[Undefined]",
          "parse_string": "[Undefined]",
          "use_fullpath": "False"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "json_label-WM_mask_124",
        "type": "node",
        "inputs": {
          "function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
          "json_data": "{'CpacProvenance': [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_mask:tissue_seg_fsl_fast'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['desc-brain_T1w', 'space-T1w_desc-brain_mask', 'from-template_to-T1w_mode-image_desc-linear_xfm', 'CSF-path', 'GM-path', 'WM-path'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
          "filename": "[Undefined]"
        },
        "outputs": {
          "json_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "sinker_label-WM_mask_124",
        "type": "node",
        "inputs": {
          "base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output",
          "container": "pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
          "parameterization": "False",
          "strip_dir": "[Undefined]",
          "substitutions": "[Undefined]",
          "regexp_substitutions": "[Undefined]",
          "_outputs": "{}",
          "remove_dest_dir": "False",
          "creds_path": "[Undefined]",
          "encrypt_bucket_keys": "False",
          "bucket": "[Undefined]",
          "local_copy": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "id_string_label-CSF_desc-preproc_mask_125",
        "type": "node",
        "inputs": {
          "function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
          "cfg": "C-PAC Configuration ('cpac_ccs-options')",
          "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
          "resource": "label-CSF_desc-preproc_mask",
          "scan_id": "[Undefined]",
          "template_desc": "[Undefined]",
          "atlas_id": "[Undefined]",
          "fwhm": "[Undefined]",
          "subdir": "anat"
        },
        "outputs": {
          "out_filename": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "nii_label-CSF_desc-preproc_mask_125",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "keep_ext": "True",
          "format_string": "[Undefined]",
          "parse_string": "[Undefined]",
          "use_fullpath": "False"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "json_label-CSF_desc-preproc_mask_125",
        "type": "node",
        "inputs": {
          "function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
          "json_data": "{'CpacProvenance': [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-CSF_desc-preproc_mask:tissue_seg_fsl_fast'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['desc-brain_T1w', 'space-T1w_desc-brain_mask', 'from-template_to-T1w_mode-image_desc-linear_xfm', 'CSF-path', 'GM-path', 'WM-path'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
          "filename": "[Undefined]"
        },
        "outputs": {
          "json_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "sinker_label-CSF_desc-preproc_mask_125",
        "type": "node",
        "inputs": {
          "base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output",
          "container": "pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
          "parameterization": "False",
          "strip_dir": "[Undefined]",
          "substitutions": "[Undefined]",
          "regexp_substitutions": "[Undefined]",
          "_outputs": "{}",
          "remove_dest_dir": "False",
          "creds_path": "[Undefined]",
          "encrypt_bucket_keys": "False",
          "bucket": "[Undefined]",
          "local_copy": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "id_string_label-GM_desc-preproc_mask_126",
        "type": "node",
        "inputs": {
          "function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
          "cfg": "C-PAC Configuration ('cpac_ccs-options')",
          "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
          "resource": "label-GM_desc-preproc_mask",
          "scan_id": "[Undefined]",
          "template_desc": "[Undefined]",
          "atlas_id": "[Undefined]",
          "fwhm": "[Undefined]",
          "subdir": "anat"
        },
        "outputs": {
          "out_filename": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "nii_label-GM_desc-preproc_mask_126",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "keep_ext": "True",
          "format_string": "[Undefined]",
          "parse_string": "[Undefined]",
          "use_fullpath": "False"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "json_label-GM_desc-preproc_mask_126",
        "type": "node",
        "inputs": {
          "function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
          "json_data": "{'CpacProvenance': [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-GM_desc-preproc_mask:tissue_seg_fsl_fast'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['desc-brain_T1w', 'space-T1w_desc-brain_mask', 'from-template_to-T1w_mode-image_desc-linear_xfm', 'CSF-path', 'GM-path', 'WM-path'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
          "filename": "[Undefined]"
        },
        "outputs": {
          "json_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "sinker_label-GM_desc-preproc_mask_126",
        "type": "node",
        "inputs": {
          "base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output",
          "container": "pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
          "parameterization": "False",
          "strip_dir": "[Undefined]",
          "substitutions": "[Undefined]",
          "regexp_substitutions": "[Undefined]",
          "_outputs": "{}",
          "remove_dest_dir": "False",
          "creds_path": "[Undefined]",
          "encrypt_bucket_keys": "False",
          "bucket": "[Undefined]",
          "local_copy": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "id_string_label-WM_desc-preproc_mask_127",
        "type": "node",
        "inputs": {
          "function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
          "cfg": "C-PAC Configuration ('cpac_ccs-options')",
          "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
          "resource": "label-WM_desc-preproc_mask",
          "scan_id": "[Undefined]",
          "template_desc": "[Undefined]",
          "atlas_id": "[Undefined]",
          "fwhm": "[Undefined]",
          "subdir": "anat"
        },
        "outputs": {
          "out_filename": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "nii_label-WM_desc-preproc_mask_127",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "keep_ext": "True",
          "format_string": "[Undefined]",
          "parse_string": "[Undefined]",
          "use_fullpath": "False"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "json_label-WM_desc-preproc_mask_127",
        "type": "node",
        "inputs": {
          "function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
          "json_data": "{'CpacProvenance': [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_desc-preproc_mask:tissue_seg_fsl_fast'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['desc-brain_T1w', 'space-T1w_desc-brain_mask', 'from-template_to-T1w_mode-image_desc-linear_xfm', 'CSF-path', 'GM-path', 'WM-path'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
          "filename": "[Undefined]"
        },
        "outputs": {
          "json_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "sinker_label-WM_desc-preproc_mask_127",
        "type": "node",
        "inputs": {
          "base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output",
          "container": "pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
          "parameterization": "False",
          "strip_dir": "[Undefined]",
          "substitutions": "[Undefined]",
          "regexp_substitutions": "[Undefined]",
          "_outputs": "{}",
          "remove_dest_dir": "False",
          "creds_path": "[Undefined]",
          "encrypt_bucket_keys": "False",
          "bucket": "[Undefined]",
          "local_copy": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "id_string_space-template_label-CSF_mask_136",
        "type": "node",
        "inputs": {
          "function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
          "cfg": "C-PAC Configuration ('cpac_ccs-options')",
          "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
          "resource": "space-template_label-CSF_mask",
          "scan_id": "[Undefined]",
          "template_desc": "MNI152NLin6ASym - T1w-based whole-head template - /usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz",
          "atlas_id": "[Undefined]",
          "fwhm": "[Undefined]",
          "subdir": "anat"
        },
        "outputs": {
          "out_filename": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "nii_space-template_label-CSF_mask_136",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "keep_ext": "True",
          "format_string": "[Undefined]",
          "parse_string": "[Undefined]",
          "use_fullpath": "False"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "json_space-template_label-CSF_mask_136",
        "type": "node",
        "inputs": {
          "function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
          "json_data": "{'CpacProvenance': [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-CSF_mask:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_mask:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-GM_mask:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_FSL_anat_to_template_FSL'], ['T1w-template:template_resample'], 'space-template_label-CSF_mask:warp_tissuemask_to_T1template'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['label-CSF_mask', 'label-WM_mask', 'label-GM_mask', 'from-T1w_to-template_mode-image_xfm', 'T1w-template'], 'Template': 'MNI152NLin6ASym - T1w-based whole-head template - /usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'Resolution': '2mm', 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
          "filename": "[Undefined]"
        },
        "outputs": {
          "json_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "sinker_space-template_label-CSF_mask_136",
        "type": "node",
        "inputs": {
          "base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output",
          "container": "pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
          "parameterization": "False",
          "strip_dir": "[Undefined]",
          "substitutions": "[Undefined]",
          "regexp_substitutions": "[Undefined]",
          "_outputs": "{}",
          "remove_dest_dir": "False",
          "creds_path": "[Undefined]",
          "encrypt_bucket_keys": "False",
          "bucket": "[Undefined]",
          "local_copy": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "id_string_space-template_label-WM_mask_137",
        "type": "node",
        "inputs": {
          "function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
          "cfg": "C-PAC Configuration ('cpac_ccs-options')",
          "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
          "resource": "space-template_label-WM_mask",
          "scan_id": "[Undefined]",
          "template_desc": "MNI152NLin6ASym - T1w-based whole-head template - /usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz",
          "atlas_id": "[Undefined]",
          "fwhm": "[Undefined]",
          "subdir": "anat"
        },
        "outputs": {
          "out_filename": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "nii_space-template_label-WM_mask_137",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "keep_ext": "True",
          "format_string": "[Undefined]",
          "parse_string": "[Undefined]",
          "use_fullpath": "False"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "json_space-template_label-WM_mask_137",
        "type": "node",
        "inputs": {
          "function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
          "json_data": "{'CpacProvenance': [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-CSF_mask:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_mask:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-GM_mask:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_FSL_anat_to_template_FSL'], ['T1w-template:template_resample'], 'space-template_label-WM_mask:warp_tissuemask_to_T1template'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['label-CSF_mask', 'label-WM_mask', 'label-GM_mask', 'from-T1w_to-template_mode-image_xfm', 'T1w-template'], 'Template': 'MNI152NLin6ASym - T1w-based whole-head template - /usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'Resolution': '2mm', 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
          "filename": "[Undefined]"
        },
        "outputs": {
          "json_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "sinker_space-template_label-WM_mask_137",
        "type": "node",
        "inputs": {
          "base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output",
          "container": "pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
          "parameterization": "False",
          "strip_dir": "[Undefined]",
          "substitutions": "[Undefined]",
          "regexp_substitutions": "[Undefined]",
          "_outputs": "{}",
          "remove_dest_dir": "False",
          "creds_path": "[Undefined]",
          "encrypt_bucket_keys": "False",
          "bucket": "[Undefined]",
          "local_copy": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "id_string_space-template_label-GM_mask_138",
        "type": "node",
        "inputs": {
          "function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
          "cfg": "C-PAC Configuration ('cpac_ccs-options')",
          "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
          "resource": "space-template_label-GM_mask",
          "scan_id": "[Undefined]",
          "template_desc": "MNI152NLin6ASym - T1w-based whole-head template - /usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz",
          "atlas_id": "[Undefined]",
          "fwhm": "[Undefined]",
          "subdir": "anat"
        },
        "outputs": {
          "out_filename": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "nii_space-template_label-GM_mask_138",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "keep_ext": "True",
          "format_string": "[Undefined]",
          "parse_string": "[Undefined]",
          "use_fullpath": "False"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "json_space-template_label-GM_mask_138",
        "type": "node",
        "inputs": {
          "function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
          "json_data": "{'CpacProvenance': [[[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-CSF_mask:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_mask:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-GM_mask:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_FSL_anat_to_template_FSL'], ['T1w-template:template_resample'], 'space-template_label-GM_mask:warp_tissuemask_to_T1template'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['label-CSF_mask', 'label-WM_mask', 'label-GM_mask', 'from-T1w_to-template_mode-image_xfm', 'T1w-template'], 'Template': 'MNI152NLin6ASym - T1w-based whole-head template - /usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'Resolution': '2mm', 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
          "filename": "[Undefined]"
        },
        "outputs": {
          "json_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "sinker_space-template_label-GM_mask_138",
        "type": "node",
        "inputs": {
          "base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output",
          "container": "pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
          "parameterization": "False",
          "strip_dir": "[Undefined]",
          "substitutions": "[Undefined]",
          "regexp_substitutions": "[Undefined]",
          "_outputs": "{}",
          "remove_dest_dir": "False",
          "creds_path": "[Undefined]",
          "encrypt_bucket_keys": "False",
          "bucket": "[Undefined]",
          "local_copy": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "id_string_desc-preproc_bold_235",
        "type": "node",
        "inputs": {
          "function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
          "cfg": "C-PAC Configuration ('cpac_ccs-options')",
          "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
          "resource": "desc-preproc_bold",
          "scan_id": "[Undefined]",
          "template_desc": "[Undefined]",
          "atlas_id": "[Undefined]",
          "fwhm": "[Undefined]",
          "subdir": "func"
        },
        "outputs": {
          "out_filename": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "nii_desc-preproc_bold_235",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "keep_ext": "True",
          "format_string": "[Undefined]",
          "parse_string": "[Undefined]",
          "use_fullpath": "False"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "json_desc-preproc_bold_235",
        "type": "node",
        "inputs": {
          "function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
          "json_data": "{'CpacProvenance': [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-preproc_bold:bold_masking', 'desc-preproc_bold:func_normalize'], [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-stc_bold:func_slice_time'], ['bold:func_ingress'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], ['pe-direction:func_metadata_ingress'], 'desc-preproc_bold:apply_phasediff_to_timeseries_separately_default'], [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-stc_bold:func_slice_time'], ['bold:func_ingress'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_FSL_anat_to_template_FSL'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-brain-template-funcreg:template_resample'], 'from-bold_to-template_mode-image_xfm:create_func_to_T1template_xfm'], 'desc-preproc_bold:apply_blip_to_timeseries_separately_default'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer'], 'bold': ['apply_phasediff_to_timeseries_separately_default', 'apply_blip_to_timeseries_separately_default']}, 'SkullStripped': True, 'Sources': ['sbref', 'desc-preproc_bold', 'desc-stc_bold', 'bold', 'from-bold_to-template_mode-image_xfm'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
          "filename": "[Undefined]"
        },
        "outputs": {
          "json_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "sinker_desc-preproc_bold_235",
        "type": "node",
        "inputs": {
          "base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output",
          "container": "pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
          "parameterization": "False",
          "strip_dir": "[Undefined]",
          "substitutions": "[Undefined]",
          "regexp_substitutions": "[Undefined]",
          "_outputs": "{}",
          "remove_dest_dir": "False",
          "creds_path": "[Undefined]",
          "encrypt_bucket_keys": "False",
          "bucket": "[Undefined]",
          "local_copy": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "id_string_desc-mean_bold_148",
        "type": "node",
        "inputs": {
          "function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
          "cfg": "C-PAC Configuration ('cpac_ccs-options')",
          "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
          "resource": "desc-mean_bold",
          "scan_id": "[Undefined]",
          "template_desc": "[Undefined]",
          "atlas_id": "[Undefined]",
          "fwhm": "[Undefined]",
          "subdir": "func"
        },
        "outputs": {
          "out_filename": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "nii_desc-mean_bold_148",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "keep_ext": "True",
          "format_string": "[Undefined]",
          "parse_string": "[Undefined]",
          "use_fullpath": "False"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "json_desc-mean_bold_148",
        "type": "node",
        "inputs": {
          "function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
          "json_data": "{'CpacProvenance': [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time', 'desc-mean_bold:func_mean'], 'Sources': ['desc-preproc_bold'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
          "filename": "[Undefined]"
        },
        "outputs": {
          "json_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "sinker_desc-mean_bold_148",
        "type": "node",
        "inputs": {
          "base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output",
          "container": "pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
          "parameterization": "False",
          "strip_dir": "[Undefined]",
          "substitutions": "[Undefined]",
          "regexp_substitutions": "[Undefined]",
          "_outputs": "{}",
          "remove_dest_dir": "False",
          "creds_path": "[Undefined]",
          "encrypt_bucket_keys": "False",
          "bucket": "[Undefined]",
          "local_copy": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "id_string_desc-movementParameters_motion_157",
        "type": "node",
        "inputs": {
          "function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
          "cfg": "C-PAC Configuration ('cpac_ccs-options')",
          "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
          "resource": "desc-movementParameters_motion",
          "scan_id": "[Undefined]",
          "template_desc": "[Undefined]",
          "atlas_id": "[Undefined]",
          "fwhm": "[Undefined]",
          "subdir": "func"
        },
        "outputs": {
          "out_filename": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "nii_desc-movementParameters_motion_157",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "keep_ext": "True",
          "format_string": "[Undefined]",
          "parse_string": "[Undefined]",
          "use_fullpath": "False"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "json_desc-movementParameters_motion_157",
        "type": "node",
        "inputs": {
          "function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
          "json_data": "{'CpacProvenance': [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], 'Sources': ['desc-preproc_bold', 'motion-basefile'], 'Description': \"Each line contains for one timepoint a 6-DOF rigid transform parameters in the format defined by AFNI's 3dvolreg: [roll, pitch, yaw, superior displacement, left displacement, posterior displacement]. Rotation parameters are in degrees counterclockwise, and translation parameters are in millimeters.\", 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
          "filename": "[Undefined]"
        },
        "outputs": {
          "json_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "sinker_desc-movementParameters_motion_157",
        "type": "node",
        "inputs": {
          "base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output",
          "container": "pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
          "parameterization": "False",
          "strip_dir": "[Undefined]",
          "substitutions": "[Undefined]",
          "regexp_substitutions": "[Undefined]",
          "_outputs": "{}",
          "remove_dest_dir": "False",
          "creds_path": "[Undefined]",
          "encrypt_bucket_keys": "False",
          "bucket": "[Undefined]",
          "local_copy": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "id_string_space-bold_desc-brain_mask_163",
        "type": "node",
        "inputs": {
          "function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
          "cfg": "C-PAC Configuration ('cpac_ccs-options')",
          "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
          "resource": "space-bold_desc-brain_mask",
          "scan_id": "[Undefined]",
          "template_desc": "[Undefined]",
          "atlas_id": "[Undefined]",
          "fwhm": "[Undefined]",
          "subdir": "func"
        },
        "outputs": {
          "out_filename": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "nii_space-bold_desc-brain_mask_163",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "keep_ext": "True",
          "format_string": "[Undefined]",
          "parse_string": "[Undefined]",
          "use_fullpath": "False"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "json_space-bold_desc-brain_mask_163",
        "type": "node",
        "inputs": {
          "function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
          "json_data": "{'CpacProvenance': [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['desc-motion_bold', 'desc-brain_T1w', 'desc-preproc_T1w'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
          "filename": "[Undefined]"
        },
        "outputs": {
          "json_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "sinker_space-bold_desc-brain_mask_163",
        "type": "node",
        "inputs": {
          "base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output",
          "container": "pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
          "parameterization": "False",
          "strip_dir": "[Undefined]",
          "substitutions": "[Undefined]",
          "regexp_substitutions": "[Undefined]",
          "_outputs": "{}",
          "remove_dest_dir": "False",
          "creds_path": "[Undefined]",
          "encrypt_bucket_keys": "False",
          "bucket": "[Undefined]",
          "local_copy": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "id_string_motion_182",
        "type": "node",
        "inputs": {
          "function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
          "cfg": "C-PAC Configuration ('cpac_ccs-options')",
          "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
          "resource": "motion",
          "scan_id": "[Undefined]",
          "template_desc": "[Undefined]",
          "atlas_id": "[Undefined]",
          "fwhm": "[Undefined]",
          "subdir": "func"
        },
        "outputs": {
          "out_filename": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "nii_motion_182",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "keep_ext": "True",
          "format_string": "[Undefined]",
          "parse_string": "[Undefined]",
          "use_fullpath": "False"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "json_motion_182",
        "type": "node",
        "inputs": {
          "function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
          "json_data": "{'CpacProvenance': [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-preproc_bold:bold_masking'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'motion:calc_motion_stats'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['desc-preproc_bold', 'space-bold_desc-brain_mask', 'desc-movementParameters_motion', 'max-displacement', 'filtered-coordinate-transformation', 'coordinate-transformation', 'subject', 'scan'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
          "filename": "[Undefined]"
        },
        "outputs": {
          "json_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "sinker_motion_182",
        "type": "node",
        "inputs": {
          "base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output",
          "container": "pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
          "parameterization": "False",
          "strip_dir": "[Undefined]",
          "substitutions": "[Undefined]",
          "regexp_substitutions": "[Undefined]",
          "_outputs": "{}",
          "remove_dest_dir": "False",
          "creds_path": "[Undefined]",
          "encrypt_bucket_keys": "False",
          "bucket": "[Undefined]",
          "local_copy": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "id_string_desc-summary_motion_183",
        "type": "node",
        "inputs": {
          "function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
          "cfg": "C-PAC Configuration ('cpac_ccs-options')",
          "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
          "resource": "desc-summary_motion",
          "scan_id": "[Undefined]",
          "template_desc": "[Undefined]",
          "atlas_id": "[Undefined]",
          "fwhm": "[Undefined]",
          "subdir": "func"
        },
        "outputs": {
          "out_filename": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "nii_desc-summary_motion_183",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "keep_ext": "True",
          "format_string": "[Undefined]",
          "parse_string": "[Undefined]",
          "use_fullpath": "False"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "json_desc-summary_motion_183",
        "type": "node",
        "inputs": {
          "function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
          "json_data": "{'CpacProvenance': [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-preproc_bold:bold_masking'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'desc-summary_motion:calc_motion_stats'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['desc-preproc_bold', 'space-bold_desc-brain_mask', 'desc-movementParameters_motion', 'max-displacement', 'filtered-coordinate-transformation', 'coordinate-transformation', 'subject', 'scan'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
          "filename": "[Undefined]"
        },
        "outputs": {
          "json_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "sinker_desc-summary_motion_183",
        "type": "node",
        "inputs": {
          "base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output",
          "container": "pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
          "parameterization": "False",
          "strip_dir": "[Undefined]",
          "substitutions": "[Undefined]",
          "regexp_substitutions": "[Undefined]",
          "_outputs": "{}",
          "remove_dest_dir": "False",
          "creds_path": "[Undefined]",
          "encrypt_bucket_keys": "False",
          "bucket": "[Undefined]",
          "local_copy": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "id_string_sbref_187",
        "type": "node",
        "inputs": {
          "function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
          "cfg": "C-PAC Configuration ('cpac_ccs-options')",
          "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
          "resource": "sbref",
          "scan_id": "[Undefined]",
          "template_desc": "[Undefined]",
          "atlas_id": "[Undefined]",
          "fwhm": "[Undefined]",
          "subdir": "func"
        },
        "outputs": {
          "out_filename": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "nii_sbref_187",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "keep_ext": "True",
          "format_string": "[Undefined]",
          "parse_string": "[Undefined]",
          "use_fullpath": "False"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "json_sbref_187",
        "type": "node",
        "inputs": {
          "function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
          "json_data": "{'CpacProvenance': [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['desc-brain_bold', 'desc-motion_bold'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
          "filename": "[Undefined]"
        },
        "outputs": {
          "json_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "sinker_sbref_187",
        "type": "node",
        "inputs": {
          "base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output",
          "container": "pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
          "parameterization": "False",
          "strip_dir": "[Undefined]",
          "substitutions": "[Undefined]",
          "regexp_substitutions": "[Undefined]",
          "_outputs": "{}",
          "remove_dest_dir": "False",
          "creds_path": "[Undefined]",
          "encrypt_bucket_keys": "False",
          "bucket": "[Undefined]",
          "local_copy": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "id_string_space-T1w_sbref_195",
        "type": "node",
        "inputs": {
          "function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
          "cfg": "C-PAC Configuration ('cpac_ccs-options')",
          "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
          "resource": "space-T1w_sbref",
          "scan_id": "[Undefined]",
          "template_desc": "[Undefined]",
          "atlas_id": "[Undefined]",
          "fwhm": "[Undefined]",
          "subdir": "func"
        },
        "outputs": {
          "out_filename": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "nii_space-T1w_sbref_195",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "keep_ext": "True",
          "format_string": "[Undefined]",
          "parse_string": "[Undefined]",
          "use_fullpath": "False"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "json_space-T1w_sbref_195",
        "type": "node",
        "inputs": {
          "function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
          "json_data": "{'CpacProvenance': [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'space-T1w_sbref:coregistration'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['sbref', 'desc-motion_bold', 'pe-direction', 'desc-preproc_T1w', 'label-WM_probseg', 'label-WM_pveseg', 'desc-head_T1w'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
          "filename": "[Undefined]"
        },
        "outputs": {
          "json_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "sinker_space-T1w_sbref_195",
        "type": "node",
        "inputs": {
          "base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output",
          "container": "pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
          "parameterization": "False",
          "strip_dir": "[Undefined]",
          "substitutions": "[Undefined]",
          "regexp_substitutions": "[Undefined]",
          "_outputs": "{}",
          "remove_dest_dir": "False",
          "creds_path": "[Undefined]",
          "encrypt_bucket_keys": "False",
          "bucket": "[Undefined]",
          "local_copy": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "id_string_from-bold_to-T1w_mode-image_desc-linear_xfm_196",
        "type": "node",
        "inputs": {
          "function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
          "cfg": "C-PAC Configuration ('cpac_ccs-options')",
          "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
          "resource": "from-bold_to-T1w_mode-image_desc-linear_xfm",
          "scan_id": "[Undefined]",
          "template_desc": "[Undefined]",
          "atlas_id": "[Undefined]",
          "fwhm": "[Undefined]",
          "subdir": "func"
        },
        "outputs": {
          "out_filename": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "nii_from-bold_to-T1w_mode-image_desc-linear_xfm_196",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "keep_ext": "True",
          "format_string": "[Undefined]",
          "parse_string": "[Undefined]",
          "use_fullpath": "False"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "json_from-bold_to-T1w_mode-image_desc-linear_xfm_196",
        "type": "node",
        "inputs": {
          "function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
          "json_data": "{'CpacProvenance': [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['sbref', 'desc-motion_bold', 'pe-direction', 'desc-preproc_T1w', 'label-WM_probseg', 'label-WM_pveseg', 'desc-head_T1w'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
          "filename": "[Undefined]"
        },
        "outputs": {
          "json_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "sinker_from-bold_to-T1w_mode-image_desc-linear_xfm_196",
        "type": "node",
        "inputs": {
          "base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output",
          "container": "pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
          "parameterization": "False",
          "strip_dir": "[Undefined]",
          "substitutions": "[Undefined]",
          "regexp_substitutions": "[Undefined]",
          "_outputs": "{}",
          "remove_dest_dir": "False",
          "creds_path": "[Undefined]",
          "encrypt_bucket_keys": "False",
          "bucket": "[Undefined]",
          "local_copy": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "id_string_from-bold_to-template_mode-image_xfm_202",
        "type": "node",
        "inputs": {
          "function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
          "cfg": "C-PAC Configuration ('cpac_ccs-options')",
          "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
          "resource": "from-bold_to-template_mode-image_xfm",
          "scan_id": "[Undefined]",
          "template_desc": "MNI152NLin6ASym - T1w-based skull-stripped template resampled to the desired preprocessed-functional resolution - /usr/share/fsl/6.0/data/standard/MNI152_T1_3mm_brain.nii.gz",
          "atlas_id": "[Undefined]",
          "fwhm": "[Undefined]",
          "subdir": "func"
        },
        "outputs": {
          "out_filename": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "nii_from-bold_to-template_mode-image_xfm_202",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "keep_ext": "True",
          "format_string": "[Undefined]",
          "parse_string": "[Undefined]",
          "use_fullpath": "False"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "json_from-bold_to-template_mode-image_xfm_202",
        "type": "node",
        "inputs": {
          "function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
          "json_data": "{'CpacProvenance': [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_FSL_anat_to_template_FSL'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-brain-template-funcreg:template_resample'], 'from-bold_to-template_mode-image_xfm:create_func_to_T1template_xfm'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['sbref', 'from-bold_to-T1w_mode-image_desc-linear_xfm', 'from-T1w_to-template_mode-image_xfm', 'desc-brain_T1w', 'T1w-brain-template-funcreg'], 'Template': 'MNI152NLin6ASym - T1w-based skull-stripped template resampled to the desired preprocessed-functional resolution - /usr/share/fsl/6.0/data/standard/MNI152_T1_3mm_brain.nii.gz', 'Resolution': '3mm', 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
          "filename": "[Undefined]"
        },
        "outputs": {
          "json_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "sinker_from-bold_to-template_mode-image_xfm_202",
        "type": "node",
        "inputs": {
          "base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output",
          "container": "pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
          "parameterization": "False",
          "strip_dir": "[Undefined]",
          "substitutions": "[Undefined]",
          "regexp_substitutions": "[Undefined]",
          "_outputs": "{}",
          "remove_dest_dir": "False",
          "creds_path": "[Undefined]",
          "encrypt_bucket_keys": "False",
          "bucket": "[Undefined]",
          "local_copy": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "id_string_desc-confounds-1_timeseries_219",
        "type": "node",
        "inputs": {
          "function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
          "cfg": "C-PAC Configuration ('cpac_ccs-options')",
          "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
          "resource": "desc-confounds-1_timeseries",
          "scan_id": "[Undefined]",
          "template_desc": "[Undefined]",
          "atlas_id": "[Undefined]",
          "fwhm": "[Undefined]",
          "subdir": "func"
        },
        "outputs": {
          "out_filename": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "nii_desc-confounds-1_timeseries_219",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "keep_ext": "True",
          "format_string": "[Undefined]",
          "parse_string": "[Undefined]",
          "use_fullpath": "False"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "json_desc-confounds-1_timeseries_219",
        "type": "node",
        "inputs": {
          "function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
          "json_data": "{'CpacProvenance': [['lateral-ventricles-mask:lateral-ventricles-mask_config_ingress'], ['TR:func_metadata_ingress'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-preproc_bold:bold_masking'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-jenkinson:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-preproc_bold:bold_masking'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-power:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-preproc_bold:bold_masking'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'dvars:calc_motion_stats'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-CSF_desc-preproc_mask:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_desc-preproc_mask:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-GM_desc-preproc_mask:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-T1w_to-template_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-preproc_bold:bold_masking', 'desc-preproc_bold:func_normalize'], 'desc-confounds_timeseries:nuisance_regressors_generation_T1w_Regressor_1'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer'], 'timeseries': ['nuisance_regressors_generation_T1w_Regressor_1']}, 'Sources': ['lateral-ventricles-mask', 'TR', 'space-bold_desc-brain_mask', 'from-bold_to-T1w_mode-image_desc-linear_xfm', 'desc-movementParameters_motion', 'framewise-displacement-jenkinson', 'framewise-displacement-power', 'dvars', 'desc-brain_T1w', 'space-T1w_desc-brain_mask', 'label-CSF_desc-preproc_mask', 'label-WM_desc-preproc_mask', 'label-GM_desc-preproc_mask', 'from-template_to-T1w_mode-image_desc-linear_xfm', 'from-T1w_to-template_mode-image_desc-linear_xfm'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
          "filename": "[Undefined]"
        },
        "outputs": {
          "json_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "sinker_desc-confounds-1_timeseries_219",
        "type": "node",
        "inputs": {
          "base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output",
          "container": "pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
          "parameterization": "False",
          "strip_dir": "[Undefined]",
          "substitutions": "[Undefined]",
          "regexp_substitutions": "[Undefined]",
          "_outputs": "{}",
          "remove_dest_dir": "False",
          "creds_path": "[Undefined]",
          "encrypt_bucket_keys": "False",
          "bucket": "[Undefined]",
          "local_copy": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "id_string_desc-confounds-2_timeseries_221",
        "type": "node",
        "inputs": {
          "function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
          "cfg": "C-PAC Configuration ('cpac_ccs-options')",
          "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
          "resource": "desc-confounds-2_timeseries",
          "scan_id": "[Undefined]",
          "template_desc": "[Undefined]",
          "atlas_id": "[Undefined]",
          "fwhm": "[Undefined]",
          "subdir": "func"
        },
        "outputs": {
          "out_filename": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "nii_desc-confounds-2_timeseries_221",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "keep_ext": "True",
          "format_string": "[Undefined]",
          "parse_string": "[Undefined]",
          "use_fullpath": "False"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "json_desc-confounds-2_timeseries_221",
        "type": "node",
        "inputs": {
          "function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
          "json_data": "{'CpacProvenance': [['lateral-ventricles-mask:lateral-ventricles-mask_config_ingress'], ['TR:func_metadata_ingress'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-preproc_bold:bold_masking'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-jenkinson:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-preproc_bold:bold_masking'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-power:calc_motion_stats'], [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-preproc_bold:bold_masking'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'dvars:calc_motion_stats'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-CSF_desc-preproc_mask:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_desc-preproc_mask:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-GM_desc-preproc_mask:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-T1w_to-template_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-preproc_bold:bold_masking', 'desc-preproc_bold:func_normalize'], 'desc-confounds_timeseries:nuisance_regressors_generation_T1w_Regressor_2'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer'], 'timeseries': ['nuisance_regressors_generation_T1w_Regressor_2']}, 'Sources': ['lateral-ventricles-mask', 'TR', 'space-bold_desc-brain_mask', 'from-bold_to-T1w_mode-image_desc-linear_xfm', 'desc-movementParameters_motion', 'framewise-displacement-jenkinson', 'framewise-displacement-power', 'dvars', 'desc-brain_T1w', 'space-T1w_desc-brain_mask', 'label-CSF_desc-preproc_mask', 'label-WM_desc-preproc_mask', 'label-GM_desc-preproc_mask', 'from-template_to-T1w_mode-image_desc-linear_xfm', 'from-T1w_to-template_mode-image_desc-linear_xfm'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
          "filename": "[Undefined]"
        },
        "outputs": {
          "json_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "sinker_desc-confounds-2_timeseries_221",
        "type": "node",
        "inputs": {
          "base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output",
          "container": "pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
          "parameterization": "False",
          "strip_dir": "[Undefined]",
          "substitutions": "[Undefined]",
          "regexp_substitutions": "[Undefined]",
          "_outputs": "{}",
          "remove_dest_dir": "False",
          "creds_path": "[Undefined]",
          "encrypt_bucket_keys": "False",
          "bucket": "[Undefined]",
          "local_copy": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "id_string_space-template_desc-preproc_bold_239",
        "type": "node",
        "inputs": {
          "function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
          "cfg": "C-PAC Configuration ('cpac_ccs-options')",
          "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
          "resource": "space-template_desc-preproc_bold",
          "scan_id": "[Undefined]",
          "template_desc": "MNI152NLin6ASym - T1w-based skull-stripped template resampled to the desired preprocessed-functional resolution - /usr/share/fsl/6.0/data/standard/MNI152_T1_3mm_brain.nii.gz",
          "atlas_id": "[Undefined]",
          "fwhm": "[Undefined]",
          "subdir": "func"
        },
        "outputs": {
          "out_filename": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "nii_space-template_desc-preproc_bold_239",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "keep_ext": "True",
          "format_string": "[Undefined]",
          "parse_string": "[Undefined]",
          "use_fullpath": "False"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "json_space-template_desc-preproc_bold_239",
        "type": "node",
        "inputs": {
          "function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
          "json_data": "{'CpacProvenance': [[[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-preproc_bold:bold_masking', 'desc-preproc_bold:func_normalize'], [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-stc_bold:func_slice_time'], ['bold:func_ingress'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], ['pe-direction:func_metadata_ingress'], 'desc-preproc_bold:apply_phasediff_to_timeseries_separately_default'], [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-stc_bold:func_slice_time'], ['bold:func_ingress'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_FSL_anat_to_template_FSL'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-brain-template-funcreg:template_resample'], 'from-bold_to-template_mode-image_xfm:create_func_to_T1template_xfm'], 'desc-preproc_bold:apply_blip_to_timeseries_separately_default'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_FSL_anat_to_template_FSL'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-brain-template-funcreg:template_resample'], 'from-bold_to-template_mode-image_xfm:create_func_to_T1template_xfm'], ['T1w-brain-template-funcreg:template_resample'], 'space-template_desc-preproc_bold:transform_timeseries_to_T1template'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer'], 'bold': ['apply_phasediff_to_timeseries_separately_default', 'apply_blip_to_timeseries_separately_default'], 'space-template_bold': ['transform_timeseries_to_T1template']}, 'SkullStripped': True, 'Sources': ['desc-preproc_bold', 'from-bold_to-template_mode-image_xfm', 'T1w-brain-template-funcreg'], 'Template': 'MNI152NLin6ASym - T1w-based skull-stripped template resampled to the desired preprocessed-functional resolution - /usr/share/fsl/6.0/data/standard/MNI152_T1_3mm_brain.nii.gz', 'Resolution': '3mm', 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
          "filename": "[Undefined]"
        },
        "outputs": {
          "json_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "sinker_space-template_desc-preproc_bold_239",
        "type": "node",
        "inputs": {
          "base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output",
          "container": "pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
          "parameterization": "False",
          "strip_dir": "[Undefined]",
          "substitutions": "[Undefined]",
          "regexp_substitutions": "[Undefined]",
          "_outputs": "{}",
          "remove_dest_dir": "False",
          "creds_path": "[Undefined]",
          "encrypt_bucket_keys": "False",
          "bucket": "[Undefined]",
          "local_copy": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "id_string_space-template_sbref_243",
        "type": "node",
        "inputs": {
          "function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
          "cfg": "C-PAC Configuration ('cpac_ccs-options')",
          "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
          "resource": "space-template_sbref",
          "scan_id": "[Undefined]",
          "template_desc": "MNI152NLin6ASym - T1w-based skull-stripped template resampled to the desired preprocessed-functional resolution - /usr/share/fsl/6.0/data/standard/MNI152_T1_3mm_brain.nii.gz",
          "atlas_id": "[Undefined]",
          "fwhm": "[Undefined]",
          "subdir": "func"
        },
        "outputs": {
          "out_filename": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "nii_space-template_sbref_243",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "keep_ext": "True",
          "format_string": "[Undefined]",
          "parse_string": "[Undefined]",
          "use_fullpath": "False"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "json_space-template_sbref_243",
        "type": "node",
        "inputs": {
          "function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
          "json_data": "{'CpacProvenance': [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_FSL_anat_to_template_FSL'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-brain-template-funcreg:template_resample'], 'from-bold_to-template_mode-image_xfm:create_func_to_T1template_xfm'], ['T1w-brain-template-funcreg:template_resample'], 'space-template_sbref:transform_sbref_to_T1template'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['sbref', 'from-bold_to-template_mode-image_xfm', 'T1w-brain-template-funcreg'], 'Description': 'Single-volume sbref of the BOLD time-series transformed to template space.', 'Template': 'MNI152NLin6ASym - T1w-based skull-stripped template resampled to the desired preprocessed-functional resolution - /usr/share/fsl/6.0/data/standard/MNI152_T1_3mm_brain.nii.gz', 'Resolution': '3mm', 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
          "filename": "[Undefined]"
        },
        "outputs": {
          "json_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "sinker_space-template_sbref_243",
        "type": "node",
        "inputs": {
          "base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output",
          "container": "pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
          "parameterization": "False",
          "strip_dir": "[Undefined]",
          "substitutions": "[Undefined]",
          "regexp_substitutions": "[Undefined]",
          "_outputs": "{}",
          "remove_dest_dir": "False",
          "creds_path": "[Undefined]",
          "encrypt_bucket_keys": "False",
          "bucket": "[Undefined]",
          "local_copy": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "id_string_space-template_desc-bold_mask_247",
        "type": "node",
        "inputs": {
          "function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
          "cfg": "C-PAC Configuration ('cpac_ccs-options')",
          "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
          "resource": "space-template_desc-bold_mask",
          "scan_id": "[Undefined]",
          "template_desc": "MNI152NLin6ASym - T1w-based skull-stripped template resampled to the desired preprocessed-functional resolution - /usr/share/fsl/6.0/data/standard/MNI152_T1_3mm_brain.nii.gz",
          "atlas_id": "[Undefined]",
          "fwhm": "[Undefined]",
          "subdir": "func"
        },
        "outputs": {
          "out_filename": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "nii_space-template_desc-bold_mask_247",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "keep_ext": "True",
          "format_string": "[Undefined]",
          "parse_string": "[Undefined]",
          "use_fullpath": "False"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "json_space-template_desc-bold_mask_247",
        "type": "node",
        "inputs": {
          "function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
          "json_data": "{'CpacProvenance': [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_FSL_anat_to_template_FSL'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-brain-template-funcreg:template_resample'], 'from-bold_to-template_mode-image_xfm:create_func_to_T1template_xfm'], ['T1w-brain-template-funcreg:template_resample'], 'space-template_desc-bold_mask:transform_bold_mask_to_T1template_default'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['space-bold_desc-brain_mask', 'from-bold_to-template_mode-image_xfm', 'T1w-brain-template-funcreg'], 'Template': 'MNI152NLin6ASym - T1w-based skull-stripped template resampled to the desired preprocessed-functional resolution - /usr/share/fsl/6.0/data/standard/MNI152_T1_3mm_brain.nii.gz', 'Resolution': '3mm', 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
          "filename": "[Undefined]"
        },
        "outputs": {
          "json_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "sinker_space-template_desc-bold_mask_247",
        "type": "node",
        "inputs": {
          "base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output",
          "container": "pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
          "parameterization": "False",
          "strip_dir": "[Undefined]",
          "substitutions": "[Undefined]",
          "regexp_substitutions": "[Undefined]",
          "_outputs": "{}",
          "remove_dest_dir": "False",
          "creds_path": "[Undefined]",
          "encrypt_bucket_keys": "False",
          "bucket": "[Undefined]",
          "local_copy": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "id_string_space-template_res-derivative_desc-bold_mask_251",
        "type": "node",
        "inputs": {
          "function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
          "cfg": "C-PAC Configuration ('cpac_ccs-options')",
          "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
          "resource": "space-template_res-derivative_desc-bold_mask",
          "scan_id": "[Undefined]",
          "template_desc": "MNI152NLin6ASym - T1w-based skull-stripped template resampled to the desired functional derivative resolution - /usr/share/fsl/6.0/data/standard/MNI152_T1_3mm_brain.nii.gz",
          "atlas_id": "[Undefined]",
          "fwhm": "[Undefined]",
          "subdir": "func"
        },
        "outputs": {
          "out_filename": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "nii_space-template_res-derivative_desc-bold_mask_251",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "keep_ext": "True",
          "format_string": "[Undefined]",
          "parse_string": "[Undefined]",
          "use_fullpath": "False"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "json_space-template_res-derivative_desc-bold_mask_251",
        "type": "node",
        "inputs": {
          "function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
          "json_data": "{'CpacProvenance': [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_FSL_anat_to_template_FSL'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-brain-template-funcreg:template_resample'], 'from-bold_to-template_mode-image_xfm:create_func_to_T1template_xfm'], ['T1w-brain-template-deriv:template_resample'], 'space-template_res-derivative_desc-bold_mask:transform_deriv_mask_to_T1template_default'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['space-bold_desc-brain_mask', 'from-bold_to-template_mode-image_xfm', 'T1w-brain-template-deriv'], 'Template': 'MNI152NLin6ASym - T1w-based skull-stripped template resampled to the desired functional derivative resolution - /usr/share/fsl/6.0/data/standard/MNI152_T1_3mm_brain.nii.gz', 'Resolution': '3mm', 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
          "filename": "[Undefined]"
        },
        "outputs": {
          "json_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "sinker_space-template_res-derivative_desc-bold_mask_251",
        "type": "node",
        "inputs": {
          "base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output",
          "container": "pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
          "parameterization": "False",
          "strip_dir": "[Undefined]",
          "substitutions": "[Undefined]",
          "regexp_substitutions": "[Undefined]",
          "_outputs": "{}",
          "remove_dest_dir": "False",
          "creds_path": "[Undefined]",
          "encrypt_bucket_keys": "False",
          "bucket": "[Undefined]",
          "local_copy": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "id_string_desc-boldSnrAxial_quality_257",
        "type": "node",
        "inputs": {
          "function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
          "cfg": "C-PAC Configuration ('cpac_ccs-options')",
          "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
          "resource": "desc-boldSnrAxial_quality",
          "scan_id": "[Undefined]",
          "template_desc": "[Undefined]",
          "atlas_id": "[Undefined]",
          "fwhm": "[Undefined]",
          "subdir": "func"
        },
        "outputs": {
          "out_filename": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "nii_desc-boldSnrAxial_quality_257",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "keep_ext": "True",
          "format_string": "[Undefined]",
          "parse_string": "[Undefined]",
          "use_fullpath": "False"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "json_desc-boldSnrAxial_quality_257",
        "type": "node",
        "inputs": {
          "function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
          "json_data": "{'CpacProvenance': [[[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-preproc_bold:bold_masking', 'desc-preproc_bold:func_normalize'], [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-stc_bold:func_slice_time'], ['bold:func_ingress'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], ['pe-direction:func_metadata_ingress'], 'desc-preproc_bold:apply_phasediff_to_timeseries_separately_default'], [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-stc_bold:func_slice_time'], ['bold:func_ingress'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_FSL_anat_to_template_FSL'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-brain-template-funcreg:template_resample'], 'from-bold_to-template_mode-image_xfm:create_func_to_T1template_xfm'], 'desc-preproc_bold:apply_blip_to_timeseries_separately_default'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'space-T1w_sbref:coregistration'], 'desc-boldSnrAxial_quality:qc_snr_plot'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer'], 'bold': ['apply_phasediff_to_timeseries_separately_default', 'apply_blip_to_timeseries_separately_default']}, 'Sources': ['desc-preproc_bold', 'space-bold_desc-brain_mask', 'from-bold_to-T1w_mode-image_desc-linear_xfm', 'desc-preproc_T1w', 'space-T1w_sbref'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
          "filename": "[Undefined]"
        },
        "outputs": {
          "json_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "sinker_desc-boldSnrAxial_quality_257",
        "type": "node",
        "inputs": {
          "base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output",
          "container": "pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
          "parameterization": "False",
          "strip_dir": "[Undefined]",
          "substitutions": "[Undefined]",
          "regexp_substitutions": "[Undefined]",
          "_outputs": "{}",
          "remove_dest_dir": "False",
          "creds_path": "[Undefined]",
          "encrypt_bucket_keys": "False",
          "bucket": "[Undefined]",
          "local_copy": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "id_string_desc-boldSnrSagittal_quality_258",
        "type": "node",
        "inputs": {
          "function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
          "cfg": "C-PAC Configuration ('cpac_ccs-options')",
          "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
          "resource": "desc-boldSnrSagittal_quality",
          "scan_id": "[Undefined]",
          "template_desc": "[Undefined]",
          "atlas_id": "[Undefined]",
          "fwhm": "[Undefined]",
          "subdir": "func"
        },
        "outputs": {
          "out_filename": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "nii_desc-boldSnrSagittal_quality_258",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "keep_ext": "True",
          "format_string": "[Undefined]",
          "parse_string": "[Undefined]",
          "use_fullpath": "False"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "json_desc-boldSnrSagittal_quality_258",
        "type": "node",
        "inputs": {
          "function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
          "json_data": "{'CpacProvenance': [[[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-preproc_bold:bold_masking', 'desc-preproc_bold:func_normalize'], [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-stc_bold:func_slice_time'], ['bold:func_ingress'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], ['pe-direction:func_metadata_ingress'], 'desc-preproc_bold:apply_phasediff_to_timeseries_separately_default'], [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-stc_bold:func_slice_time'], ['bold:func_ingress'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_FSL_anat_to_template_FSL'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-brain-template-funcreg:template_resample'], 'from-bold_to-template_mode-image_xfm:create_func_to_T1template_xfm'], 'desc-preproc_bold:apply_blip_to_timeseries_separately_default'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'space-T1w_sbref:coregistration'], 'desc-boldSnrSagittal_quality:qc_snr_plot'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer'], 'bold': ['apply_phasediff_to_timeseries_separately_default', 'apply_blip_to_timeseries_separately_default']}, 'Sources': ['desc-preproc_bold', 'space-bold_desc-brain_mask', 'from-bold_to-T1w_mode-image_desc-linear_xfm', 'desc-preproc_T1w', 'space-T1w_sbref'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
          "filename": "[Undefined]"
        },
        "outputs": {
          "json_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "sinker_desc-boldSnrSagittal_quality_258",
        "type": "node",
        "inputs": {
          "base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output",
          "container": "pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
          "parameterization": "False",
          "strip_dir": "[Undefined]",
          "substitutions": "[Undefined]",
          "regexp_substitutions": "[Undefined]",
          "_outputs": "{}",
          "remove_dest_dir": "False",
          "creds_path": "[Undefined]",
          "encrypt_bucket_keys": "False",
          "bucket": "[Undefined]",
          "local_copy": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "id_string_desc-boldSnrHist_quality_259",
        "type": "node",
        "inputs": {
          "function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
          "cfg": "C-PAC Configuration ('cpac_ccs-options')",
          "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
          "resource": "desc-boldSnrHist_quality",
          "scan_id": "[Undefined]",
          "template_desc": "[Undefined]",
          "atlas_id": "[Undefined]",
          "fwhm": "[Undefined]",
          "subdir": "func"
        },
        "outputs": {
          "out_filename": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "nii_desc-boldSnrHist_quality_259",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "keep_ext": "True",
          "format_string": "[Undefined]",
          "parse_string": "[Undefined]",
          "use_fullpath": "False"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "json_desc-boldSnrHist_quality_259",
        "type": "node",
        "inputs": {
          "function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
          "json_data": "{'CpacProvenance': [[[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-preproc_bold:bold_masking', 'desc-preproc_bold:func_normalize'], [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-stc_bold:func_slice_time'], ['bold:func_ingress'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], ['pe-direction:func_metadata_ingress'], 'desc-preproc_bold:apply_phasediff_to_timeseries_separately_default'], [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-stc_bold:func_slice_time'], ['bold:func_ingress'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_FSL_anat_to_template_FSL'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-brain-template-funcreg:template_resample'], 'from-bold_to-template_mode-image_xfm:create_func_to_T1template_xfm'], 'desc-preproc_bold:apply_blip_to_timeseries_separately_default'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'space-T1w_sbref:coregistration'], 'desc-boldSnrHist_quality:qc_snr_plot'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer'], 'bold': ['apply_phasediff_to_timeseries_separately_default', 'apply_blip_to_timeseries_separately_default']}, 'Sources': ['desc-preproc_bold', 'space-bold_desc-brain_mask', 'from-bold_to-T1w_mode-image_desc-linear_xfm', 'desc-preproc_T1w', 'space-T1w_sbref'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
          "filename": "[Undefined]"
        },
        "outputs": {
          "json_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "sinker_desc-boldSnrHist_quality_259",
        "type": "node",
        "inputs": {
          "base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output",
          "container": "pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
          "parameterization": "False",
          "strip_dir": "[Undefined]",
          "substitutions": "[Undefined]",
          "regexp_substitutions": "[Undefined]",
          "_outputs": "{}",
          "remove_dest_dir": "False",
          "creds_path": "[Undefined]",
          "encrypt_bucket_keys": "False",
          "bucket": "[Undefined]",
          "local_copy": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "id_string_desc-boldSnr_quality_260",
        "type": "node",
        "inputs": {
          "function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
          "cfg": "C-PAC Configuration ('cpac_ccs-options')",
          "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
          "resource": "desc-boldSnr_quality",
          "scan_id": "[Undefined]",
          "template_desc": "[Undefined]",
          "atlas_id": "[Undefined]",
          "fwhm": "[Undefined]",
          "subdir": "func"
        },
        "outputs": {
          "out_filename": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "nii_desc-boldSnr_quality_260",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "keep_ext": "True",
          "format_string": "[Undefined]",
          "parse_string": "[Undefined]",
          "use_fullpath": "False"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "json_desc-boldSnr_quality_260",
        "type": "node",
        "inputs": {
          "function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
          "json_data": "{'CpacProvenance': [[[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-preproc_bold:bold_masking', 'desc-preproc_bold:func_normalize'], [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-stc_bold:func_slice_time'], ['bold:func_ingress'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], ['pe-direction:func_metadata_ingress'], 'desc-preproc_bold:apply_phasediff_to_timeseries_separately_default'], [['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-stc_bold:func_slice_time'], ['bold:func_ingress'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-T1w_to-template_mode-image_xfm:register_FSL_anat_to_template_FSL'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-brain-template-funcreg:template_resample'], 'from-bold_to-template_mode-image_xfm:create_func_to_T1template_xfm'], 'desc-preproc_bold:apply_blip_to_timeseries_separately_default'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'from-bold_to-T1w_mode-image_desc-linear_xfm:coregistration'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-brain_bold:bold_masking'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], 'sbref:coregistration_prep_vol'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], ['pe-direction:func_metadata_ingress'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_probseg:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_pveseg:tissue_seg_fsl_fast'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-head_T1w:brain_extraction'], 'space-T1w_sbref:coregistration'], 'desc-boldSnr_quality:qc_snr_plot'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer'], 'bold': ['apply_phasediff_to_timeseries_separately_default', 'apply_blip_to_timeseries_separately_default']}, 'Sources': ['desc-preproc_bold', 'space-bold_desc-brain_mask', 'from-bold_to-T1w_mode-image_desc-linear_xfm', 'desc-preproc_T1w', 'space-T1w_sbref'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
          "filename": "[Undefined]"
        },
        "outputs": {
          "json_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "sinker_desc-boldSnr_quality_260",
        "type": "node",
        "inputs": {
          "base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output",
          "container": "pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
          "parameterization": "False",
          "strip_dir": "[Undefined]",
          "substitutions": "[Undefined]",
          "regexp_substitutions": "[Undefined]",
          "_outputs": "{}",
          "remove_dest_dir": "False",
          "creds_path": "[Undefined]",
          "encrypt_bucket_keys": "False",
          "bucket": "[Undefined]",
          "local_copy": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "id_string_desc-movementParametersTrans_quality_265",
        "type": "node",
        "inputs": {
          "function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
          "cfg": "C-PAC Configuration ('cpac_ccs-options')",
          "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
          "resource": "desc-movementParametersTrans_quality",
          "scan_id": "[Undefined]",
          "template_desc": "[Undefined]",
          "atlas_id": "[Undefined]",
          "fwhm": "[Undefined]",
          "subdir": "func"
        },
        "outputs": {
          "out_filename": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "nii_desc-movementParametersTrans_quality_265",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "keep_ext": "True",
          "format_string": "[Undefined]",
          "parse_string": "[Undefined]",
          "use_fullpath": "False"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "json_desc-movementParametersTrans_quality_265",
        "type": "node",
        "inputs": {
          "function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
          "json_data": "{'CpacProvenance': [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg', 'desc-movementParametersTrans_quality:qc_motion_plot'], 'Sources': ['desc-movementParameters_motion'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
          "filename": "[Undefined]"
        },
        "outputs": {
          "json_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "sinker_desc-movementParametersTrans_quality_265",
        "type": "node",
        "inputs": {
          "base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output",
          "container": "pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
          "parameterization": "False",
          "strip_dir": "[Undefined]",
          "substitutions": "[Undefined]",
          "regexp_substitutions": "[Undefined]",
          "_outputs": "{}",
          "remove_dest_dir": "False",
          "creds_path": "[Undefined]",
          "encrypt_bucket_keys": "False",
          "bucket": "[Undefined]",
          "local_copy": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "id_string_desc-movementParametersRot_quality_266",
        "type": "node",
        "inputs": {
          "function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
          "cfg": "C-PAC Configuration ('cpac_ccs-options')",
          "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
          "resource": "desc-movementParametersRot_quality",
          "scan_id": "[Undefined]",
          "template_desc": "[Undefined]",
          "atlas_id": "[Undefined]",
          "fwhm": "[Undefined]",
          "subdir": "func"
        },
        "outputs": {
          "out_filename": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "nii_desc-movementParametersRot_quality_266",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "keep_ext": "True",
          "format_string": "[Undefined]",
          "parse_string": "[Undefined]",
          "use_fullpath": "False"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "json_desc-movementParametersRot_quality_266",
        "type": "node",
        "inputs": {
          "function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
          "json_data": "{'CpacProvenance': [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg', 'desc-movementParametersRot_quality:qc_motion_plot'], 'Sources': ['desc-movementParameters_motion'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
          "filename": "[Undefined]"
        },
        "outputs": {
          "json_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "sinker_desc-movementParametersRot_quality_266",
        "type": "node",
        "inputs": {
          "base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output",
          "container": "pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
          "parameterization": "False",
          "strip_dir": "[Undefined]",
          "substitutions": "[Undefined]",
          "regexp_substitutions": "[Undefined]",
          "_outputs": "{}",
          "remove_dest_dir": "False",
          "creds_path": "[Undefined]",
          "encrypt_bucket_keys": "False",
          "bucket": "[Undefined]",
          "local_copy": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "id_string_desc-framewiseDisplacementJenkinsonPlot_quality_267",
        "type": "node",
        "inputs": {
          "function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
          "cfg": "C-PAC Configuration ('cpac_ccs-options')",
          "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
          "resource": "desc-framewiseDisplacementJenkinsonPlot_quality",
          "scan_id": "[Undefined]",
          "template_desc": "[Undefined]",
          "atlas_id": "[Undefined]",
          "fwhm": "[Undefined]",
          "subdir": "func"
        },
        "outputs": {
          "out_filename": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "nii_desc-framewiseDisplacementJenkinsonPlot_quality_267",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "keep_ext": "True",
          "format_string": "[Undefined]",
          "parse_string": "[Undefined]",
          "use_fullpath": "False"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "json_desc-framewiseDisplacementJenkinsonPlot_quality_267",
        "type": "node",
        "inputs": {
          "function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
          "json_data": "{'CpacProvenance': [[[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-preproc_bold:motion_correction_3dvolreg'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], 'desc-preproc_bold:bold_masking'], [[[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-motion_bold:motion_correction_3dvolreg'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], 'space-bold_desc-brain_mask:bold_mask_ccs'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'desc-movementParameters_motion:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'max-displacement:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'filtered-coordinate-transformation:motion_correction_3dvolreg'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], [[['bold:func_ingress', 'desc-preproc_bold:func_reorient', 'desc-preproc_bold:func_truncate', 'desc-preproc_bold:func_despike'], ['TR:func_metadata_ingress'], ['tpattern:func_metadata_ingress'], 'desc-preproc_bold:func_slice_time'], ['bold:func_ingress', 'desc-reorient_bold:func_reorient'], 'motion-basefile:get_motion_ref_mean'], 'coordinate-transformation:motion_correction_3dvolreg'], ['subject:func_ingress'], ['scan:func_ingress'], 'framewise-displacement-jenkinson:calc_motion_stats', 'desc-framewiseDisplacementJenkinsonPlot_quality:qc_fd_plot'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['framewise-displacement-jenkinson'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
          "filename": "[Undefined]"
        },
        "outputs": {
          "json_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "sinker_desc-framewiseDisplacementJenkinsonPlot_quality_267",
        "type": "node",
        "inputs": {
          "base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output",
          "container": "pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
          "parameterization": "False",
          "strip_dir": "[Undefined]",
          "substitutions": "[Undefined]",
          "regexp_substitutions": "[Undefined]",
          "_outputs": "{}",
          "remove_dest_dir": "False",
          "creds_path": "[Undefined]",
          "encrypt_bucket_keys": "False",
          "bucket": "[Undefined]",
          "local_copy": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "id_string_desc-dsegAxial_quality_280",
        "type": "node",
        "inputs": {
          "function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
          "cfg": "C-PAC Configuration ('cpac_ccs-options')",
          "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
          "resource": "desc-dsegAxial_quality",
          "scan_id": "[Undefined]",
          "template_desc": "[Undefined]",
          "atlas_id": "[Undefined]",
          "fwhm": "[Undefined]",
          "subdir": "anat"
        },
        "outputs": {
          "out_filename": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "nii_desc-dsegAxial_quality_280",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "keep_ext": "True",
          "format_string": "[Undefined]",
          "parse_string": "[Undefined]",
          "use_fullpath": "False"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "json_desc-dsegAxial_quality_280",
        "type": "node",
        "inputs": {
          "function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
          "json_data": "{'CpacProvenance': [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-CSF_desc-preproc_mask:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_desc-preproc_mask:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-GM_desc-preproc_mask:tissue_seg_fsl_fast'], 'desc-dsegAxial_quality:qc_segmentation'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['desc-preproc_T1w', 'label-CSF_desc-preproc_mask', 'label-WM_desc-preproc_mask', 'label-GM_desc-preproc_mask'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
          "filename": "[Undefined]"
        },
        "outputs": {
          "json_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "sinker_desc-dsegAxial_quality_280",
        "type": "node",
        "inputs": {
          "base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output",
          "container": "pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
          "parameterization": "False",
          "strip_dir": "[Undefined]",
          "substitutions": "[Undefined]",
          "regexp_substitutions": "[Undefined]",
          "_outputs": "{}",
          "remove_dest_dir": "False",
          "creds_path": "[Undefined]",
          "encrypt_bucket_keys": "False",
          "bucket": "[Undefined]",
          "local_copy": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "id_string_desc-dsegSagittal_quality_281",
        "type": "node",
        "inputs": {
          "function_str": "def create_id_string(cfg, unique_id, resource, scan_id=None,\n                     template_desc=None, atlas_id=None, fwhm=None,\n                     subdir=None):\n    \"\"\"Create the unique key-value identifier string for BIDS-Derivatives\n    compliant file names.\n\n    This is used in the file renaming performed during the Datasink\n    connections.\n\n    Example\n    -------\n    >>> from CPAC.utils.configuration import Configuration\n    >>> create_id_string(Configuration(), 'sub-1_ses-1',\n    ...                  'res-derivative_desc-Mean-1_timeseries',\n    ...                  scan_id='rest', atlas_id='Yeo_desc-7')\n    'sub-1_ses-1_task-rest_atlas-Yeo7_res-3mm_desc-Mean1_timeseries'\n    \"\"\"\n    import re\n    from CPAC.utils.bids_utils import combine_multiple_entity_instances, \\\n                                      res_in_filename\n    if atlas_id:\n        if '_desc-' in atlas_id:\n            atlas, desc = atlas_id.split('_desc-')\n            if not re.match(r'.*[0-9]$', atlas) and re.match(r'[a-z].*', desc):\n                atlas_id = f'{atlas}{desc[0].upper()}{desc[1:]}'\n            else:\n                atlas_id = atlas_id.replace('_desc-', '')\n        resource = f'atlas-{atlas_id}_{resource}'\n\n    part_id = unique_id.split('_')[0]\n    ses_id = unique_id.split('_')[1]\n    if 'sub-' not in part_id:\n        part_id = f'sub-{part_id}'\n    if 'ses-' not in ses_id:\n        ses_id = f'ses-{ses_id}'\n    if scan_id:\n        out_filename = f'{part_id}_{ses_id}_task-{scan_id}_{resource}'\n    else:\n        out_filename = f'{part_id}_{ses_id}_{resource}'\n\n    template_tag = template_desc.split(' -')[0] if template_desc else '*'\n    for prefix in ['space-', 'from-', 'to-']:\n        for bidstag in out_filename.split('_'):\n            if prefix in bidstag and 'template' in bidstag:\n                out_filename = out_filename.replace(\n                    bidstag, f'{prefix}{template_tag}')\n\n    if fwhm:\n        for tag in resource.split('_'):\n            if 'desc-' in tag and '-sm' in tag:\n                newtag = tag.replace('-sm', f'-sm{fwhm}')\n                out_filename = out_filename.replace(tag, newtag)\n                break\n        else:\n            raise Exception('\\n[!] FWHM provided but no desc-sm?\\n')\n\n    # drop space- entities from from native-space filenames\n    if subdir == 'anat':\n        out_filename = out_filename.replace('_space-T1w_', '_')\n    if subdir == 'func':\n        out_filename = out_filename.replace('_space-bold_', '_')\n    return combine_multiple_entity_instances(\n        res_in_filename(cfg, out_filename))\n",
          "cfg": "C-PAC Configuration ('cpac_ccs-options')",
          "unique_id": "sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
          "resource": "desc-dsegSagittal_quality",
          "scan_id": "[Undefined]",
          "template_desc": "[Undefined]",
          "atlas_id": "[Undefined]",
          "fwhm": "[Undefined]",
          "subdir": "anat"
        },
        "outputs": {
          "out_filename": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "nii_desc-dsegSagittal_quality_281",
        "type": "node",
        "inputs": {
          "in_file": "[Undefined]",
          "keep_ext": "True",
          "format_string": "[Undefined]",
          "parse_string": "[Undefined]",
          "use_fullpath": "False"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "json_desc-dsegSagittal_quality_281",
        "type": "node",
        "inputs": {
          "function_str": "def write_output_json(json_data, filename, indent=3, basedir=None):\n    if not basedir:\n        basedir = os.getcwd()\n    if '.json' not in filename:\n        filename = f'{filename}.json'\n    json_file = os.path.join(basedir, filename)\n    json_data = json.dumps(json_data, indent=indent, sort_keys=True)\n    with open(json_file, 'wt') as f:\n        f.write(json_data)\n    return json_file\n",
          "json_data": "{'CpacProvenance': [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-CSF_desc-preproc_mask:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-WM_desc-preproc_mask:tissue_seg_fsl_fast'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], [[['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-preproc_T1w:brain_extraction'], [['T1w:anat_ingress', 'desc-head_T1w:anatomical_init'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'desc-preproc_T1w:nlm_filtering'], [['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_raw-average:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'pipeline-fs_brainmask:freesurfer_reconall'], ['T1w:anat_ingress', 'desc-preproc_T1w:anatomical_init', 'freesurfer-subject-dir:freesurfer_reconall'], 'space-T1w_desc-brain_mask:brain_mask_freesurfer'], 'desc-brain_T1w:brain_extraction'], ['T1w-template:template_resample'], ['T1w-brain-template:template_resample'], ['template-ref-mask:template_resample'], 'from-template_to-T1w_mode-image_desc-linear_xfm:register_FSL_anat_to_template_FSL'], ['CSF-path:CSF-path_config_ingress'], ['GM-path:GM-path_config_ingress'], ['WM-path:WM-path_config_ingress'], 'label-GM_desc-preproc_mask:tissue_seg_fsl_fast'], 'desc-dsegSagittal_quality:qc_segmentation'], 'CpacVariant': {'space-T1w_mask': ['brain_mask_freesurfer']}, 'Sources': ['desc-preproc_T1w', 'label-CSF_desc-preproc_mask', 'label-WM_desc-preproc_mask', 'label-GM_desc-preproc_mask'], 'CpacConfigHash': '0d218c373cba3ea6b45ed7456e6ca93724d775f7', 'CpacConfig': {'pipeline_setup': {'pipeline_name': 'cpac_ccs-options', 'output_directory': {'quality_control': {'generate_xcpqc_files': False, 'generate_quality_control_images': True}, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output', 'source_outputs_dir': None, 'pull_source_once': True, 'write_func_outputs': True, 'write_debugging_outputs': False, 'output_tree': 'default'}, 'system_config': {'fail_fast': False, 'random_seed': None, 'raise_insufficient': True, 'observed_usage': {'callback_log': None, 'buffer': 10}, 'on_grid': {'run': False, 'resource_manager': 'SGE', 'SGE': {'parallel_environment': 'mpi_smp', 'queue': 'all.q'}}, 'maximum_memory_per_participant': 23.0, 'max_cores_per_participant': 11, 'num_ants_threads': 1, 'num_OMP_threads': 1, 'num_participants_at_once': 1, 'FSLDIR': 'FSLDIR'}, 'working_directory': {'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/working', 'remove_working_dir': True}, 'log_directory': {'run_logging': True, 'path': '/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/log', 'graphviz': {'entire_workflow': {'generate': False, 'graph2use': [], 'format': [], 'simple_form': True}}}, 'crash_log_directory': {'path': '/outputs/crash'}, 'outdir_ingress': {'run': False}, 'Amazon-AWS': {'aws_output_bucket_credentials': None, 's3_encryption': False}, 'Debugging': {'verbose': False}}, 'surface_analysis': {'abcd_prefreesurfer_prep': {'run': False}, 'freesurfer': {'run_reconall': True, 'reconall_args': '-clean-bm -gcut', 'ingress_reconall': True}, 'post_freesurfer': {'run': False, 'subcortical_gray_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferSubcorticalLabelTableLut.txt', 'freesurfer_labels': '/opt/dcan-tools/pipeline/global/config/FreeSurferAllLut.txt', 'surf_atlas_dir': '/opt/dcan-tools/pipeline/global/templates/standard_mesh_atlases', 'gray_ordinates_dir': '/opt/dcan-tools/pipeline/global/templates/Greyordinates', 'gray_ordinates_res': 2, 'high_res_mesh': 164, 'low_res_mesh': 32, 'fmri_res': 2, 'smooth_fwhm': 2}}, 'anatomical_preproc': {'run': True, 'acpc_alignment': {'T1w_brain_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz', 'FOV_crop': 'robustfov', 'align_brain_mask': False, 'T2w_ACPC_template': None, 'T2w_brain_ACPC_template': None, 'run': False, 'run_before_preproc': True, 'brain_size': 150, 'acpc_target': 'whole-head', 'T1w_ACPC_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm.nii.gz'}, 'brain_extraction': {'run': True, 'FreeSurfer-BET': {'T1w_brain_template_mask_ccs': '/code/CPAC/resources/templates/MNI152_T1_1mm_first_brain_mask.nii.gz'}, 'using': ['FreeSurfer-BET-Tight', 'FreeSurfer-BET-Loose', 'FreeSurfer-Brainmask'], 'AFNI-3dSkullStrip': {'mask_vol': False, 'shrink_factor': 0.6, 'var_shrink_fac': True, 'shrink_factor_bot_lim': 0.4, 'avoid_vent': True, 'n_iterations': 250, 'pushout': True, 'touchup': True, 'fill_hole': 10, 'NN_smooth': 72, 'smooth_final': 20, 'avoid_eyes': True, 'use_edge': True, 'exp_frac': 0.1, 'push_to_edge': False, 'use_skull': False, 'perc_int': 0, 'max_inter_iter': 4, 'fac': 1, 'blur_fwhm': 0, 'monkey': False}, 'FSL-BET': {'frac': 0.5, 'mask_boolean': True, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'UNet': {'unet_model': 's3://fcp-indi/resources/cpac/resources/Site-All-T-epoch_36.model'}, 'niworkflows-ants': {'template_path': '/ants_template/oasis/T_template0.nii.gz', 'mask_path': '/ants_template/oasis/T_template0_BrainCerebellumProbabilityMask.nii.gz', 'regmask_path': '/ants_template/oasis/T_template0_BrainCerebellumRegistrationMask.nii.gz'}}, 'run_t2': False, 't1t2_bias_field_correction': {'run': False, 'BiasFieldSmoothingSigma': 5}, 'non_local_means_filtering': {'run': [True], 'noise_model': 'Gaussian'}, 'n4_bias_field_correction': {'run': [False], 'shrink_factor': 2}}, 'segmentation': {'run': True, 'tissue_segmentation': {'using': ['FSL-FAST'], 'FSL-FAST': {'thresholding': {'use': 'Auto', 'Custom': {'CSF_threshold_value': 0.95, 'WM_threshold_value': 0.95, 'GM_threshold_value': 0.95}}, 'use_priors': {'run': True, 'priors_path': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm', 'WM_path': '$priors_path/avg152T1_white_bin.nii.gz', 'GM_path': '$priors_path/avg152T1_gray_bin.nii.gz', 'CSF_path': '$priors_path/avg152T1_csf_bin.nii.gz'}}, 'Template_Based': {'template_for_segmentation': ['T1_Template'], 'WHITE': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_white_bin.nii.gz', 'GRAY': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_gray_bin.nii.gz', 'CSF': '/usr/share/fsl/6.0/data/standard/tissuepriors/2mm/avg152T1_csf_bin.nii.gz'}, 'ANTs_Prior_Based': {'template_brain_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_T1w_brain.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_T1w_brain.nii.gz'], 'template_segmentation_list': ['/cpac_templates/MacaqueYerkes19_T1w_0.5mm_desc-JLC_Segmentation.nii.gz', '/cpac_templates/J_Macaque_11mo_atlas_nACQ_194x252x160space_0.5mm_desc-JLC_Segmentation.nii.gz'], 'GM_label': [3, 42], 'WM_label': [2, 41], 'CSF_label': [24]}, 'FreeSurfer': {'erode': 1, 'CSF_label': [4, 5, 43, 44, 31, 63], 'GM_label': [3, 42], 'WM_label': [2, 41, 7, 46, 251, 252, 253, 254, 255]}}}, 'registration_workflows': {'anatomical_registration': {'run': True, 'registration': {'FSL-FNIRT': {'ref_resolution': '2mm', 'FNIRT_T1w_brain_template': None, 'FNIRT_T1w_template': None, 'ref_mask_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm_brain_mask_dil.nii.gz', 'T1w_template_res-2': '/usr/share/fsl/6.0/data/standard/MNI152_T1_2mm.nii.gz', 'fnirt_config': 'T1_2_MNI152_2mm', 'ref_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_dil.nii.gz', 'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}, 'using': ['FSL'], 'ANTs': {'use_lesion_mask': False, 'T1_registration': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}}, 'overwrite_transform': {'run': False, 'using': 'FSL'}, 'resolution_for_anat': '2mm', 'T1w_brain_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain.nii.gz', 'T1w_template': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}.nii.gz', 'T1w_brain_template_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'reg_with_skull': False}, 'functional_registration': {'coregistration': {'run': True, 'func_input_prep': {'reg_with_skull': False, 'input': ['Selected_Functional_Volume'], 'Mean Functional': {'n4_correct_func': False}, 'Selected Functional Volume': {'func_reg_input_volume': 7}}, 'boundary_based_registration': {'run': [True], 'reference': 'whole-head', 'bbr_wm_map': 'probability_map', 'bbr_wm_mask_args': '-thr 0.5 -bin', 'bbr_schedule': '/usr/share/fsl/6.0/etc/flirtsch/bbr.sch'}, 'reference': 'brain', 'using': 'FSL', 'input': 'brain', 'interpolation': 'trilinear', 'cost': 'corratio', 'dof': 6, 'arguments': None}, 'func_registration_to_template': {'run': True, 'run_EPI': False, 'apply_transform': {'using': 'default'}, 'output_resolution': {'func_preproc_outputs': '3mm', 'func_derivative_outputs': '3mm'}, 'target_template': {'using': ['T1_template'], 'T1_template': {'T1w_brain_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain.nii.gz', 'T1w_template_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}.nii.gz', 'T1w_brain_template_mask_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_mask.nii.gz', 'T1w_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}, 'EPI_template': {'EPI_template_funcreg': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask_funcreg': None, 'EPI_template_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain.nii.gz'}}, 'ANTs_pipelines': {'interpolation': 'LanczosWindowedSinc'}, 'FNIRT_pipelines': {'interpolation': 'trilinear', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}, 'EPI_registration': {'run': False, 'using': ['ANTS'], 'EPI_template': 's3://fcp-indi/resources/cpac/resources/epi_hbn.nii.gz', 'EPI_template_mask': None, 'ANTs': {'parameters': [{'collapse-output-transforms': 0}, {'dimensionality': 3}, {'initial-moving-transform': {'initializationFeature': 0}}, {'transforms': [{'Rigid': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'Affine': {'gradientStep': 0.1, 'metric': {'type': 'MI', 'metricWeight': 1, 'numberOfBins': 32, 'samplingStrategy': 'Regular', 'samplingPercentage': 0.25}, 'convergence': {'iteration': '1000x500x250x100', 'convergenceThreshold': '1e-08', 'convergenceWindowSize': 10}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '8x4x2x1', 'use-histogram-matching': True}}, {'SyN': {'gradientStep': 0.1, 'updateFieldVarianceInVoxelSpace': 3.0, 'totalFieldVarianceInVoxelSpace': 0.0, 'metric': {'type': 'CC', 'metricWeight': 1, 'radius': 4}, 'convergence': {'iteration': '100x100x70x20', 'convergenceThreshold': '1e-09', 'convergenceWindowSize': 15}, 'smoothing-sigmas': '3.0x2.0x1.0x0.0', 'shrink-factors': '6x4x2x1', 'use-histogram-matching': True, 'winsorize-image-intensities': {'lowerQuantile': 0.01, 'upperQuantile': 0.99}}}]}], 'interpolation': 'LanczosWindowedSinc'}, 'FSL-FNIRT': {'fnirt_config': 'T1_2_MNI152_2mm', 'interpolation': 'sinc', 'identity_matrix': '/usr/share/fsl/6.0/etc/flirtsch/ident.mat'}}}}, 'functional_preproc': {'run': True, 'update_header': {'run': True}, 'slice_timing_correction': {'run': [True], 'tpattern': 'alt+z', 'tzero': 0}, 'motion_estimates_and_correction': {'run': True, 'motion_estimates': {'calculate_motion_first': False, 'calculate_motion_after': True}, 'motion_correction': {'using': ['3dvolreg'], 'AFNI-3dvolreg': {'functional_volreg_twopass': True}, 'motion_correction_reference': ['mean'], 'motion_correction_reference_volume': 0}, 'motion_estimate_filter': {'run': [False], 'filters': []}}, 'distortion_correction': {'run': [True], 'Blip-FSL-TOPUP': {'warpres': 10, 'subsamp': 1, 'fwhm': 8, 'miter': 5, 'lambda': 1, 'ssqlambda': 1, 'regmod': 'bending_energy', 'estmov': 1, 'minmet': 0, 'splineorder': 3, 'numprec': 'double', 'interp': 'spline', 'scale': 0, 'regrid': 1}, 'using': ['PhaseDiff', 'Blip'], 'PhaseDiff': {'fmap_skullstrip_option': 'BET', 'fmap_skullstrip_BET_frac': 0.5, 'fmap_skullstrip_AFNI_threshold': 0.6}}, 'func_masking': {'run': True, 'FSL-BET': {'functional_mean_thr': {'run': False, 'threshold_value': 98}, 'functional_mean_bias_correction': False, 'functional_mean_boolean': False, 'frac': 0.3, 'mesh_boolean': False, 'outline': False, 'padding': False, 'radius': 0, 'reduce_bias': False, 'remove_eyes': False, 'robust': False, 'skull': False, 'surfaces': False, 'threshold': False, 'vertical_gradient': 0.0}, 'FSL_AFNI': {'bold_ref': None, 'brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz', 'brain_probseg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask.nii.gz'}, 'apply_func_mask_in_native_space': True, 'using': ['CCS_Anatomical_Refined'], 'Anatomical_Refined': {'anatomical_mask_dilation': False}}, 'generate_func_mean': {'run': True}, 'normalize_func': {'run': True}, 'truncation': {'start_tr': 0, 'stop_tr': None}, 'scaling': {'run': False, 'scaling_factor': 10}, 'despiking': {'run': [True], 'space': 'native'}, 'coreg_prep': {'run': True}}, 'nuisance_corrections': {'2-nuisance_regression': {'run': [False], 'Regressors': [{'Name': 'Regressor_1', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'GlobalSignal': {'summary': 'Mean'}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}, {'Name': 'Regressor_2', 'Motion': {'include_delayed': True, 'include_delayed_squared': True, 'include_squared': True}, 'CerebrospinalFluid': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'WhiteMatter': {'erode_mask': False, 'extraction_resolution': 2, 'summary': 'Mean'}, 'PolyOrt': {'degree': 1}, 'Bandpass': {'bottom_frequency': 0.01, 'top_frequency': 0.1, 'method': 'AFNI'}}], 'regressor_masks': {'erode_anatomical_brain_mask': {'brain_mask_erosion_mm': 30, 'run': False, 'brain_mask_erosion_prop': None, 'brain_erosion_mm': None}, 'erode_csf': {'csf_mask_erosion_mm': 30, 'run': False, 'csf_erosion_prop': None, 'csf_erosion_mm': None}, 'erode_wm': {'wm_erosion_prop': 0.6, 'run': False, 'wm_mask_erosion_mm': None, 'wm_erosion_mm': None}, 'erode_gm': {'gm_erosion_prop': 0.6, 'run': False, 'gm_mask_erosion_mm': None, 'gm_erosion_mm': None}}, 'space': 'native', 'ingress_regressors': {'run': False, 'Regressors': {'Name': 'default', 'Columns': ['global_signal']}}, 'create_regressors': True, 'lateral_ventricles_mask': '/usr/share/fsl/6.0/data/atlases/HarvardOxford/HarvardOxford-lateral-ventricles-thr25-2mm.nii.gz', 'bandpass_filtering_order': 'After'}, '1-ICA-AROMA': {'run': [False], 'denoising_type': 'nonaggr'}}, 'timeseries_extraction': {'run': False, 'connectivity_matrix': {'using': ['Nilearn', 'ndmg'], 'measure': ['Pearson', 'Partial']}, 'tse_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg', '/cpac_templates/aal_mask_pad.nii.gz': 'Avg', '/cpac_templates/CC200.nii.gz': 'Avg', '/cpac_templates/tt_mask_pad.nii.gz': 'Avg', '/cpac_templates/PNAS_Smith09_rsn10.nii.gz': 'SpatialReg', '/cpac_templates/ho_mask_pad.nii.gz': 'Avg', '/cpac_templates/rois_3mm.nii.gz': 'Avg', '/ndmg_atlases/label/Human/AAL_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/CAPRSC_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DKT_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/DesikanKlein_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordcort-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/HarvardOxfordsub-maxprob-thr25_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Juelich_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/MICCAI_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-1000Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-200Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-300Parcels17NetworksOrder.nii.gz': 'Avg', '/cpac_templates/Schaefer2018_space-FSLMNI152_res-2mm_desc-400Parcels17NetworksOrder.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Talairach_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Brodmann_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Desikan_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Glasser_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Slab907_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-17_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7-liberal_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg', '/ndmg_atlases/label/Human/Yeo-7_space-MNI152NLin6_res-1x1x1.nii.gz': 'Avg'}, 'realignment': 'ROI_to_func'}, 'amplitude_low_frequency_fluctuation': {'run': False, 'target_space': ['Native'], 'highpass_cutoff': [0.01], 'lowpass_cutoff': [0.1]}, 'regional_homogeneity': {'run': False, 'target_space': ['Native'], 'cluster_size': 27}, 'voxel_mirrored_homotopic_connectivity': {'run': False, 'symmetric_registration': {'T1w_brain_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_brain_symmetric.nii.gz', 'T1w_brain_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_symmetric.nii.gz', 'T1w_template_symmetric': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_symmetric.nii.gz', 'T1w_template_symmetric_funcreg': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_symmetric.nii.gz', 'T1w_template_symmetric_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_symmetric.nii.gz', 'dilated_symmetric_brain_mask': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${resolution_for_anat}_brain_mask_symmetric_dil.nii.gz', 'dilated_symmetric_brain_mask_for_resample': '/usr/share/fsl/6.0/data/standard/MNI152_T1_1mm_brain_mask_symmetric_dil.nii.gz'}}, 'network_centrality': {'run': False, 'memory_allocation': 1.0, 'template_specification_file': '/cpac_templates/Mask_ABIDE_85Percent_GM.nii.gz', 'degree_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'eigenvector_centrality': {'weight_options': [], 'correlation_threshold_option': 'Sparsity threshold', 'correlation_threshold': 0.001}, 'local_functional_connectivity_density': {'weight_options': [], 'correlation_threshold_option': 'Correlation threshold', 'correlation_threshold': 0.6}}, 'longitudinal_template_generation': {'run': False, 'average_method': 'median', 'dof': 12, 'interp': 'trilinear', 'cost': 'corratio', 'thread_pool': 2, 'convergence_threshold': -1}, 'post_processing': {'spatial_smoothing': {'run': True, 'output': ['smoothed'], 'smoothing_method': ['FSL'], 'fwhm': [4]}, 'z-scoring': {'run': True, 'output': ['z-scored']}}, 'seed_based_correlation_analysis': {'run': False, 'sca_roi_paths': {'/cpac_templates/CC400.nii.gz': 'Avg'}, 'norm_timeseries_for_DR': True}, 'PyPEER': {'run': False, 'eye_scan_names': [], 'data_scan_names': [], 'eye_mask_path': '/usr/share/fsl/6.0/data/standard/MNI152_T1_${func_resolution}_eye_mask.nii.gz', 'stimulus_path': None, 'minimal_nuisance_correction': {'peer_gsr': True, 'peer_scrub': False, 'scrub_thresh': 0.2}}}}",
          "filename": "[Undefined]"
        },
        "outputs": {
          "json_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      },
      {
        "name": "sinker_desc-dsegSagittal_quality_281",
        "type": "node",
        "inputs": {
          "base_directory": "/ocean/projects/med220004p/rupprech/ecpac_runs/all_test/ccs-options/sub-NDARINV2VY7YYNW/output/output",
          "container": "pipeline_cpac_ccs-options/sub-NDARINV2VY7YYNW/ses-baselineYear1Arm1",
          "parameterization": "False",
          "strip_dir": "[Undefined]",
          "substitutions": "[Undefined]",
          "regexp_substitutions": "[Undefined]",
          "_outputs": "{}",
          "remove_dest_dir": "False",
          "creds_path": "[Undefined]",
          "encrypt_bucket_keys": "False",
          "bucket": "[Undefined]",
          "local_copy": "[Undefined]"
        },
        "outputs": {
          "out_file": "[Undefined]"
        },
        "result": null,
        "nodes": [],
        "edges": []
      }
    ],
    "edges": [
      {
        "origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
        "target": "bold_scan_params_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1"
      },
      {
        "origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
        "target": "func_deoblique_2"
      },
      {
        "origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
        "target": "id_string_desc-preproc_bold_235"
      },
      {
        "origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
        "target": "id_string_desc-mean_bold_148"
      },
      {
        "origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
        "target": "id_string_desc-movementParameters_motion_157"
      },
      {
        "origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
        "target": "id_string_space-bold_desc-brain_mask_163"
      },
      {
        "origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
        "target": "id_string_motion_182"
      },
      {
        "origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
        "target": "id_string_desc-summary_motion_183"
      },
      {
        "origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
        "target": "id_string_sbref_187"
      },
      {
        "origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
        "target": "id_string_space-T1w_sbref_195"
      },
      {
        "origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
        "target": "id_string_from-bold_to-T1w_mode-image_desc-linear_xfm_196"
      },
      {
        "origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
        "target": "id_string_from-bold_to-template_mode-image_xfm_202"
      },
      {
        "origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
        "target": "id_string_desc-confounds-1_timeseries_219"
      },
      {
        "origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
        "target": "id_string_desc-confounds-2_timeseries_221"
      },
      {
        "origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
        "target": "id_string_space-template_desc-preproc_bold_239"
      },
      {
        "origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
        "target": "id_string_space-template_sbref_243"
      },
      {
        "origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
        "target": "id_string_space-template_desc-bold_mask_247"
      },
      {
        "origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
        "target": "id_string_space-template_res-derivative_desc-bold_mask_251"
      },
      {
        "origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
        "target": "id_string_desc-boldSnrAxial_quality_257"
      },
      {
        "origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
        "target": "id_string_desc-boldSnrSagittal_quality_258"
      },
      {
        "origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
        "target": "id_string_desc-boldSnrHist_quality_259"
      },
      {
        "origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
        "target": "id_string_desc-boldSnr_quality_260"
      },
      {
        "origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
        "target": "id_string_desc-movementParametersTrans_quality_265"
      },
      {
        "origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
        "target": "id_string_desc-movementParametersRot_quality_266"
      },
      {
        "origin": "func_ingress_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
        "target": "id_string_desc-framewiseDisplacementJenkinsonPlot_quality_267"
      },
      {
        "origin": "bold_scan_params_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
        "target": "func_slice_timing_correction_143"
      },
      {
        "origin": "bold_scan_params_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
        "target": "nuisance_regressors_Regressor_1_203"
      },
      {
        "origin": "bold_scan_params_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
        "target": "nuisance_regressors_Regressor_2_203"
      },
      {
        "origin": "anat_T1w_gather_sub-NDARINV2VY7YYNW_ses-baselineYear1Arm1",
        "target": "anat_deoblique_0"
      },
      {
        "origin": "anat_deoblique_0",
        "target": "anat_reorient_0"
      },
      {
        "origin": "anat_reorient_0",
        "target": "anat_freesurfer_46"
      },
      {
        "origin": "anat_reorient_0",
        "target": "anat_denoise_46"
      },
      {
        "origin": "anat_reorient_0",
        "target": "brain_extraction_90"
      },
      {
        "origin": "anat_reorient_0",
        "target": "warp_wholehead_T1w_to_T1template_105"
      },
      {
        "origin": "anat_reorient_0",
        "target": "func_to_anat_bbreg_188"
      },
      {
        "origin": "anat_reorient_0",
        "target": "qc_skullstrip_268"
      },
      {
        "origin": "anat_reorient_0",
        "target": "nii_desc-head_T1w_95"
      },
      {
        "origin": "anat_freesurfer_46",
        "target": "split_curv_46"
      },
      {
        "origin": "anat_freesurfer_46",
        "target": "split_pial_46"
      },
      {
        "origin": "anat_freesurfer_46",
        "target": "split_smoothwm_46"
      },
      {
        "origin": "anat_freesurfer_46",
        "target": "split_sphere_46"
      },
      {
        "origin": "anat_freesurfer_46",
        "target": "split_sulc_46"
      },
      {
        "origin": "anat_freesurfer_46",
        "target": "split_thickness_46"
      },
      {
        "origin": "anat_freesurfer_46",
        "target": "split_volume_46"
      },
      {
        "origin": "anat_freesurfer_46",
        "target": "split_white_46"
      },
      {
        "origin": "anat_freesurfer_46",
        "target": "fs_brain_mask_to_native"
      },
      {
        "origin": "anat_freesurfer_46",
        "target": "convert_fs_brainmask_to_nifti_freesurfer-bet-tight_76"
      },
      {
        "origin": "anat_freesurfer_46",
        "target": "convert_fs_T1_to_nifti_freesurfer-bet-tight_76"
      },
      {
        "origin": "anat_freesurfer_46",
        "target": "fs_fsl_brain_mask_to_native_freesurfer-bet-tight_76"
      },
      {
        "origin": "anat_freesurfer_46",
        "target": "convert_fs_brainmask_to_nifti_freesurfer-bet-loose_76"
      },
      {
        "origin": "anat_freesurfer_46",
        "target": "convert_fs_T1_to_nifti_freesurfer-bet-loose_76"
      },
      {
        "origin": "anat_freesurfer_46",
        "target": "fs_fsl_brain_mask_to_native_freesurfer-bet-loose_76"
      },
      {
        "origin": "fs_brain_mask_to_native",
        "target": "fs_brainmask_to_nifti_72"
      },
      {
        "origin": "fs_brainmask_to_nifti_72",
        "target": "binarize_fs_brainmask_72"
      },
      {
        "origin": "binarize_fs_brainmask_72",
        "target": "fill_fs_brainmask_72"
      },
      {
        "origin": "fill_fs_brainmask_72",
        "target": "brain_extraction_90"
      },
      {
        "origin": "fill_fs_brainmask_72",
        "target": "warp_T1mask_to_T1template_109"
      },
      {
        "origin": "fill_fs_brainmask_72",
        "target": "CSF_113"
      },
      {
        "origin": "fill_fs_brainmask_72",
        "target": "GM_113"
      },
      {
        "origin": "fill_fs_brainmask_72",
        "target": "WM_113"
      },
      {
        "origin": "fill_fs_brainmask_72",
        "target": "nuisance_regressors_Regressor_1_203"
      },
      {
        "origin": "fill_fs_brainmask_72",
        "target": "nuisance_regressors_Regressor_2_203"
      },
      {
        "origin": "fill_fs_brainmask_72",
        "target": "nii_space-T1w_desc-brain_mask_75"
      },
      {
        "origin": "convert_fs_brainmask_to_nifti_freesurfer-bet-tight_76",
        "target": "reorient_fs_brainmask_freesurfer-bet-tight_76"
      },
      {
        "origin": "convert_fs_T1_to_nifti_freesurfer-bet-tight_76",
        "target": "reorient_fs_T1_freesurfer-bet-tight_76"
      },
      {
        "origin": "reorient_fs_brainmask_freesurfer-bet-tight_76",
        "target": "binarize_fs_brain_freesurfer-bet-tight_76"
      },
      {
        "origin": "binarize_fs_brain_freesurfer-bet-tight_76",
        "target": "combine_mask_freesurfer-bet-tight_76"
      },
      {
        "origin": "reorient_fs_T1_freesurfer-bet-tight_76",
        "target": "convert_head_to_template_freesurfer-bet-tight_76"
      },
      {
        "origin": "reorient_fs_T1_freesurfer-bet-tight_76",
        "target": "convert_template_mask_to_native_freesurfer-bet-tight_76"
      },
      {
        "origin": "convert_head_to_template_freesurfer-bet-tight_76",
        "target": "convert_xfm_freesurfer-bet-tight_76"
      },
      {
        "origin": "convert_head_to_template_freesurfer-bet-tight_76",
        "target": "anat_BET_skullstrip_freesurfer-bet-tight_76"
      },
      {
        "origin": "gather_T1w-ACPC-template",
        "target": "convert_head_to_template_freesurfer-bet-tight_76"
      },
      {
        "origin": "gather_T1w-ACPC-template",
        "target": "convert_head_to_template_freesurfer-bet-loose_76"
      },
      {
        "origin": "convert_xfm_freesurfer-bet-tight_76",
        "target": "convert_template_mask_to_native_freesurfer-bet-tight_76"
      },
      {
        "origin": "anat_BET_skullstrip_freesurfer-bet-tight_76",
        "target": "apply_mask_freesurfer-bet-tight_76"
      },
      {
        "origin": "apply_mask_freesurfer-bet-tight_76",
        "target": "convert_template_mask_to_native_freesurfer-bet-tight_76"
      },
      {
        "origin": "gather_T1w-brain-template-mask-ccs",
        "target": "apply_mask_freesurfer-bet-tight_76"
      },
      {
        "origin": "gather_T1w-brain-template-mask-ccs",
        "target": "apply_mask_freesurfer-bet-loose_76"
      },
      {
        "origin": "convert_template_mask_to_native_freesurfer-bet-tight_76",
        "target": "combine_mask_freesurfer-bet-tight_76"
      },
      {
        "origin": "combine_mask_freesurfer-bet-tight_76",
        "target": "binarize_combined_mask_freesurfer-bet-tight_76"
      },
      {
        "origin": "binarize_combined_mask_freesurfer-bet-tight_76",
        "target": "fs_fsl_brain_mask_to_native_freesurfer-bet-tight_76"
      },
      {
        "origin": "convert_fs_brainmask_to_nifti_freesurfer-bet-loose_76",
        "target": "reorient_fs_brainmask_freesurfer-bet-loose_76"
      },
      {
        "origin": "convert_fs_T1_to_nifti_freesurfer-bet-loose_76",
        "target": "reorient_fs_T1_freesurfer-bet-loose_76"
      },
      {
        "origin": "reorient_fs_brainmask_freesurfer-bet-loose_76",
        "target": "binarize_fs_brain_freesurfer-bet-loose_76"
      },
      {
        "origin": "binarize_fs_brain_freesurfer-bet-loose_76",
        "target": "combine_mask_freesurfer-bet-loose_76"
      },
      {
        "origin": "reorient_fs_T1_freesurfer-bet-loose_76",
        "target": "convert_head_to_template_freesurfer-bet-loose_76"
      },
      {
        "origin": "reorient_fs_T1_freesurfer-bet-loose_76",
        "target": "convert_template_mask_to_native_freesurfer-bet-loose_76"
      },
      {
        "origin": "convert_head_to_template_freesurfer-bet-loose_76",
        "target": "convert_xfm_freesurfer-bet-loose_76"
      },
      {
        "origin": "convert_head_to_template_freesurfer-bet-loose_76",
        "target": "anat_BET_skullstrip_freesurfer-bet-loose_76"
      },
      {
        "origin": "convert_xfm_freesurfer-bet-loose_76",
        "target": "convert_template_mask_to_native_freesurfer-bet-loose_76"
      },
      {
        "origin": "anat_BET_skullstrip_freesurfer-bet-loose_76",
        "target": "apply_mask_freesurfer-bet-loose_76"
      },
      {
        "origin": "apply_mask_freesurfer-bet-loose_76",
        "target": "convert_template_mask_to_native_freesurfer-bet-loose_76"
      },
      {
        "origin": "convert_template_mask_to_native_freesurfer-bet-loose_76",
        "target": "combine_mask_freesurfer-bet-loose_76"
      },
      {
        "origin": "combine_mask_freesurfer-bet-loose_76",
        "target": "binarize_combined_mask_freesurfer-bet-loose_76"
      },
      {
        "origin": "binarize_combined_mask_freesurfer-bet-loose_76",
        "target": "fs_fsl_brain_mask_to_native_freesurfer-bet-loose_76"
      },
      {
        "origin": "brain_extraction_90",
        "target": "register_FSL_anat_to_template_96"
      },
      {
        "origin": "brain_extraction_90",
        "target": "segment_113"
      },
      {
        "origin": "brain_extraction_90",
        "target": "CSF_113"
      },
      {
        "origin": "brain_extraction_90",
        "target": "GM_113"
      },
      {
        "origin": "brain_extraction_90",
        "target": "WM_113"
      },
      {
        "origin": "brain_extraction_90",
        "target": "func_to_anat_linear_reg_160"
      },
      {
        "origin": "brain_extraction_90",
        "target": "reg_anat_brain_to_func_160"
      },
      {
        "origin": "brain_extraction_90",
        "target": "func_to_anat_FLIRT_188"
      },
      {
        "origin": "brain_extraction_90",
        "target": "create_func_to_T1wtemplate_xfm_197"
      },
      {
        "origin": "brain_extraction_90",
        "target": "nuisance_regressors_Regressor_1_203"
      },
      {
        "origin": "brain_extraction_90",
        "target": "nuisance_regressors_Regressor_2_203"
      },
      {
        "origin": "brain_extraction_90",
        "target": "qc_snr_252"
      },
      {
        "origin": "brain_extraction_90",
        "target": "anat_edge_261"
      },
      {
        "origin": "brain_extraction_90",
        "target": "qc_skullstrip_268"
      },
      {
        "origin": "brain_extraction_90",
        "target": "montage_csf_gm_wm_276"
      },
      {
        "origin": "brain_extraction_90",
        "target": "nii_desc-preproc_T1w_93"
      },
      {
        "origin": "resampled_T1w-brain-template",
        "target": "register_FSL_anat_to_template_96"
      },
      {
        "origin": "resampled_T1w-brain-template",
        "target": "anat_template_edge_272"
      },
      {
        "origin": "resampled_T1w-template",
        "target": "register_FSL_anat_to_template_96"
      },
      {
        "origin": "resampled_T1w-template",
        "target": "warp_wholehead_T1w_to_T1template_105"
      },
      {
        "origin": "resampled_T1w-template",
        "target": "warp_T1mask_to_T1template_109"
      },
      {
        "origin": "resampled_T1w-template",
        "target": "warp_label-CSF_mask_to_T1wtemplate_131"
      },
      {
        "origin": "resampled_T1w-template",
        "target": "warp_label-WM_mask_to_T1wtemplate_131"
      },
      {
        "origin": "resampled_T1w-template",
        "target": "warp_label-GM_mask_to_T1wtemplate_131"
      },
      {
        "origin": "resampled_template-ref-mask",
        "target": "register_FSL_anat_to_template_96"
      },
      {
        "origin": "warp_wholehead_T1w_to_T1template_105",
        "target": "nii_space-template_desc-head_T1w_108"
      },
      {
        "origin": "anat_mni_fnirt_register",
        "target": "warp_wholehead_T1w_to_T1template_105"
      },
      {
        "origin": "anat_mni_fnirt_register",
        "target": "warp_T1mask_to_T1template_109"
      },
      {
        "origin": "anat_mni_fnirt_register",
        "target": "warp_label-CSF_mask_to_T1wtemplate_131"
      },
      {
        "origin": "anat_mni_fnirt_register",
        "target": "warp_label-WM_mask_to_T1wtemplate_131"
      },
      {
        "origin": "anat_mni_fnirt_register",
        "target": "warp_label-GM_mask_to_T1wtemplate_131"
      },
      {
        "origin": "anat_mni_fnirt_register",
        "target": "create_func_to_T1wtemplate_xfm_197"
      },
      {
        "origin": "anat_mni_fnirt_register",
        "target": "montage_mni_anat_272"
      },
      {
        "origin": "anat_mni_fnirt_register",
        "target": "nii_space-template_desc-preproc_T1w_101"
      },
      {
        "origin": "anat_mni_fnirt_register",
        "target": "nii_from-T1w_to-template_mode-image_xfm_104"
      },
      {
        "origin": "warp_T1mask_to_T1template_109",
        "target": "nii_space-template_desc-brain_mask_112"
      },
      {
        "origin": "segment_113",
        "target": "get_pve_csf_113"
      },
      {
        "origin": "segment_113",
        "target": "get_pve_gm_113"
      },
      {
        "origin": "segment_113",
        "target": "get_pve_wm_113"
      },
      {
        "origin": "segment_113",
        "target": "CSF_113"
      },
      {
        "origin": "segment_113",
        "target": "GM_113"
      },
      {
        "origin": "segment_113",
        "target": "WM_113"
      },
      {
        "origin": "segment_113",
        "target": "get_csf_113"
      },
      {
        "origin": "segment_113",
        "target": "warp_label-CSF_mask_to_T1wtemplate_131"
      },
      {
        "origin": "segment_113",
        "target": "warp_label-WM_mask_to_T1wtemplate_131"
      },
      {
        "origin": "segment_113",
        "target": "warp_label-GM_mask_to_T1wtemplate_131"
      },
      {
        "origin": "segment_113",
        "target": "func_to_anat_bbreg_188"
      },
      {
        "origin": "segment_113",
        "target": "nii_label-GM_probseg_120"
      },
      {
        "origin": "segment_113",
        "target": "nii_label-WM_probseg_121"
      },
      {
        "origin": "segment_113",
        "target": "nii_label-CSF_mask_122"
      },
      {
        "origin": "segment_113",
        "target": "nii_label-GM_mask_123"
      },
      {
        "origin": "segment_113",
        "target": "nii_label-WM_mask_124"
      },
      {
        "origin": "gather_CSF-path",
        "target": "CSF_113"
      },
      {
        "origin": "gather_CSF-path",
        "target": "carpet_seg_282"
      },
      {
        "origin": "CSF_113",
        "target": "nuisance_regressors_Regressor_1_203"
      },
      {
        "origin": "CSF_113",
        "target": "nuisance_regressors_Regressor_2_203"
      },
      {
        "origin": "CSF_113",
        "target": "montage_csf_gm_wm_276"
      },
      {
        "origin": "CSF_113",
        "target": "nii_label-CSF_desc-preproc_mask_125"
      },
      {
        "origin": "gather_GM-path",
        "target": "GM_113"
      },
      {
        "origin": "gather_GM-path",
        "target": "carpet_seg_282"
      },
      {
        "origin": "GM_113",
        "target": "nuisance_regressors_Regressor_1_203"
      },
      {
        "origin": "GM_113",
        "target": "nuisance_regressors_Regressor_2_203"
      },
      {
        "origin": "GM_113",
        "target": "montage_csf_gm_wm_276"
      },
      {
        "origin": "GM_113",
        "target": "nii_label-GM_desc-preproc_mask_126"
      },
      {
        "origin": "gather_WM-path",
        "target": "WM_113"
      },
      {
        "origin": "gather_WM-path",
        "target": "carpet_seg_282"
      },
      {
        "origin": "WM_113",
        "target": "nuisance_regressors_Regressor_1_203"
      },
      {
        "origin": "WM_113",
        "target": "nuisance_regressors_Regressor_2_203"
      },
      {
        "origin": "WM_113",
        "target": "montage_csf_gm_wm_276"
      },
      {
        "origin": "WM_113",
        "target": "nii_label-WM_desc-preproc_mask_127"
      },
      {
        "origin": "fsl_invlin-warp_to_nii",
        "target": "CSF_113"
      },
      {
        "origin": "fsl_invlin-warp_to_nii",
        "target": "GM_113"
      },
      {
        "origin": "fsl_invlin-warp_to_nii",
        "target": "WM_113"
      },
      {
        "origin": "fsl_invlin-warp_to_nii",
        "target": "nuisance_regressors_Regressor_1_203"
      },
      {
        "origin": "fsl_invlin-warp_to_nii",
        "target": "nuisance_regressors_Regressor_2_203"
      },
      {
        "origin": "fsl_invlin-warp_to_nii",
        "target": "nii_from-template_to-T1w_mode-image_desc-linear_xfm_103"
      },
      {
        "origin": "get_csf_113",
        "target": "nii_label-CSF_probseg_119"
      },
      {
        "origin": "warp_label-CSF_mask_to_T1wtemplate_131",
        "target": "nii_space-template_label-CSF_mask_136"
      },
      {
        "origin": "warp_label-WM_mask_to_T1wtemplate_131",
        "target": "nii_space-template_label-WM_mask_137"
      },
      {
        "origin": "warp_label-GM_mask_to_T1wtemplate_131",
        "target": "nii_space-template_label-GM_mask_138"
      },
      {
        "origin": "func_deoblique_2",
        "target": "func_reorient_2"
      },
      {
        "origin": "func_reorient_2",
        "target": "edit_func_139"
      },
      {
        "origin": "edit_func_139",
        "target": "func_despiked_141"
      },
      {
        "origin": "func_despiked_141",
        "target": "func_slice_timing_correction_143"
      },
      {
        "origin": "func_slice_timing_correction_143",
        "target": "func_mean_146"
      },
      {
        "origin": "func_slice_timing_correction_143",
        "target": "func_get_mean_RPI_149"
      },
      {
        "origin": "func_slice_timing_correction_143",
        "target": "chunk_152"
      },
      {
        "origin": "func_slice_timing_correction_143",
        "target": "split_152"
      },
      {
        "origin": "func_mean_146",
        "target": "nii_desc-mean_bold_148"
      },
      {
        "origin": "func_get_mean_RPI_149",
        "target": "func_motion_correct_3dvolreg_152"
      },
      {
        "origin": "chunk_152",
        "target": "split_152"
      },
      {
        "origin": "split_152",
        "target": "out_split_func_152"
      },
      {
        "origin": "out_split_func_152",
        "target": "func_generate_ref_152_"
      },
      {
        "origin": "out_split_func_152",
        "target": "func_motion_correct_3dvolreg_152"
      },
      {
        "origin": "func_generate_ref_152_",
        "target": "func_concat_152"
      },
      {
        "origin": "func_concat_152",
        "target": "out_motion_152"
      },
      {
        "origin": "func_motion_correct_3dvolreg_152",
        "target": "motion_concat_152"
      },
      {
        "origin": "func_motion_correct_3dvolreg_152",
        "target": "md1d_concat_152"
      },
      {
        "origin": "func_motion_correct_3dvolreg_152",
        "target": "oned_concat_152"
      },
      {
        "origin": "func_motion_correct_3dvolreg_152",
        "target": "oned_matrix_concat_152"
      },
      {
        "origin": "motion_concat_152",
        "target": "out_motion_A_152"
      },
      {
        "origin": "out_motion_A_152",
        "target": "func_tmp_brain_mask_AFNI_160"
      },
      {
        "origin": "out_motion_A_152",
        "target": "extract_func_roi_160"
      },
      {
        "origin": "out_motion_A_152",
        "target": "bin_func_160"
      },
      {
        "origin": "out_motion_A_152",
        "target": "func_extract_brain_165"
      },
      {
        "origin": "md1d_concat_152",
        "target": "out_md1d_152"
      },
      {
        "origin": "oned_concat_152",
        "target": "out_oned_152"
      },
      {
        "origin": "oned_matrix_concat_152",
        "target": "out_oned_matrix_152"
      },
      {
        "origin": "out_md1d_152",
        "target": "gen_motion_stats_169"
      },
      {
        "origin": "out_oned_152",
        "target": "gen_motion_stats_169"
      },
      {
        "origin": "out_oned_152",
        "target": "nuisance_regressors_Regressor_1_203"
      },
      {
        "origin": "out_oned_152",
        "target": "nuisance_regressors_Regressor_2_203"
      },
      {
        "origin": "out_oned_152",
        "target": "qc_motion_157"
      },
      {
        "origin": "out_oned_152",
        "target": "nii_desc-movementParameters_motion_157"
      },
      {
        "origin": "out_oned_matrix_152",
        "target": "gen_motion_stats_169"
      },
      {
        "origin": "func_tmp_brain_mask_AFNI_160",
        "target": "get_func_tmp_brain_160"
      },
      {
        "origin": "func_tmp_brain_mask_AFNI_160",
        "target": "merge_func_mask_160"
      },
      {
        "origin": "extract_func_roi_160",
        "target": "get_func_tmp_brain_160"
      },
      {
        "origin": "extract_func_roi_160",
        "target": "reg_anat_brain_to_func_160"
      },
      {
        "origin": "extract_func_roi_160",
        "target": "get_example_func_brain_160"
      },
      {
        "origin": "get_func_tmp_brain_160",
        "target": "func_to_anat_linear_reg_160"
      },
      {
        "origin": "func_to_anat_linear_reg_160",
        "target": "inv_func2anat_affine_160"
      },
      {
        "origin": "inv_func2anat_affine_160",
        "target": "reg_anat_brain_to_func_160"
      },
      {
        "origin": "reg_anat_brain_to_func_160",
        "target": "bin_anat_brain_in_func_160"
      },
      {
        "origin": "bin_anat_brain_in_func_160",
        "target": "merge_func_mask_160"
      },
      {
        "origin": "bin_func_160",
        "target": "intersect_mask_160"
      },
      {
        "origin": "merge_func_mask_160",
        "target": "intersect_mask_160"
      },
      {
        "origin": "intersect_mask_160",
        "target": "get_example_func_brain_160"
      },
      {
        "origin": "intersect_mask_160",
        "target": "func_extract_brain_165"
      },
      {
        "origin": "intersect_mask_160",
        "target": "gen_motion_stats_169"
      },
      {
        "origin": "intersect_mask_160",
        "target": "nuisance_regressors_Regressor_1_203"
      },
      {
        "origin": "intersect_mask_160",
        "target": "nuisance_regressors_Regressor_2_203"
      },
      {
        "origin": "intersect_mask_160",
        "target": "warp_funcreg-mask_to_T1wtemplate_244"
      },
      {
        "origin": "intersect_mask_160",
        "target": "warp_deriv-mask_to_T1wtemplate_248"
      },
      {
        "origin": "intersect_mask_160",
        "target": "qc_snr_252"
      },
      {
        "origin": "intersect_mask_160",
        "target": "nii_space-bold_desc-brain_mask_163"
      },
      {
        "origin": "func_extract_brain_165",
        "target": "gen_motion_stats_169"
      },
      {
        "origin": "func_extract_brain_165",
        "target": "func_normalize_167"
      },
      {
        "origin": "func_extract_brain_165",
        "target": "get_func_volume_185"
      },
      {
        "origin": "gen_motion_stats_169",
        "target": "nuisance_regressors_Regressor_1_203"
      },
      {
        "origin": "gen_motion_stats_169",
        "target": "nuisance_regressors_Regressor_2_203"
      },
      {
        "origin": "gen_motion_stats_169",
        "target": "qc_fd_178"
      },
      {
        "origin": "gen_motion_stats_169",
        "target": "nii_motion_182"
      },
      {
        "origin": "gen_motion_stats_169",
        "target": "nii_desc-summary_motion_183"
      },
      {
        "origin": "func_normalize_167",
        "target": "nuisance_regressors_Regressor_1_203"
      },
      {
        "origin": "func_normalize_167",
        "target": "nuisance_regressors_Regressor_2_203"
      },
      {
        "origin": "func_normalize_167",
        "target": "warp_ts_to_T1template_236"
      },
      {
        "origin": "func_normalize_167",
        "target": "qc_snr_252"
      },
      {
        "origin": "func_normalize_167",
        "target": "nii_desc-preproc_bold_235"
      },
      {
        "origin": "get_func_volume_185",
        "target": "func_to_anat_FLIRT_188"
      },
      {
        "origin": "get_func_volume_185",
        "target": "func_to_anat_bbreg_188"
      },
      {
        "origin": "get_func_volume_185",
        "target": "create_func_to_T1wtemplate_xfm_197"
      },
      {
        "origin": "get_func_volume_185",
        "target": "warp_funcreg-sbref_to_T1wtemplate_240"
      },
      {
        "origin": "get_func_volume_185",
        "target": "nii_sbref_187"
      },
      {
        "origin": "func_to_anat_FLIRT_188",
        "target": "func_to_anat_bbreg_188"
      },
      {
        "origin": "func_to_anat_bbreg_188",
        "target": "create_func_to_T1wtemplate_xfm_197"
      },
      {
        "origin": "func_to_anat_bbreg_188",
        "target": "nuisance_regressors_Regressor_1_203"
      },
      {
        "origin": "func_to_anat_bbreg_188",
        "target": "anat_to_func_linear_xfm_Regressor_1_203"
      },
      {
        "origin": "func_to_anat_bbreg_188",
        "target": "nuisance_regressors_Regressor_2_203"
      },
      {
        "origin": "func_to_anat_bbreg_188",
        "target": "anat_to_func_linear_xfm_Regressor_2_203"
      },
      {
        "origin": "func_to_anat_bbreg_188",
        "target": "qc_snr_252"
      },
      {
        "origin": "func_to_anat_bbreg_188",
        "target": "montage_anat_261"
      },
      {
        "origin": "func_to_anat_bbreg_188",
        "target": "nii_space-T1w_sbref_195"
      },
      {
        "origin": "func_to_anat_bbreg_188",
        "target": "nii_from-bold_to-T1w_mode-image_desc-linear_xfm_196"
      },
      {
        "origin": "resampled_T1w-brain-template-funcreg",
        "target": "create_func_to_T1wtemplate_xfm_197"
      },
      {
        "origin": "resampled_T1w-brain-template-funcreg",
        "target": "warp_ts_to_T1template_236"
      },
      {
        "origin": "resampled_T1w-brain-template-funcreg",
        "target": "warp_funcreg-sbref_to_T1wtemplate_240"
      },
      {
        "origin": "resampled_T1w-brain-template-funcreg",
        "target": "warp_funcreg-mask_to_T1wtemplate_244"
      },
      {
        "origin": "resampled_T1w-brain-template-funcreg",
        "target": "func_template_edge_288"
      },
      {
        "origin": "nuisance_regressors_Regressor_1_203",
        "target": "nii_desc-confounds-1_timeseries_219"
      },
      {
        "origin": "gather_lateral-ventricles-mask",
        "target": "nuisance_regressors_Regressor_1_203"
      },
      {
        "origin": "gather_lateral-ventricles-mask",
        "target": "nuisance_regressors_Regressor_2_203"
      },
      {
        "origin": "anat_to_func_linear_xfm_Regressor_1_203",
        "target": "nuisance_regressors_Regressor_1_203"
      },
      {
        "origin": "fsl_lin-warp_to_nii",
        "target": "nuisance_regressors_Regressor_1_203"
      },
      {
        "origin": "fsl_lin-warp_to_nii",
        "target": "nuisance_regressors_Regressor_2_203"
      },
      {
        "origin": "fsl_lin-warp_to_nii",
        "target": "nii_from-T1w_to-template_mode-image_desc-linear_xfm_102"
      },
      {
        "origin": "nuisance_regressors_Regressor_2_203",
        "target": "nii_desc-confounds-2_timeseries_221"
      },
      {
        "origin": "anat_to_func_linear_xfm_Regressor_2_203",
        "target": "nuisance_regressors_Regressor_2_203"
      },
      {
        "origin": "warp_ts_to_T1template_236",
        "target": "carpet_seg_282"
      },
      {
        "origin": "warp_ts_to_T1template_236",
        "target": "nii_space-template_desc-preproc_bold_239"
      },
      {
        "origin": "combine_fsl_warps",
        "target": "warp_ts_to_T1template_236"
      },
      {
        "origin": "combine_fsl_warps",
        "target": "warp_funcreg-sbref_to_T1wtemplate_240"
      },
      {
        "origin": "combine_fsl_warps",
        "target": "warp_funcreg-mask_to_T1wtemplate_244"
      },
      {
        "origin": "combine_fsl_warps",
        "target": "warp_deriv-mask_to_T1wtemplate_248"
      },
      {
        "origin": "combine_fsl_warps",
        "target": "nii_from-bold_to-template_mode-image_xfm_202"
      },
      {
        "origin": "warp_funcreg-sbref_to_T1wtemplate_240",
        "target": "carpet_seg_282"
      },
      {
        "origin": "warp_funcreg-sbref_to_T1wtemplate_240",
        "target": "montage_mfi_288"
      },
      {
        "origin": "warp_funcreg-sbref_to_T1wtemplate_240",
        "target": "nii_space-template_sbref_243"
      },
      {
        "origin": "warp_funcreg-mask_to_T1wtemplate_244",
        "target": "nii_space-template_desc-bold_mask_247"
      },
      {
        "origin": "warp_deriv-mask_to_T1wtemplate_248",
        "target": "nii_space-template_res-derivative_desc-bold_mask_251"
      },
      {
        "origin": "resampled_T1w-brain-template-deriv",
        "target": "warp_deriv-mask_to_T1wtemplate_248"
      },
      {
        "origin": "qc_snr_252",
        "target": "nii_desc-boldSnrAxial_quality_257"
      },
      {
        "origin": "qc_snr_252",
        "target": "nii_desc-boldSnrSagittal_quality_258"
      },
      {
        "origin": "qc_snr_252",
        "target": "nii_desc-boldSnrHist_quality_259"
      },
      {
        "origin": "qc_snr_252",
        "target": "nii_desc-boldSnr_quality_260"
      },
      {
        "origin": "anat_edge_261",
        "target": "montage_anat_261"
      },
      {
        "origin": "qc_motion_157",
        "target": "nii_desc-movementParametersTrans_quality_265"
      },
      {
        "origin": "qc_motion_157",
        "target": "nii_desc-movementParametersRot_quality_266"
      },
      {
        "origin": "qc_fd_178",
        "target": "nii_desc-framewiseDisplacementJenkinsonPlot_quality_267"
      },
      {
        "origin": "anat_template_edge_272",
        "target": "montage_mni_anat_272"
      },
      {
        "origin": "montage_csf_gm_wm_276",
        "target": "nii_desc-dsegAxial_quality_280"
      },
      {
        "origin": "montage_csf_gm_wm_276",
        "target": "nii_desc-dsegSagittal_quality_281"
      },
      {
        "origin": "func_template_edge_288",
        "target": "montage_mfi_288"
      },
      {
        "origin": "id_string_desc-preproc_T1w_93",
        "target": "nii_desc-preproc_T1w_93"
      },
      {
        "origin": "id_string_desc-preproc_T1w_93",
        "target": "json_desc-preproc_T1w_93"
      },
      {
        "origin": "nii_desc-preproc_T1w_93",
        "target": "sinker_desc-preproc_T1w_93"
      },
      {
        "origin": "json_desc-preproc_T1w_93",
        "target": "sinker_desc-preproc_T1w_93"
      },
      {
        "origin": "id_string_desc-head_T1w_95",
        "target": "nii_desc-head_T1w_95"
      },
      {
        "origin": "id_string_desc-head_T1w_95",
        "target": "json_desc-head_T1w_95"
      },
      {
        "origin": "nii_desc-head_T1w_95",
        "target": "sinker_desc-head_T1w_95"
      },
      {
        "origin": "json_desc-head_T1w_95",
        "target": "sinker_desc-head_T1w_95"
      },
      {
        "origin": "id_string_space-T1w_desc-brain_mask_75",
        "target": "nii_space-T1w_desc-brain_mask_75"
      },
      {
        "origin": "id_string_space-T1w_desc-brain_mask_75",
        "target": "json_space-T1w_desc-brain_mask_75"
      },
      {
        "origin": "nii_space-T1w_desc-brain_mask_75",
        "target": "sinker_space-T1w_desc-brain_mask_75"
      },
      {
        "origin": "json_space-T1w_desc-brain_mask_75",
        "target": "sinker_space-T1w_desc-brain_mask_75"
      },
      {
        "origin": "id_string_space-template_desc-preproc_T1w_101",
        "target": "nii_space-template_desc-preproc_T1w_101"
      },
      {
        "origin": "id_string_space-template_desc-preproc_T1w_101",
        "target": "json_space-template_desc-preproc_T1w_101"
      },
      {
        "origin": "nii_space-template_desc-preproc_T1w_101",
        "target": "sinker_space-template_desc-preproc_T1w_101"
      },
      {
        "origin": "json_space-template_desc-preproc_T1w_101",
        "target": "sinker_space-template_desc-preproc_T1w_101"
      },
      {
        "origin": "id_string_from-T1w_to-template_mode-image_desc-linear_xfm_102",
        "target": "nii_from-T1w_to-template_mode-image_desc-linear_xfm_102"
      },
      {
        "origin": "id_string_from-T1w_to-template_mode-image_desc-linear_xfm_102",
        "target": "json_from-T1w_to-template_mode-image_desc-linear_xfm_102"
      },
      {
        "origin": "nii_from-T1w_to-template_mode-image_desc-linear_xfm_102",
        "target": "sinker_from-T1w_to-template_mode-image_desc-linear_xfm_102"
      },
      {
        "origin": "json_from-T1w_to-template_mode-image_desc-linear_xfm_102",
        "target": "sinker_from-T1w_to-template_mode-image_desc-linear_xfm_102"
      },
      {
        "origin": "id_string_from-template_to-T1w_mode-image_desc-linear_xfm_103",
        "target": "nii_from-template_to-T1w_mode-image_desc-linear_xfm_103"
      },
      {
        "origin": "id_string_from-template_to-T1w_mode-image_desc-linear_xfm_103",
        "target": "json_from-template_to-T1w_mode-image_desc-linear_xfm_103"
      },
      {
        "origin": "nii_from-template_to-T1w_mode-image_desc-linear_xfm_103",
        "target": "sinker_from-template_to-T1w_mode-image_desc-linear_xfm_103"
      },
      {
        "origin": "json_from-template_to-T1w_mode-image_desc-linear_xfm_103",
        "target": "sinker_from-template_to-T1w_mode-image_desc-linear_xfm_103"
      },
      {
        "origin": "id_string_from-T1w_to-template_mode-image_xfm_104",
        "target": "nii_from-T1w_to-template_mode-image_xfm_104"
      },
      {
        "origin": "id_string_from-T1w_to-template_mode-image_xfm_104",
        "target": "json_from-T1w_to-template_mode-image_xfm_104"
      },
      {
        "origin": "nii_from-T1w_to-template_mode-image_xfm_104",
        "target": "sinker_from-T1w_to-template_mode-image_xfm_104"
      },
      {
        "origin": "json_from-T1w_to-template_mode-image_xfm_104",
        "target": "sinker_from-T1w_to-template_mode-image_xfm_104"
      },
      {
        "origin": "id_string_space-template_desc-head_T1w_108",
        "target": "nii_space-template_desc-head_T1w_108"
      },
      {
        "origin": "id_string_space-template_desc-head_T1w_108",
        "target": "json_space-template_desc-head_T1w_108"
      },
      {
        "origin": "nii_space-template_desc-head_T1w_108",
        "target": "sinker_space-template_desc-head_T1w_108"
      },
      {
        "origin": "json_space-template_desc-head_T1w_108",
        "target": "sinker_space-template_desc-head_T1w_108"
      },
      {
        "origin": "id_string_space-template_desc-brain_mask_112",
        "target": "nii_space-template_desc-brain_mask_112"
      },
      {
        "origin": "id_string_space-template_desc-brain_mask_112",
        "target": "json_space-template_desc-brain_mask_112"
      },
      {
        "origin": "nii_space-template_desc-brain_mask_112",
        "target": "sinker_space-template_desc-brain_mask_112"
      },
      {
        "origin": "json_space-template_desc-brain_mask_112",
        "target": "sinker_space-template_desc-brain_mask_112"
      },
      {
        "origin": "id_string_label-CSF_probseg_119",
        "target": "nii_label-CSF_probseg_119"
      },
      {
        "origin": "id_string_label-CSF_probseg_119",
        "target": "json_label-CSF_probseg_119"
      },
      {
        "origin": "nii_label-CSF_probseg_119",
        "target": "sinker_label-CSF_probseg_119"
      },
      {
        "origin": "json_label-CSF_probseg_119",
        "target": "sinker_label-CSF_probseg_119"
      },
      {
        "origin": "id_string_label-GM_probseg_120",
        "target": "nii_label-GM_probseg_120"
      },
      {
        "origin": "id_string_label-GM_probseg_120",
        "target": "json_label-GM_probseg_120"
      },
      {
        "origin": "nii_label-GM_probseg_120",
        "target": "sinker_label-GM_probseg_120"
      },
      {
        "origin": "json_label-GM_probseg_120",
        "target": "sinker_label-GM_probseg_120"
      },
      {
        "origin": "id_string_label-WM_probseg_121",
        "target": "nii_label-WM_probseg_121"
      },
      {
        "origin": "id_string_label-WM_probseg_121",
        "target": "json_label-WM_probseg_121"
      },
      {
        "origin": "nii_label-WM_probseg_121",
        "target": "sinker_label-WM_probseg_121"
      },
      {
        "origin": "json_label-WM_probseg_121",
        "target": "sinker_label-WM_probseg_121"
      },
      {
        "origin": "id_string_label-CSF_mask_122",
        "target": "nii_label-CSF_mask_122"
      },
      {
        "origin": "id_string_label-CSF_mask_122",
        "target": "json_label-CSF_mask_122"
      },
      {
        "origin": "nii_label-CSF_mask_122",
        "target": "sinker_label-CSF_mask_122"
      },
      {
        "origin": "json_label-CSF_mask_122",
        "target": "sinker_label-CSF_mask_122"
      },
      {
        "origin": "id_string_label-GM_mask_123",
        "target": "nii_label-GM_mask_123"
      },
      {
        "origin": "id_string_label-GM_mask_123",
        "target": "json_label-GM_mask_123"
      },
      {
        "origin": "nii_label-GM_mask_123",
        "target": "sinker_label-GM_mask_123"
      },
      {
        "origin": "json_label-GM_mask_123",
        "target": "sinker_label-GM_mask_123"
      },
      {
        "origin": "id_string_label-WM_mask_124",
        "target": "nii_label-WM_mask_124"
      },
      {
        "origin": "id_string_label-WM_mask_124",
        "target": "json_label-WM_mask_124"
      },
      {
        "origin": "nii_label-WM_mask_124",
        "target": "sinker_label-WM_mask_124"
      },
      {
        "origin": "json_label-WM_mask_124",
        "target": "sinker_label-WM_mask_124"
      },
      {
        "origin": "id_string_label-CSF_desc-preproc_mask_125",
        "target": "nii_label-CSF_desc-preproc_mask_125"
      },
      {
        "origin": "id_string_label-CSF_desc-preproc_mask_125",
        "target": "json_label-CSF_desc-preproc_mask_125"
      },
      {
        "origin": "nii_label-CSF_desc-preproc_mask_125",
        "target": "sinker_label-CSF_desc-preproc_mask_125"
      },
      {
        "origin": "json_label-CSF_desc-preproc_mask_125",
        "target": "sinker_label-CSF_desc-preproc_mask_125"
      },
      {
        "origin": "id_string_label-GM_desc-preproc_mask_126",
        "target": "nii_label-GM_desc-preproc_mask_126"
      },
      {
        "origin": "id_string_label-GM_desc-preproc_mask_126",
        "target": "json_label-GM_desc-preproc_mask_126"
      },
      {
        "origin": "nii_label-GM_desc-preproc_mask_126",
        "target": "sinker_label-GM_desc-preproc_mask_126"
      },
      {
        "origin": "json_label-GM_desc-preproc_mask_126",
        "target": "sinker_label-GM_desc-preproc_mask_126"
      },
      {
        "origin": "id_string_label-WM_desc-preproc_mask_127",
        "target": "nii_label-WM_desc-preproc_mask_127"
      },
      {
        "origin": "id_string_label-WM_desc-preproc_mask_127",
        "target": "json_label-WM_desc-preproc_mask_127"
      },
      {
        "origin": "nii_label-WM_desc-preproc_mask_127",
        "target": "sinker_label-WM_desc-preproc_mask_127"
      },
      {
        "origin": "json_label-WM_desc-preproc_mask_127",
        "target": "sinker_label-WM_desc-preproc_mask_127"
      },
      {
        "origin": "id_string_space-template_label-CSF_mask_136",
        "target": "nii_space-template_label-CSF_mask_136"
      },
      {
        "origin": "id_string_space-template_label-CSF_mask_136",
        "target": "json_space-template_label-CSF_mask_136"
      },
      {
        "origin": "nii_space-template_label-CSF_mask_136",
        "target": "sinker_space-template_label-CSF_mask_136"
      },
      {
        "origin": "json_space-template_label-CSF_mask_136",
        "target": "sinker_space-template_label-CSF_mask_136"
      },
      {
        "origin": "id_string_space-template_label-WM_mask_137",
        "target": "nii_space-template_label-WM_mask_137"
      },
      {
        "origin": "id_string_space-template_label-WM_mask_137",
        "target": "json_space-template_label-WM_mask_137"
      },
      {
        "origin": "nii_space-template_label-WM_mask_137",
        "target": "sinker_space-template_label-WM_mask_137"
      },
      {
        "origin": "json_space-template_label-WM_mask_137",
        "target": "sinker_space-template_label-WM_mask_137"
      },
      {
        "origin": "id_string_space-template_label-GM_mask_138",
        "target": "nii_space-template_label-GM_mask_138"
      },
      {
        "origin": "id_string_space-template_label-GM_mask_138",
        "target": "json_space-template_label-GM_mask_138"
      },
      {
        "origin": "nii_space-template_label-GM_mask_138",
        "target": "sinker_space-template_label-GM_mask_138"
      },
      {
        "origin": "json_space-template_label-GM_mask_138",
        "target": "sinker_space-template_label-GM_mask_138"
      },
      {
        "origin": "id_string_desc-preproc_bold_235",
        "target": "nii_desc-preproc_bold_235"
      },
      {
        "origin": "id_string_desc-preproc_bold_235",
        "target": "json_desc-preproc_bold_235"
      },
      {
        "origin": "nii_desc-preproc_bold_235",
        "target": "sinker_desc-preproc_bold_235"
      },
      {
        "origin": "json_desc-preproc_bold_235",
        "target": "sinker_desc-preproc_bold_235"
      },
      {
        "origin": "id_string_desc-mean_bold_148",
        "target": "nii_desc-mean_bold_148"
      },
      {
        "origin": "id_string_desc-mean_bold_148",
        "target": "json_desc-mean_bold_148"
      },
      {
        "origin": "nii_desc-mean_bold_148",
        "target": "sinker_desc-mean_bold_148"
      },
      {
        "origin": "json_desc-mean_bold_148",
        "target": "sinker_desc-mean_bold_148"
      },
      {
        "origin": "id_string_desc-movementParameters_motion_157",
        "target": "nii_desc-movementParameters_motion_157"
      },
      {
        "origin": "id_string_desc-movementParameters_motion_157",
        "target": "json_desc-movementParameters_motion_157"
      },
      {
        "origin": "nii_desc-movementParameters_motion_157",
        "target": "sinker_desc-movementParameters_motion_157"
      },
      {
        "origin": "json_desc-movementParameters_motion_157",
        "target": "sinker_desc-movementParameters_motion_157"
      },
      {
        "origin": "id_string_space-bold_desc-brain_mask_163",
        "target": "nii_space-bold_desc-brain_mask_163"
      },
      {
        "origin": "id_string_space-bold_desc-brain_mask_163",
        "target": "json_space-bold_desc-brain_mask_163"
      },
      {
        "origin": "nii_space-bold_desc-brain_mask_163",
        "target": "sinker_space-bold_desc-brain_mask_163"
      },
      {
        "origin": "json_space-bold_desc-brain_mask_163",
        "target": "sinker_space-bold_desc-brain_mask_163"
      },
      {
        "origin": "id_string_motion_182",
        "target": "nii_motion_182"
      },
      {
        "origin": "id_string_motion_182",
        "target": "json_motion_182"
      },
      {
        "origin": "nii_motion_182",
        "target": "sinker_motion_182"
      },
      {
        "origin": "json_motion_182",
        "target": "sinker_motion_182"
      },
      {
        "origin": "id_string_desc-summary_motion_183",
        "target": "nii_desc-summary_motion_183"
      },
      {
        "origin": "id_string_desc-summary_motion_183",
        "target": "json_desc-summary_motion_183"
      },
      {
        "origin": "nii_desc-summary_motion_183",
        "target": "sinker_desc-summary_motion_183"
      },
      {
        "origin": "json_desc-summary_motion_183",
        "target": "sinker_desc-summary_motion_183"
      },
      {
        "origin": "id_string_sbref_187",
        "target": "nii_sbref_187"
      },
      {
        "origin": "id_string_sbref_187",
        "target": "json_sbref_187"
      },
      {
        "origin": "nii_sbref_187",
        "target": "sinker_sbref_187"
      },
      {
        "origin": "json_sbref_187",
        "target": "sinker_sbref_187"
      },
      {
        "origin": "id_string_space-T1w_sbref_195",
        "target": "nii_space-T1w_sbref_195"
      },
      {
        "origin": "id_string_space-T1w_sbref_195",
        "target": "json_space-T1w_sbref_195"
      },
      {
        "origin": "nii_space-T1w_sbref_195",
        "target": "sinker_space-T1w_sbref_195"
      },
      {
        "origin": "json_space-T1w_sbref_195",
        "target": "sinker_space-T1w_sbref_195"
      },
      {
        "origin": "id_string_from-bold_to-T1w_mode-image_desc-linear_xfm_196",
        "target": "nii_from-bold_to-T1w_mode-image_desc-linear_xfm_196"
      },
      {
        "origin": "id_string_from-bold_to-T1w_mode-image_desc-linear_xfm_196",
        "target": "json_from-bold_to-T1w_mode-image_desc-linear_xfm_196"
      },
      {
        "origin": "nii_from-bold_to-T1w_mode-image_desc-linear_xfm_196",
        "target": "sinker_from-bold_to-T1w_mode-image_desc-linear_xfm_196"
      },
      {
        "origin": "json_from-bold_to-T1w_mode-image_desc-linear_xfm_196",
        "target": "sinker_from-bold_to-T1w_mode-image_desc-linear_xfm_196"
      },
      {
        "origin": "id_string_from-bold_to-template_mode-image_xfm_202",
        "target": "nii_from-bold_to-template_mode-image_xfm_202"
      },
      {
        "origin": "id_string_from-bold_to-template_mode-image_xfm_202",
        "target": "json_from-bold_to-template_mode-image_xfm_202"
      },
      {
        "origin": "nii_from-bold_to-template_mode-image_xfm_202",
        "target": "sinker_from-bold_to-template_mode-image_xfm_202"
      },
      {
        "origin": "json_from-bold_to-template_mode-image_xfm_202",
        "target": "sinker_from-bold_to-template_mode-image_xfm_202"
      },
      {
        "origin": "id_string_desc-confounds-1_timeseries_219",
        "target": "nii_desc-confounds-1_timeseries_219"
      },
      {
        "origin": "id_string_desc-confounds-1_timeseries_219",
        "target": "json_desc-confounds-1_timeseries_219"
      },
      {
        "origin": "nii_desc-confounds-1_timeseries_219",
        "target": "sinker_desc-confounds-1_timeseries_219"
      },
      {
        "origin": "json_desc-confounds-1_timeseries_219",
        "target": "sinker_desc-confounds-1_timeseries_219"
      },
      {
        "origin": "id_string_desc-confounds-2_timeseries_221",
        "target": "nii_desc-confounds-2_timeseries_221"
      },
      {
        "origin": "id_string_desc-confounds-2_timeseries_221",
        "target": "json_desc-confounds-2_timeseries_221"
      },
      {
        "origin": "nii_desc-confounds-2_timeseries_221",
        "target": "sinker_desc-confounds-2_timeseries_221"
      },
      {
        "origin": "json_desc-confounds-2_timeseries_221",
        "target": "sinker_desc-confounds-2_timeseries_221"
      },
      {
        "origin": "id_string_space-template_desc-preproc_bold_239",
        "target": "nii_space-template_desc-preproc_bold_239"
      },
      {
        "origin": "id_string_space-template_desc-preproc_bold_239",
        "target": "json_space-template_desc-preproc_bold_239"
      },
      {
        "origin": "nii_space-template_desc-preproc_bold_239",
        "target": "sinker_space-template_desc-preproc_bold_239"
      },
      {
        "origin": "json_space-template_desc-preproc_bold_239",
        "target": "sinker_space-template_desc-preproc_bold_239"
      },
      {
        "origin": "id_string_space-template_sbref_243",
        "target": "nii_space-template_sbref_243"
      },
      {
        "origin": "id_string_space-template_sbref_243",
        "target": "json_space-template_sbref_243"
      },
      {
        "origin": "nii_space-template_sbref_243",
        "target": "sinker_space-template_sbref_243"
      },
      {
        "origin": "json_space-template_sbref_243",
        "target": "sinker_space-template_sbref_243"
      },
      {
        "origin": "id_string_space-template_desc-bold_mask_247",
        "target": "nii_space-template_desc-bold_mask_247"
      },
      {
        "origin": "id_string_space-template_desc-bold_mask_247",
        "target": "json_space-template_desc-bold_mask_247"
      },
      {
        "origin": "nii_space-template_desc-bold_mask_247",
        "target": "sinker_space-template_desc-bold_mask_247"
      },
      {
        "origin": "json_space-template_desc-bold_mask_247",
        "target": "sinker_space-template_desc-bold_mask_247"
      },
      {
        "origin": "id_string_space-template_res-derivative_desc-bold_mask_251",
        "target": "nii_space-template_res-derivative_desc-bold_mask_251"
      },
      {
        "origin": "id_string_space-template_res-derivative_desc-bold_mask_251",
        "target": "json_space-template_res-derivative_desc-bold_mask_251"
      },
      {
        "origin": "nii_space-template_res-derivative_desc-bold_mask_251",
        "target": "sinker_space-template_res-derivative_desc-bold_mask_251"
      },
      {
        "origin": "json_space-template_res-derivative_desc-bold_mask_251",
        "target": "sinker_space-template_res-derivative_desc-bold_mask_251"
      },
      {
        "origin": "id_string_desc-boldSnrAxial_quality_257",
        "target": "nii_desc-boldSnrAxial_quality_257"
      },
      {
        "origin": "id_string_desc-boldSnrAxial_quality_257",
        "target": "json_desc-boldSnrAxial_quality_257"
      },
      {
        "origin": "nii_desc-boldSnrAxial_quality_257",
        "target": "sinker_desc-boldSnrAxial_quality_257"
      },
      {
        "origin": "json_desc-boldSnrAxial_quality_257",
        "target": "sinker_desc-boldSnrAxial_quality_257"
      },
      {
        "origin": "id_string_desc-boldSnrSagittal_quality_258",
        "target": "nii_desc-boldSnrSagittal_quality_258"
      },
      {
        "origin": "id_string_desc-boldSnrSagittal_quality_258",
        "target": "json_desc-boldSnrSagittal_quality_258"
      },
      {
        "origin": "nii_desc-boldSnrSagittal_quality_258",
        "target": "sinker_desc-boldSnrSagittal_quality_258"
      },
      {
        "origin": "json_desc-boldSnrSagittal_quality_258",
        "target": "sinker_desc-boldSnrSagittal_quality_258"
      },
      {
        "origin": "id_string_desc-boldSnrHist_quality_259",
        "target": "nii_desc-boldSnrHist_quality_259"
      },
      {
        "origin": "id_string_desc-boldSnrHist_quality_259",
        "target": "json_desc-boldSnrHist_quality_259"
      },
      {
        "origin": "nii_desc-boldSnrHist_quality_259",
        "target": "sinker_desc-boldSnrHist_quality_259"
      },
      {
        "origin": "json_desc-boldSnrHist_quality_259",
        "target": "sinker_desc-boldSnrHist_quality_259"
      },
      {
        "origin": "id_string_desc-boldSnr_quality_260",
        "target": "nii_desc-boldSnr_quality_260"
      },
      {
        "origin": "id_string_desc-boldSnr_quality_260",
        "target": "json_desc-boldSnr_quality_260"
      },
      {
        "origin": "nii_desc-boldSnr_quality_260",
        "target": "sinker_desc-boldSnr_quality_260"
      },
      {
        "origin": "json_desc-boldSnr_quality_260",
        "target": "sinker_desc-boldSnr_quality_260"
      },
      {
        "origin": "id_string_desc-movementParametersTrans_quality_265",
        "target": "nii_desc-movementParametersTrans_quality_265"
      },
      {
        "origin": "id_string_desc-movementParametersTrans_quality_265",
        "target": "json_desc-movementParametersTrans_quality_265"
      },
      {
        "origin": "nii_desc-movementParametersTrans_quality_265",
        "target": "sinker_desc-movementParametersTrans_quality_265"
      },
      {
        "origin": "json_desc-movementParametersTrans_quality_265",
        "target": "sinker_desc-movementParametersTrans_quality_265"
      },
      {
        "origin": "id_string_desc-movementParametersRot_quality_266",
        "target": "nii_desc-movementParametersRot_quality_266"
      },
      {
        "origin": "id_string_desc-movementParametersRot_quality_266",
        "target": "json_desc-movementParametersRot_quality_266"
      },
      {
        "origin": "nii_desc-movementParametersRot_quality_266",
        "target": "sinker_desc-movementParametersRot_quality_266"
      },
      {
        "origin": "json_desc-movementParametersRot_quality_266",
        "target": "sinker_desc-movementParametersRot_quality_266"
      },
      {
        "origin": "id_string_desc-framewiseDisplacementJenkinsonPlot_quality_267",
        "target": "nii_desc-framewiseDisplacementJenkinsonPlot_quality_267"
      },
      {
        "origin": "id_string_desc-framewiseDisplacementJenkinsonPlot_quality_267",
        "target": "json_desc-framewiseDisplacementJenkinsonPlot_quality_267"
      },
      {
        "origin": "nii_desc-framewiseDisplacementJenkinsonPlot_quality_267",
        "target": "sinker_desc-framewiseDisplacementJenkinsonPlot_quality_267"
      },
      {
        "origin": "json_desc-framewiseDisplacementJenkinsonPlot_quality_267",
        "target": "sinker_desc-framewiseDisplacementJenkinsonPlot_quality_267"
      },
      {
        "origin": "id_string_desc-dsegAxial_quality_280",
        "target": "nii_desc-dsegAxial_quality_280"
      },
      {
        "origin": "id_string_desc-dsegAxial_quality_280",
        "target": "json_desc-dsegAxial_quality_280"
      },
      {
        "origin": "nii_desc-dsegAxial_quality_280",
        "target": "sinker_desc-dsegAxial_quality_280"
      },
      {
        "origin": "json_desc-dsegAxial_quality_280",
        "target": "sinker_desc-dsegAxial_quality_280"
      },
      {
        "origin": "id_string_desc-dsegSagittal_quality_281",
        "target": "nii_desc-dsegSagittal_quality_281"
      },
      {
        "origin": "id_string_desc-dsegSagittal_quality_281",
        "target": "json_desc-dsegSagittal_quality_281"
      },
      {
        "origin": "nii_desc-dsegSagittal_quality_281",
        "target": "sinker_desc-dsegSagittal_quality_281"
      },
      {
        "origin": "json_desc-dsegSagittal_quality_281",
        "target": "sinker_desc-dsegSagittal_quality_281"
      }
    ]
  }
}